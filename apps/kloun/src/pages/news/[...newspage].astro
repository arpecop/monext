---
export const prerender = false;

import   { db, gql, newsbg ,desc,eq} from "../../../data/hasura";
import CardNews from "../../components/CardNews.astro";
import Pagination from "../../components/Pagination.astro";
import Layout from "../../layouts/Layout.astro";
const { newspage } = Astro.params as { newspage: string };

const pagenum = newspage ? Number(newspage) : 1;

const skip = pagenum * 30 - 30;
const respxx = await gql( `
    query MyQuery($offset: Int = 0) {
      newsbg(
        where: { cat: { _eq: "NewsBG" } }
        limit: 30
        order_by: { id: desc }
        offset: $offset
      ) {
        image
        link
        title
        nid
        date
      }
      aggregator(where: { cat_with_suffix: { _eq: "NewsBG_newsbg" } }) {
        total_count
      }
    }
  `,
  {
    offset: skip,
  } );
  
 const respx = await  db
   .select({id:newsbg.id,nid:newsbg.nid,title:newsbg.title,image:newsbg.image,date:newsbg.date}).from(newsbg)
   .limit(30)
   .offset(skip)
   .where(eq(newsbg.cat, 'NewsBG')).orderBy(desc(newsbg.id))
 
---

<Layout
  title={`Новини от на страница ${pagenum}`}
  description={`Новини  `}
  hideFooter={true}
>
  <div class="flex flex-wrap gap-3">
    {
      respx.map(
        ({
          nid,
          title,
          date,
          image,
          id,
        } ) => (
          <CardNews
            title={title}
            img={image || null}
            date={date}
       
            nid={nid}
            id={id}
          />
        )
      )
    }
  </div>
  <!-- <Pagination
    items={resp.data.aggregator[0].total_count}
    currentPage={pagenum}
    pageSize={30}
    prefix="/news/"
  /> -->
</Layout>
