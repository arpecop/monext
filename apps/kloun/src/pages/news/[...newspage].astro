---
export const prerender = false;

import   { db, gql, newsbg ,desc,eq, agregator} from "../../../data/hasura";
import CardNews from "../../components/CardNews.astro";
import Pagination from "../../components/Pagination.astro";
import Layout from "../../layouts/Layout.astro";
const { newspage } = Astro.params as { newspage: string };

const pagenum = newspage ? Number(newspage) : 1;

const skip = pagenum * 30 - 30; 
  
 const respxx =    db
   .select({id:newsbg.id,nid:newsbg.nid,title:newsbg.title,image:newsbg.image,date:newsbg.date}).from(newsbg)
   .limit(30)
   .offset(skip)
   .where(eq(newsbg.cat, 'NewsBG')).orderBy(desc(newsbg.id))
  const countx =    db
   .select({count:agregator.count}).from(agregator)
   .where(eq(agregator.cat, 'NewsBG_newsbg'))
 
   
  const respx = await Promise.all([respxx,countx]).then((values) => {
     return({news:values[0],count:values[1][0].count});
   });
 
---

<Layout
  title={`Новини от на страница ${pagenum}`}
  description={`Новини  `}
  hideFooter={true}
>
  <div class="flex flex-wrap gap-3">
    {
      respx.news.map(
        ({
          nid,
          title,
          date,
          image,
          id,
        } ) => (
          <CardNews
            title={title}
            img={image}
            date={date}
            nid={nid}
            id={id}
          />
        )
      )
    }
  </div>
  <Pagination
    items={respx.count}
    currentPage={pagenum}
    pageSize={30}
    prefix="/news/"
  /> 
</Layout>
