---
export const prerender = false;

import pkg from 'lodash';
const {chunk} = pkg;

import  { gql } from "../../../data/hasura";
import FacebookShare from "../../components/FacebookShare.astro";
import FormatJoke from "../../components/FormatJoke.astro";
import JokeThumbnail from "../../components/JokeThumbnail.astro";
import RudSense from "../../components/RudSense.astro";
import Layout from "../../layouts/Layout.astro";

const { jokeid } = Astro.params;

const resp =   await gql( `
    query MyQuery($_lte: String = "") {
      jokes(limit: 31, where: { lang: { _eq: "bg" }, uid: { _lte: $_lte } }) {
        joke
        uid
        cat
      }
    }
  `,
  {
    _lte: jokeid,
  },
 );

const joke = resp.jokes[0];

const jokes = resp.jokes.filter(
  (x: { uid: string }) => x.uid !== jokeid
) as { joke: string; cat: string; _id: string }[];
const chunks = chunk(jokes, 3);
console.log(chunks);

if (!joke) {
  return new Response("Not Found", {
    status: 404,
    statusText: "Not Found",
  });
}
const meta = joke.joke.replaceAll("\n", " ");
---

<Layout
  title={meta.substring(0, 60)}
  description={meta}
  image={`https://kloun.lol/api/joke/og/?idx=${jokeid}`}
>
  <div class="my-10 flex w-full flex-col text-center">
    <article
      class="mx-auto mb-6 px-10 text-xl leading-relaxed xs:px-2 sm:px-4 lg:w-2/3"
    >
      <FormatJoke joke={joke.joke} />
    </article>
    <div class="flex justify-end items-center">
      <FacebookShare url={`https://kloun.lol/joke/${jokeid}`} />
    </div>
  </div>
  {
    chunks.map((piece) => (
      <div class="flex flex-wrap">
        <RudSense type="inarticle" />
        {piece.map((joke: { joke: string; cat: string; _id: string }) => (
          <JokeThumbnail item={joke} showcats={false} short />
        ))}
      </div>
    ))
  }
</Layout>
