generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL2")
}

model company {
  id    Int?
  uid   String  @id
  title String?
  nid   String?
  cat   String?
}

model jokes {
  uid  String  @id
  cat  String?
  lang String?
  id   Int     @default(autoincrement())
  joke String?

  @@index([cat, uid], map: "jokes_cat")
}

model newsbg {
  title String?
  nid   String  @id
  id    Int     @unique @default(autoincrement())
  image String?
  date  String?
  link  String?
  cat   String  @default("")
  html  Json?
  trans String?
  embed String?
}

model tweets {
  uid String  @id
  cat String?

  @@index([cat], map: "tweets_cat")
}

model auth_user {
  id           String         @id
  user_key     user_key[]
  user_session user_session[]
}

model user_key {
  id              String    @id
  user_id         String
  hashed_password String?
  auth_user       auth_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user_session {
  id             String    @id
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      auth_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
model User {
  id           String    @id @unique

  auth_session Session[]
  key          Key[]
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}
