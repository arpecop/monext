globalThis.process = {
								argv: [],
								env: {},
							};
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x4) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x4, {
  get: (a3, b5) => (typeof require !== "undefined" ? require : a3)[b5]
}) : x4)(function(x4) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw Error('Dynamic require of "' + x4 + '" is not supported');
});
var __esm = (fn2, res) => function __init() {
  return fn2 && (res = (0, fn2[__getOwnPropNames(fn2)[0]])(fn2 = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to2, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to2, key) && key !== except)
        __defProp(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to2;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));

// ../../node_modules/react/cjs/react.development.js
var require_react_development = __commonJS({
  "../../node_modules/react/cjs/react.development.js"(exports2, module) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
        }
        var ReactVersion = "18.2.0";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactCurrentDispatcher = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactCurrentBatchConfig = {
          transition: null
        };
        var ReactCurrentActQueue = {
          current: null,
          // Used to reproduce behavior of `batchedUpdates` in legacy mode.
          isBatchingLegacy: false,
          didScheduleLegacyUpdate: false
        };
        var ReactCurrentOwner = {
          /**
           * @internal
           * @type {ReactComponent}
           */
          current: null
        };
        var ReactDebugCurrentFrame = {};
        var currentExtraStackFrame = null;
        function setExtraStackFrame(stack) {
          {
            currentExtraStackFrame = stack;
          }
        }
        {
          ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
            {
              currentExtraStackFrame = stack;
            }
          };
          ReactDebugCurrentFrame.getCurrentStack = null;
          ReactDebugCurrentFrame.getStackAddendum = function() {
            var stack = "";
            if (currentExtraStackFrame) {
              stack += currentExtraStackFrame;
            }
            var impl = ReactDebugCurrentFrame.getCurrentStack;
            if (impl) {
              stack += impl() || "";
            }
            return stack;
          };
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var ReactSharedInternals = {
          ReactCurrentDispatcher,
          ReactCurrentBatchConfig,
          ReactCurrentOwner
        };
        {
          ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
          ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
        }
        function warn2(format2) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format2, args);
            }
          }
        }
        function error2(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var didWarnStateUpdateForUnmountedComponent = {};
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
              return;
            }
            error2("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
            didWarnStateUpdateForUnmountedComponent[warningKey] = true;
          }
        }
        var ReactNoopUpdateQueue = {
          /**
           * Checks whether or not this composite component is mounted.
           * @param {ReactClass} publicInstance The instance we want to test.
           * @return {boolean} True if mounted, false otherwise.
           * @protected
           * @final
           */
          isMounted: function(publicInstance) {
            return false;
          },
          /**
           * Forces an update. This should only be invoked when it is known with
           * certainty that we are **not** in a DOM transaction.
           *
           * You may want to call this when you know that some deeper aspect of the
           * component's state has changed but `setState` was not called.
           *
           * This will not invoke `shouldComponentUpdate`, but it will invoke
           * `componentWillUpdate` and `componentDidUpdate`.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueForceUpdate: function(publicInstance, callback2, callerName) {
            warnNoop(publicInstance, "forceUpdate");
          },
          /**
           * Replaces all of the state. Always use this or `setState` to mutate state.
           * You should treat `this.state` as immutable.
           *
           * There is no guarantee that `this.state` will be immediately updated, so
           * accessing `this.state` after calling this method may return the old value.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} completeState Next state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} callerName name of the calling function in the public API.
           * @internal
           */
          enqueueReplaceState: function(publicInstance, completeState, callback2, callerName) {
            warnNoop(publicInstance, "replaceState");
          },
          /**
           * Sets a subset of the state. This only exists because _pendingState is
           * internal. This provides a merging strategy that is not available to deep
           * properties which is confusing. TODO: Expose pendingState or don't use it
           * during the merge.
           *
           * @param {ReactClass} publicInstance The instance that should rerender.
           * @param {object} partialState Next partial state to be merged with state.
           * @param {?function} callback Called after component is updated.
           * @param {?string} Name of the calling function in the public API.
           * @internal
           */
          enqueueSetState: function(publicInstance, partialState, callback2, callerName) {
            warnNoop(publicInstance, "setState");
          }
        };
        var assign = Object.assign;
        var emptyObject = {};
        {
          Object.freeze(emptyObject);
        }
        function Component(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        Component.prototype.isReactComponent = {};
        Component.prototype.setState = function(partialState, callback2) {
          if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
            throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
          }
          this.updater.enqueueSetState(this, partialState, callback2, "setState");
        };
        Component.prototype.forceUpdate = function(callback2) {
          this.updater.enqueueForceUpdate(this, callback2, "forceUpdate");
        };
        {
          var deprecatedAPIs = {
            isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
            replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
          };
          var defineDeprecationWarning = function(methodName, info2) {
            Object.defineProperty(Component.prototype, methodName, {
              get: function() {
                warn2("%s(...) is deprecated in plain JavaScript React classes. %s", info2[0], info2[1]);
                return void 0;
              }
            });
          };
          for (var fnName in deprecatedAPIs) {
            if (deprecatedAPIs.hasOwnProperty(fnName)) {
              defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
            }
          }
        }
        function ComponentDummy() {
        }
        ComponentDummy.prototype = Component.prototype;
        function PureComponent(props, context, updater) {
          this.props = props;
          this.context = context;
          this.refs = emptyObject;
          this.updater = updater || ReactNoopUpdateQueue;
        }
        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
        pureComponentPrototype.constructor = PureComponent;
        assign(pureComponentPrototype, Component.prototype);
        pureComponentPrototype.isPureReactComponent = true;
        function createRef() {
          var refObject = {
            current: null
          };
          {
            Object.seal(refObject);
          }
          return refObject;
        }
        var isArrayImpl = Array.isArray;
        function isArray(a3) {
          return isArrayImpl(a3);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init3(payload));
                } catch (x4) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config2) {
          {
            if (hasOwnProperty.call(config2, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.ref !== void 0;
        }
        function hasValidKey(config2) {
          {
            if (hasOwnProperty.call(config2, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.key !== void 0;
        }
        function defineKeyPropWarningGetter(props, displayName) {
          var warnAboutAccessingKey = function() {
            {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error2("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingKey.isReactWarning = true;
          Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: true
          });
        }
        function defineRefPropWarningGetter(props, displayName) {
          var warnAboutAccessingRef = function() {
            {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error2("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            }
          };
          warnAboutAccessingRef.isReactWarning = true;
          Object.defineProperty(props, "ref", {
            get: warnAboutAccessingRef,
            configurable: true
          });
        }
        function warnIfStringRefCannotBeAutoConverted(config2) {
          {
            if (typeof config2.ref === "string" && ReactCurrentOwner.current && config2.__self && ReactCurrentOwner.current.stateNode !== config2.__self) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error2('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config2.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function createElement4(type, config2, children) {
          var propName;
          var props = {};
          var key = null;
          var ref = null;
          var self2 = null;
          var source = null;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              {
                warnIfStringRefCannotBeAutoConverted(config2);
              }
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            self2 = config2.__self === void 0 ? null : config2.__self;
            source = config2.__source === void 0 ? null : config2.__source;
            for (propName in config2) {
              if (hasOwnProperty.call(config2, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config2[propName];
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i3 = 0; i3 < childrenLength; i3++) {
              childArray[i3] = arguments[i3 + 2];
            }
            {
              if (Object.freeze) {
                Object.freeze(childArray);
              }
            }
            props.children = childArray;
          }
          if (type && type.defaultProps) {
            var defaultProps = type.defaultProps;
            for (propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
          }
          {
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
          }
          return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
        }
        function cloneAndReplaceKey(oldElement, newKey) {
          var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
          return newElement;
        }
        function cloneElement(element, config2, children) {
          if (element === null || element === void 0) {
            throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
          }
          var propName;
          var props = assign({}, element.props);
          var key = element.key;
          var ref = element.ref;
          var self2 = element._self;
          var source = element._source;
          var owner = element._owner;
          if (config2 != null) {
            if (hasValidRef(config2)) {
              ref = config2.ref;
              owner = ReactCurrentOwner.current;
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            var defaultProps;
            if (element.type && element.type.defaultProps) {
              defaultProps = element.type.defaultProps;
            }
            for (propName in config2) {
              if (hasOwnProperty.call(config2, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                if (config2[propName] === void 0 && defaultProps !== void 0) {
                  props[propName] = defaultProps[propName];
                } else {
                  props[propName] = config2[propName];
                }
              }
            }
          }
          var childrenLength = arguments.length - 2;
          if (childrenLength === 1) {
            props.children = children;
          } else if (childrenLength > 1) {
            var childArray = Array(childrenLength);
            for (var i3 = 0; i3 < childrenLength; i3++) {
              childArray[i3] = arguments[i3 + 2];
            }
            props.children = childArray;
          }
          return ReactElement(element.type, key, ref, self2, source, owner, props);
        }
        function isValidElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        var SEPARATOR = ".";
        var SUBSEPARATOR = ":";
        function escape2(key) {
          var escapeRegex = /[=:]/g;
          var escaperLookup = {
            "=": "=0",
            ":": "=2"
          };
          var escapedString = key.replace(escapeRegex, function(match) {
            return escaperLookup[match];
          });
          return "$" + escapedString;
        }
        var didWarnAboutMaps = false;
        var userProvidedKeyEscapeRegex = /\/+/g;
        function escapeUserProvidedKey(text2) {
          return text2.replace(userProvidedKeyEscapeRegex, "$&/");
        }
        function getElementKey(element, index) {
          if (typeof element === "object" && element !== null && element.key != null) {
            {
              checkKeyStringCoercion(element.key);
            }
            return escape2("" + element.key);
          }
          return index.toString(36);
        }
        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback2) {
          var type = typeof children;
          if (type === "undefined" || type === "boolean") {
            children = null;
          }
          var invokeCallback = false;
          if (children === null) {
            invokeCallback = true;
          } else {
            switch (type) {
              case "string":
              case "number":
                invokeCallback = true;
                break;
              case "object":
                switch (children.$$typeof) {
                  case REACT_ELEMENT_TYPE:
                  case REACT_PORTAL_TYPE:
                    invokeCallback = true;
                }
            }
          }
          if (invokeCallback) {
            var _child = children;
            var mappedChild = callback2(_child);
            var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
            if (isArray(mappedChild)) {
              var escapedChildKey = "";
              if (childKey != null) {
                escapedChildKey = escapeUserProvidedKey(childKey) + "/";
              }
              mapIntoArray(mappedChild, array, escapedChildKey, "", function(c4) {
                return c4;
              });
            } else if (mappedChild != null) {
              if (isValidElement(mappedChild)) {
                {
                  if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                    checkKeyStringCoercion(mappedChild.key);
                  }
                }
                mappedChild = cloneAndReplaceKey(
                  mappedChild,
                  // Keep both the (mapped) and old keys if they differ, just as
                  // traverseAllChildren used to do for objects as children
                  escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                  (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                    // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                    // eslint-disable-next-line react-internal/safe-string-coercion
                    escapeUserProvidedKey("" + mappedChild.key) + "/"
                  ) : "") + childKey
                );
              }
              array.push(mappedChild);
            }
            return 1;
          }
          var child;
          var nextName;
          var subtreeCount = 0;
          var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
          if (isArray(children)) {
            for (var i3 = 0; i3 < children.length; i3++) {
              child = children[i3];
              nextName = nextNamePrefix + getElementKey(child, i3);
              subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback2);
            }
          } else {
            var iteratorFn = getIteratorFn(children);
            if (typeof iteratorFn === "function") {
              var iterableChildren = children;
              {
                if (iteratorFn === iterableChildren.entries) {
                  if (!didWarnAboutMaps) {
                    warn2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                  }
                  didWarnAboutMaps = true;
                }
              }
              var iterator = iteratorFn.call(iterableChildren);
              var step;
              var ii = 0;
              while (!(step = iterator.next()).done) {
                child = step.value;
                nextName = nextNamePrefix + getElementKey(child, ii++);
                subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback2);
              }
            } else if (type === "object") {
              var childrenString = String(children);
              throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
            }
          }
          return subtreeCount;
        }
        function mapChildren(children, func, context) {
          if (children == null) {
            return children;
          }
          var result = [];
          var count = 0;
          mapIntoArray(children, result, "", "", function(child) {
            return func.call(context, child, count++);
          });
          return result;
        }
        function countChildren(children) {
          var n3 = 0;
          mapChildren(children, function() {
            n3++;
          });
          return n3;
        }
        function forEachChildren(children, forEachFunc, forEachContext) {
          mapChildren(children, function() {
            forEachFunc.apply(this, arguments);
          }, forEachContext);
        }
        function toArray2(children) {
          return mapChildren(children, function(child) {
            return child;
          }) || [];
        }
        function onlyChild(children) {
          if (!isValidElement(children)) {
            throw new Error("React.Children.only expected to receive a single React element child.");
          }
          return children;
        }
        function createContext(defaultValue) {
          var context = {
            $$typeof: REACT_CONTEXT_TYPE,
            // As a workaround to support multiple concurrent renderers, we categorize
            // some renderers as primary and others as secondary. We only expect
            // there to be two concurrent renderers at most: React Native (primary) and
            // Fabric (secondary); React DOM (primary) and React ART (secondary).
            // Secondary renderers store their context values on separate fields.
            _currentValue: defaultValue,
            _currentValue2: defaultValue,
            // Used to track how many concurrent renderers this context currently
            // supports within in a single renderer. Such as parallel server rendering.
            _threadCount: 0,
            // These are circular
            Provider: null,
            Consumer: null,
            // Add these to use same hidden class in VM as ServerContext
            _defaultValue: null,
            _globalName: null
          };
          context.Provider = {
            $$typeof: REACT_PROVIDER_TYPE,
            _context: context
          };
          var hasWarnedAboutUsingNestedContextConsumers = false;
          var hasWarnedAboutUsingConsumerProvider = false;
          var hasWarnedAboutDisplayNameOnConsumer = false;
          {
            var Consumer = {
              $$typeof: REACT_CONTEXT_TYPE,
              _context: context
            };
            Object.defineProperties(Consumer, {
              Provider: {
                get: function() {
                  if (!hasWarnedAboutUsingConsumerProvider) {
                    hasWarnedAboutUsingConsumerProvider = true;
                    error2("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                  }
                  return context.Provider;
                },
                set: function(_Provider) {
                  context.Provider = _Provider;
                }
              },
              _currentValue: {
                get: function() {
                  return context._currentValue;
                },
                set: function(_currentValue) {
                  context._currentValue = _currentValue;
                }
              },
              _currentValue2: {
                get: function() {
                  return context._currentValue2;
                },
                set: function(_currentValue2) {
                  context._currentValue2 = _currentValue2;
                }
              },
              _threadCount: {
                get: function() {
                  return context._threadCount;
                },
                set: function(_threadCount) {
                  context._threadCount = _threadCount;
                }
              },
              Consumer: {
                get: function() {
                  if (!hasWarnedAboutUsingNestedContextConsumers) {
                    hasWarnedAboutUsingNestedContextConsumers = true;
                    error2("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                  }
                  return context.Consumer;
                }
              },
              displayName: {
                get: function() {
                  return context.displayName;
                },
                set: function(displayName) {
                  if (!hasWarnedAboutDisplayNameOnConsumer) {
                    warn2("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                    hasWarnedAboutDisplayNameOnConsumer = true;
                  }
                }
              }
            });
            context.Consumer = Consumer;
          }
          {
            context._currentRenderer = null;
            context._currentRenderer2 = null;
          }
          return context;
        }
        var Uninitialized = -1;
        var Pending = 0;
        var Resolved = 1;
        var Rejected = 2;
        function lazyInitializer(payload) {
          if (payload._status === Uninitialized) {
            var ctor = payload._result;
            var thenable = ctor();
            thenable.then(function(moduleObject2) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var resolved = payload;
                resolved._status = Resolved;
                resolved._result = moduleObject2;
              }
            }, function(error3) {
              if (payload._status === Pending || payload._status === Uninitialized) {
                var rejected = payload;
                rejected._status = Rejected;
                rejected._result = error3;
              }
            });
            if (payload._status === Uninitialized) {
              var pending = payload;
              pending._status = Pending;
              pending._result = thenable;
            }
          }
          if (payload._status === Resolved) {
            var moduleObject = payload._result;
            {
              if (moduleObject === void 0) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
              }
            }
            {
              if (!("default" in moduleObject)) {
                error2("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            return moduleObject.default;
          } else {
            throw payload._result;
          }
        }
        function lazy(ctor) {
          var payload = {
            // We use these fields to store the result.
            _status: Uninitialized,
            _result: ctor
          };
          var lazyType = {
            $$typeof: REACT_LAZY_TYPE,
            _payload: payload,
            _init: lazyInitializer
          };
          {
            var defaultProps;
            var propTypes;
            Object.defineProperties(lazyType, {
              defaultProps: {
                configurable: true,
                get: function() {
                  return defaultProps;
                },
                set: function(newDefaultProps) {
                  error2("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  defaultProps = newDefaultProps;
                  Object.defineProperty(lazyType, "defaultProps", {
                    enumerable: true
                  });
                }
              },
              propTypes: {
                configurable: true,
                get: function() {
                  return propTypes;
                },
                set: function(newPropTypes) {
                  error2("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                  propTypes = newPropTypes;
                  Object.defineProperty(lazyType, "propTypes", {
                    enumerable: true
                  });
                }
              }
            });
          }
          return lazyType;
        }
        function forwardRef(render3) {
          {
            if (render3 != null && render3.$$typeof === REACT_MEMO_TYPE) {
              error2("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
            } else if (typeof render3 !== "function") {
              error2("forwardRef requires a render function but was given %s.", render3 === null ? "null" : typeof render3);
            } else {
              if (render3.length !== 0 && render3.length !== 2) {
                error2("forwardRef render functions accept exactly two parameters: props and ref. %s", render3.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
              }
            }
            if (render3 != null) {
              if (render3.defaultProps != null || render3.propTypes != null) {
                error2("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
              }
            }
          }
          var elementType = {
            $$typeof: REACT_FORWARD_REF_TYPE,
            render: render3
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!render3.name && !render3.displayName) {
                  render3.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function memo(type, compare) {
          {
            if (!isValidElementType(type)) {
              error2("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
            }
          }
          var elementType = {
            $$typeof: REACT_MEMO_TYPE,
            type,
            compare: compare === void 0 ? null : compare
          };
          {
            var ownName;
            Object.defineProperty(elementType, "displayName", {
              enumerable: false,
              configurable: true,
              get: function() {
                return ownName;
              },
              set: function(name) {
                ownName = name;
                if (!type.name && !type.displayName) {
                  type.displayName = name;
                }
              }
            });
          }
          return elementType;
        }
        function resolveDispatcher() {
          var dispatcher = ReactCurrentDispatcher.current;
          {
            if (dispatcher === null) {
              error2("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
            }
          }
          return dispatcher;
        }
        function useContext(Context) {
          var dispatcher = resolveDispatcher();
          {
            if (Context._context !== void 0) {
              var realContext = Context._context;
              if (realContext.Consumer === Context) {
                error2("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
              } else if (realContext.Provider === Context) {
                error2("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
              }
            }
          }
          return dispatcher.useContext(Context);
        }
        function useState2(initialState) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useState(initialState);
        }
        function useReducer(reducer, initialArg, init3) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useReducer(reducer, initialArg, init3);
        }
        function useRef(initialValue) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useRef(initialValue);
        }
        function useEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useEffect(create, deps);
        }
        function useInsertionEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useInsertionEffect(create, deps);
        }
        function useLayoutEffect(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useLayoutEffect(create, deps);
        }
        function useCallback(callback2, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useCallback(callback2, deps);
        }
        function useMemo(create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useMemo(create, deps);
        }
        function useImperativeHandle(ref, create, deps) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useImperativeHandle(ref, create, deps);
        }
        function useDebugValue(value, formatterFn) {
          {
            var dispatcher = resolveDispatcher();
            return dispatcher.useDebugValue(value, formatterFn);
          }
        }
        function useTransition() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useTransition();
        }
        function useDeferredValue(value) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useDeferredValue(value);
        }
        function useId() {
          var dispatcher = resolveDispatcher();
          return dispatcher.useId();
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          var dispatcher = resolveDispatcher();
          return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x4) {
                var match = x4.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher$1.current;
            ReactCurrentDispatcher$1.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x4) {
                  control = x4;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x4) {
                  control = x4;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x4) {
                control = x4;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s3 = sampleLines.length - 1;
              var c4 = controlLines.length - 1;
              while (s3 >= 1 && c4 >= 0 && sampleLines[s3] !== controlLines[c4]) {
                c4--;
              }
              for (; s3 >= 1 && c4 >= 0; s3--, c4--) {
                if (sampleLines[s3] !== controlLines[c4]) {
                  if (s3 !== 1 || c4 !== 1) {
                    do {
                      s3--;
                      c4--;
                      if (c4 < 0 || sampleLines[s3] !== controlLines[c4]) {
                        var _frame = "\n" + sampleLines[s3].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s3 >= 1 && c4 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher$1.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component2) {
          var prototype = Component2.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init3(payload), source, ownerFn);
                } catch (x4) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              setExtraStackFrame(stack);
            } else {
              setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function getDeclarationErrorAddendum() {
          if (ReactCurrentOwner.current) {
            var name = getComponentNameFromType(ReactCurrentOwner.current.type);
            if (name) {
              return "\n\nCheck the render method of `" + name + "`.";
            }
          }
          return "";
        }
        function getSourceInfoErrorAddendum(source) {
          if (source !== void 0) {
            var fileName = source.fileName.replace(/^.*[\\\/]/, "");
            var lineNumber = source.lineNumber;
            return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
          }
          return "";
        }
        function getSourceInfoErrorAddendumForProps(elementProps) {
          if (elementProps !== null && elementProps !== void 0) {
            return getSourceInfoErrorAddendum(elementProps.__source);
          }
          return "";
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          var info2 = getDeclarationErrorAddendum();
          if (!info2) {
            var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
            if (parentName) {
              info2 = "\n\nCheck the top-level render call using <" + parentName + ">.";
            }
          }
          return info2;
        }
        function validateExplicitKey(element, parentType) {
          if (!element._store || element._store.validated || element.key != null) {
            return;
          }
          element._store.validated = true;
          var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
          if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
            return;
          }
          ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
          var childOwner = "";
          if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
            childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
          }
          {
            setCurrentlyValidatingElement$1(element);
            error2('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          if (typeof node !== "object") {
            return;
          }
          if (isArray(node)) {
            for (var i3 = 0; i3 < node.length; i3++) {
              var child = node[i3];
              if (isValidElement(child)) {
                validateExplicitKey(child, parentType);
              }
            }
          } else if (isValidElement(node)) {
            if (node._store) {
              node._store.validated = true;
            }
          } else if (node) {
            var iteratorFn = getIteratorFn(node);
            if (typeof iteratorFn === "function") {
              if (iteratorFn !== node.entries) {
                var iterator = iteratorFn.call(node);
                var step;
                while (!(step = iterator.next()).done) {
                  if (isValidElement(step.value)) {
                    validateExplicitKey(step.value, parentType);
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error2("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i3 = 0; i3 < keys.length; i3++) {
              var key = keys[i3];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error2("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error2("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function createElementWithValidation(type, props, children) {
          var validType = isValidElementType(type);
          if (!validType) {
            var info2 = "";
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info2 += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
            var sourceInfo = getSourceInfoErrorAddendumForProps(props);
            if (sourceInfo) {
              info2 += sourceInfo;
            } else {
              info2 += getDeclarationErrorAddendum();
            }
            var typeString;
            if (type === null) {
              typeString = "null";
            } else if (isArray(type)) {
              typeString = "array";
            } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
              typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
              info2 = " Did you accidentally export a JSX literal instead of a component?";
            } else {
              typeString = typeof type;
            }
            {
              error2("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info2);
            }
          }
          var element = createElement4.apply(this, arguments);
          if (element == null) {
            return element;
          }
          if (validType) {
            for (var i3 = 2; i3 < arguments.length; i3++) {
              validateChildKeys(arguments[i3], type);
            }
          }
          if (type === REACT_FRAGMENT_TYPE) {
            validateFragmentProps(element);
          } else {
            validatePropTypes(element);
          }
          return element;
        }
        var didWarnAboutDeprecatedCreateFactory = false;
        function createFactoryWithValidation(type) {
          var validatedFactory = createElementWithValidation.bind(null, type);
          validatedFactory.type = type;
          {
            if (!didWarnAboutDeprecatedCreateFactory) {
              didWarnAboutDeprecatedCreateFactory = true;
              warn2("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
            }
            Object.defineProperty(validatedFactory, "type", {
              enumerable: false,
              get: function() {
                warn2("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                Object.defineProperty(this, "type", {
                  value: type
                });
                return type;
              }
            });
          }
          return validatedFactory;
        }
        function cloneElementWithValidation(element, props, children) {
          var newElement = cloneElement.apply(this, arguments);
          for (var i3 = 2; i3 < arguments.length; i3++) {
            validateChildKeys(arguments[i3], newElement.type);
          }
          validatePropTypes(newElement);
          return newElement;
        }
        function startTransition(scope, options) {
          var prevTransition = ReactCurrentBatchConfig.transition;
          ReactCurrentBatchConfig.transition = {};
          var currentTransition = ReactCurrentBatchConfig.transition;
          {
            ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
          }
          try {
            scope();
          } finally {
            ReactCurrentBatchConfig.transition = prevTransition;
            {
              if (prevTransition === null && currentTransition._updatedFibers) {
                var updatedFibersCount = currentTransition._updatedFibers.size;
                if (updatedFibersCount > 10) {
                  warn2("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                }
                currentTransition._updatedFibers.clear();
              }
            }
          }
        }
        var didWarnAboutMessageChannel = false;
        var enqueueTaskImpl = null;
        function enqueueTask(task) {
          if (enqueueTaskImpl === null) {
            try {
              var requireString = ("require" + Math.random()).slice(0, 7);
              var nodeRequire = module && module[requireString];
              enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
            } catch (_err) {
              enqueueTaskImpl = function(callback2) {
                {
                  if (didWarnAboutMessageChannel === false) {
                    didWarnAboutMessageChannel = true;
                    if (typeof MessageChannel === "undefined") {
                      error2("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                    }
                  }
                }
                var channel = new MessageChannel();
                channel.port1.onmessage = callback2;
                channel.port2.postMessage(void 0);
              };
            }
          }
          return enqueueTaskImpl(task);
        }
        var actScopeDepth = 0;
        var didWarnNoAwaitAct = false;
        function act(callback2) {
          {
            var prevActScopeDepth = actScopeDepth;
            actScopeDepth++;
            if (ReactCurrentActQueue.current === null) {
              ReactCurrentActQueue.current = [];
            }
            var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
            var result;
            try {
              ReactCurrentActQueue.isBatchingLegacy = true;
              result = callback2();
              if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                var queue = ReactCurrentActQueue.current;
                if (queue !== null) {
                  ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                  flushActQueue(queue);
                }
              }
            } catch (error3) {
              popActScope(prevActScopeDepth);
              throw error3;
            } finally {
              ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
            }
            if (result !== null && typeof result === "object" && typeof result.then === "function") {
              var thenableResult = result;
              var wasAwaited = false;
              var thenable = {
                then: function(resolve, reject) {
                  wasAwaited = true;
                  thenableResult.then(function(returnValue2) {
                    popActScope(prevActScopeDepth);
                    if (actScopeDepth === 0) {
                      recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                    } else {
                      resolve(returnValue2);
                    }
                  }, function(error3) {
                    popActScope(prevActScopeDepth);
                    reject(error3);
                  });
                }
              };
              {
                if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                  Promise.resolve().then(function() {
                  }).then(function() {
                    if (!wasAwaited) {
                      didWarnNoAwaitAct = true;
                      error2("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                    }
                  });
                }
              }
              return thenable;
            } else {
              var returnValue = result;
              popActScope(prevActScopeDepth);
              if (actScopeDepth === 0) {
                var _queue = ReactCurrentActQueue.current;
                if (_queue !== null) {
                  flushActQueue(_queue);
                  ReactCurrentActQueue.current = null;
                }
                var _thenable = {
                  then: function(resolve, reject) {
                    if (ReactCurrentActQueue.current === null) {
                      ReactCurrentActQueue.current = [];
                      recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                    } else {
                      resolve(returnValue);
                    }
                  }
                };
                return _thenable;
              } else {
                var _thenable2 = {
                  then: function(resolve, reject) {
                    resolve(returnValue);
                  }
                };
                return _thenable2;
              }
            }
          }
        }
        function popActScope(prevActScopeDepth) {
          {
            if (prevActScopeDepth !== actScopeDepth - 1) {
              error2("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
            }
            actScopeDepth = prevActScopeDepth;
          }
        }
        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
          {
            var queue = ReactCurrentActQueue.current;
            if (queue !== null) {
              try {
                flushActQueue(queue);
                enqueueTask(function() {
                  if (queue.length === 0) {
                    ReactCurrentActQueue.current = null;
                    resolve(returnValue);
                  } else {
                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                  }
                });
              } catch (error3) {
                reject(error3);
              }
            } else {
              resolve(returnValue);
            }
          }
        }
        var isFlushing = false;
        function flushActQueue(queue) {
          {
            if (!isFlushing) {
              isFlushing = true;
              var i3 = 0;
              try {
                for (; i3 < queue.length; i3++) {
                  var callback2 = queue[i3];
                  do {
                    callback2 = callback2(true);
                  } while (callback2 !== null);
                }
                queue.length = 0;
              } catch (error3) {
                queue = queue.slice(i3 + 1);
                throw error3;
              } finally {
                isFlushing = false;
              }
            }
          }
        }
        var createElement$1 = createElementWithValidation;
        var cloneElement$1 = cloneElementWithValidation;
        var createFactory = createFactoryWithValidation;
        var Children = {
          map: mapChildren,
          forEach: forEachChildren,
          count: countChildren,
          toArray: toArray2,
          only: onlyChild
        };
        exports2.Children = Children;
        exports2.Component = Component;
        exports2.Fragment = REACT_FRAGMENT_TYPE;
        exports2.Profiler = REACT_PROFILER_TYPE;
        exports2.PureComponent = PureComponent;
        exports2.StrictMode = REACT_STRICT_MODE_TYPE;
        exports2.Suspense = REACT_SUSPENSE_TYPE;
        exports2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
        exports2.cloneElement = cloneElement$1;
        exports2.createContext = createContext;
        exports2.createElement = createElement$1;
        exports2.createFactory = createFactory;
        exports2.createRef = createRef;
        exports2.forwardRef = forwardRef;
        exports2.isValidElement = isValidElement;
        exports2.lazy = lazy;
        exports2.memo = memo;
        exports2.startTransition = startTransition;
        exports2.unstable_act = act;
        exports2.useCallback = useCallback;
        exports2.useContext = useContext;
        exports2.useDebugValue = useDebugValue;
        exports2.useDeferredValue = useDeferredValue;
        exports2.useEffect = useEffect;
        exports2.useId = useId;
        exports2.useImperativeHandle = useImperativeHandle;
        exports2.useInsertionEffect = useInsertionEffect;
        exports2.useLayoutEffect = useLayoutEffect;
        exports2.useMemo = useMemo;
        exports2.useReducer = useReducer;
        exports2.useRef = useRef;
        exports2.useState = useState2;
        exports2.useSyncExternalStore = useSyncExternalStore;
        exports2.useTransition = useTransition;
        exports2.version = ReactVersion;
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
        }
      })();
    }
  }
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/react/index.js"(exports2, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_development();
    }
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js
var require_react_dom_server_legacy_browser_development = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React3 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format2) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format2, args);
            }
          }
        }
        function error2(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback2) {
          callback2();
        }
        function beginWriting(destination) {
        }
        function writeChunk(destination, chunk2) {
          writeChunkAndReturn(destination, chunk2);
        }
        function writeChunkAndReturn(destination, chunk2) {
          return destination.push(chunk2);
        }
        function completeWriting(destination) {
        }
        function close(destination) {
          destination.push(null);
        }
        function stringToChunk(content) {
          return content;
        }
        function stringToPrecomputedChunk(content) {
          return content;
        }
        function closeWithError(destination, error3) {
          destination.destroy(error3);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref2) {
          var name = _ref2[0], attributeName = _ref2[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize2 = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes2 = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes2.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved2 = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved2 && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved2) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize3 = function(string) {
            return string.replace(hyphenPattern, function(_6, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize3(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html2 = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html2 += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html2 += escape2;
          }
          return lastIndex !== index ? html2 + str.substring(lastIndex, index) : html2;
        }
        function escapeTextForBrowser(text2) {
          if (typeof text2 === "boolean" || typeof text2 === "number") {
            return "" + text2;
          }
          return escapeHtml(text2);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a3) {
          return isArrayImpl(a3);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s3, suffix) {
          return "" + prefix2 + (s3 === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce2, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce2 === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce2) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i3 = 0; i3 < bootstrapScripts.length; i3++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i3])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text2) {
          return escapeTextForBrowser(text2);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text2, responseState, textEmbedded) {
          if (text2 === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text2)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk2 = styleNameCache.get(styleName);
          if (chunk2 !== void 0) {
            return chunk2;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html2 = innerHTML.__html;
            if (html2 !== null && html2 !== void 0) {
              {
                checkHtmlStringCoercion(html2);
              }
              target.push(stringToChunk("" + html2));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React3.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i3 = 0; i3 < selectedValue.length; i3++) {
                {
                  checkAttributeStringCoercion(selectedValue[i3], "value");
                }
                var v4 = "" + selectedValue[i3];
                if (v4 === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html2 = innerHTML.__html;
            if (html2 !== null && html2 !== void 0) {
              if (typeof html2 === "string" && html2.length > 0 && html2[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html2));
              } else {
                {
                  checkHtmlStringCoercion(html2);
                }
                target.push(stringToChunk("" + html2));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i3 = 0;
          for (; i3 < bootstrapChunks.length - 1; i3++) {
            writeChunk(destination, bootstrapChunks[i3]);
          }
          if (i3 < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i3]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        function createResponseState$1(generateStaticMarkup, identifierPrefix) {
          var responseState = createResponseState(identifierPrefix, void 0);
          return {
            // Keep this in sync with ReactDOMServerFormatConfig
            bootstrapChunks: responseState.bootstrapChunks,
            startInlineScript: responseState.startInlineScript,
            placeholderPrefix: responseState.placeholderPrefix,
            segmentPrefix: responseState.segmentPrefix,
            boundaryPrefix: responseState.boundaryPrefix,
            idPrefix: responseState.idPrefix,
            nextSuspenseID: responseState.nextSuspenseID,
            sentCompleteSegmentFunction: responseState.sentCompleteSegmentFunction,
            sentCompleteBoundaryFunction: responseState.sentCompleteBoundaryFunction,
            sentClientRenderFunction: responseState.sentClientRenderFunction,
            // This is an extra field for the legacy renderer
            generateStaticMarkup
          };
        }
        function createRootFormatContext() {
          return {
            insertionMode: HTML_MODE,
            // We skip the root mode because we don't want to emit the DOCTYPE in legacy mode.
            selectedValue: null
          };
        }
        function pushTextInstance$1(target, text2, responseState, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            target.push(stringToChunk(escapeTextForBrowser(text2)));
            return false;
          } else {
            return pushTextInstance(target, text2, responseState, textEmbedded);
          }
        }
        function pushSegmentFinale$1(target, responseState, lastPushedText, textEmbedded) {
          if (responseState.generateStaticMarkup) {
            return;
          } else {
            return pushSegmentFinale(target, responseState, lastPushedText, textEmbedded);
          }
        }
        function writeStartCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartCompletedSuspenseBoundary(destination);
        }
        function writeStartClientRenderedSuspenseBoundary$1(destination, responseState, errorDigest, errorMessage, errorComponentStack) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMessage, errorComponentStack);
        }
        function writeEndCompletedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndCompletedSuspenseBoundary(destination);
        }
        function writeEndClientRenderedSuspenseBoundary$1(destination, responseState) {
          if (responseState.generateStaticMarkup) {
            return true;
          }
          return writeEndClientRenderedSuspenseBoundary(destination);
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init3(payload));
                } catch (x4) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x4) {
                var match = x4.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x4) {
                  control = x4;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x4) {
                  control = x4;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x4) {
                control = x4;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s3 = sampleLines.length - 1;
              var c4 = controlLines.length - 1;
              while (s3 >= 1 && c4 >= 0 && sampleLines[s3] !== controlLines[c4]) {
                c4--;
              }
              for (; s3 >= 1 && c4 >= 0; s3--, c4--) {
                if (sampleLines[s3] !== controlLines[c4]) {
                  if (s3 !== 1 || c4 !== 1) {
                    do {
                      s3--;
                      c4--;
                      if (c4 < 0 || sampleLines[s3] !== controlLines[c4]) {
                        var _frame = "\n" + sampleLines[s3].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s3 >= 1 && c4 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init3(payload), source, ownerFn);
                } catch (x4) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue2 = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue2 = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue2;
            context._currentValue2 = nextValue;
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var _value = prevSnapshot.parentValue;
            if (_value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue2 = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue2 = _value;
            }
            {
              if (context._currentRenderer2 !== void 0 && context._currentRenderer2 !== null && context._currentRenderer2 !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer2 = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue2;
          return value;
        }
        function get2(key) {
          return key._reactInternals;
        }
        function set2(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback2, callerName) {
            if (callback2 === null || typeof callback2 === "function") {
              return;
            }
            var key = callerName + "_" + callback2;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback2);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback2) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback2 !== void 0 && callback2 !== null) {
                  warnOnInvalidCallback(callback2, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback2) {
            var internals = get2(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback2 !== void 0 && callback2 !== null) {
                warnOnInvalidCallback(callback2, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback2) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback2 !== void 0 && callback2 !== null) {
                  warnOnInvalidCallback(callback2, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i3 = oldReplace ? 1 : 0; i3 < oldQueue.length; i3++) {
                var partial = oldQueue[i3];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set2(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log4 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x4) {
          var asUint = x4 >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log4(asUint) / LN2 | 0) | 0;
        }
        function is2(x4, y3) {
          return x4 === y3 && (x4 !== 0 || 1 / x4 === 1 / y3) || x4 !== x4 && y3 !== y3;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is2;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i3 = 0; i3 < prevDeps.length && i3 < nextDeps.length; i3++) {
            if (objectIs(nextDeps[i3], prevDeps[i3])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state2, action) {
          return typeof action === "function" ? action(state2) : action;
        }
        function useState2(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init3) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init3 !== void 0 ? init3(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback2, deps) {
          return useMemo(function() {
            return callback2;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop6() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState: useState2,
          useInsertionEffect: noop6,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop6,
          // Effects are not run in the server environment.
          useEffect: noop6,
          // Debugging effect
          useDebugValue: noop6,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info2 = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info2 += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info2 += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info2 += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info2;
          } catch (x4) {
            return "\nError generating stack: " + x4.message + "\n" + x4.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$12() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError2, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError2 === void 0 ? defaultErrorHandler : onError2,
            onAllReady: onAllReady === void 0 ? noop$12 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$12 : onShellReady,
            onShellError: onShellError === void 0 ? noop$12 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$12 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale$1(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render3 = props.children;
          {
            if (typeof render3 !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render3(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init3 = lazyComponent._init;
          var Component = init3(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info2 = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info2 += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info2));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x4) {
              if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x4;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init3 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init3(payload);
                  } catch (x4) {
                    if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x4;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance$1(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i3 = 0; i3 < totalChildren; i3++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i3);
            try {
              renderNode(request, task, children[i3]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x4) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x4.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x4) {
            resetHooksState();
            if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
              spawnNewSuspendedTask(request, task, x4);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x4;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error && typeof _error.message === "string") {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$12;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale$1(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x4) {
            resetHooksState();
            if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
              var ping = task.ping;
              x4.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x4);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i3;
            for (i3 = 0; i3 < pingedTasks.length; i3++) {
              var task = pingedTasks[i3];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i3);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r4 = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r4 = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r4 = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r4;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary$1(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary$1(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary$1(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary$1(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i3 = 0;
          for (; i3 < completedSegments.length; i3++) {
            var segment = completedSegments[i3];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i3 = 0;
          for (; i3 < completedSegments.length; i3++) {
            var segment = completedSegments[i3];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i3++;
              completedSegments.splice(0, i3);
              return false;
            }
          }
          completedSegments.splice(0, i3);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i3;
            for (i3 = 0; i3 < clientRenderedBoundaries.length; i3++) {
              var boundary = clientRenderedBoundaries[i3];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i3++;
                clientRenderedBoundaries.splice(0, i3);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i3);
            var completedBoundaries = request.completedBoundaries;
            for (i3 = 0; i3 < completedBoundaries.length; i3++) {
              var _boundary = completedBoundaries[i3];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i3++;
                completedBoundaries.splice(0, i3);
                return;
              }
            }
            completedBoundaries.splice(0, i3);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i3 = 0; i3 < partialBoundaries.length; i3++) {
              var _boundary2 = partialBoundaries[i3];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i3++;
                partialBoundaries.splice(0, i3);
                return;
              }
            }
            partialBoundaries.splice(0, i3);
            var largeBoundaries = request.completedBoundaries;
            for (i3 = 0; i3 < largeBoundaries.length; i3++) {
              var _boundary3 = largeBoundaries[i3];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i3++;
                largeBoundaries.splice(0, i3);
                return;
              }
            }
            largeBoundaries.splice(0, i3);
          } finally {
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function onError() {
        }
        function renderToStringImpl(children, options, generateStaticMarkup, abortReason) {
          var didFatal = false;
          var fatalError2 = null;
          var result = "";
          var destination = {
            push: function(chunk2) {
              if (chunk2 !== null) {
                result += chunk2;
              }
              return true;
            },
            destroy: function(error3) {
              didFatal = true;
              fatalError2 = error3;
            }
          };
          var readyToStream = false;
          function onShellReady() {
            readyToStream = true;
          }
          var request = createRequest(children, createResponseState$1(generateStaticMarkup, options ? options.identifierPrefix : void 0), createRootFormatContext(), Infinity, onError, void 0, onShellReady, void 0, void 0);
          startWork(request);
          abort(request, abortReason);
          startFlowing(request, destination);
          if (didFatal) {
            throw fatalError2;
          }
          if (!readyToStream) {
            throw new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
          }
          return result;
        }
        function renderToString2(children, options) {
          return renderToStringImpl(children, options, false, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToStaticMarkup2(children, options) {
          return renderToStringImpl(children, options, true, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
        }
        function renderToNodeStream() {
          throw new Error("ReactDOMServer.renderToNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToString() instead.");
        }
        function renderToStaticNodeStream() {
          throw new Error("ReactDOMServer.renderToStaticNodeStream(): The streaming API is not available in the browser. Use ReactDOMServer.renderToStaticMarkup() instead.");
        }
        exports2.renderToNodeStream = renderToNodeStream;
        exports2.renderToStaticMarkup = renderToStaticMarkup2;
        exports2.renderToStaticNodeStream = renderToStaticNodeStream;
        exports2.renderToString = renderToString2;
        exports2.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server.browser.development.js
var require_react_dom_server_browser_development = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server.browser.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React3 = require_react();
        var ReactVersion = "18.2.0";
        var ReactSharedInternals = React3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function warn2(format2) {
          {
            {
              for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
              }
              printWarning("warn", format2, args);
            }
          }
        }
        function error2(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        function scheduleWork(callback2) {
          callback2();
        }
        var VIEW_SIZE = 512;
        var currentView = null;
        var writtenBytes = 0;
        function beginWriting(destination) {
          currentView = new Uint8Array(VIEW_SIZE);
          writtenBytes = 0;
        }
        function writeChunk(destination, chunk2) {
          if (chunk2.length === 0) {
            return;
          }
          if (chunk2.length > VIEW_SIZE) {
            if (writtenBytes > 0) {
              destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
              currentView = new Uint8Array(VIEW_SIZE);
              writtenBytes = 0;
            }
            destination.enqueue(chunk2);
            return;
          }
          var bytesToWrite = chunk2;
          var allowableBytes = currentView.length - writtenBytes;
          if (allowableBytes < bytesToWrite.length) {
            if (allowableBytes === 0) {
              destination.enqueue(currentView);
            } else {
              currentView.set(bytesToWrite.subarray(0, allowableBytes), writtenBytes);
              destination.enqueue(currentView);
              bytesToWrite = bytesToWrite.subarray(allowableBytes);
            }
            currentView = new Uint8Array(VIEW_SIZE);
            writtenBytes = 0;
          }
          currentView.set(bytesToWrite, writtenBytes);
          writtenBytes += bytesToWrite.length;
        }
        function writeChunkAndReturn(destination, chunk2) {
          writeChunk(destination, chunk2);
          return true;
        }
        function completeWriting(destination) {
          if (currentView && writtenBytes > 0) {
            destination.enqueue(new Uint8Array(currentView.buffer, 0, writtenBytes));
            currentView = null;
            writtenBytes = 0;
          }
        }
        function close(destination) {
          destination.close();
        }
        var textEncoder = new TextEncoder();
        function stringToChunk(content) {
          return textEncoder.encode(content);
        }
        function stringToPrecomputedChunk(content) {
          return textEncoder.encode(content);
        }
        function closeWithError(destination, error3) {
          if (typeof destination.error === "function") {
            destination.error(error3);
          } else {
            destination.close();
          }
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkAttributeStringCoercion(value, attributeName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkCSSPropertyStringCoercion(value, propName) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        function checkHtmlStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var RESERVED = 0;
        var STRING = 1;
        var BOOLEANISH_STRING = 2;
        var BOOLEAN = 3;
        var OVERLOADED_BOOLEAN = 4;
        var NUMERIC = 5;
        var POSITIVE_NUMERIC = 6;
        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
        var illegalAttributeNameCache = {};
        var validatedAttributeNameCache = {};
        function isAttributeNameSafe(attributeName) {
          if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
            return true;
          }
          if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
            return false;
          }
          if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
            validatedAttributeNameCache[attributeName] = true;
            return true;
          }
          illegalAttributeNameCache[attributeName] = true;
          {
            error2("Invalid attribute name: `%s`", attributeName);
          }
          return false;
        }
        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
          if (propertyInfo !== null && propertyInfo.type === RESERVED) {
            return false;
          }
          switch (typeof value) {
            case "function":
            case "symbol":
              return true;
            case "boolean": {
              if (isCustomComponentTag) {
                return false;
              }
              if (propertyInfo !== null) {
                return !propertyInfo.acceptsBooleans;
              } else {
                var prefix2 = name.toLowerCase().slice(0, 5);
                return prefix2 !== "data-" && prefix2 !== "aria-";
              }
            }
            default:
              return false;
          }
        }
        function getPropertyInfo(name) {
          return properties.hasOwnProperty(name) ? properties[name] : null;
        }
        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
          this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
          this.attributeName = attributeName;
          this.attributeNamespace = attributeNamespace;
          this.mustUseProperty = mustUseProperty;
          this.propertyName = name;
          this.type = type;
          this.sanitizeURL = sanitizeURL2;
          this.removeEmptyString = removeEmptyString;
        }
        var properties = {};
        var reservedProps = [
          "children",
          "dangerouslySetInnerHTML",
          // TODO: This prevents the assignment of defaultValue to regular
          // elements (not just inputs). Now that ReactDOMInput assigns to the
          // defaultValue property -- do we need this?
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style"
        ];
        reservedProps.forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            RESERVED,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref2) {
          var name = _ref2[0], attributeName = _ref2[1];
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEANISH_STRING,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "allowFullScreen",
          "async",
          // Note: there is a special case that prevents it from being written to the DOM
          // on the client side because the browsers are inconsistent. Instead we call focus().
          "autoFocus",
          "autoPlay",
          "controls",
          "default",
          "defer",
          "disabled",
          "disablePictureInPicture",
          "disableRemotePlayback",
          "formNoValidate",
          "hidden",
          "loop",
          "noModule",
          "noValidate",
          "open",
          "playsInline",
          "readOnly",
          "required",
          "reversed",
          "scoped",
          "seamless",
          // Microdata
          "itemScope"
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "checked",
          // Note: `option.selected` is not updated if `select.multiple` is
          // disabled with `removeAttribute`. We have special logic for handling this.
          "multiple",
          "muted",
          "selected"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            BOOLEAN,
            true,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "capture",
          "download"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            OVERLOADED_BOOLEAN,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "cols",
          "rows",
          "size",
          "span"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            POSITIVE_NUMERIC,
            false,
            // mustUseProperty
            name,
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        ["rowSpan", "start"].forEach(function(name) {
          properties[name] = new PropertyInfoRecord(
            name,
            NUMERIC,
            false,
            // mustUseProperty
            name.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var CAMELIZE = /[\-\:]([a-z])/g;
        var capitalize2 = function(token) {
          return token[1].toUpperCase();
        };
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xlink:actuate",
          "xlink:arcrole",
          "xlink:role",
          "xlink:show",
          "xlink:title",
          "xlink:type"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/1999/xlink",
            false,
            // sanitizeURL
            false
          );
        });
        [
          "xml:base",
          "xml:lang",
          "xml:space"
          // NOTE: if you add a camelCased prop to this list,
          // you'll need to set attributeName to name.toLowerCase()
          // instead in the assignment below.
        ].forEach(function(attributeName) {
          var name = attributeName.replace(CAMELIZE, capitalize2);
          properties[name] = new PropertyInfoRecord(
            name,
            STRING,
            false,
            // mustUseProperty
            attributeName,
            "http://www.w3.org/XML/1998/namespace",
            false,
            // sanitizeURL
            false
          );
        });
        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            false,
            // sanitizeURL
            false
          );
        });
        var xlinkHref = "xlinkHref";
        properties[xlinkHref] = new PropertyInfoRecord(
          "xlinkHref",
          STRING,
          false,
          // mustUseProperty
          "xlink:href",
          "http://www.w3.org/1999/xlink",
          true,
          // sanitizeURL
          false
        );
        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
          properties[attributeName] = new PropertyInfoRecord(
            attributeName,
            STRING,
            false,
            // mustUseProperty
            attributeName.toLowerCase(),
            // attributeName
            null,
            // attributeNamespace
            true,
            // sanitizeURL
            true
          );
        });
        var isUnitlessNumber = {
          animationIterationCount: true,
          aspectRatio: true,
          borderImageOutset: true,
          borderImageSlice: true,
          borderImageWidth: true,
          boxFlex: true,
          boxFlexGroup: true,
          boxOrdinalGroup: true,
          columnCount: true,
          columns: true,
          flex: true,
          flexGrow: true,
          flexPositive: true,
          flexShrink: true,
          flexNegative: true,
          flexOrder: true,
          gridArea: true,
          gridRow: true,
          gridRowEnd: true,
          gridRowSpan: true,
          gridRowStart: true,
          gridColumn: true,
          gridColumnEnd: true,
          gridColumnSpan: true,
          gridColumnStart: true,
          fontWeight: true,
          lineClamp: true,
          lineHeight: true,
          opacity: true,
          order: true,
          orphans: true,
          tabSize: true,
          widows: true,
          zIndex: true,
          zoom: true,
          // SVG-related properties
          fillOpacity: true,
          floodOpacity: true,
          stopOpacity: true,
          strokeDasharray: true,
          strokeDashoffset: true,
          strokeMiterlimit: true,
          strokeOpacity: true,
          strokeWidth: true
        };
        function prefixKey(prefix2, key) {
          return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
        }
        var prefixes2 = ["Webkit", "ms", "Moz", "O"];
        Object.keys(isUnitlessNumber).forEach(function(prop) {
          prefixes2.forEach(function(prefix2) {
            isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
          });
        });
        var hasReadOnlyValue = {
          button: true,
          checkbox: true,
          image: true,
          hidden: true,
          radio: true,
          reset: true,
          submit: true
        };
        function checkControlledValueProps(tagName, props) {
          {
            if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
              error2("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
            }
            if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
              error2("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
            }
          }
        }
        function isCustomComponent(tagName, props) {
          if (tagName.indexOf("-") === -1) {
            return typeof props.is === "string";
          }
          switch (tagName) {
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph":
              return false;
            default:
              return true;
          }
        }
        var ariaProperties = {
          "aria-current": 0,
          // state
          "aria-description": 0,
          "aria-details": 0,
          "aria-disabled": 0,
          // state
          "aria-hidden": 0,
          // state
          "aria-invalid": 0,
          // state
          "aria-keyshortcuts": 0,
          "aria-label": 0,
          "aria-roledescription": 0,
          // Widget Attributes
          "aria-autocomplete": 0,
          "aria-checked": 0,
          "aria-expanded": 0,
          "aria-haspopup": 0,
          "aria-level": 0,
          "aria-modal": 0,
          "aria-multiline": 0,
          "aria-multiselectable": 0,
          "aria-orientation": 0,
          "aria-placeholder": 0,
          "aria-pressed": 0,
          "aria-readonly": 0,
          "aria-required": 0,
          "aria-selected": 0,
          "aria-sort": 0,
          "aria-valuemax": 0,
          "aria-valuemin": 0,
          "aria-valuenow": 0,
          "aria-valuetext": 0,
          // Live Region Attributes
          "aria-atomic": 0,
          "aria-busy": 0,
          "aria-live": 0,
          "aria-relevant": 0,
          // Drag-and-Drop Attributes
          "aria-dropeffect": 0,
          "aria-grabbed": 0,
          // Relationship Attributes
          "aria-activedescendant": 0,
          "aria-colcount": 0,
          "aria-colindex": 0,
          "aria-colspan": 0,
          "aria-controls": 0,
          "aria-describedby": 0,
          "aria-errormessage": 0,
          "aria-flowto": 0,
          "aria-labelledby": 0,
          "aria-owns": 0,
          "aria-posinset": 0,
          "aria-rowcount": 0,
          "aria-rowindex": 0,
          "aria-rowspan": 0,
          "aria-setsize": 0
        };
        var warnedProperties = {};
        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
        function validateProperty(tagName, name) {
          {
            if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
              return true;
            }
            if (rARIACamel.test(name)) {
              var ariaName = "aria-" + name.slice(4).toLowerCase();
              var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
              if (correctName == null) {
                error2("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                warnedProperties[name] = true;
                return true;
              }
              if (name !== correctName) {
                error2("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                warnedProperties[name] = true;
                return true;
              }
            }
            if (rARIA.test(name)) {
              var lowerCasedName = name.toLowerCase();
              var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
              if (standardName == null) {
                warnedProperties[name] = true;
                return false;
              }
              if (name !== standardName) {
                error2("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties[name] = true;
                return true;
              }
            }
          }
          return true;
        }
        function warnInvalidARIAProps(type, props) {
          {
            var invalidProps = [];
            for (var key in props) {
              var isValid = validateProperty(type, key);
              if (!isValid) {
                invalidProps.push(key);
              }
            }
            var unknownPropString = invalidProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (invalidProps.length === 1) {
              error2("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            } else if (invalidProps.length > 1) {
              error2("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
            }
          }
        }
        function validateProperties(type, props) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnInvalidARIAProps(type, props);
        }
        var didWarnValueNull = false;
        function validateProperties$1(type, props) {
          {
            if (type !== "input" && type !== "textarea" && type !== "select") {
              return;
            }
            if (props != null && props.value === null && !didWarnValueNull) {
              didWarnValueNull = true;
              if (type === "select" && props.multiple) {
                error2("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
              } else {
                error2("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
              }
            }
          }
        }
        var possibleStandardNames = {
          // HTML
          accept: "accept",
          acceptcharset: "acceptCharset",
          "accept-charset": "acceptCharset",
          accesskey: "accessKey",
          action: "action",
          allowfullscreen: "allowFullScreen",
          alt: "alt",
          as: "as",
          async: "async",
          autocapitalize: "autoCapitalize",
          autocomplete: "autoComplete",
          autocorrect: "autoCorrect",
          autofocus: "autoFocus",
          autoplay: "autoPlay",
          autosave: "autoSave",
          capture: "capture",
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          challenge: "challenge",
          charset: "charSet",
          checked: "checked",
          children: "children",
          cite: "cite",
          class: "className",
          classid: "classID",
          classname: "className",
          cols: "cols",
          colspan: "colSpan",
          content: "content",
          contenteditable: "contentEditable",
          contextmenu: "contextMenu",
          controls: "controls",
          controlslist: "controlsList",
          coords: "coords",
          crossorigin: "crossOrigin",
          dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
          data: "data",
          datetime: "dateTime",
          default: "default",
          defaultchecked: "defaultChecked",
          defaultvalue: "defaultValue",
          defer: "defer",
          dir: "dir",
          disabled: "disabled",
          disablepictureinpicture: "disablePictureInPicture",
          disableremoteplayback: "disableRemotePlayback",
          download: "download",
          draggable: "draggable",
          enctype: "encType",
          enterkeyhint: "enterKeyHint",
          for: "htmlFor",
          form: "form",
          formmethod: "formMethod",
          formaction: "formAction",
          formenctype: "formEncType",
          formnovalidate: "formNoValidate",
          formtarget: "formTarget",
          frameborder: "frameBorder",
          headers: "headers",
          height: "height",
          hidden: "hidden",
          high: "high",
          href: "href",
          hreflang: "hrefLang",
          htmlfor: "htmlFor",
          httpequiv: "httpEquiv",
          "http-equiv": "httpEquiv",
          icon: "icon",
          id: "id",
          imagesizes: "imageSizes",
          imagesrcset: "imageSrcSet",
          innerhtml: "innerHTML",
          inputmode: "inputMode",
          integrity: "integrity",
          is: "is",
          itemid: "itemID",
          itemprop: "itemProp",
          itemref: "itemRef",
          itemscope: "itemScope",
          itemtype: "itemType",
          keyparams: "keyParams",
          keytype: "keyType",
          kind: "kind",
          label: "label",
          lang: "lang",
          list: "list",
          loop: "loop",
          low: "low",
          manifest: "manifest",
          marginwidth: "marginWidth",
          marginheight: "marginHeight",
          max: "max",
          maxlength: "maxLength",
          media: "media",
          mediagroup: "mediaGroup",
          method: "method",
          min: "min",
          minlength: "minLength",
          multiple: "multiple",
          muted: "muted",
          name: "name",
          nomodule: "noModule",
          nonce: "nonce",
          novalidate: "noValidate",
          open: "open",
          optimum: "optimum",
          pattern: "pattern",
          placeholder: "placeholder",
          playsinline: "playsInline",
          poster: "poster",
          preload: "preload",
          profile: "profile",
          radiogroup: "radioGroup",
          readonly: "readOnly",
          referrerpolicy: "referrerPolicy",
          rel: "rel",
          required: "required",
          reversed: "reversed",
          role: "role",
          rows: "rows",
          rowspan: "rowSpan",
          sandbox: "sandbox",
          scope: "scope",
          scoped: "scoped",
          scrolling: "scrolling",
          seamless: "seamless",
          selected: "selected",
          shape: "shape",
          size: "size",
          sizes: "sizes",
          span: "span",
          spellcheck: "spellCheck",
          src: "src",
          srcdoc: "srcDoc",
          srclang: "srcLang",
          srcset: "srcSet",
          start: "start",
          step: "step",
          style: "style",
          summary: "summary",
          tabindex: "tabIndex",
          target: "target",
          title: "title",
          type: "type",
          usemap: "useMap",
          value: "value",
          width: "width",
          wmode: "wmode",
          wrap: "wrap",
          // SVG
          about: "about",
          accentheight: "accentHeight",
          "accent-height": "accentHeight",
          accumulate: "accumulate",
          additive: "additive",
          alignmentbaseline: "alignmentBaseline",
          "alignment-baseline": "alignmentBaseline",
          allowreorder: "allowReorder",
          alphabetic: "alphabetic",
          amplitude: "amplitude",
          arabicform: "arabicForm",
          "arabic-form": "arabicForm",
          ascent: "ascent",
          attributename: "attributeName",
          attributetype: "attributeType",
          autoreverse: "autoReverse",
          azimuth: "azimuth",
          basefrequency: "baseFrequency",
          baselineshift: "baselineShift",
          "baseline-shift": "baselineShift",
          baseprofile: "baseProfile",
          bbox: "bbox",
          begin: "begin",
          bias: "bias",
          by: "by",
          calcmode: "calcMode",
          capheight: "capHeight",
          "cap-height": "capHeight",
          clip: "clip",
          clippath: "clipPath",
          "clip-path": "clipPath",
          clippathunits: "clipPathUnits",
          cliprule: "clipRule",
          "clip-rule": "clipRule",
          color: "color",
          colorinterpolation: "colorInterpolation",
          "color-interpolation": "colorInterpolation",
          colorinterpolationfilters: "colorInterpolationFilters",
          "color-interpolation-filters": "colorInterpolationFilters",
          colorprofile: "colorProfile",
          "color-profile": "colorProfile",
          colorrendering: "colorRendering",
          "color-rendering": "colorRendering",
          contentscripttype: "contentScriptType",
          contentstyletype: "contentStyleType",
          cursor: "cursor",
          cx: "cx",
          cy: "cy",
          d: "d",
          datatype: "datatype",
          decelerate: "decelerate",
          descent: "descent",
          diffuseconstant: "diffuseConstant",
          direction: "direction",
          display: "display",
          divisor: "divisor",
          dominantbaseline: "dominantBaseline",
          "dominant-baseline": "dominantBaseline",
          dur: "dur",
          dx: "dx",
          dy: "dy",
          edgemode: "edgeMode",
          elevation: "elevation",
          enablebackground: "enableBackground",
          "enable-background": "enableBackground",
          end: "end",
          exponent: "exponent",
          externalresourcesrequired: "externalResourcesRequired",
          fill: "fill",
          fillopacity: "fillOpacity",
          "fill-opacity": "fillOpacity",
          fillrule: "fillRule",
          "fill-rule": "fillRule",
          filter: "filter",
          filterres: "filterRes",
          filterunits: "filterUnits",
          floodopacity: "floodOpacity",
          "flood-opacity": "floodOpacity",
          floodcolor: "floodColor",
          "flood-color": "floodColor",
          focusable: "focusable",
          fontfamily: "fontFamily",
          "font-family": "fontFamily",
          fontsize: "fontSize",
          "font-size": "fontSize",
          fontsizeadjust: "fontSizeAdjust",
          "font-size-adjust": "fontSizeAdjust",
          fontstretch: "fontStretch",
          "font-stretch": "fontStretch",
          fontstyle: "fontStyle",
          "font-style": "fontStyle",
          fontvariant: "fontVariant",
          "font-variant": "fontVariant",
          fontweight: "fontWeight",
          "font-weight": "fontWeight",
          format: "format",
          from: "from",
          fx: "fx",
          fy: "fy",
          g1: "g1",
          g2: "g2",
          glyphname: "glyphName",
          "glyph-name": "glyphName",
          glyphorientationhorizontal: "glyphOrientationHorizontal",
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphorientationvertical: "glyphOrientationVertical",
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphref: "glyphRef",
          gradienttransform: "gradientTransform",
          gradientunits: "gradientUnits",
          hanging: "hanging",
          horizadvx: "horizAdvX",
          "horiz-adv-x": "horizAdvX",
          horizoriginx: "horizOriginX",
          "horiz-origin-x": "horizOriginX",
          ideographic: "ideographic",
          imagerendering: "imageRendering",
          "image-rendering": "imageRendering",
          in2: "in2",
          in: "in",
          inlist: "inlist",
          intercept: "intercept",
          k1: "k1",
          k2: "k2",
          k3: "k3",
          k4: "k4",
          k: "k",
          kernelmatrix: "kernelMatrix",
          kernelunitlength: "kernelUnitLength",
          kerning: "kerning",
          keypoints: "keyPoints",
          keysplines: "keySplines",
          keytimes: "keyTimes",
          lengthadjust: "lengthAdjust",
          letterspacing: "letterSpacing",
          "letter-spacing": "letterSpacing",
          lightingcolor: "lightingColor",
          "lighting-color": "lightingColor",
          limitingconeangle: "limitingConeAngle",
          local: "local",
          markerend: "markerEnd",
          "marker-end": "markerEnd",
          markerheight: "markerHeight",
          markermid: "markerMid",
          "marker-mid": "markerMid",
          markerstart: "markerStart",
          "marker-start": "markerStart",
          markerunits: "markerUnits",
          markerwidth: "markerWidth",
          mask: "mask",
          maskcontentunits: "maskContentUnits",
          maskunits: "maskUnits",
          mathematical: "mathematical",
          mode: "mode",
          numoctaves: "numOctaves",
          offset: "offset",
          opacity: "opacity",
          operator: "operator",
          order: "order",
          orient: "orient",
          orientation: "orientation",
          origin: "origin",
          overflow: "overflow",
          overlineposition: "overlinePosition",
          "overline-position": "overlinePosition",
          overlinethickness: "overlineThickness",
          "overline-thickness": "overlineThickness",
          paintorder: "paintOrder",
          "paint-order": "paintOrder",
          panose1: "panose1",
          "panose-1": "panose1",
          pathlength: "pathLength",
          patterncontentunits: "patternContentUnits",
          patterntransform: "patternTransform",
          patternunits: "patternUnits",
          pointerevents: "pointerEvents",
          "pointer-events": "pointerEvents",
          points: "points",
          pointsatx: "pointsAtX",
          pointsaty: "pointsAtY",
          pointsatz: "pointsAtZ",
          prefix: "prefix",
          preservealpha: "preserveAlpha",
          preserveaspectratio: "preserveAspectRatio",
          primitiveunits: "primitiveUnits",
          property: "property",
          r: "r",
          radius: "radius",
          refx: "refX",
          refy: "refY",
          renderingintent: "renderingIntent",
          "rendering-intent": "renderingIntent",
          repeatcount: "repeatCount",
          repeatdur: "repeatDur",
          requiredextensions: "requiredExtensions",
          requiredfeatures: "requiredFeatures",
          resource: "resource",
          restart: "restart",
          result: "result",
          results: "results",
          rotate: "rotate",
          rx: "rx",
          ry: "ry",
          scale: "scale",
          security: "security",
          seed: "seed",
          shaperendering: "shapeRendering",
          "shape-rendering": "shapeRendering",
          slope: "slope",
          spacing: "spacing",
          specularconstant: "specularConstant",
          specularexponent: "specularExponent",
          speed: "speed",
          spreadmethod: "spreadMethod",
          startoffset: "startOffset",
          stddeviation: "stdDeviation",
          stemh: "stemh",
          stemv: "stemv",
          stitchtiles: "stitchTiles",
          stopcolor: "stopColor",
          "stop-color": "stopColor",
          stopopacity: "stopOpacity",
          "stop-opacity": "stopOpacity",
          strikethroughposition: "strikethroughPosition",
          "strikethrough-position": "strikethroughPosition",
          strikethroughthickness: "strikethroughThickness",
          "strikethrough-thickness": "strikethroughThickness",
          string: "string",
          stroke: "stroke",
          strokedasharray: "strokeDasharray",
          "stroke-dasharray": "strokeDasharray",
          strokedashoffset: "strokeDashoffset",
          "stroke-dashoffset": "strokeDashoffset",
          strokelinecap: "strokeLinecap",
          "stroke-linecap": "strokeLinecap",
          strokelinejoin: "strokeLinejoin",
          "stroke-linejoin": "strokeLinejoin",
          strokemiterlimit: "strokeMiterlimit",
          "stroke-miterlimit": "strokeMiterlimit",
          strokewidth: "strokeWidth",
          "stroke-width": "strokeWidth",
          strokeopacity: "strokeOpacity",
          "stroke-opacity": "strokeOpacity",
          suppresscontenteditablewarning: "suppressContentEditableWarning",
          suppresshydrationwarning: "suppressHydrationWarning",
          surfacescale: "surfaceScale",
          systemlanguage: "systemLanguage",
          tablevalues: "tableValues",
          targetx: "targetX",
          targety: "targetY",
          textanchor: "textAnchor",
          "text-anchor": "textAnchor",
          textdecoration: "textDecoration",
          "text-decoration": "textDecoration",
          textlength: "textLength",
          textrendering: "textRendering",
          "text-rendering": "textRendering",
          to: "to",
          transform: "transform",
          typeof: "typeof",
          u1: "u1",
          u2: "u2",
          underlineposition: "underlinePosition",
          "underline-position": "underlinePosition",
          underlinethickness: "underlineThickness",
          "underline-thickness": "underlineThickness",
          unicode: "unicode",
          unicodebidi: "unicodeBidi",
          "unicode-bidi": "unicodeBidi",
          unicoderange: "unicodeRange",
          "unicode-range": "unicodeRange",
          unitsperem: "unitsPerEm",
          "units-per-em": "unitsPerEm",
          unselectable: "unselectable",
          valphabetic: "vAlphabetic",
          "v-alphabetic": "vAlphabetic",
          values: "values",
          vectoreffect: "vectorEffect",
          "vector-effect": "vectorEffect",
          version: "version",
          vertadvy: "vertAdvY",
          "vert-adv-y": "vertAdvY",
          vertoriginx: "vertOriginX",
          "vert-origin-x": "vertOriginX",
          vertoriginy: "vertOriginY",
          "vert-origin-y": "vertOriginY",
          vhanging: "vHanging",
          "v-hanging": "vHanging",
          videographic: "vIdeographic",
          "v-ideographic": "vIdeographic",
          viewbox: "viewBox",
          viewtarget: "viewTarget",
          visibility: "visibility",
          vmathematical: "vMathematical",
          "v-mathematical": "vMathematical",
          vocab: "vocab",
          widths: "widths",
          wordspacing: "wordSpacing",
          "word-spacing": "wordSpacing",
          writingmode: "writingMode",
          "writing-mode": "writingMode",
          x1: "x1",
          x2: "x2",
          x: "x",
          xchannelselector: "xChannelSelector",
          xheight: "xHeight",
          "x-height": "xHeight",
          xlinkactuate: "xlinkActuate",
          "xlink:actuate": "xlinkActuate",
          xlinkarcrole: "xlinkArcrole",
          "xlink:arcrole": "xlinkArcrole",
          xlinkhref: "xlinkHref",
          "xlink:href": "xlinkHref",
          xlinkrole: "xlinkRole",
          "xlink:role": "xlinkRole",
          xlinkshow: "xlinkShow",
          "xlink:show": "xlinkShow",
          xlinktitle: "xlinkTitle",
          "xlink:title": "xlinkTitle",
          xlinktype: "xlinkType",
          "xlink:type": "xlinkType",
          xmlbase: "xmlBase",
          "xml:base": "xmlBase",
          xmllang: "xmlLang",
          "xml:lang": "xmlLang",
          xmlns: "xmlns",
          "xml:space": "xmlSpace",
          xmlnsxlink: "xmlnsXlink",
          "xmlns:xlink": "xmlnsXlink",
          xmlspace: "xmlSpace",
          y1: "y1",
          y2: "y2",
          y: "y",
          ychannelselector: "yChannelSelector",
          z: "z",
          zoomandpan: "zoomAndPan"
        };
        var validateProperty$1 = function() {
        };
        {
          var warnedProperties$1 = {};
          var EVENT_NAME_REGEX = /^on./;
          var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
          var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
          var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
          validateProperty$1 = function(tagName, name, value, eventRegistry) {
            if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
              return true;
            }
            var lowerCasedName = name.toLowerCase();
            if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
              error2("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (eventRegistry != null) {
              var registrationNameDependencies = eventRegistry.registrationNameDependencies, possibleRegistrationNames = eventRegistry.possibleRegistrationNames;
              if (registrationNameDependencies.hasOwnProperty(name)) {
                return true;
              }
              var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
              if (registrationName != null) {
                error2("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                warnedProperties$1[name] = true;
                return true;
              }
              if (EVENT_NAME_REGEX.test(name)) {
                error2("Unknown event handler property `%s`. It will be ignored.", name);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (EVENT_NAME_REGEX.test(name)) {
              if (INVALID_EVENT_NAME_REGEX.test(name)) {
                error2("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
              return true;
            }
            if (lowerCasedName === "innerhtml") {
              error2("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "aria") {
              error2("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
              warnedProperties$1[name] = true;
              return true;
            }
            if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
              error2("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "number" && isNaN(value)) {
              error2("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
              warnedProperties$1[name] = true;
              return true;
            }
            var propertyInfo = getPropertyInfo(name);
            var isReserved2 = propertyInfo !== null && propertyInfo.type === RESERVED;
            if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
              var standardName = possibleStandardNames[lowerCasedName];
              if (standardName !== name) {
                error2("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                warnedProperties$1[name] = true;
                return true;
              }
            } else if (!isReserved2 && name !== lowerCasedName) {
              error2("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
              warnedProperties$1[name] = true;
              return true;
            }
            if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              if (value) {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
              } else {
                error2('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
              }
              warnedProperties$1[name] = true;
              return true;
            }
            if (isReserved2) {
              return true;
            }
            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
              warnedProperties$1[name] = true;
              return false;
            }
            if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
              error2("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
              warnedProperties$1[name] = true;
              return true;
            }
            return true;
          };
        }
        var warnUnknownProperties = function(type, props, eventRegistry) {
          {
            var unknownProps = [];
            for (var key in props) {
              var isValid = validateProperty$1(type, key, props[key], eventRegistry);
              if (!isValid) {
                unknownProps.push(key);
              }
            }
            var unknownPropString = unknownProps.map(function(prop) {
              return "`" + prop + "`";
            }).join(", ");
            if (unknownProps.length === 1) {
              error2("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            } else if (unknownProps.length > 1) {
              error2("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
            }
          }
        };
        function validateProperties$2(type, props, eventRegistry) {
          if (isCustomComponent(type, props)) {
            return;
          }
          warnUnknownProperties(type, props, eventRegistry);
        }
        var warnValidStyle = function() {
        };
        {
          var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
          var msPattern = /^-ms-/;
          var hyphenPattern = /-(.)/g;
          var badStyleValueWithSemicolonPattern = /;\s*$/;
          var warnedStyleNames = {};
          var warnedStyleValues = {};
          var warnedForNaNValue = false;
          var warnedForInfinityValue = false;
          var camelize3 = function(string) {
            return string.replace(hyphenPattern, function(_6, character) {
              return character.toUpperCase();
            });
          };
          var warnHyphenatedStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2(
              "Unsupported style property %s. Did you mean %s?",
              name,
              // As Andi Smith suggests
              // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
              // is converted to lowercase `ms`.
              camelize3(name.replace(msPattern, "ms-"))
            );
          };
          var warnBadVendoredStyleName = function(name) {
            if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
              return;
            }
            warnedStyleNames[name] = true;
            error2("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
          };
          var warnStyleValueWithSemicolon = function(name, value) {
            if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
              return;
            }
            warnedStyleValues[value] = true;
            error2(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
          };
          var warnStyleValueIsNaN = function(name, value) {
            if (warnedForNaNValue) {
              return;
            }
            warnedForNaNValue = true;
            error2("`NaN` is an invalid value for the `%s` css style property.", name);
          };
          var warnStyleValueIsInfinity = function(name, value) {
            if (warnedForInfinityValue) {
              return;
            }
            warnedForInfinityValue = true;
            error2("`Infinity` is an invalid value for the `%s` css style property.", name);
          };
          warnValidStyle = function(name, value) {
            if (name.indexOf("-") > -1) {
              warnHyphenatedStyleName(name);
            } else if (badVendoredStyleNamePattern.test(name)) {
              warnBadVendoredStyleName(name);
            } else if (badStyleValueWithSemicolonPattern.test(value)) {
              warnStyleValueWithSemicolon(name, value);
            }
            if (typeof value === "number") {
              if (isNaN(value)) {
                warnStyleValueIsNaN(name, value);
              } else if (!isFinite(value)) {
                warnStyleValueIsInfinity(name, value);
              }
            }
          };
        }
        var warnValidStyle$1 = warnValidStyle;
        var matchHtmlRegExp = /["'&<>]/;
        function escapeHtml(string) {
          {
            checkHtmlStringCoercion(string);
          }
          var str = "" + string;
          var match = matchHtmlRegExp.exec(str);
          if (!match) {
            return str;
          }
          var escape2;
          var html2 = "";
          var index;
          var lastIndex = 0;
          for (index = match.index; index < str.length; index++) {
            switch (str.charCodeAt(index)) {
              case 34:
                escape2 = "&quot;";
                break;
              case 38:
                escape2 = "&amp;";
                break;
              case 39:
                escape2 = "&#x27;";
                break;
              case 60:
                escape2 = "&lt;";
                break;
              case 62:
                escape2 = "&gt;";
                break;
              default:
                continue;
            }
            if (lastIndex !== index) {
              html2 += str.substring(lastIndex, index);
            }
            lastIndex = index + 1;
            html2 += escape2;
          }
          return lastIndex !== index ? html2 + str.substring(lastIndex, index) : html2;
        }
        function escapeTextForBrowser(text2) {
          if (typeof text2 === "boolean" || typeof text2 === "number") {
            return "" + text2;
          }
          return escapeHtml(text2);
        }
        var uppercasePattern = /([A-Z])/g;
        var msPattern$1 = /^ms-/;
        function hyphenateStyleName(name) {
          return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern$1, "-ms-");
        }
        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
        var didWarn = false;
        function sanitizeURL(url) {
          {
            if (!didWarn && isJavaScriptProtocol.test(url)) {
              didWarn = true;
              error2("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a3) {
          return isArrayImpl(a3);
        }
        var startInlineScript = stringToPrecomputedChunk("<script>");
        var endInlineScript = stringToPrecomputedChunk("<\/script>");
        var startScriptSrc = stringToPrecomputedChunk('<script src="');
        var startModuleSrc = stringToPrecomputedChunk('<script type="module" src="');
        var endAsyncScript = stringToPrecomputedChunk('" async=""><\/script>');
        function escapeBootstrapScriptContent(scriptText) {
          {
            checkHtmlStringCoercion(scriptText);
          }
          return ("" + scriptText).replace(scriptRegex, scriptReplacer);
        }
        var scriptRegex = /(<\/|<)(s)(cript)/gi;
        var scriptReplacer = function(match, prefix2, s3, suffix) {
          return "" + prefix2 + (s3 === "s" ? "\\u0073" : "\\u0053") + suffix;
        };
        function createResponseState(identifierPrefix, nonce2, bootstrapScriptContent, bootstrapScripts, bootstrapModules) {
          var idPrefix = identifierPrefix === void 0 ? "" : identifierPrefix;
          var inlineScriptWithNonce = nonce2 === void 0 ? startInlineScript : stringToPrecomputedChunk('<script nonce="' + escapeTextForBrowser(nonce2) + '">');
          var bootstrapChunks = [];
          if (bootstrapScriptContent !== void 0) {
            bootstrapChunks.push(inlineScriptWithNonce, stringToChunk(escapeBootstrapScriptContent(bootstrapScriptContent)), endInlineScript);
          }
          if (bootstrapScripts !== void 0) {
            for (var i3 = 0; i3 < bootstrapScripts.length; i3++) {
              bootstrapChunks.push(startScriptSrc, stringToChunk(escapeTextForBrowser(bootstrapScripts[i3])), endAsyncScript);
            }
          }
          if (bootstrapModules !== void 0) {
            for (var _i = 0; _i < bootstrapModules.length; _i++) {
              bootstrapChunks.push(startModuleSrc, stringToChunk(escapeTextForBrowser(bootstrapModules[_i])), endAsyncScript);
            }
          }
          return {
            bootstrapChunks,
            startInlineScript: inlineScriptWithNonce,
            placeholderPrefix: stringToPrecomputedChunk(idPrefix + "P:"),
            segmentPrefix: stringToPrecomputedChunk(idPrefix + "S:"),
            boundaryPrefix: idPrefix + "B:",
            idPrefix,
            nextSuspenseID: 0,
            sentCompleteSegmentFunction: false,
            sentCompleteBoundaryFunction: false,
            sentClientRenderFunction: false
          };
        }
        var ROOT_HTML_MODE = 0;
        var HTML_MODE = 1;
        var SVG_MODE = 2;
        var MATHML_MODE = 3;
        var HTML_TABLE_MODE = 4;
        var HTML_TABLE_BODY_MODE = 5;
        var HTML_TABLE_ROW_MODE = 6;
        var HTML_COLGROUP_MODE = 7;
        function createFormatContext(insertionMode, selectedValue) {
          return {
            insertionMode,
            selectedValue
          };
        }
        function createRootFormatContext(namespaceURI) {
          var insertionMode = namespaceURI === "http://www.w3.org/2000/svg" ? SVG_MODE : namespaceURI === "http://www.w3.org/1998/Math/MathML" ? MATHML_MODE : ROOT_HTML_MODE;
          return createFormatContext(insertionMode, null);
        }
        function getChildFormatContext(parentContext, type, props) {
          switch (type) {
            case "select":
              return createFormatContext(HTML_MODE, props.value != null ? props.value : props.defaultValue);
            case "svg":
              return createFormatContext(SVG_MODE, null);
            case "math":
              return createFormatContext(MATHML_MODE, null);
            case "foreignObject":
              return createFormatContext(HTML_MODE, null);
            case "table":
              return createFormatContext(HTML_TABLE_MODE, null);
            case "thead":
            case "tbody":
            case "tfoot":
              return createFormatContext(HTML_TABLE_BODY_MODE, null);
            case "colgroup":
              return createFormatContext(HTML_COLGROUP_MODE, null);
            case "tr":
              return createFormatContext(HTML_TABLE_ROW_MODE, null);
          }
          if (parentContext.insertionMode >= HTML_TABLE_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          if (parentContext.insertionMode === ROOT_HTML_MODE) {
            return createFormatContext(HTML_MODE, null);
          }
          return parentContext;
        }
        var UNINITIALIZED_SUSPENSE_BOUNDARY_ID = null;
        function assignSuspenseBoundaryID(responseState) {
          var generatedID = responseState.nextSuspenseID++;
          return stringToPrecomputedChunk(responseState.boundaryPrefix + generatedID.toString(16));
        }
        function makeId(responseState, treeId, localId) {
          var idPrefix = responseState.idPrefix;
          var id = ":" + idPrefix + "R" + treeId;
          if (localId > 0) {
            id += "H" + localId.toString(32);
          }
          return id + ":";
        }
        function encodeHTMLTextNode(text2) {
          return escapeTextForBrowser(text2);
        }
        var textSeparator = stringToPrecomputedChunk("<!-- -->");
        function pushTextInstance(target, text2, responseState, textEmbedded) {
          if (text2 === "") {
            return textEmbedded;
          }
          if (textEmbedded) {
            target.push(textSeparator);
          }
          target.push(stringToChunk(encodeHTMLTextNode(text2)));
          return true;
        }
        function pushSegmentFinale(target, responseState, lastPushedText, textEmbedded) {
          if (lastPushedText && textEmbedded) {
            target.push(textSeparator);
          }
        }
        var styleNameCache = /* @__PURE__ */ new Map();
        function processStyleName(styleName) {
          var chunk2 = styleNameCache.get(styleName);
          if (chunk2 !== void 0) {
            return chunk2;
          }
          var result = stringToPrecomputedChunk(escapeTextForBrowser(hyphenateStyleName(styleName)));
          styleNameCache.set(styleName, result);
          return result;
        }
        var styleAttributeStart = stringToPrecomputedChunk(' style="');
        var styleAssign = stringToPrecomputedChunk(":");
        var styleSeparator = stringToPrecomputedChunk(";");
        function pushStyle(target, responseState, style) {
          if (typeof style !== "object") {
            throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
          }
          var isFirst = true;
          for (var styleName in style) {
            if (!hasOwnProperty.call(style, styleName)) {
              continue;
            }
            var styleValue = style[styleName];
            if (styleValue == null || typeof styleValue === "boolean" || styleValue === "") {
              continue;
            }
            var nameChunk = void 0;
            var valueChunk = void 0;
            var isCustomProperty = styleName.indexOf("--") === 0;
            if (isCustomProperty) {
              nameChunk = stringToChunk(escapeTextForBrowser(styleName));
              {
                checkCSSPropertyStringCoercion(styleValue, styleName);
              }
              valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
            } else {
              {
                warnValidStyle$1(styleName, styleValue);
              }
              nameChunk = processStyleName(styleName);
              if (typeof styleValue === "number") {
                if (styleValue !== 0 && !hasOwnProperty.call(isUnitlessNumber, styleName)) {
                  valueChunk = stringToChunk(styleValue + "px");
                } else {
                  valueChunk = stringToChunk("" + styleValue);
                }
              } else {
                {
                  checkCSSPropertyStringCoercion(styleValue, styleName);
                }
                valueChunk = stringToChunk(escapeTextForBrowser(("" + styleValue).trim()));
              }
            }
            if (isFirst) {
              isFirst = false;
              target.push(styleAttributeStart, nameChunk, styleAssign, valueChunk);
            } else {
              target.push(styleSeparator, nameChunk, styleAssign, valueChunk);
            }
          }
          if (!isFirst) {
            target.push(attributeEnd);
          }
        }
        var attributeSeparator = stringToPrecomputedChunk(" ");
        var attributeAssign = stringToPrecomputedChunk('="');
        var attributeEnd = stringToPrecomputedChunk('"');
        var attributeEmptyString = stringToPrecomputedChunk('=""');
        function pushAttribute(target, responseState, name, value) {
          switch (name) {
            case "style": {
              pushStyle(target, responseState, value);
              return;
            }
            case "defaultValue":
            case "defaultChecked":
            case "innerHTML":
            case "suppressContentEditableWarning":
            case "suppressHydrationWarning":
              return;
          }
          if (
            // shouldIgnoreAttribute
            // We have already filtered out null/undefined and reserved words.
            name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")
          ) {
            return;
          }
          var propertyInfo = getPropertyInfo(name);
          if (propertyInfo !== null) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                if (!propertyInfo.acceptsBooleans) {
                  return;
                }
              }
            }
            var attributeName = propertyInfo.attributeName;
            var attributeNameChunk = stringToChunk(attributeName);
            switch (propertyInfo.type) {
              case BOOLEAN:
                if (value) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                }
                return;
              case OVERLOADED_BOOLEAN:
                if (value === true) {
                  target.push(attributeSeparator, attributeNameChunk, attributeEmptyString);
                } else if (value === false)
                  ;
                else {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                return;
              case NUMERIC:
                if (!isNaN(value)) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              case POSITIVE_NUMERIC:
                if (!isNaN(value) && value >= 1) {
                  target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
                }
                break;
              default:
                if (propertyInfo.sanitizeURL) {
                  {
                    checkAttributeStringCoercion(value, attributeName);
                  }
                  value = "" + value;
                  sanitizeURL(value);
                }
                target.push(attributeSeparator, attributeNameChunk, attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
            }
          } else if (isAttributeNameSafe(name)) {
            switch (typeof value) {
              case "function":
              case "symbol":
                return;
              case "boolean": {
                var prefix2 = name.toLowerCase().slice(0, 5);
                if (prefix2 !== "data-" && prefix2 !== "aria-") {
                  return;
                }
              }
            }
            target.push(attributeSeparator, stringToChunk(name), attributeAssign, stringToChunk(escapeTextForBrowser(value)), attributeEnd);
          }
        }
        var endOfStartTag = stringToPrecomputedChunk(">");
        var endOfStartTagSelfClosing = stringToPrecomputedChunk("/>");
        function pushInnerHTML(target, innerHTML, children) {
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html2 = innerHTML.__html;
            if (html2 !== null && html2 !== void 0) {
              {
                checkHtmlStringCoercion(html2);
              }
              target.push(stringToChunk("" + html2));
            }
          }
        }
        var didWarnDefaultInputValue = false;
        var didWarnDefaultChecked = false;
        var didWarnDefaultSelectValue = false;
        var didWarnDefaultTextareaValue = false;
        var didWarnInvalidOptionChildren = false;
        var didWarnInvalidOptionInnerHTML = false;
        var didWarnSelectedSetOnOption = false;
        function checkSelectProp(props, propName) {
          {
            var value = props[propName];
            if (value != null) {
              var array = isArray(value);
              if (props.multiple && !array) {
                error2("The `%s` prop supplied to <select> must be an array if `multiple` is true.", propName);
              } else if (!props.multiple && array) {
                error2("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.", propName);
              }
            }
          }
        }
        function pushStartSelect(target, props, responseState) {
          {
            checkControlledValueProps("select", props);
            checkSelectProp(props, "value");
            checkSelectProp(props, "defaultValue");
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultSelectValue) {
              error2("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultSelectValue = true;
            }
          }
          target.push(startChunkForTag("select"));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "defaultValue":
                case "value":
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function flattenOptionChildren(children) {
          var content = "";
          React3.Children.forEach(children, function(child) {
            if (child == null) {
              return;
            }
            content += child;
            {
              if (!didWarnInvalidOptionChildren && typeof child !== "string" && typeof child !== "number") {
                didWarnInvalidOptionChildren = true;
                error2("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
              }
            }
          });
          return content;
        }
        var selectedMarkerAttribute = stringToPrecomputedChunk(' selected=""');
        function pushStartOption(target, props, responseState, formatContext) {
          var selectedValue = formatContext.selectedValue;
          target.push(startChunkForTag("option"));
          var children = null;
          var value = null;
          var selected = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "selected":
                  selected = propValue;
                  {
                    if (!didWarnSelectedSetOnOption) {
                      error2("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                      didWarnSelectedSetOnOption = true;
                    }
                  }
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "value":
                  value = propValue;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (selectedValue != null) {
            var stringValue;
            if (value !== null) {
              {
                checkAttributeStringCoercion(value, "value");
              }
              stringValue = "" + value;
            } else {
              {
                if (innerHTML !== null) {
                  if (!didWarnInvalidOptionInnerHTML) {
                    didWarnInvalidOptionInnerHTML = true;
                    error2("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                  }
                }
              }
              stringValue = flattenOptionChildren(children);
            }
            if (isArray(selectedValue)) {
              for (var i3 = 0; i3 < selectedValue.length; i3++) {
                {
                  checkAttributeStringCoercion(selectedValue[i3], "value");
                }
                var v4 = "" + selectedValue[i3];
                if (v4 === stringValue) {
                  target.push(selectedMarkerAttribute);
                  break;
                }
              }
            } else {
              {
                checkAttributeStringCoercion(selectedValue, "select.value");
              }
              if ("" + selectedValue === stringValue) {
                target.push(selectedMarkerAttribute);
              }
            }
          } else if (selected) {
            target.push(selectedMarkerAttribute);
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        function pushInput(target, props, responseState) {
          {
            checkControlledValueProps("input", props);
            if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnDefaultChecked) {
              error2("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultChecked = true;
            }
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultInputValue) {
              error2("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", "A component", props.type);
              didWarnDefaultInputValue = true;
            }
          }
          target.push(startChunkForTag("input"));
          var value = null;
          var defaultValue = null;
          var checked = null;
          var defaultChecked = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("input is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                case "defaultChecked":
                  defaultChecked = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "checked":
                  checked = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (checked !== null) {
            pushAttribute(target, responseState, "checked", checked);
          } else if (defaultChecked !== null) {
            pushAttribute(target, responseState, "checked", defaultChecked);
          }
          if (value !== null) {
            pushAttribute(target, responseState, "value", value);
          } else if (defaultValue !== null) {
            pushAttribute(target, responseState, "value", defaultValue);
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartTextArea(target, props, responseState) {
          {
            checkControlledValueProps("textarea", props);
            if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnDefaultTextareaValue) {
              error2("Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components");
              didWarnDefaultTextareaValue = true;
            }
          }
          target.push(startChunkForTag("textarea"));
          var value = null;
          var defaultValue = null;
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "value":
                  value = propValue;
                  break;
                case "defaultValue":
                  defaultValue = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          if (value === null && defaultValue !== null) {
            value = defaultValue;
          }
          target.push(endOfStartTag);
          if (children != null) {
            {
              error2("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
            }
            if (value != null) {
              throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
            if (isArray(children)) {
              if (children.length > 1) {
                throw new Error("<textarea> can only have at most one child.");
              }
              {
                checkHtmlStringCoercion(children[0]);
              }
              value = "" + children[0];
            }
            {
              checkHtmlStringCoercion(children);
            }
            value = "" + children;
          }
          if (typeof value === "string" && value[0] === "\n") {
            target.push(leadingNewline);
          }
          if (value !== null) {
            {
              checkAttributeStringCoercion(value, "value");
            }
            target.push(stringToChunk(encodeHTMLTextNode("" + value)));
          }
          return null;
        }
        function pushSelfClosing(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error(tag + " is a self-closing tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTagSelfClosing);
          return null;
        }
        function pushStartMenuItem(target, props, responseState) {
          target.push(startChunkForTag("menuitem"));
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw new Error("menuitems cannot have `children` nor `dangerouslySetInnerHTML`.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          return null;
        }
        function pushStartTitle(target, props, responseState) {
          target.push(startChunkForTag("title"));
          var children = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  throw new Error("`dangerouslySetInnerHTML` does not make sense on <title>.");
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          {
            var child = Array.isArray(children) && children.length < 2 ? children[0] || null : children;
            if (Array.isArray(children) && children.length > 1) {
              error2("A title element received an array with more than 1 element as children. In browsers title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && child.$$typeof != null) {
              error2("A title element received a React element for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            } else if (child != null && typeof child !== "string" && typeof child !== "number") {
              error2("A title element received a value that was not a string or number for children. In the browser title Elements can only have Text Nodes as children. If the children being rendered output more than a single text node in aggregate the browser will display markup and comments as text in the title and hydration will likely fail and fall back to client rendering");
            }
          }
          return children;
        }
        function pushStartGenericElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          if (typeof children === "string") {
            target.push(stringToChunk(encodeHTMLTextNode(children)));
            return null;
          }
          return children;
        }
        function pushStartCustomElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                case "style":
                  pushStyle(target, responseState, propValue);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  if (isAttributeNameSafe(propKey) && typeof propValue !== "function" && typeof propValue !== "symbol") {
                    target.push(attributeSeparator, stringToChunk(propKey), attributeAssign, stringToChunk(escapeTextForBrowser(propValue)), attributeEnd);
                  }
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          pushInnerHTML(target, innerHTML, children);
          return children;
        }
        var leadingNewline = stringToPrecomputedChunk("\n");
        function pushStartPreformattedElement(target, props, tag, responseState) {
          target.push(startChunkForTag(tag));
          var children = null;
          var innerHTML = null;
          for (var propKey in props) {
            if (hasOwnProperty.call(props, propKey)) {
              var propValue = props[propKey];
              if (propValue == null) {
                continue;
              }
              switch (propKey) {
                case "children":
                  children = propValue;
                  break;
                case "dangerouslySetInnerHTML":
                  innerHTML = propValue;
                  break;
                default:
                  pushAttribute(target, responseState, propKey, propValue);
                  break;
              }
            }
          }
          target.push(endOfStartTag);
          if (innerHTML != null) {
            if (children != null) {
              throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
            }
            if (typeof innerHTML !== "object" || !("__html" in innerHTML)) {
              throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
            }
            var html2 = innerHTML.__html;
            if (html2 !== null && html2 !== void 0) {
              if (typeof html2 === "string" && html2.length > 0 && html2[0] === "\n") {
                target.push(leadingNewline, stringToChunk(html2));
              } else {
                {
                  checkHtmlStringCoercion(html2);
                }
                target.push(stringToChunk("" + html2));
              }
            }
          }
          if (typeof children === "string" && children[0] === "\n") {
            target.push(leadingNewline);
          }
          return children;
        }
        var VALID_TAG_REGEX = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/;
        var validatedTagCache = /* @__PURE__ */ new Map();
        function startChunkForTag(tag) {
          var tagStartChunk = validatedTagCache.get(tag);
          if (tagStartChunk === void 0) {
            if (!VALID_TAG_REGEX.test(tag)) {
              throw new Error("Invalid tag: " + tag);
            }
            tagStartChunk = stringToPrecomputedChunk("<" + tag);
            validatedTagCache.set(tag, tagStartChunk);
          }
          return tagStartChunk;
        }
        var DOCTYPE = stringToPrecomputedChunk("<!DOCTYPE html>");
        function pushStartInstance(target, type, props, responseState, formatContext) {
          {
            validateProperties(type, props);
            validateProperties$1(type, props);
            validateProperties$2(type, props, null);
            if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
              error2("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
            }
            if (formatContext.insertionMode !== SVG_MODE && formatContext.insertionMode !== MATHML_MODE) {
              if (type.indexOf("-") === -1 && typeof props.is !== "string" && type.toLowerCase() !== type) {
                error2("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
              }
            }
          }
          switch (type) {
            case "select":
              return pushStartSelect(target, props, responseState);
            case "option":
              return pushStartOption(target, props, responseState, formatContext);
            case "textarea":
              return pushStartTextArea(target, props, responseState);
            case "input":
              return pushInput(target, props, responseState);
            case "menuitem":
              return pushStartMenuItem(target, props, responseState);
            case "title":
              return pushStartTitle(target, props, responseState);
            case "listing":
            case "pre": {
              return pushStartPreformattedElement(target, props, type, responseState);
            }
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              return pushSelfClosing(target, props, type, responseState);
            }
            case "annotation-xml":
            case "color-profile":
            case "font-face":
            case "font-face-src":
            case "font-face-uri":
            case "font-face-format":
            case "font-face-name":
            case "missing-glyph": {
              return pushStartGenericElement(target, props, type, responseState);
            }
            case "html": {
              if (formatContext.insertionMode === ROOT_HTML_MODE) {
                target.push(DOCTYPE);
              }
              return pushStartGenericElement(target, props, type, responseState);
            }
            default: {
              if (type.indexOf("-") === -1 && typeof props.is !== "string") {
                return pushStartGenericElement(target, props, type, responseState);
              } else {
                return pushStartCustomElement(target, props, type, responseState);
              }
            }
          }
        }
        var endTag1 = stringToPrecomputedChunk("</");
        var endTag2 = stringToPrecomputedChunk(">");
        function pushEndInstance(target, type, props) {
          switch (type) {
            case "area":
            case "base":
            case "br":
            case "col":
            case "embed":
            case "hr":
            case "img":
            case "input":
            case "keygen":
            case "link":
            case "meta":
            case "param":
            case "source":
            case "track":
            case "wbr": {
              break;
            }
            default: {
              target.push(endTag1, stringToChunk(type), endTag2);
            }
          }
        }
        function writeCompletedRoot(destination, responseState) {
          var bootstrapChunks = responseState.bootstrapChunks;
          var i3 = 0;
          for (; i3 < bootstrapChunks.length - 1; i3++) {
            writeChunk(destination, bootstrapChunks[i3]);
          }
          if (i3 < bootstrapChunks.length) {
            return writeChunkAndReturn(destination, bootstrapChunks[i3]);
          }
          return true;
        }
        var placeholder1 = stringToPrecomputedChunk('<template id="');
        var placeholder2 = stringToPrecomputedChunk('"></template>');
        function writePlaceholder(destination, responseState, id) {
          writeChunk(destination, placeholder1);
          writeChunk(destination, responseState.placeholderPrefix);
          var formattedID = stringToChunk(id.toString(16));
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, placeholder2);
        }
        var startCompletedSuspenseBoundary = stringToPrecomputedChunk("<!--$-->");
        var startPendingSuspenseBoundary1 = stringToPrecomputedChunk('<!--$?--><template id="');
        var startPendingSuspenseBoundary2 = stringToPrecomputedChunk('"></template>');
        var startClientRenderedSuspenseBoundary = stringToPrecomputedChunk("<!--$!-->");
        var endSuspenseBoundary = stringToPrecomputedChunk("<!--/$-->");
        var clientRenderedSuspenseBoundaryError1 = stringToPrecomputedChunk("<template");
        var clientRenderedSuspenseBoundaryErrorAttrInterstitial = stringToPrecomputedChunk('"');
        var clientRenderedSuspenseBoundaryError1A = stringToPrecomputedChunk(' data-dgst="');
        var clientRenderedSuspenseBoundaryError1B = stringToPrecomputedChunk(' data-msg="');
        var clientRenderedSuspenseBoundaryError1C = stringToPrecomputedChunk(' data-stck="');
        var clientRenderedSuspenseBoundaryError2 = stringToPrecomputedChunk("></template>");
        function writeStartCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, startCompletedSuspenseBoundary);
        }
        function writeStartPendingSuspenseBoundary(destination, responseState, id) {
          writeChunk(destination, startPendingSuspenseBoundary1);
          if (id === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, id);
          return writeChunkAndReturn(destination, startPendingSuspenseBoundary2);
        }
        function writeStartClientRenderedSuspenseBoundary(destination, responseState, errorDigest, errorMesssage, errorComponentStack) {
          var result;
          result = writeChunkAndReturn(destination, startClientRenderedSuspenseBoundary);
          writeChunk(destination, clientRenderedSuspenseBoundaryError1);
          if (errorDigest) {
            writeChunk(destination, clientRenderedSuspenseBoundaryError1A);
            writeChunk(destination, stringToChunk(escapeTextForBrowser(errorDigest)));
            writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
          }
          {
            if (errorMesssage) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1B);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorMesssage)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
            if (errorComponentStack) {
              writeChunk(destination, clientRenderedSuspenseBoundaryError1C);
              writeChunk(destination, stringToChunk(escapeTextForBrowser(errorComponentStack)));
              writeChunk(destination, clientRenderedSuspenseBoundaryErrorAttrInterstitial);
            }
          }
          result = writeChunkAndReturn(destination, clientRenderedSuspenseBoundaryError2);
          return result;
        }
        function writeEndCompletedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndPendingSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        function writeEndClientRenderedSuspenseBoundary(destination, responseState) {
          return writeChunkAndReturn(destination, endSuspenseBoundary);
        }
        var startSegmentHTML = stringToPrecomputedChunk('<div hidden id="');
        var startSegmentHTML2 = stringToPrecomputedChunk('">');
        var endSegmentHTML = stringToPrecomputedChunk("</div>");
        var startSegmentSVG = stringToPrecomputedChunk('<svg aria-hidden="true" style="display:none" id="');
        var startSegmentSVG2 = stringToPrecomputedChunk('">');
        var endSegmentSVG = stringToPrecomputedChunk("</svg>");
        var startSegmentMathML = stringToPrecomputedChunk('<math aria-hidden="true" style="display:none" id="');
        var startSegmentMathML2 = stringToPrecomputedChunk('">');
        var endSegmentMathML = stringToPrecomputedChunk("</math>");
        var startSegmentTable = stringToPrecomputedChunk('<table hidden id="');
        var startSegmentTable2 = stringToPrecomputedChunk('">');
        var endSegmentTable = stringToPrecomputedChunk("</table>");
        var startSegmentTableBody = stringToPrecomputedChunk('<table hidden><tbody id="');
        var startSegmentTableBody2 = stringToPrecomputedChunk('">');
        var endSegmentTableBody = stringToPrecomputedChunk("</tbody></table>");
        var startSegmentTableRow = stringToPrecomputedChunk('<table hidden><tr id="');
        var startSegmentTableRow2 = stringToPrecomputedChunk('">');
        var endSegmentTableRow = stringToPrecomputedChunk("</tr></table>");
        var startSegmentColGroup = stringToPrecomputedChunk('<table hidden><colgroup id="');
        var startSegmentColGroup2 = stringToPrecomputedChunk('">');
        var endSegmentColGroup = stringToPrecomputedChunk("</colgroup></table>");
        function writeStartSegment(destination, responseState, formatContext, id) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              writeChunk(destination, startSegmentHTML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentHTML2);
            }
            case SVG_MODE: {
              writeChunk(destination, startSegmentSVG);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentSVG2);
            }
            case MATHML_MODE: {
              writeChunk(destination, startSegmentMathML);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentMathML2);
            }
            case HTML_TABLE_MODE: {
              writeChunk(destination, startSegmentTable);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTable2);
            }
            case HTML_TABLE_BODY_MODE: {
              writeChunk(destination, startSegmentTableBody);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableBody2);
            }
            case HTML_TABLE_ROW_MODE: {
              writeChunk(destination, startSegmentTableRow);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentTableRow2);
            }
            case HTML_COLGROUP_MODE: {
              writeChunk(destination, startSegmentColGroup);
              writeChunk(destination, responseState.segmentPrefix);
              writeChunk(destination, stringToChunk(id.toString(16)));
              return writeChunkAndReturn(destination, startSegmentColGroup2);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        function writeEndSegment(destination, formatContext) {
          switch (formatContext.insertionMode) {
            case ROOT_HTML_MODE:
            case HTML_MODE: {
              return writeChunkAndReturn(destination, endSegmentHTML);
            }
            case SVG_MODE: {
              return writeChunkAndReturn(destination, endSegmentSVG);
            }
            case MATHML_MODE: {
              return writeChunkAndReturn(destination, endSegmentMathML);
            }
            case HTML_TABLE_MODE: {
              return writeChunkAndReturn(destination, endSegmentTable);
            }
            case HTML_TABLE_BODY_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableBody);
            }
            case HTML_TABLE_ROW_MODE: {
              return writeChunkAndReturn(destination, endSegmentTableRow);
            }
            case HTML_COLGROUP_MODE: {
              return writeChunkAndReturn(destination, endSegmentColGroup);
            }
            default: {
              throw new Error("Unknown insertion mode. This is a bug in React.");
            }
          }
        }
        var completeSegmentFunction = "function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)}";
        var completeBoundaryFunction = 'function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}}';
        var clientRenderFunction = 'function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())}';
        var completeSegmentScript1Full = stringToPrecomputedChunk(completeSegmentFunction + ';$RS("');
        var completeSegmentScript1Partial = stringToPrecomputedChunk('$RS("');
        var completeSegmentScript2 = stringToPrecomputedChunk('","');
        var completeSegmentScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedSegmentInstruction(destination, responseState, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteSegmentFunction) {
            responseState.sentCompleteSegmentFunction = true;
            writeChunk(destination, completeSegmentScript1Full);
          } else {
            writeChunk(destination, completeSegmentScript1Partial);
          }
          writeChunk(destination, responseState.segmentPrefix);
          var formattedID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, formattedID);
          writeChunk(destination, completeSegmentScript2);
          writeChunk(destination, responseState.placeholderPrefix);
          writeChunk(destination, formattedID);
          return writeChunkAndReturn(destination, completeSegmentScript3);
        }
        var completeBoundaryScript1Full = stringToPrecomputedChunk(completeBoundaryFunction + ';$RC("');
        var completeBoundaryScript1Partial = stringToPrecomputedChunk('$RC("');
        var completeBoundaryScript2 = stringToPrecomputedChunk('","');
        var completeBoundaryScript3 = stringToPrecomputedChunk('")<\/script>');
        function writeCompletedBoundaryInstruction(destination, responseState, boundaryID, contentSegmentID) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentCompleteBoundaryFunction) {
            responseState.sentCompleteBoundaryFunction = true;
            writeChunk(destination, completeBoundaryScript1Full);
          } else {
            writeChunk(destination, completeBoundaryScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          var formattedContentID = stringToChunk(contentSegmentID.toString(16));
          writeChunk(destination, boundaryID);
          writeChunk(destination, completeBoundaryScript2);
          writeChunk(destination, responseState.segmentPrefix);
          writeChunk(destination, formattedContentID);
          return writeChunkAndReturn(destination, completeBoundaryScript3);
        }
        var clientRenderScript1Full = stringToPrecomputedChunk(clientRenderFunction + ';$RX("');
        var clientRenderScript1Partial = stringToPrecomputedChunk('$RX("');
        var clientRenderScript1A = stringToPrecomputedChunk('"');
        var clientRenderScript2 = stringToPrecomputedChunk(")<\/script>");
        var clientRenderErrorScriptArgInterstitial = stringToPrecomputedChunk(",");
        function writeClientRenderBoundaryInstruction(destination, responseState, boundaryID, errorDigest, errorMessage, errorComponentStack) {
          writeChunk(destination, responseState.startInlineScript);
          if (!responseState.sentClientRenderFunction) {
            responseState.sentClientRenderFunction = true;
            writeChunk(destination, clientRenderScript1Full);
          } else {
            writeChunk(destination, clientRenderScript1Partial);
          }
          if (boundaryID === null) {
            throw new Error("An ID must have been assigned before we can complete the boundary.");
          }
          writeChunk(destination, boundaryID);
          writeChunk(destination, clientRenderScript1A);
          if (errorDigest || errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorDigest || "")));
          }
          if (errorMessage || errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorMessage || "")));
          }
          if (errorComponentStack) {
            writeChunk(destination, clientRenderErrorScriptArgInterstitial);
            writeChunk(destination, stringToChunk(escapeJSStringsForInstructionScripts(errorComponentStack)));
          }
          return writeChunkAndReturn(destination, clientRenderScript2);
        }
        var regexForJSStringsInScripts = /[<\u2028\u2029]/g;
        function escapeJSStringsForInstructionScripts(input) {
          var escaped = JSON.stringify(input);
          return escaped.replace(regexForJSStringsInScripts, function(match) {
            switch (match) {
              case "<":
                return "\\u003c";
              case "\u2028":
                return "\\u2028";
              case "\u2029":
                return "\\u2029";
              default: {
                throw new Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
              }
            }
          });
        }
        var assign = Object.assign;
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
        var REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED = Symbol.for("react.default_value");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init3(payload));
                } catch (x4) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x4) {
                var match = x4.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x4) {
                  control = x4;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x4) {
                  control = x4;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x4) {
                control = x4;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s3 = sampleLines.length - 1;
              var c4 = controlLines.length - 1;
              while (s3 >= 1 && c4 >= 0 && sampleLines[s3] !== controlLines[c4]) {
                c4--;
              }
              for (; s3 >= 1 && c4 >= 0; s3--, c4--) {
                if (sampleLines[s3] !== controlLines[c4]) {
                  if (s3 !== 1 || c4 !== 1) {
                    do {
                      s3--;
                      c4--;
                      if (c4 < 0 || sampleLines[s3] !== controlLines[c4]) {
                        var _frame = "\n" + sampleLines[s3].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s3 >= 1 && c4 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeClassComponentFrame(ctor, source, ownerFn) {
          {
            return describeNativeComponentFrame(ctor, true);
          }
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init3(payload), source, ownerFn);
                } catch (x4) {
                }
              }
            }
          }
          return "";
        }
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var warnedAboutMissingGetChildContext;
        {
          warnedAboutMissingGetChildContext = {};
        }
        var emptyContextObject = {};
        {
          Object.freeze(emptyContextObject);
        }
        function getMaskedContext(type, unmaskedContext) {
          {
            var contextTypes = type.contextTypes;
            if (!contextTypes) {
              return emptyContextObject;
            }
            var context = {};
            for (var key in contextTypes) {
              context[key] = unmaskedContext[key];
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(contextTypes, context, "context", name);
            }
            return context;
          }
        }
        function processChildContext(instance, type, parentContext, childContextTypes) {
          {
            if (typeof instance.getChildContext !== "function") {
              {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!warnedAboutMissingGetChildContext[componentName]) {
                  warnedAboutMissingGetChildContext[componentName] = true;
                  error2("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                }
              }
              return parentContext;
            }
            var childContext = instance.getChildContext();
            for (var contextKey in childContext) {
              if (!(contextKey in childContextTypes)) {
                throw new Error((getComponentNameFromType(type) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
              }
            }
            {
              var name = getComponentNameFromType(type) || "Unknown";
              checkPropTypes(childContextTypes, childContext, "child context", name);
            }
            return assign({}, parentContext, childContext);
          }
        }
        var rendererSigil;
        {
          rendererSigil = {};
        }
        var rootContextSnapshot = null;
        var currentActiveSnapshot = null;
        function popNode(prev) {
          {
            prev.context._currentValue = prev.parentValue;
          }
        }
        function pushNode(next) {
          {
            next.context._currentValue = next.value;
          }
        }
        function popToNearestCommonAncestor(prev, next) {
          if (prev === next)
            ;
          else {
            popNode(prev);
            var parentPrev = prev.parent;
            var parentNext = next.parent;
            if (parentPrev === null) {
              if (parentNext !== null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
            } else {
              if (parentNext === null) {
                throw new Error("The stacks must reach the root at the same time. This is a bug in React.");
              }
              popToNearestCommonAncestor(parentPrev, parentNext);
            }
            pushNode(next);
          }
        }
        function popAllPrevious(prev) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev !== null) {
            popAllPrevious(parentPrev);
          }
        }
        function pushAllNext(next) {
          var parentNext = next.parent;
          if (parentNext !== null) {
            pushAllNext(parentNext);
          }
          pushNode(next);
        }
        function popPreviousToCommonLevel(prev, next) {
          popNode(prev);
          var parentPrev = prev.parent;
          if (parentPrev === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (parentPrev.depth === next.depth) {
            popToNearestCommonAncestor(parentPrev, next);
          } else {
            popPreviousToCommonLevel(parentPrev, next);
          }
        }
        function popNextToCommonLevel(prev, next) {
          var parentNext = next.parent;
          if (parentNext === null) {
            throw new Error("The depth must equal at least at zero before reaching the root. This is a bug in React.");
          }
          if (prev.depth === parentNext.depth) {
            popToNearestCommonAncestor(prev, parentNext);
          } else {
            popNextToCommonLevel(prev, parentNext);
          }
          pushNode(next);
        }
        function switchContext(newSnapshot) {
          var prev = currentActiveSnapshot;
          var next = newSnapshot;
          if (prev !== next) {
            if (prev === null) {
              pushAllNext(next);
            } else if (next === null) {
              popAllPrevious(prev);
            } else if (prev.depth === next.depth) {
              popToNearestCommonAncestor(prev, next);
            } else if (prev.depth > next.depth) {
              popPreviousToCommonLevel(prev, next);
            } else {
              popNextToCommonLevel(prev, next);
            }
            currentActiveSnapshot = next;
          }
        }
        function pushProvider(context, nextValue) {
          var prevValue;
          {
            prevValue = context._currentValue;
            context._currentValue = nextValue;
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          var prevNode = currentActiveSnapshot;
          var newNode = {
            parent: prevNode,
            depth: prevNode === null ? 0 : prevNode.depth + 1,
            context,
            parentValue: prevValue,
            value: nextValue
          };
          currentActiveSnapshot = newNode;
          return newNode;
        }
        function popProvider(context) {
          var prevSnapshot = currentActiveSnapshot;
          if (prevSnapshot === null) {
            throw new Error("Tried to pop a Context at the root of the app. This is a bug in React.");
          }
          {
            if (prevSnapshot.context !== context) {
              error2("The parent context is not the expected context. This is probably a bug in React.");
            }
          }
          {
            var value = prevSnapshot.parentValue;
            if (value === REACT_SERVER_CONTEXT_DEFAULT_VALUE_NOT_LOADED) {
              prevSnapshot.context._currentValue = prevSnapshot.context._defaultValue;
            } else {
              prevSnapshot.context._currentValue = value;
            }
            {
              if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                error2("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
              }
              context._currentRenderer = rendererSigil;
            }
          }
          return currentActiveSnapshot = prevSnapshot.parent;
        }
        function getActiveContext() {
          return currentActiveSnapshot;
        }
        function readContext(context) {
          var value = context._currentValue;
          return value;
        }
        function get2(key) {
          return key._reactInternals;
        }
        function set2(key, value) {
          key._reactInternals = value;
        }
        var didWarnAboutNoopUpdateForComponent = {};
        var didWarnAboutDeprecatedWillMount = {};
        var didWarnAboutUninitializedState;
        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
        var didWarnAboutLegacyLifecyclesAndDerivedState;
        var didWarnAboutUndefinedDerivedState;
        var warnOnUndefinedDerivedState;
        var warnOnInvalidCallback;
        var didWarnAboutDirectlyAssigningPropsToState;
        var didWarnAboutContextTypeAndContextTypes;
        var didWarnAboutInvalidateContextType;
        {
          didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
          didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
          didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
          didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
          didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
          var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
          warnOnInvalidCallback = function(callback2, callerName) {
            if (callback2 === null || typeof callback2 === "function") {
              return;
            }
            var key = callerName + "_" + callback2;
            if (!didWarnOnInvalidCallback.has(key)) {
              didWarnOnInvalidCallback.add(key);
              error2("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback2);
            }
          };
          warnOnUndefinedDerivedState = function(type, partialState) {
            if (partialState === void 0) {
              var componentName = getComponentNameFromType(type) || "Component";
              if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                didWarnAboutUndefinedDerivedState.add(componentName);
                error2("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
              }
            }
          };
        }
        function warnNoop(publicInstance, callerName) {
          {
            var _constructor = publicInstance.constructor;
            var componentName = _constructor && getComponentNameFromType(_constructor) || "ReactClass";
            var warningKey = componentName + "." + callerName;
            if (didWarnAboutNoopUpdateForComponent[warningKey]) {
              return;
            }
            error2("%s(...): Can only update a mounting component. This usually means you called %s() outside componentWillMount() on the server. This is a no-op.\n\nPlease check the code for the %s component.", callerName, callerName, componentName);
            didWarnAboutNoopUpdateForComponent[warningKey] = true;
          }
        }
        var classComponentUpdater = {
          isMounted: function(inst) {
            return false;
          },
          enqueueSetState: function(inst, payload, callback2) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, "setState");
            } else {
              internals.queue.push(payload);
              {
                if (callback2 !== void 0 && callback2 !== null) {
                  warnOnInvalidCallback(callback2, "setState");
                }
              }
            }
          },
          enqueueReplaceState: function(inst, payload, callback2) {
            var internals = get2(inst);
            internals.replace = true;
            internals.queue = [payload];
            {
              if (callback2 !== void 0 && callback2 !== null) {
                warnOnInvalidCallback(callback2, "setState");
              }
            }
          },
          enqueueForceUpdate: function(inst, callback2) {
            var internals = get2(inst);
            if (internals.queue === null) {
              warnNoop(inst, "forceUpdate");
            } else {
              {
                if (callback2 !== void 0 && callback2 !== null) {
                  warnOnInvalidCallback(callback2, "setState");
                }
              }
            }
          }
        };
        function applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, prevState, nextProps) {
          var partialState = getDerivedStateFromProps(nextProps, prevState);
          {
            warnOnUndefinedDerivedState(ctor, partialState);
          }
          var newState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
          return newState;
        }
        function constructClassInstance(ctor, props, maskedLegacyContext) {
          var context = emptyContextObject;
          var contextType = ctor.contextType;
          {
            if ("contextType" in ctor) {
              var isValid = (
                // Allow null for conditional declaration
                contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
              );
              if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                didWarnAboutInvalidateContextType.add(ctor);
                var addendum = "";
                if (contextType === void 0) {
                  addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                } else if (typeof contextType !== "object") {
                  addendum = " However, it is set to a " + typeof contextType + ".";
                } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                  addendum = " Did you accidentally pass the Context.Provider instead?";
                } else if (contextType._context !== void 0) {
                  addendum = " Did you accidentally pass the Context.Consumer instead?";
                } else {
                  addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                }
                error2("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
              }
            }
          }
          if (typeof contextType === "object" && contextType !== null) {
            context = readContext(contextType);
          } else {
            context = maskedLegacyContext;
          }
          var instance = new ctor(props, context);
          {
            if (typeof ctor.getDerivedStateFromProps === "function" && (instance.state === null || instance.state === void 0)) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutUninitializedState.has(componentName)) {
                didWarnAboutUninitializedState.add(componentName);
                error2("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance.state === null ? "null" : "undefined", componentName);
              }
            }
            if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance.getSnapshotBeforeUpdate === "function") {
              var foundWillMountName = null;
              var foundWillReceivePropsName = null;
              var foundWillUpdateName = null;
              if (typeof instance.componentWillMount === "function" && instance.componentWillMount.__suppressDeprecationWarning !== true) {
                foundWillMountName = "componentWillMount";
              } else if (typeof instance.UNSAFE_componentWillMount === "function") {
                foundWillMountName = "UNSAFE_componentWillMount";
              }
              if (typeof instance.componentWillReceiveProps === "function" && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                foundWillReceivePropsName = "componentWillReceiveProps";
              } else if (typeof instance.UNSAFE_componentWillReceiveProps === "function") {
                foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
              }
              if (typeof instance.componentWillUpdate === "function" && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
                foundWillUpdateName = "componentWillUpdate";
              } else if (typeof instance.UNSAFE_componentWillUpdate === "function") {
                foundWillUpdateName = "UNSAFE_componentWillUpdate";
              }
              if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                var _componentName = getComponentNameFromType(ctor) || "Component";
                var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                  didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                  error2("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                }
              }
            }
          }
          return instance;
        }
        function checkClassInstance(instance, ctor, newProps) {
          {
            var name = getComponentNameFromType(ctor) || "Component";
            var renderPresent = instance.render;
            if (!renderPresent) {
              if (ctor.prototype && typeof ctor.prototype.render === "function") {
                error2("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
              } else {
                error2("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
              }
            }
            if (instance.getInitialState && !instance.getInitialState.isReactClassApproved && !instance.state) {
              error2("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
            }
            if (instance.getDefaultProps && !instance.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
            }
            if (instance.propTypes) {
              error2("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
            }
            if (instance.contextType) {
              error2("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
            }
            {
              if (instance.contextTypes) {
                error2("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
              }
              if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                didWarnAboutContextTypeAndContextTypes.add(ctor);
                error2("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
              }
            }
            if (typeof instance.componentShouldUpdate === "function") {
              error2("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
            }
            if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== "undefined") {
              error2("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
            }
            if (typeof instance.componentDidUnmount === "function") {
              error2("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
            }
            if (typeof instance.componentDidReceiveProps === "function") {
              error2("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
            }
            if (typeof instance.componentWillRecieveProps === "function") {
              error2("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
            }
            if (typeof instance.UNSAFE_componentWillRecieveProps === "function") {
              error2("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
            }
            var hasMutatedProps = instance.props !== newProps;
            if (instance.props !== void 0 && hasMutatedProps) {
              error2("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
            }
            if (instance.defaultProps) {
              error2("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
            }
            if (typeof instance.getSnapshotBeforeUpdate === "function" && typeof instance.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
              didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
              error2("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
            }
            if (typeof instance.getDerivedStateFromProps === "function") {
              error2("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof instance.getDerivedStateFromError === "function") {
              error2("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
            }
            if (typeof ctor.getSnapshotBeforeUpdate === "function") {
              error2("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
            }
            var _state = instance.state;
            if (_state && (typeof _state !== "object" || isArray(_state))) {
              error2("%s.state: must be set to an object or null", name);
            }
            if (typeof instance.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
              error2("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
            }
          }
        }
        function callComponentWillMount(type, instance) {
          var oldState = instance.state;
          if (typeof instance.componentWillMount === "function") {
            {
              if (instance.componentWillMount.__suppressDeprecationWarning !== true) {
                var componentName = getComponentNameFromType(type) || "Unknown";
                if (!didWarnAboutDeprecatedWillMount[componentName]) {
                  warn2(
                    // keep this warning in sync with ReactStrictModeWarning.js
                    "componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code from componentWillMount to componentDidMount (preferred in most cases) or the constructor.\n\nPlease update the following components: %s",
                    componentName
                  );
                  didWarnAboutDeprecatedWillMount[componentName] = true;
                }
              }
            }
            instance.componentWillMount();
          }
          if (typeof instance.UNSAFE_componentWillMount === "function") {
            instance.UNSAFE_componentWillMount();
          }
          if (oldState !== instance.state) {
            {
              error2("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromType(type) || "Component");
            }
            classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
          }
        }
        function processUpdateQueue(internalInstance, inst, props, maskedLegacyContext) {
          if (internalInstance.queue !== null && internalInstance.queue.length > 0) {
            var oldQueue = internalInstance.queue;
            var oldReplace = internalInstance.replace;
            internalInstance.queue = null;
            internalInstance.replace = false;
            if (oldReplace && oldQueue.length === 1) {
              inst.state = oldQueue[0];
            } else {
              var nextState = oldReplace ? oldQueue[0] : inst.state;
              var dontMutate = true;
              for (var i3 = oldReplace ? 1 : 0; i3 < oldQueue.length; i3++) {
                var partial = oldQueue[i3];
                var partialState = typeof partial === "function" ? partial.call(inst, nextState, props, maskedLegacyContext) : partial;
                if (partialState != null) {
                  if (dontMutate) {
                    dontMutate = false;
                    nextState = assign({}, nextState, partialState);
                  } else {
                    assign(nextState, partialState);
                  }
                }
              }
              inst.state = nextState;
            }
          } else {
            internalInstance.queue = null;
          }
        }
        function mountClassInstance(instance, ctor, newProps, maskedLegacyContext) {
          {
            checkClassInstance(instance, ctor, newProps);
          }
          var initialState = instance.state !== void 0 ? instance.state : null;
          instance.updater = classComponentUpdater;
          instance.props = newProps;
          instance.state = initialState;
          var internalInstance = {
            queue: [],
            replace: false
          };
          set2(instance, internalInstance);
          var contextType = ctor.contextType;
          if (typeof contextType === "object" && contextType !== null) {
            instance.context = readContext(contextType);
          } else {
            instance.context = maskedLegacyContext;
          }
          {
            if (instance.state === newProps) {
              var componentName = getComponentNameFromType(ctor) || "Component";
              if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                error2("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
              }
            }
          }
          var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
          if (typeof getDerivedStateFromProps === "function") {
            instance.state = applyDerivedStateFromProps(instance, ctor, getDerivedStateFromProps, initialState, newProps);
          }
          if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance.getSnapshotBeforeUpdate !== "function" && (typeof instance.UNSAFE_componentWillMount === "function" || typeof instance.componentWillMount === "function")) {
            callComponentWillMount(ctor, instance);
            processUpdateQueue(internalInstance, instance, newProps, maskedLegacyContext);
          }
        }
        var emptyTreeContext = {
          id: 1,
          overflow: ""
        };
        function getTreeId(context) {
          var overflow = context.overflow;
          var idWithLeadingBit = context.id;
          var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
          return id.toString(32) + overflow;
        }
        function pushTreeContext(baseContext, totalChildren, index) {
          var baseIdWithLeadingBit = baseContext.id;
          var baseOverflow = baseContext.overflow;
          var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
          var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
          var slot = index + 1;
          var length = getBitLength(totalChildren) + baseLength;
          if (length > 30) {
            var numberOfOverflowBits = baseLength - baseLength % 5;
            var newOverflowBits = (1 << numberOfOverflowBits) - 1;
            var newOverflow = (baseId & newOverflowBits).toString(32);
            var restOfBaseId = baseId >> numberOfOverflowBits;
            var restOfBaseLength = baseLength - numberOfOverflowBits;
            var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
            var restOfNewBits = slot << restOfBaseLength;
            var id = restOfNewBits | restOfBaseId;
            var overflow = newOverflow + baseOverflow;
            return {
              id: 1 << restOfLength | id,
              overflow
            };
          } else {
            var newBits = slot << baseLength;
            var _id = newBits | baseId;
            var _overflow = baseOverflow;
            return {
              id: 1 << length | _id,
              overflow: _overflow
            };
          }
        }
        function getBitLength(number) {
          return 32 - clz32(number);
        }
        function getLeadingBit(id) {
          return 1 << getBitLength(id) - 1;
        }
        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
        var log4 = Math.log;
        var LN2 = Math.LN2;
        function clz32Fallback(x4) {
          var asUint = x4 >>> 0;
          if (asUint === 0) {
            return 32;
          }
          return 31 - (log4(asUint) / LN2 | 0) | 0;
        }
        function is2(x4, y3) {
          return x4 === y3 && (x4 !== 0 || 1 / x4 === 1 / y3) || x4 !== x4 && y3 !== y3;
        }
        var objectIs = typeof Object.is === "function" ? Object.is : is2;
        var currentlyRenderingComponent = null;
        var currentlyRenderingTask = null;
        var firstWorkInProgressHook = null;
        var workInProgressHook = null;
        var isReRender = false;
        var didScheduleRenderPhaseUpdate = false;
        var localIdCounter = 0;
        var renderPhaseUpdates = null;
        var numberOfReRenders = 0;
        var RE_RENDER_LIMIT = 25;
        var isInHookUserCodeInDev = false;
        var currentHookNameInDev;
        function resolveCurrentlyRenderingComponent() {
          if (currentlyRenderingComponent === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
          }
          {
            if (isInHookUserCodeInDev) {
              error2("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
            }
          }
          return currentlyRenderingComponent;
        }
        function areHookInputsEqual(nextDeps, prevDeps) {
          if (prevDeps === null) {
            {
              error2("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
            }
            return false;
          }
          {
            if (nextDeps.length !== prevDeps.length) {
              error2("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + nextDeps.join(", ") + "]", "[" + prevDeps.join(", ") + "]");
            }
          }
          for (var i3 = 0; i3 < prevDeps.length && i3 < nextDeps.length; i3++) {
            if (objectIs(nextDeps[i3], prevDeps[i3])) {
              continue;
            }
            return false;
          }
          return true;
        }
        function createHook() {
          if (numberOfReRenders > 0) {
            throw new Error("Rendered more hooks than during the previous render");
          }
          return {
            memoizedState: null,
            queue: null,
            next: null
          };
        }
        function createWorkInProgressHook() {
          if (workInProgressHook === null) {
            if (firstWorkInProgressHook === null) {
              isReRender = false;
              firstWorkInProgressHook = workInProgressHook = createHook();
            } else {
              isReRender = true;
              workInProgressHook = firstWorkInProgressHook;
            }
          } else {
            if (workInProgressHook.next === null) {
              isReRender = false;
              workInProgressHook = workInProgressHook.next = createHook();
            } else {
              isReRender = true;
              workInProgressHook = workInProgressHook.next;
            }
          }
          return workInProgressHook;
        }
        function prepareToUseHooks(task, componentIdentity) {
          currentlyRenderingComponent = componentIdentity;
          currentlyRenderingTask = task;
          {
            isInHookUserCodeInDev = false;
          }
          localIdCounter = 0;
        }
        function finishHooks(Component, props, children, refOrContext) {
          while (didScheduleRenderPhaseUpdate) {
            didScheduleRenderPhaseUpdate = false;
            localIdCounter = 0;
            numberOfReRenders += 1;
            workInProgressHook = null;
            children = Component(props, refOrContext);
          }
          resetHooksState();
          return children;
        }
        function checkDidRenderIdHook() {
          var didRenderIdHook = localIdCounter !== 0;
          return didRenderIdHook;
        }
        function resetHooksState() {
          {
            isInHookUserCodeInDev = false;
          }
          currentlyRenderingComponent = null;
          currentlyRenderingTask = null;
          didScheduleRenderPhaseUpdate = false;
          firstWorkInProgressHook = null;
          numberOfReRenders = 0;
          renderPhaseUpdates = null;
          workInProgressHook = null;
        }
        function readContext$1(context) {
          {
            if (isInHookUserCodeInDev) {
              error2("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          }
          return readContext(context);
        }
        function useContext(context) {
          {
            currentHookNameInDev = "useContext";
          }
          resolveCurrentlyRenderingComponent();
          return readContext(context);
        }
        function basicStateReducer(state2, action) {
          return typeof action === "function" ? action(state2) : action;
        }
        function useState2(initialState) {
          {
            currentHookNameInDev = "useState";
          }
          return useReducer(
            basicStateReducer,
            // useReducer has a special case to support lazy useState initializers
            initialState
          );
        }
        function useReducer(reducer, initialArg, init3) {
          {
            if (reducer !== basicStateReducer) {
              currentHookNameInDev = "useReducer";
            }
          }
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          if (isReRender) {
            var queue = workInProgressHook.queue;
            var dispatch = queue.dispatch;
            if (renderPhaseUpdates !== null) {
              var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
              if (firstRenderPhaseUpdate !== void 0) {
                renderPhaseUpdates.delete(queue);
                var newState = workInProgressHook.memoizedState;
                var update = firstRenderPhaseUpdate;
                do {
                  var action = update.action;
                  {
                    isInHookUserCodeInDev = true;
                  }
                  newState = reducer(newState, action);
                  {
                    isInHookUserCodeInDev = false;
                  }
                  update = update.next;
                } while (update !== null);
                workInProgressHook.memoizedState = newState;
                return [newState, dispatch];
              }
            }
            return [workInProgressHook.memoizedState, dispatch];
          } else {
            {
              isInHookUserCodeInDev = true;
            }
            var initialState;
            if (reducer === basicStateReducer) {
              initialState = typeof initialArg === "function" ? initialArg() : initialArg;
            } else {
              initialState = init3 !== void 0 ? init3(initialArg) : initialArg;
            }
            {
              isInHookUserCodeInDev = false;
            }
            workInProgressHook.memoizedState = initialState;
            var _queue = workInProgressHook.queue = {
              last: null,
              dispatch: null
            };
            var _dispatch = _queue.dispatch = dispatchAction.bind(null, currentlyRenderingComponent, _queue);
            return [workInProgressHook.memoizedState, _dispatch];
          }
        }
        function useMemo(nextCreate, deps) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var nextDeps = deps === void 0 ? null : deps;
          if (workInProgressHook !== null) {
            var prevState = workInProgressHook.memoizedState;
            if (prevState !== null) {
              if (nextDeps !== null) {
                var prevDeps = prevState[1];
                if (areHookInputsEqual(nextDeps, prevDeps)) {
                  return prevState[0];
                }
              }
            }
          }
          {
            isInHookUserCodeInDev = true;
          }
          var nextValue = nextCreate();
          {
            isInHookUserCodeInDev = false;
          }
          workInProgressHook.memoizedState = [nextValue, nextDeps];
          return nextValue;
        }
        function useRef(initialValue) {
          currentlyRenderingComponent = resolveCurrentlyRenderingComponent();
          workInProgressHook = createWorkInProgressHook();
          var previousRef = workInProgressHook.memoizedState;
          if (previousRef === null) {
            var ref = {
              current: initialValue
            };
            {
              Object.seal(ref);
            }
            workInProgressHook.memoizedState = ref;
            return ref;
          } else {
            return previousRef;
          }
        }
        function useLayoutEffect(create, inputs) {
          {
            currentHookNameInDev = "useLayoutEffect";
            error2("useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format. This will lead to a mismatch between the initial, non-hydrated UI and the intended UI. To avoid this, useLayoutEffect should only be used in components that render exclusively on the client. See https://reactjs.org/link/uselayouteffect-ssr for common fixes.");
          }
        }
        function dispatchAction(componentIdentity, queue, action) {
          if (numberOfReRenders >= RE_RENDER_LIMIT) {
            throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
          }
          if (componentIdentity === currentlyRenderingComponent) {
            didScheduleRenderPhaseUpdate = true;
            var update = {
              action,
              next: null
            };
            if (renderPhaseUpdates === null) {
              renderPhaseUpdates = /* @__PURE__ */ new Map();
            }
            var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
            if (firstRenderPhaseUpdate === void 0) {
              renderPhaseUpdates.set(queue, update);
            } else {
              var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
              while (lastRenderPhaseUpdate.next !== null) {
                lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
              }
              lastRenderPhaseUpdate.next = update;
            }
          }
        }
        function useCallback(callback2, deps) {
          return useMemo(function() {
            return callback2;
          }, deps);
        }
        function useMutableSource(source, getSnapshot, subscribe) {
          resolveCurrentlyRenderingComponent();
          return getSnapshot(source._source);
        }
        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
          if (getServerSnapshot === void 0) {
            throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
          }
          return getServerSnapshot();
        }
        function useDeferredValue(value) {
          resolveCurrentlyRenderingComponent();
          return value;
        }
        function unsupportedStartTransition() {
          throw new Error("startTransition cannot be called during server rendering.");
        }
        function useTransition() {
          resolveCurrentlyRenderingComponent();
          return [false, unsupportedStartTransition];
        }
        function useId() {
          var task = currentlyRenderingTask;
          var treeId = getTreeId(task.treeContext);
          var responseState = currentResponseState;
          if (responseState === null) {
            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component.");
          }
          var localId = localIdCounter++;
          return makeId(responseState, treeId, localId);
        }
        function noop6() {
        }
        var Dispatcher = {
          readContext: readContext$1,
          useContext,
          useMemo,
          useReducer,
          useRef,
          useState: useState2,
          useInsertionEffect: noop6,
          useLayoutEffect,
          useCallback,
          // useImperativeHandle is not run in the server environment
          useImperativeHandle: noop6,
          // Effects are not run in the server environment.
          useEffect: noop6,
          // Debugging effect
          useDebugValue: noop6,
          useDeferredValue,
          useTransition,
          useId,
          // Subscriptions are not setup in a server environment.
          useMutableSource,
          useSyncExternalStore
        };
        var currentResponseState = null;
        function setCurrentResponseState(responseState) {
          currentResponseState = responseState;
        }
        function getStackByComponentStackNode(componentStack) {
          try {
            var info2 = "";
            var node = componentStack;
            do {
              switch (node.tag) {
                case 0:
                  info2 += describeBuiltInComponentFrame(node.type, null, null);
                  break;
                case 1:
                  info2 += describeFunctionComponentFrame(node.type, null, null);
                  break;
                case 2:
                  info2 += describeClassComponentFrame(node.type, null, null);
                  break;
              }
              node = node.parent;
            } while (node);
            return info2;
          } catch (x4) {
            return "\nError generating stack: " + x4.message + "\n" + x4.stack;
          }
        }
        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        var PENDING = 0;
        var COMPLETED = 1;
        var FLUSHED = 2;
        var ABORTED = 3;
        var ERRORED = 4;
        var OPEN = 0;
        var CLOSING = 1;
        var CLOSED = 2;
        var DEFAULT_PROGRESSIVE_CHUNK_SIZE = 12800;
        function defaultErrorHandler(error3) {
          console["error"](error3);
          return null;
        }
        function noop$12() {
        }
        function createRequest(children, responseState, rootFormatContext, progressiveChunkSize, onError, onAllReady, onShellReady, onShellError, onFatalError) {
          var pingedTasks = [];
          var abortSet = /* @__PURE__ */ new Set();
          var request = {
            destination: null,
            responseState,
            progressiveChunkSize: progressiveChunkSize === void 0 ? DEFAULT_PROGRESSIVE_CHUNK_SIZE : progressiveChunkSize,
            status: OPEN,
            fatalError: null,
            nextSegmentId: 0,
            allPendingTasks: 0,
            pendingRootTasks: 0,
            completedRootSegment: null,
            abortableTasks: abortSet,
            pingedTasks,
            clientRenderedBoundaries: [],
            completedBoundaries: [],
            partialBoundaries: [],
            onError: onError === void 0 ? defaultErrorHandler : onError,
            onAllReady: onAllReady === void 0 ? noop$12 : onAllReady,
            onShellReady: onShellReady === void 0 ? noop$12 : onShellReady,
            onShellError: onShellError === void 0 ? noop$12 : onShellError,
            onFatalError: onFatalError === void 0 ? noop$12 : onFatalError
          };
          var rootSegment = createPendingSegment(
            request,
            0,
            null,
            rootFormatContext,
            // Root segments are never embedded in Text on either edge
            false,
            false
          );
          rootSegment.parentFlushed = true;
          var rootTask = createTask(request, children, null, rootSegment, abortSet, emptyContextObject, rootContextSnapshot, emptyTreeContext);
          pingedTasks.push(rootTask);
          return request;
        }
        function pingTask(request, task) {
          var pingedTasks = request.pingedTasks;
          pingedTasks.push(task);
          if (pingedTasks.length === 1) {
            scheduleWork(function() {
              return performWork(request);
            });
          }
        }
        function createSuspenseBoundary(request, fallbackAbortableTasks) {
          return {
            id: UNINITIALIZED_SUSPENSE_BOUNDARY_ID,
            rootSegmentID: -1,
            parentFlushed: false,
            pendingTasks: 0,
            forceClientRender: false,
            completedSegments: [],
            byteSize: 0,
            fallbackAbortableTasks,
            errorDigest: null
          };
        }
        function createTask(request, node, blockedBoundary, blockedSegment, abortSet, legacyContext, context, treeContext) {
          request.allPendingTasks++;
          if (blockedBoundary === null) {
            request.pendingRootTasks++;
          } else {
            blockedBoundary.pendingTasks++;
          }
          var task = {
            node,
            ping: function() {
              return pingTask(request, task);
            },
            blockedBoundary,
            blockedSegment,
            abortSet,
            legacyContext,
            context,
            treeContext
          };
          {
            task.componentStack = null;
          }
          abortSet.add(task);
          return task;
        }
        function createPendingSegment(request, index, boundary, formatContext, lastPushedText, textEmbedded) {
          return {
            status: PENDING,
            id: -1,
            // lazily assigned later
            index,
            parentFlushed: false,
            chunks: [],
            children: [],
            formatContext,
            boundary,
            lastPushedText,
            textEmbedded
          };
        }
        var currentTaskInDEV = null;
        function getCurrentStackInDEV() {
          {
            if (currentTaskInDEV === null || currentTaskInDEV.componentStack === null) {
              return "";
            }
            return getStackByComponentStackNode(currentTaskInDEV.componentStack);
          }
        }
        function pushBuiltInComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 0,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushFunctionComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 1,
              parent: task.componentStack,
              type
            };
          }
        }
        function pushClassComponentStackInDEV(task, type) {
          {
            task.componentStack = {
              tag: 2,
              parent: task.componentStack,
              type
            };
          }
        }
        function popComponentStackInDEV(task) {
          {
            if (task.componentStack === null) {
              error2("Unexpectedly popped too many stack frames. This is a bug in React.");
            } else {
              task.componentStack = task.componentStack.parent;
            }
          }
        }
        var lastBoundaryErrorComponentStackDev = null;
        function captureBoundaryErrorDetailsDev(boundary, error3) {
          {
            var errorMessage;
            if (typeof error3 === "string") {
              errorMessage = error3;
            } else if (error3 && typeof error3.message === "string") {
              errorMessage = error3.message;
            } else {
              errorMessage = String(error3);
            }
            var errorComponentStack = lastBoundaryErrorComponentStackDev || getCurrentStackInDEV();
            lastBoundaryErrorComponentStackDev = null;
            boundary.errorMessage = errorMessage;
            boundary.errorComponentStack = errorComponentStack;
          }
        }
        function logRecoverableError(request, error3) {
          var errorDigest = request.onError(error3);
          if (errorDigest != null && typeof errorDigest !== "string") {
            throw new Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof errorDigest + '" instead');
          }
          return errorDigest;
        }
        function fatalError(request, error3) {
          var onShellError = request.onShellError;
          onShellError(error3);
          var onFatalError = request.onFatalError;
          onFatalError(error3);
          if (request.destination !== null) {
            request.status = CLOSED;
            closeWithError(request.destination, error3);
          } else {
            request.status = CLOSING;
            request.fatalError = error3;
          }
        }
        function renderSuspenseBoundary(request, task, props) {
          pushBuiltInComponentStackInDEV(task, "Suspense");
          var parentBoundary = task.blockedBoundary;
          var parentSegment = task.blockedSegment;
          var fallback = props.fallback;
          var content = props.children;
          var fallbackAbortSet = /* @__PURE__ */ new Set();
          var newBoundary = createSuspenseBoundary(request, fallbackAbortSet);
          var insertionIndex = parentSegment.chunks.length;
          var boundarySegment = createPendingSegment(
            request,
            insertionIndex,
            newBoundary,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          parentSegment.children.push(boundarySegment);
          parentSegment.lastPushedText = false;
          var contentRootSegment = createPendingSegment(
            request,
            0,
            null,
            parentSegment.formatContext,
            // boundaries never require text embedding at their edges because comment nodes bound them
            false,
            false
          );
          contentRootSegment.parentFlushed = true;
          task.blockedBoundary = newBoundary;
          task.blockedSegment = contentRootSegment;
          try {
            renderNode(request, task, content);
            pushSegmentFinale(contentRootSegment.chunks, request.responseState, contentRootSegment.lastPushedText, contentRootSegment.textEmbedded);
            contentRootSegment.status = COMPLETED;
            queueCompletedSegment(newBoundary, contentRootSegment);
            if (newBoundary.pendingTasks === 0) {
              popComponentStackInDEV(task);
              return;
            }
          } catch (error3) {
            contentRootSegment.status = ERRORED;
            newBoundary.forceClientRender = true;
            newBoundary.errorDigest = logRecoverableError(request, error3);
            {
              captureBoundaryErrorDetailsDev(newBoundary, error3);
            }
          } finally {
            task.blockedBoundary = parentBoundary;
            task.blockedSegment = parentSegment;
          }
          var suspendedFallbackTask = createTask(request, fallback, parentBoundary, boundarySegment, fallbackAbortSet, task.legacyContext, task.context, task.treeContext);
          {
            suspendedFallbackTask.componentStack = task.componentStack;
          }
          request.pingedTasks.push(suspendedFallbackTask);
          popComponentStackInDEV(task);
        }
        function renderHostElement(request, task, type, props) {
          pushBuiltInComponentStackInDEV(task, type);
          var segment = task.blockedSegment;
          var children = pushStartInstance(segment.chunks, type, props, request.responseState, segment.formatContext);
          segment.lastPushedText = false;
          var prevContext = segment.formatContext;
          segment.formatContext = getChildFormatContext(prevContext, type, props);
          renderNode(request, task, children);
          segment.formatContext = prevContext;
          pushEndInstance(segment.chunks, type);
          segment.lastPushedText = false;
          popComponentStackInDEV(task);
        }
        function shouldConstruct$1(Component) {
          return Component.prototype && Component.prototype.isReactComponent;
        }
        function renderWithHooks(request, task, Component, props, secondArg) {
          var componentIdentity = {};
          prepareToUseHooks(task, componentIdentity);
          var result = Component(props, secondArg);
          return finishHooks(Component, props, result, secondArg);
        }
        function finishClassComponent(request, task, instance, Component, props) {
          var nextChildren = instance.render();
          {
            if (instance.props !== props) {
              if (!didWarnAboutReassigningProps) {
                error2("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromType(Component) || "a component");
              }
              didWarnAboutReassigningProps = true;
            }
          }
          {
            var childContextTypes = Component.childContextTypes;
            if (childContextTypes !== null && childContextTypes !== void 0) {
              var previousContext = task.legacyContext;
              var mergedContext = processChildContext(instance, Component, previousContext, childContextTypes);
              task.legacyContext = mergedContext;
              renderNodeDestructive(request, task, nextChildren);
              task.legacyContext = previousContext;
              return;
            }
          }
          renderNodeDestructive(request, task, nextChildren);
        }
        function renderClassComponent(request, task, Component, props) {
          pushClassComponentStackInDEV(task, Component);
          var maskedContext = getMaskedContext(Component, task.legacyContext);
          var instance = constructClassInstance(Component, props, maskedContext);
          mountClassInstance(instance, Component, props, maskedContext);
          finishClassComponent(request, task, instance, Component, props);
          popComponentStackInDEV(task);
        }
        var didWarnAboutBadClass = {};
        var didWarnAboutModulePatternComponent = {};
        var didWarnAboutContextTypeOnFunctionComponent = {};
        var didWarnAboutGetDerivedStateOnFunctionComponent = {};
        var didWarnAboutReassigningProps = false;
        var didWarnAboutGenerators = false;
        var didWarnAboutMaps = false;
        var hasWarnedAboutUsingContextAsConsumer = false;
        function renderIndeterminateComponent(request, task, Component, props) {
          var legacyContext;
          {
            legacyContext = getMaskedContext(Component, task.legacyContext);
          }
          pushFunctionComponentStackInDEV(task, Component);
          {
            if (Component.prototype && typeof Component.prototype.render === "function") {
              var componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutBadClass[componentName]) {
                error2("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                didWarnAboutBadClass[componentName] = true;
              }
            }
          }
          var value = renderWithHooks(request, task, Component, props, legacyContext);
          var hasId = checkDidRenderIdHook();
          {
            if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
              var _componentName = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                didWarnAboutModulePatternComponent[_componentName] = true;
              }
            }
          }
          if (
            // Run these checks in production only if the flag is off.
            // Eventually we'll delete this branch altogether.
            typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
          ) {
            {
              var _componentName2 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutModulePatternComponent[_componentName2]) {
                error2("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                didWarnAboutModulePatternComponent[_componentName2] = true;
              }
            }
            mountClassInstance(value, Component, props, legacyContext);
            finishClassComponent(request, task, value, Component, props);
          } else {
            {
              validateFunctionComponentInDev(Component);
            }
            if (hasId) {
              var prevTreeContext = task.treeContext;
              var totalChildren = 1;
              var index = 0;
              task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
              try {
                renderNodeDestructive(request, task, value);
              } finally {
                task.treeContext = prevTreeContext;
              }
            } else {
              renderNodeDestructive(request, task, value);
            }
          }
          popComponentStackInDEV(task);
        }
        function validateFunctionComponentInDev(Component) {
          {
            if (Component) {
              if (Component.childContextTypes) {
                error2("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
              }
            }
            if (typeof Component.getDerivedStateFromProps === "function") {
              var _componentName3 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                error2("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
              }
            }
            if (typeof Component.contextType === "object" && Component.contextType !== null) {
              var _componentName4 = getComponentNameFromType(Component) || "Unknown";
              if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                error2("%s: Function components do not support contextType.", _componentName4);
                didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
              }
            }
          }
        }
        function resolveDefaultProps(Component, baseProps) {
          if (Component && Component.defaultProps) {
            var props = assign({}, baseProps);
            var defaultProps = Component.defaultProps;
            for (var propName in defaultProps) {
              if (props[propName] === void 0) {
                props[propName] = defaultProps[propName];
              }
            }
            return props;
          }
          return baseProps;
        }
        function renderForwardRef(request, task, type, props, ref) {
          pushFunctionComponentStackInDEV(task, type.render);
          var children = renderWithHooks(request, task, type.render, props, ref);
          var hasId = checkDidRenderIdHook();
          if (hasId) {
            var prevTreeContext = task.treeContext;
            var totalChildren = 1;
            var index = 0;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, index);
            try {
              renderNodeDestructive(request, task, children);
            } finally {
              task.treeContext = prevTreeContext;
            }
          } else {
            renderNodeDestructive(request, task, children);
          }
          popComponentStackInDEV(task);
        }
        function renderMemo(request, task, type, props, ref) {
          var innerType = type.type;
          var resolvedProps = resolveDefaultProps(innerType, props);
          renderElement2(request, task, innerType, resolvedProps, ref);
        }
        function renderContextConsumer(request, task, context, props) {
          {
            if (context._context === void 0) {
              if (context !== context.Consumer) {
                if (!hasWarnedAboutUsingContextAsConsumer) {
                  hasWarnedAboutUsingContextAsConsumer = true;
                  error2("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                }
              }
            } else {
              context = context._context;
            }
          }
          var render3 = props.children;
          {
            if (typeof render3 !== "function") {
              error2("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
            }
          }
          var newValue = readContext(context);
          var newChildren = render3(newValue);
          renderNodeDestructive(request, task, newChildren);
        }
        function renderContextProvider(request, task, type, props) {
          var context = type._context;
          var value = props.value;
          var children = props.children;
          var prevSnapshot;
          {
            prevSnapshot = task.context;
          }
          task.context = pushProvider(context, value);
          renderNodeDestructive(request, task, children);
          task.context = popProvider(context);
          {
            if (prevSnapshot !== task.context) {
              error2("Popping the context provider did not return back to the original snapshot. This is a bug in React.");
            }
          }
        }
        function renderLazyComponent(request, task, lazyComponent, props, ref) {
          pushBuiltInComponentStackInDEV(task, "Lazy");
          var payload = lazyComponent._payload;
          var init3 = lazyComponent._init;
          var Component = init3(payload);
          var resolvedProps = resolveDefaultProps(Component, props);
          renderElement2(request, task, Component, resolvedProps, ref);
          popComponentStackInDEV(task);
        }
        function renderElement2(request, task, type, props, ref) {
          if (typeof type === "function") {
            if (shouldConstruct$1(type)) {
              renderClassComponent(request, task, type, props);
              return;
            } else {
              renderIndeterminateComponent(request, task, type, props);
              return;
            }
          }
          if (typeof type === "string") {
            renderHostElement(request, task, type, props);
            return;
          }
          switch (type) {
            case REACT_LEGACY_HIDDEN_TYPE:
            case REACT_DEBUG_TRACING_MODE_TYPE:
            case REACT_STRICT_MODE_TYPE:
            case REACT_PROFILER_TYPE:
            case REACT_FRAGMENT_TYPE: {
              renderNodeDestructive(request, task, props.children);
              return;
            }
            case REACT_SUSPENSE_LIST_TYPE: {
              pushBuiltInComponentStackInDEV(task, "SuspenseList");
              renderNodeDestructive(request, task, props.children);
              popComponentStackInDEV(task);
              return;
            }
            case REACT_SCOPE_TYPE: {
              throw new Error("ReactDOMServer does not yet support scope components.");
            }
            case REACT_SUSPENSE_TYPE: {
              {
                renderSuspenseBoundary(request, task, props);
              }
              return;
            }
          }
          if (typeof type === "object" && type !== null) {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE: {
                renderForwardRef(request, task, type, props, ref);
                return;
              }
              case REACT_MEMO_TYPE: {
                renderMemo(request, task, type, props, ref);
                return;
              }
              case REACT_PROVIDER_TYPE: {
                renderContextProvider(request, task, type, props);
                return;
              }
              case REACT_CONTEXT_TYPE: {
                renderContextConsumer(request, task, type, props);
                return;
              }
              case REACT_LAZY_TYPE: {
                renderLazyComponent(request, task, type, props);
                return;
              }
            }
          }
          var info2 = "";
          {
            if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
              info2 += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
            }
          }
          throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info2));
        }
        function validateIterable(iterable, iteratorFn) {
          {
            if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
            iterable[Symbol.toStringTag] === "Generator") {
              if (!didWarnAboutGenerators) {
                error2("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
              }
              didWarnAboutGenerators = true;
            }
            if (iterable.entries === iteratorFn) {
              if (!didWarnAboutMaps) {
                error2("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
              }
              didWarnAboutMaps = true;
            }
          }
        }
        function renderNodeDestructive(request, task, node) {
          {
            try {
              return renderNodeDestructiveImpl(request, task, node);
            } catch (x4) {
              if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function")
                ;
              else {
                lastBoundaryErrorComponentStackDev = lastBoundaryErrorComponentStackDev !== null ? lastBoundaryErrorComponentStackDev : getCurrentStackInDEV();
              }
              throw x4;
            }
          }
        }
        function renderNodeDestructiveImpl(request, task, node) {
          task.node = node;
          if (typeof node === "object" && node !== null) {
            switch (node.$$typeof) {
              case REACT_ELEMENT_TYPE: {
                var element = node;
                var type = element.type;
                var props = element.props;
                var ref = element.ref;
                renderElement2(request, task, type, props, ref);
                return;
              }
              case REACT_PORTAL_TYPE:
                throw new Error("Portals are not currently supported by the server renderer. Render them conditionally so that they only appear on the client render.");
              case REACT_LAZY_TYPE: {
                var lazyNode = node;
                var payload = lazyNode._payload;
                var init3 = lazyNode._init;
                var resolvedNode;
                {
                  try {
                    resolvedNode = init3(payload);
                  } catch (x4) {
                    if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
                      pushBuiltInComponentStackInDEV(task, "Lazy");
                    }
                    throw x4;
                  }
                }
                renderNodeDestructive(request, task, resolvedNode);
                return;
              }
            }
            if (isArray(node)) {
              renderChildrenArray(request, task, node);
              return;
            }
            var iteratorFn = getIteratorFn(node);
            if (iteratorFn) {
              {
                validateIterable(node, iteratorFn);
              }
              var iterator = iteratorFn.call(node);
              if (iterator) {
                var step = iterator.next();
                if (!step.done) {
                  var children = [];
                  do {
                    children.push(step.value);
                    step = iterator.next();
                  } while (!step.done);
                  renderChildrenArray(request, task, children);
                  return;
                }
                return;
              }
            }
            var childString = Object.prototype.toString.call(node);
            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(node).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
          }
          if (typeof node === "string") {
            var segment = task.blockedSegment;
            segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, node, request.responseState, segment.lastPushedText);
            return;
          }
          if (typeof node === "number") {
            var _segment = task.blockedSegment;
            _segment.lastPushedText = pushTextInstance(task.blockedSegment.chunks, "" + node, request.responseState, _segment.lastPushedText);
            return;
          }
          {
            if (typeof node === "function") {
              error2("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
            }
          }
        }
        function renderChildrenArray(request, task, children) {
          var totalChildren = children.length;
          for (var i3 = 0; i3 < totalChildren; i3++) {
            var prevTreeContext = task.treeContext;
            task.treeContext = pushTreeContext(prevTreeContext, totalChildren, i3);
            try {
              renderNode(request, task, children[i3]);
            } finally {
              task.treeContext = prevTreeContext;
            }
          }
        }
        function spawnNewSuspendedTask(request, task, x4) {
          var segment = task.blockedSegment;
          var insertionIndex = segment.chunks.length;
          var newSegment = createPendingSegment(
            request,
            insertionIndex,
            null,
            segment.formatContext,
            // Adopt the parent segment's leading text embed
            segment.lastPushedText,
            // Assume we are text embedded at the trailing edge
            true
          );
          segment.children.push(newSegment);
          segment.lastPushedText = false;
          var newTask = createTask(request, task.node, task.blockedBoundary, newSegment, task.abortSet, task.legacyContext, task.context, task.treeContext);
          {
            if (task.componentStack !== null) {
              newTask.componentStack = task.componentStack.parent;
            }
          }
          var ping = newTask.ping;
          x4.then(ping, ping);
        }
        function renderNode(request, task, node) {
          var previousFormatContext = task.blockedSegment.formatContext;
          var previousLegacyContext = task.legacyContext;
          var previousContext = task.context;
          var previousComponentStack = null;
          {
            previousComponentStack = task.componentStack;
          }
          try {
            return renderNodeDestructive(request, task, node);
          } catch (x4) {
            resetHooksState();
            if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
              spawnNewSuspendedTask(request, task, x4);
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              return;
            } else {
              task.blockedSegment.formatContext = previousFormatContext;
              task.legacyContext = previousLegacyContext;
              task.context = previousContext;
              switchContext(previousContext);
              {
                task.componentStack = previousComponentStack;
              }
              throw x4;
            }
          }
        }
        function erroredTask(request, boundary, segment, error3) {
          var errorDigest = logRecoverableError(request, error3);
          if (boundary === null) {
            fatalError(request, error3);
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              boundary.errorDigest = errorDigest;
              {
                captureBoundaryErrorDetailsDev(boundary, error3);
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function abortTaskSoft(task) {
          var request = this;
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          finishedTask(request, boundary, segment);
        }
        function abortTask(task, request, reason) {
          var boundary = task.blockedBoundary;
          var segment = task.blockedSegment;
          segment.status = ABORTED;
          if (boundary === null) {
            request.allPendingTasks--;
            if (request.status !== CLOSED) {
              request.status = CLOSED;
              if (request.destination !== null) {
                close(request.destination);
              }
            }
          } else {
            boundary.pendingTasks--;
            if (!boundary.forceClientRender) {
              boundary.forceClientRender = true;
              var _error = reason === void 0 ? new Error("The render was aborted by the server without a reason.") : reason;
              boundary.errorDigest = request.onError(_error);
              {
                var errorPrefix = "The server did not finish this Suspense boundary: ";
                if (_error && typeof _error.message === "string") {
                  _error = errorPrefix + _error.message;
                } else {
                  _error = errorPrefix + String(_error);
                }
                var previousTaskInDev = currentTaskInDEV;
                currentTaskInDEV = task;
                try {
                  captureBoundaryErrorDetailsDev(boundary, _error);
                } finally {
                  currentTaskInDEV = previousTaskInDev;
                }
              }
              if (boundary.parentFlushed) {
                request.clientRenderedBoundaries.push(boundary);
              }
            }
            boundary.fallbackAbortableTasks.forEach(function(fallbackTask) {
              return abortTask(fallbackTask, request, reason);
            });
            boundary.fallbackAbortableTasks.clear();
            request.allPendingTasks--;
            if (request.allPendingTasks === 0) {
              var onAllReady = request.onAllReady;
              onAllReady();
            }
          }
        }
        function queueCompletedSegment(boundary, segment) {
          if (segment.chunks.length === 0 && segment.children.length === 1 && segment.children[0].boundary === null) {
            var childSegment = segment.children[0];
            childSegment.id = segment.id;
            childSegment.parentFlushed = true;
            if (childSegment.status === COMPLETED) {
              queueCompletedSegment(boundary, childSegment);
            }
          } else {
            var completedSegments = boundary.completedSegments;
            completedSegments.push(segment);
          }
        }
        function finishedTask(request, boundary, segment) {
          if (boundary === null) {
            if (segment.parentFlushed) {
              if (request.completedRootSegment !== null) {
                throw new Error("There can only be one root segment. This is a bug in React.");
              }
              request.completedRootSegment = segment;
            }
            request.pendingRootTasks--;
            if (request.pendingRootTasks === 0) {
              request.onShellError = noop$12;
              var onShellReady = request.onShellReady;
              onShellReady();
            }
          } else {
            boundary.pendingTasks--;
            if (boundary.forceClientRender)
              ;
            else if (boundary.pendingTasks === 0) {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                }
              }
              if (boundary.parentFlushed) {
                request.completedBoundaries.push(boundary);
              }
              boundary.fallbackAbortableTasks.forEach(abortTaskSoft, request);
              boundary.fallbackAbortableTasks.clear();
            } else {
              if (segment.parentFlushed) {
                if (segment.status === COMPLETED) {
                  queueCompletedSegment(boundary, segment);
                  var completedSegments = boundary.completedSegments;
                  if (completedSegments.length === 1) {
                    if (boundary.parentFlushed) {
                      request.partialBoundaries.push(boundary);
                    }
                  }
                }
              }
            }
          }
          request.allPendingTasks--;
          if (request.allPendingTasks === 0) {
            var onAllReady = request.onAllReady;
            onAllReady();
          }
        }
        function retryTask(request, task) {
          var segment = task.blockedSegment;
          if (segment.status !== PENDING) {
            return;
          }
          switchContext(task.context);
          var prevTaskInDEV = null;
          {
            prevTaskInDEV = currentTaskInDEV;
            currentTaskInDEV = task;
          }
          try {
            renderNodeDestructive(request, task, task.node);
            pushSegmentFinale(segment.chunks, request.responseState, segment.lastPushedText, segment.textEmbedded);
            task.abortSet.delete(task);
            segment.status = COMPLETED;
            finishedTask(request, task.blockedBoundary, segment);
          } catch (x4) {
            resetHooksState();
            if (typeof x4 === "object" && x4 !== null && typeof x4.then === "function") {
              var ping = task.ping;
              x4.then(ping, ping);
            } else {
              task.abortSet.delete(task);
              segment.status = ERRORED;
              erroredTask(request, task.blockedBoundary, segment, x4);
            }
          } finally {
            {
              currentTaskInDEV = prevTaskInDEV;
            }
          }
        }
        function performWork(request) {
          if (request.status === CLOSED) {
            return;
          }
          var prevContext = getActiveContext();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = Dispatcher;
          var prevGetCurrentStackImpl;
          {
            prevGetCurrentStackImpl = ReactDebugCurrentFrame$1.getCurrentStack;
            ReactDebugCurrentFrame$1.getCurrentStack = getCurrentStackInDEV;
          }
          var prevResponseState = currentResponseState;
          setCurrentResponseState(request.responseState);
          try {
            var pingedTasks = request.pingedTasks;
            var i3;
            for (i3 = 0; i3 < pingedTasks.length; i3++) {
              var task = pingedTasks[i3];
              retryTask(request, task);
            }
            pingedTasks.splice(0, i3);
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          } finally {
            setCurrentResponseState(prevResponseState);
            ReactCurrentDispatcher$1.current = prevDispatcher;
            {
              ReactDebugCurrentFrame$1.getCurrentStack = prevGetCurrentStackImpl;
            }
            if (prevDispatcher === Dispatcher) {
              switchContext(prevContext);
            }
          }
        }
        function flushSubtree(request, destination, segment) {
          segment.parentFlushed = true;
          switch (segment.status) {
            case PENDING: {
              var segmentID = segment.id = request.nextSegmentId++;
              segment.lastPushedText = false;
              segment.textEmbedded = false;
              return writePlaceholder(destination, request.responseState, segmentID);
            }
            case COMPLETED: {
              segment.status = FLUSHED;
              var r4 = true;
              var chunks = segment.chunks;
              var chunkIdx = 0;
              var children = segment.children;
              for (var childIdx = 0; childIdx < children.length; childIdx++) {
                var nextChild = children[childIdx];
                for (; chunkIdx < nextChild.index; chunkIdx++) {
                  writeChunk(destination, chunks[chunkIdx]);
                }
                r4 = flushSegment(request, destination, nextChild);
              }
              for (; chunkIdx < chunks.length - 1; chunkIdx++) {
                writeChunk(destination, chunks[chunkIdx]);
              }
              if (chunkIdx < chunks.length) {
                r4 = writeChunkAndReturn(destination, chunks[chunkIdx]);
              }
              return r4;
            }
            default: {
              throw new Error("Aborted, errored or already flushed boundaries should not be flushed again. This is a bug in React.");
            }
          }
        }
        function flushSegment(request, destination, segment) {
          var boundary = segment.boundary;
          if (boundary === null) {
            return flushSubtree(request, destination, segment);
          }
          boundary.parentFlushed = true;
          if (boundary.forceClientRender) {
            writeStartClientRenderedSuspenseBoundary(destination, request.responseState, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
            flushSubtree(request, destination, segment);
            return writeEndClientRenderedSuspenseBoundary(destination, request.responseState);
          } else if (boundary.pendingTasks > 0) {
            boundary.rootSegmentID = request.nextSegmentId++;
            if (boundary.completedSegments.length > 0) {
              request.partialBoundaries.push(boundary);
            }
            var id = boundary.id = assignSuspenseBoundaryID(request.responseState);
            writeStartPendingSuspenseBoundary(destination, request.responseState, id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else if (boundary.byteSize > request.progressiveChunkSize) {
            boundary.rootSegmentID = request.nextSegmentId++;
            request.completedBoundaries.push(boundary);
            writeStartPendingSuspenseBoundary(destination, request.responseState, boundary.id);
            flushSubtree(request, destination, segment);
            return writeEndPendingSuspenseBoundary(destination, request.responseState);
          } else {
            writeStartCompletedSuspenseBoundary(destination, request.responseState);
            var completedSegments = boundary.completedSegments;
            if (completedSegments.length !== 1) {
              throw new Error("A previously unvisited boundary must have exactly one root segment. This is a bug in React.");
            }
            var contentSegment = completedSegments[0];
            flushSegment(request, destination, contentSegment);
            return writeEndCompletedSuspenseBoundary(destination, request.responseState);
          }
        }
        function flushClientRenderedBoundary(request, destination, boundary) {
          return writeClientRenderBoundaryInstruction(destination, request.responseState, boundary.id, boundary.errorDigest, boundary.errorMessage, boundary.errorComponentStack);
        }
        function flushSegmentContainer(request, destination, segment) {
          writeStartSegment(destination, request.responseState, segment.formatContext, segment.id);
          flushSegment(request, destination, segment);
          return writeEndSegment(destination, segment.formatContext);
        }
        function flushCompletedBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i3 = 0;
          for (; i3 < completedSegments.length; i3++) {
            var segment = completedSegments[i3];
            flushPartiallyCompletedSegment(request, destination, boundary, segment);
          }
          completedSegments.length = 0;
          return writeCompletedBoundaryInstruction(destination, request.responseState, boundary.id, boundary.rootSegmentID);
        }
        function flushPartialBoundary(request, destination, boundary) {
          var completedSegments = boundary.completedSegments;
          var i3 = 0;
          for (; i3 < completedSegments.length; i3++) {
            var segment = completedSegments[i3];
            if (!flushPartiallyCompletedSegment(request, destination, boundary, segment)) {
              i3++;
              completedSegments.splice(0, i3);
              return false;
            }
          }
          completedSegments.splice(0, i3);
          return true;
        }
        function flushPartiallyCompletedSegment(request, destination, boundary, segment) {
          if (segment.status === FLUSHED) {
            return true;
          }
          var segmentID = segment.id;
          if (segmentID === -1) {
            var rootSegmentID = segment.id = boundary.rootSegmentID;
            if (rootSegmentID === -1) {
              throw new Error("A root segment ID must have been assigned by now. This is a bug in React.");
            }
            return flushSegmentContainer(request, destination, segment);
          } else {
            flushSegmentContainer(request, destination, segment);
            return writeCompletedSegmentInstruction(destination, request.responseState, segmentID);
          }
        }
        function flushCompletedQueues(request, destination) {
          beginWriting();
          try {
            var completedRootSegment = request.completedRootSegment;
            if (completedRootSegment !== null && request.pendingRootTasks === 0) {
              flushSegment(request, destination, completedRootSegment);
              request.completedRootSegment = null;
              writeCompletedRoot(destination, request.responseState);
            }
            var clientRenderedBoundaries = request.clientRenderedBoundaries;
            var i3;
            for (i3 = 0; i3 < clientRenderedBoundaries.length; i3++) {
              var boundary = clientRenderedBoundaries[i3];
              if (!flushClientRenderedBoundary(request, destination, boundary)) {
                request.destination = null;
                i3++;
                clientRenderedBoundaries.splice(0, i3);
                return;
              }
            }
            clientRenderedBoundaries.splice(0, i3);
            var completedBoundaries = request.completedBoundaries;
            for (i3 = 0; i3 < completedBoundaries.length; i3++) {
              var _boundary = completedBoundaries[i3];
              if (!flushCompletedBoundary(request, destination, _boundary)) {
                request.destination = null;
                i3++;
                completedBoundaries.splice(0, i3);
                return;
              }
            }
            completedBoundaries.splice(0, i3);
            completeWriting(destination);
            beginWriting(destination);
            var partialBoundaries = request.partialBoundaries;
            for (i3 = 0; i3 < partialBoundaries.length; i3++) {
              var _boundary2 = partialBoundaries[i3];
              if (!flushPartialBoundary(request, destination, _boundary2)) {
                request.destination = null;
                i3++;
                partialBoundaries.splice(0, i3);
                return;
              }
            }
            partialBoundaries.splice(0, i3);
            var largeBoundaries = request.completedBoundaries;
            for (i3 = 0; i3 < largeBoundaries.length; i3++) {
              var _boundary3 = largeBoundaries[i3];
              if (!flushCompletedBoundary(request, destination, _boundary3)) {
                request.destination = null;
                i3++;
                largeBoundaries.splice(0, i3);
                return;
              }
            }
            largeBoundaries.splice(0, i3);
          } finally {
            completeWriting(destination);
            if (request.allPendingTasks === 0 && request.pingedTasks.length === 0 && request.clientRenderedBoundaries.length === 0 && request.completedBoundaries.length === 0) {
              {
                if (request.abortableTasks.size !== 0) {
                  error2("There was still abortable task at the root when we closed. This is a bug in React.");
                }
              }
              close(destination);
            }
          }
        }
        function startWork(request) {
          scheduleWork(function() {
            return performWork(request);
          });
        }
        function startFlowing(request, destination) {
          if (request.status === CLOSING) {
            request.status = CLOSED;
            closeWithError(destination, request.fatalError);
            return;
          }
          if (request.status === CLOSED) {
            return;
          }
          if (request.destination !== null) {
            return;
          }
          request.destination = destination;
          try {
            flushCompletedQueues(request, destination);
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function abort(request, reason) {
          try {
            var abortableTasks = request.abortableTasks;
            abortableTasks.forEach(function(task) {
              return abortTask(task, request, reason);
            });
            abortableTasks.clear();
            if (request.destination !== null) {
              flushCompletedQueues(request, request.destination);
            }
          } catch (error3) {
            logRecoverableError(request, error3);
            fatalError(request, error3);
          }
        }
        function renderToReadableStream2(children, options) {
          return new Promise(function(resolve, reject) {
            var onFatalError;
            var onAllReady;
            var allReady = new Promise(function(res, rej) {
              onAllReady = res;
              onFatalError = rej;
            });
            function onShellReady() {
              var stream = new ReadableStream(
                {
                  type: "bytes",
                  pull: function(controller) {
                    startFlowing(request, controller);
                  },
                  cancel: function(reason) {
                    abort(request);
                  }
                },
                // $FlowFixMe size() methods are not allowed on byte streams.
                {
                  highWaterMark: 0
                }
              );
              stream.allReady = allReady;
              resolve(stream);
            }
            function onShellError(error3) {
              allReady.catch(function() {
              });
              reject(error3);
            }
            var request = createRequest(children, createResponseState(options ? options.identifierPrefix : void 0, options ? options.nonce : void 0, options ? options.bootstrapScriptContent : void 0, options ? options.bootstrapScripts : void 0, options ? options.bootstrapModules : void 0), createRootFormatContext(options ? options.namespaceURI : void 0), options ? options.progressiveChunkSize : void 0, options ? options.onError : void 0, onAllReady, onShellReady, onShellError, onFatalError);
            if (options && options.signal) {
              var signal2 = options.signal;
              var listener3 = function() {
                abort(request, signal2.reason);
                signal2.removeEventListener("abort", listener3);
              };
              signal2.addEventListener("abort", listener3);
            }
            startWork(request);
          });
        }
        exports2.renderToReadableStream = renderToReadableStream2;
        exports2.version = ReactVersion;
      })();
    }
  }
});

// ../../node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "../../node_modules/react-dom/server.browser.js"(exports2) {
    "use strict";
    var l3;
    var s3;
    if (false) {
      l3 = null;
      s3 = null;
    } else {
      l3 = require_react_dom_server_legacy_browser_development();
      s3 = require_react_dom_server_browser_development();
    }
    exports2.version = l3.version;
    exports2.renderToString = l3.renderToString;
    exports2.renderToStaticMarkup = l3.renderToStaticMarkup;
    exports2.renderToNodeStream = l3.renderToNodeStream;
    exports2.renderToStaticNodeStream = l3.renderToStaticNodeStream;
    exports2.renderToReadableStream = s3.renderToReadableStream;
  }
});

// ../../node_modules/ultrahtml/dist/index.js
function P(e2) {
  let t2 = {}, a3;
  if (e2)
    for (_.lastIndex = 0, e2 = " " + (e2 || "") + " "; a3 = _.exec(e2); )
      a3[0] !== " " && (t2[a3[1]] = a3[3]);
  return t2;
}
function w(e2) {
  let t2 = typeof e2 == "string" ? e2 : e2.value, a3, r4, n3, i3, l3, d5, g4, h2, s3, c4 = [];
  o.lastIndex = 0, r4 = a3 = { type: 0, children: [] };
  let E2 = 0;
  function m4() {
    i3 = t2.substring(E2, o.lastIndex - n3[0].length), i3 && r4.children.push({ type: 2, value: i3, parent: r4 });
  }
  for (; n3 = o.exec(t2); ) {
    if (d5 = n3[5] || n3[8], g4 = n3[6] || n3[9], h2 = n3[7] || n3[10], x.has(r4.name) && n3[2] !== r4.name) {
      l3 = o.lastIndex - n3[0].length, r4.children.length > 0 && (r4.children[0].value += n3[0]);
      continue;
    } else if (d5 === "<!--") {
      if (l3 = o.lastIndex - n3[0].length, x.has(r4.name))
        continue;
      s3 = { type: 3, value: g4, parent: r4, loc: [{ start: l3, end: l3 + d5.length }, { start: o.lastIndex - h2.length, end: o.lastIndex }] }, c4.push(s3), s3.parent.children.push(s3);
    } else if (d5 === "<!")
      l3 = o.lastIndex - n3[0].length, s3 = { type: 4, value: g4, parent: r4, loc: [{ start: l3, end: l3 + d5.length }, { start: o.lastIndex - h2.length, end: o.lastIndex }] }, c4.push(s3), s3.parent.children.push(s3);
    else if (n3[1] !== "/")
      if (m4(), x.has(r4.name)) {
        E2 = o.lastIndex, m4();
        continue;
      } else
        s3 = { type: 1, name: n3[2] + "", attributes: P(n3[3]), parent: r4, children: [], loc: [{ start: o.lastIndex - n3[0].length, end: o.lastIndex }] }, c4.push(s3), s3.parent.children.push(s3), n3[4] && n3[4].indexOf("/") > -1 || D.has(s3.name) ? (s3.loc[1] = s3.loc[0], s3.isSelfClosingTag = true) : r4 = s3;
    else
      m4(), n3[2] + "" === r4.name ? (s3 = r4, r4 = s3.parent, s3.loc.push({ start: o.lastIndex - n3[0].length, end: o.lastIndex }), i3 = t2.substring(s3.loc[0].end, s3.loc[1].start), s3.children.length === 0 && s3.children.push({ type: 2, value: i3, parent: r4 })) : n3[2] + "" === c4[c4.length - 1].name && c4[c4.length - 1].isSelfClosingTag === true && (s3 = c4[c4.length - 1], s3.loc.push({ start: o.lastIndex - n3[0].length, end: o.lastIndex }));
    E2 = o.lastIndex;
  }
  return i3 = t2.slice(E2), r4.children.push({ type: 2, value: i3, parent: r4 }), a3;
}
function p(e2, t2 = [N]) {
  let a3 = { value: e2 };
  for (let r4 of t2)
    Object.defineProperty(a3, r4, { value: true, enumerable: false, writable: false });
  return a3;
}
function y(e2) {
  return e2.replace(/[&<>]/g, (t2) => I[t2] || t2);
}
function f(e2) {
  let t2 = "";
  for (let [a3, r4] of Object.entries(e2))
    t2 += ` ${a3}="${r4}"`;
  return p(t2, [N, S]);
}
function F(e2, ...t2) {
  let a3 = "";
  for (let r4 = 0; r4 < e2.length; r4++) {
    a3 += e2[r4];
    let n3 = t2[r4];
    a3.endsWith("...") && n3 && typeof n3 == "object" ? (a3 = a3.slice(0, -3).trimEnd(), a3 += f(n3).value) : n3 && n3[S] ? (a3 = a3.trimEnd(), a3 += n3.value) : n3 && n3[N] ? a3 += n3.value : typeof n3 == "string" ? a3 += y(n3) : (n3 || n3 === 0) && (a3 += String(n3));
  }
  return p(a3);
}
function z(e2, t2) {
  return new O(t2).visit(e2);
}
var R, k, j, b, D, x, _, o, O, N, S, u, I;
var init_dist = __esm({
  "../../node_modules/ultrahtml/dist/index.js"() {
    R = 0;
    k = 1;
    j = 2;
    b = Symbol("Fragment");
    D = /* @__PURE__ */ new Set(["area", "base", "br", "col", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr"]);
    x = /* @__PURE__ */ new Set(["script", "style"]);
    _ = /([\@\.a-z0-9_\:\-]*)\s*?=?\s*?(['"]?)([\s\S]*?)\2\s+/gim;
    o = /(?:<(\/?)([a-zA-Z][a-zA-Z0-9\:-]*)(?:\s([^>]*?))?((?:\s*\/)?)>|(<\!\-\-)([\s\S]*?)(\-\->)|(<\!)([\s\S]*?)(>))/gm;
    O = class {
      constructor(t2) {
        this.callback = t2;
      }
      visit(t2, a3, r4) {
        if (this.callback(t2, a3, r4), Array.isArray(t2.children))
          for (let n3 = 0; n3 < t2.children.length; n3++) {
            let i3 = t2.children[n3];
            this.visit(i3, t2, n3);
          }
      }
    };
    N = Symbol("HTMLString");
    S = Symbol("AttrString");
    u = Symbol("RenderFn");
    I = { "&": "&amp;", "<": "&lt;", ">": "&gt;" };
  }
});

// dist/$server_build/chunks/vnode-children_Hb05nn4I.mjs
var vnode_children_Hb05nn4I_exports = {};
__export(vnode_children_Hb05nn4I_exports, {
  default: () => convert
});
function convert(children) {
  let doc = w(children.toString().trim());
  let id = ids++;
  let key = 0;
  function createReactElementFromNode(node) {
    const childVnodes = Array.isArray(node.children) && node.children.length ? node.children.map((child) => createReactElementFromNode(child)).filter(Boolean) : void 0;
    if (node.type === R) {
      return (0, import_react.createElement)(import_react.Fragment, {}, childVnodes);
    } else if (node.type === k) {
      const { class: className, ...props } = node.attributes;
      return (0, import_react.createElement)(node.name, { ...props, className, key: `${id}-${key++}` }, childVnodes);
    } else if (node.type === j) {
      return node.value.trim() ? node.value : void 0;
    }
  }
  const root = createReactElementFromNode(doc);
  return root.props.children;
}
var import_react, ids;
var init_vnode_children_Hb05nn4I = __esm({
  "dist/$server_build/chunks/vnode-children_Hb05nn4I.mjs"() {
    "use strict";
    init_dist();
    import_react = __toESM(require_react(), 1);
    ids = 0;
  }
});

// dist/$server_build/renderers.mjs
function getContext(rendererContextResult) {
  if (contexts.has(rendererContextResult)) {
    return contexts.get(rendererContextResult);
  }
  const ctx = {
    currentIndex: 0,
    get id() {
      return ID_PREFIX + this.currentIndex.toString();
    }
  };
  contexts.set(rendererContextResult, ctx);
  return ctx;
}
function incrementId(rendererContextResult) {
  const ctx = getContext(rendererContextResult);
  const id = ctx.id;
  ctx.currentIndex++;
  return id;
}
function errorIsComingFromPreactComponent(err2) {
  return err2.message && (err2.message.startsWith("Cannot read property '__H'") || err2.message.includes("(reading '__H')"));
}
async function check(Component, props, children) {
  if (typeof Component === "object") {
    return Component["$$typeof"].toString().slice("Symbol(".length).startsWith("react");
  }
  if (typeof Component !== "function")
    return false;
  if (Component.name === "QwikComponent")
    return false;
  if (typeof Component === "function" && Component["$$typeof"] === Symbol.for("react.forward_ref"))
    return false;
  if (Component.prototype != null && typeof Component.prototype.render === "function") {
    return import_react2.default.Component.isPrototypeOf(Component) || import_react2.default.PureComponent.isPrototypeOf(Component);
  }
  let error2 = null;
  let isReactComponent = false;
  function Tester(...args) {
    try {
      const vnode = Component(...args);
      if (vnode && vnode["$$typeof"] === reactTypeof) {
        isReactComponent = true;
      }
    } catch (err2) {
      if (!errorIsComingFromPreactComponent(err2)) {
        error2 = err2;
      }
    }
    return import_react2.default.createElement("div");
  }
  await renderToStaticMarkup(Tester, props, children, {});
  if (error2) {
    throw error2;
  }
  return isReactComponent;
}
async function getNodeWritable() {
  let nodeStreamBuiltinModuleName = "node:stream";
  let { Writable } = await import(
    /* @vite-ignore */
    nodeStreamBuiltinModuleName
  );
  return Writable;
}
function needsHydration(metadata) {
  return metadata.astroStaticSlot ? !!metadata.hydrate : true;
}
async function renderToStaticMarkup(Component, props, { default: children, ...slotted }, metadata) {
  let prefix;
  if (this && this.result) {
    prefix = incrementId(this.result);
  }
  const attrs = { prefix };
  delete props["class"];
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    const name = slotName(key);
    slots[name] = import_react2.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value,
      name
    });
  }
  const newProps = {
    ...props,
    ...slots
  };
  const newChildren = children ?? props.children;
  if (children && opts.experimentalReactChildren) {
    attrs["data-react-children"] = true;
    const convert3 = await Promise.resolve().then(() => (init_vnode_children_Hb05nn4I(), vnode_children_Hb05nn4I_exports)).then((mod) => mod.default);
    newProps.children = convert3(children);
  } else if (newChildren != null) {
    newProps.children = import_react2.default.createElement(StaticHtml, {
      hydrate: needsHydration(metadata),
      value: newChildren
    });
  }
  const vnode = import_react2.default.createElement(Component, newProps);
  const renderOptions = {
    identifierPrefix: prefix
  };
  let html2;
  if (metadata?.hydrate) {
    if ("renderToReadableStream" in import_server.default) {
      html2 = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html2 = await renderToPipeableStreamAsync(vnode, renderOptions);
    }
  } else {
    if ("renderToReadableStream" in import_server.default) {
      html2 = await renderToReadableStreamAsync(vnode, renderOptions);
    } else {
      html2 = await renderToStaticNodeStreamAsync(vnode, renderOptions);
    }
  }
  return { html: html2, attrs };
}
async function renderToPipeableStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html2 = "";
  return new Promise((resolve, reject) => {
    let error2 = void 0;
    let stream = import_server.default.renderToPipeableStream(vnode, {
      ...options,
      onError(err2) {
        error2 = err2;
        reject(error2);
      },
      onAllReady() {
        stream.pipe(
          new Writable({
            write(chunk2, _encoding, callback2) {
              html2 += chunk2.toString("utf-8");
              callback2();
            },
            destroy() {
              resolve(html2);
            }
          })
        );
      }
    });
  });
}
async function renderToStaticNodeStreamAsync(vnode, options) {
  const Writable = await getNodeWritable();
  let html2 = "";
  return new Promise((resolve, reject) => {
    let stream = import_server.default.renderToStaticNodeStream(vnode, options);
    stream.on("error", (err2) => {
      reject(err2);
    });
    stream.pipe(
      new Writable({
        write(chunk2, _encoding, callback2) {
          html2 += chunk2.toString("utf-8");
          callback2();
        },
        destroy() {
          resolve(html2);
        }
      })
    );
  });
}
async function readResult(stream) {
  const reader = stream.getReader();
  let result = "";
  const decoder5 = new TextDecoder("utf-8");
  while (true) {
    const { done, value } = await reader.read();
    if (done) {
      if (value) {
        result += decoder5.decode(value);
      } else {
        decoder5.decode(new Uint8Array());
      }
      return result;
    }
    result += decoder5.decode(value, { stream: true });
  }
}
async function renderToReadableStreamAsync(vnode, options) {
  return await readResult(await import_server.default.renderToReadableStream(vnode, options));
}
var import_react2, import_server, StaticHtml, contexts, ID_PREFIX, opts, slotName, reactTypeof, _renderer0, renderers;
var init_renderers = __esm({
  "dist/$server_build/renderers.mjs"() {
    "use strict";
    import_react2 = __toESM(require_react(), 1);
    import_server = __toESM(require_server_browser(), 1);
    StaticHtml = ({ value, name, hydrate = true }) => {
      if (!value)
        return null;
      const tagName = hydrate ? "astro-slot" : "astro-static-slot";
      return (0, import_react2.createElement)(tagName, {
        name,
        suppressHydrationWarning: true,
        dangerouslySetInnerHTML: { __html: value }
      });
    };
    StaticHtml.shouldComponentUpdate = () => false;
    contexts = /* @__PURE__ */ new WeakMap();
    ID_PREFIX = "r";
    opts = {
      experimentalReactChildren: false
    };
    slotName = (str) => str.trim().replace(/[-_]([a-z])/g, (_6, w7) => w7.toUpperCase());
    reactTypeof = Symbol.for("react.element");
    _renderer0 = {
      check,
      renderToStaticMarkup,
      supportsAstroStaticSlot: true
    };
    renderers = [Object.assign({ "name": "@astrojs/react", "clientEntrypoint": "@astrojs/react/client.js", "serverEntrypoint": "@astrojs/react/server.js" }, { ssr: _renderer0 })];
  }
});

// ../../node_modules/cookie/index.js
var require_cookie = __commonJS({
  "../../node_modules/cookie/index.js"(exports2) {
    "use strict";
    exports2.parse = parse7;
    exports2.serialize = serialize3;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse7(str, options) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options || {};
      var dec = opt.decode || decode5;
      var index = 0;
      while (index < str.length) {
        var eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index, eqIdx).trim();
        if (void 0 === obj[key]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode2(val, dec);
        }
        index = endIdx + 1;
      }
      return obj;
    }
    function serialize3(name, val, options) {
      var opt = options || {};
      var enc = opt.encode || encode4;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode5(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode4(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode2(str, decode6) {
      try {
        return decode6(str);
      } catch (e2) {
        return str;
      }
    }
  }
});

// ../../node_modules/kleur/colors.mjs
function init(x4, y3) {
  let rgx = new RegExp(`\\x1b\\[${y3}m`, "g");
  let open = `\x1B[${x4}m`, close = `\x1B[${y3}m`;
  return function(txt) {
    if (!$.enabled || txt == null)
      return txt;
    return open + (!!~("" + txt).indexOf(close) ? txt.replace(rgx, close + open) : txt) + close;
  };
}
var FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM, isTTY, $, reset, bold, dim, italic, underline, inverse, hidden, strikethrough, black, red, green, yellow, blue, magenta, cyan, white, gray, grey, bgBlack, bgRed, bgGreen, bgYellow, bgBlue, bgMagenta, bgCyan, bgWhite;
var init_colors = __esm({
  "../../node_modules/kleur/colors.mjs"() {
    isTTY = true;
    if (typeof process !== "undefined") {
      ({ FORCE_COLOR, NODE_DISABLE_COLORS, NO_COLOR, TERM } = process.env || {});
      isTTY = process.stdout && process.stdout.isTTY;
    }
    $ = {
      enabled: !NODE_DISABLE_COLORS && NO_COLOR == null && TERM !== "dumb" && (FORCE_COLOR != null && FORCE_COLOR !== "0" || isTTY)
    };
    reset = init(0, 0);
    bold = init(1, 22);
    dim = init(2, 22);
    italic = init(3, 23);
    underline = init(4, 24);
    inverse = init(7, 27);
    hidden = init(8, 28);
    strikethrough = init(9, 29);
    black = init(30, 39);
    red = init(31, 39);
    green = init(32, 39);
    yellow = init(33, 39);
    blue = init(34, 39);
    magenta = init(35, 39);
    cyan = init(36, 39);
    white = init(37, 39);
    gray = init(90, 39);
    grey = init(90, 39);
    bgBlack = init(40, 49);
    bgRed = init(41, 49);
    bgGreen = init(42, 49);
    bgYellow = init(43, 49);
    bgBlue = init(44, 49);
    bgMagenta = init(45, 49);
    bgCyan = init(46, 49);
    bgWhite = init(47, 49);
  }
});

// ../../node_modules/clsx/dist/clsx.mjs
function r(e2) {
  var t2, f4, n3 = "";
  if ("string" == typeof e2 || "number" == typeof e2)
    n3 += e2;
  else if ("object" == typeof e2)
    if (Array.isArray(e2)) {
      var o5 = e2.length;
      for (t2 = 0; t2 < o5; t2++)
        e2[t2] && (f4 = r(e2[t2])) && (n3 && (n3 += " "), n3 += f4);
    } else
      for (f4 in e2)
        e2[f4] && (n3 && (n3 += " "), n3 += f4);
  return n3;
}
function clsx() {
  for (var e2, t2, f4 = 0, n3 = "", o5 = arguments.length; f4 < o5; f4++)
    (e2 = arguments[f4]) && (t2 = r(e2)) && (n3 && (n3 += " "), n3 += t2);
  return n3;
}
var init_clsx = __esm({
  "../../node_modules/clsx/dist/clsx.mjs"() {
  }
});

// ../../node_modules/html-escaper/esm/index.js
var replace, ca, esca, pe, escape;
var init_esm = __esm({
  "../../node_modules/html-escaper/esm/index.js"() {
    ({ replace } = "");
    ca = /[&<>'"]/g;
    esca = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      "'": "&#39;",
      '"': "&quot;"
    };
    pe = (m4) => esca[m4];
    escape = (es2) => replace.call(es2, ca, pe);
  }
});

// ../../node_modules/cssesc/cssesc.js
var require_cssesc = __commonJS({
  "../../node_modules/cssesc/cssesc.js"(exports2, module) {
    "use strict";
    var object = {};
    var hasOwnProperty = object.hasOwnProperty;
    var merge2 = function merge3(options, defaults) {
      if (!options) {
        return defaults;
      }
      var result = {};
      for (var key in defaults) {
        result[key] = hasOwnProperty.call(options, key) ? options[key] : defaults[key];
      }
      return result;
    };
    var regexAnySingleEscape = /[ -,\.\/:-@\[-\^`\{-~]/;
    var regexSingleEscape = /[ -,\.\/:-@\[\]\^`\{-~]/;
    var regexExcessiveSpaces = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g;
    var cssesc = function cssesc2(string, options) {
      options = merge2(options, cssesc2.options);
      if (options.quotes != "single" && options.quotes != "double") {
        options.quotes = "single";
      }
      var quote = options.quotes == "double" ? '"' : "'";
      var isIdentifier = options.isIdentifier;
      var firstChar = string.charAt(0);
      var output = "";
      var counter2 = 0;
      var length = string.length;
      while (counter2 < length) {
        var character = string.charAt(counter2++);
        var codePoint = character.charCodeAt();
        var value = void 0;
        if (codePoint < 32 || codePoint > 126) {
          if (codePoint >= 55296 && codePoint <= 56319 && counter2 < length) {
            var extra = string.charCodeAt(counter2++);
            if ((extra & 64512) == 56320) {
              codePoint = ((codePoint & 1023) << 10) + (extra & 1023) + 65536;
            } else {
              counter2--;
            }
          }
          value = "\\" + codePoint.toString(16).toUpperCase() + " ";
        } else {
          if (options.escapeEverything) {
            if (regexAnySingleEscape.test(character)) {
              value = "\\" + character;
            } else {
              value = "\\" + codePoint.toString(16).toUpperCase() + " ";
            }
          } else if (/[\t\n\f\r\x0B]/.test(character)) {
            value = "\\" + codePoint.toString(16).toUpperCase() + " ";
          } else if (character == "\\" || !isIdentifier && (character == '"' && quote == character || character == "'" && quote == character) || isIdentifier && regexSingleEscape.test(character)) {
            value = "\\" + character;
          } else {
            value = character;
          }
        }
        output += value;
      }
      if (isIdentifier) {
        if (/^-[-\d]/.test(output)) {
          output = "\\-" + output.slice(1);
        } else if (/\d/.test(firstChar)) {
          output = "\\3" + firstChar + " " + output.slice(1);
        }
      }
      output = output.replace(regexExcessiveSpaces, function($02, $1, $22) {
        if ($1 && $1.length % 2) {
          return $02;
        }
        return ($1 || "") + $22;
      });
      if (!isIdentifier && options.wrap) {
        return quote + output + quote;
      }
      return output;
    };
    cssesc.options = {
      "escapeEverything": false,
      "isIdentifier": false,
      "quotes": "single",
      "wrap": false
    };
    cssesc.version = "3.0.0";
    module.exports = cssesc;
  }
});

// dist/$server_build/chunks/astro_u8tnI5Mh.mjs
function normalizeLF(code) {
  return code.replace(/\r\n|\r(?!\n)|\n/g, "\n");
}
function codeFrame(src, loc) {
  if (!loc || loc.line === void 0 || loc.column === void 0) {
    return "";
  }
  const lines = normalizeLF(src).split("\n").map((ln2) => ln2.replace(/\t/g, "  "));
  const visibleLines = [];
  for (let n3 = -2; n3 <= 2; n3++) {
    if (lines[loc.line + n3])
      visibleLines.push(loc.line + n3);
  }
  let gutterWidth = 0;
  for (const lineNo of visibleLines) {
    let w7 = `> ${lineNo}`;
    if (w7.length > gutterWidth)
      gutterWidth = w7.length;
  }
  let output = "";
  for (const lineNo of visibleLines) {
    const isFocusedLine = lineNo === loc.line - 1;
    output += isFocusedLine ? "> " : "  ";
    output += `${lineNo + 1} | ${lines[lineNo]}
`;
    if (isFocusedLine)
      output += `${Array.from({ length: gutterWidth }).join(" ")}  | ${Array.from({
        length: loc.column
      }).join(" ")}^
`;
  }
  return output;
}
async function renderEndpoint(mod, context, ssr, logger2) {
  const { request, url } = context;
  const method = request.method.toUpperCase();
  const handler = mod[method] ?? mod["ALL"];
  if (!ssr && ssr === false && method !== "GET") {
    logger2.warn(
      "router",
      `${url.pathname} ${bold(
        method
      )} requests are not available for a static site. Update your config to \`output: 'server'\` or \`output: 'hybrid'\` to enable.`
    );
  }
  if (handler === void 0) {
    logger2.warn(
      "router",
      `No API Route handler exists for the method "${method}" for the route "${url.pathname}".
Found handlers: ${Object.keys(mod).map((exp) => JSON.stringify(exp)).join(", ")}
` + ("all" in mod ? `One of the exported handlers is "all" (lowercase), did you mean to export 'ALL'?
` : "")
    );
    return new Response(null, { status: 404 });
  }
  if (typeof handler !== "function") {
    logger2.error(
      "router",
      `The route "${url.pathname}" exports a value for the method "${method}", but it is of the type ${typeof handler} instead of a function.`
    );
    return new Response(null, { status: 500 });
  }
  const response = await handler.call(mod, context);
  if (REROUTABLE_STATUS_CODES.includes(response.status)) {
    response.headers.set(REROUTE_DIRECTIVE_HEADER, "no");
  }
  return response;
}
function validateArgs(args) {
  if (args.length !== 3)
    return false;
  if (!args[0] || typeof args[0] !== "object")
    return false;
  return true;
}
function baseCreateComponent(cb, moduleId, propagation) {
  const name = moduleId?.split("/").pop()?.replace(".astro", "") ?? "";
  const fn2 = (...args) => {
    if (!validateArgs(args)) {
      throw new AstroError({
        ...InvalidComponentArgs,
        message: InvalidComponentArgs.message(name)
      });
    }
    return cb(...args);
  };
  Object.defineProperty(fn2, "name", { value: name, writable: false });
  fn2.isAstroComponentFactory = true;
  fn2.moduleId = moduleId;
  fn2.propagation = propagation;
  return fn2;
}
function createComponentWithOptions(opts2) {
  const cb = baseCreateComponent(opts2.factory, opts2.moduleId, opts2.propagation);
  return cb;
}
function createComponent(arg1, moduleId, propagation) {
  if (typeof arg1 === "function") {
    return baseCreateComponent(arg1, moduleId, propagation);
  } else {
    return createComponentWithOptions(arg1);
  }
}
function createAstroGlobFn() {
  const globHandler = (importMetaGlobResult) => {
    if (typeof importMetaGlobResult === "string") {
      throw new AstroError({
        ...AstroGlobUsedOutside,
        message: AstroGlobUsedOutside.message(JSON.stringify(importMetaGlobResult))
      });
    }
    let allEntries = [...Object.values(importMetaGlobResult)];
    if (allEntries.length === 0) {
      throw new AstroError({
        ...AstroGlobNoMatch,
        message: AstroGlobNoMatch.message(JSON.stringify(importMetaGlobResult))
      });
    }
    return Promise.all(allEntries.map((fn2) => fn2()));
  };
  return globHandler;
}
function createAstro(site) {
  return {
    site: site ? new URL(site) : void 0,
    generator: `Astro v${ASTRO_VERSION}`,
    glob: createAstroGlobFn()
  };
}
function isPromise(value) {
  return !!value && typeof value === "object" && typeof value.then === "function";
}
async function* streamAsyncIterator(stream) {
  const reader = stream.getReader();
  try {
    while (true) {
      const { done, value } = await reader.read();
      if (done)
        return;
      yield value;
    }
  } finally {
    reader.releaseLock();
  }
}
function isHTMLString(value) {
  return Object.prototype.toString.call(value) === "[object HTMLString]";
}
function markHTMLBytes(bytes) {
  return new HTMLBytes(bytes);
}
function hasGetReader(obj) {
  return typeof obj.getReader === "function";
}
async function* unescapeChunksAsync(iterable) {
  if (hasGetReader(iterable)) {
    for await (const chunk2 of streamAsyncIterator(iterable)) {
      yield unescapeHTML(chunk2);
    }
  } else {
    for await (const chunk2 of iterable) {
      yield unescapeHTML(chunk2);
    }
  }
}
function* unescapeChunks(iterable) {
  for (const chunk2 of iterable) {
    yield unescapeHTML(chunk2);
  }
}
function unescapeHTML(str) {
  if (!!str && typeof str === "object") {
    if (str instanceof Uint8Array) {
      return markHTMLBytes(str);
    } else if (str instanceof Response && str.body) {
      const body = str.body;
      return unescapeChunksAsync(body);
    } else if (typeof str.then === "function") {
      return Promise.resolve(str).then((value) => {
        return unescapeHTML(value);
      });
    } else if (Symbol.iterator in str) {
      return unescapeChunks(str);
    } else if (Symbol.asyncIterator in str || hasGetReader(str)) {
      return unescapeChunksAsync(str);
    }
  }
  return markHTMLString(str);
}
function isVNode(vnode) {
  return vnode && typeof vnode === "object" && vnode[AstroJSX];
}
function createRenderInstruction(instruction) {
  return Object.defineProperty(instruction, RenderInstructionSymbol, {
    value: true
  });
}
function isRenderInstruction(chunk2) {
  return chunk2 && typeof chunk2 === "object" && chunk2[RenderInstructionSymbol];
}
function serializeArray(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = value.map((v4) => {
    return convertToSerializedForm(v4, metadata, parents);
  });
  parents.delete(value);
  return serialized;
}
function serializeObject(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  if (parents.has(value)) {
    throw new Error(`Cyclic reference detected while serializing props for <${metadata.displayName} client:${metadata.hydrate}>!

Cyclic references cannot be safely serialized for client-side usage. Please remove the cyclic reference.`);
  }
  parents.add(value);
  const serialized = Object.fromEntries(
    Object.entries(value).map(([k6, v4]) => {
      return [k6, convertToSerializedForm(v4, metadata, parents)];
    })
  );
  parents.delete(value);
  return serialized;
}
function convertToSerializedForm(value, metadata = {}, parents = /* @__PURE__ */ new WeakSet()) {
  const tag = Object.prototype.toString.call(value);
  switch (tag) {
    case "[object Date]": {
      return [PROP_TYPE.Date, value.toISOString()];
    }
    case "[object RegExp]": {
      return [PROP_TYPE.RegExp, value.source];
    }
    case "[object Map]": {
      return [PROP_TYPE.Map, serializeArray(Array.from(value), metadata, parents)];
    }
    case "[object Set]": {
      return [PROP_TYPE.Set, serializeArray(Array.from(value), metadata, parents)];
    }
    case "[object BigInt]": {
      return [PROP_TYPE.BigInt, value.toString()];
    }
    case "[object URL]": {
      return [PROP_TYPE.URL, value.toString()];
    }
    case "[object Array]": {
      return [PROP_TYPE.JSON, serializeArray(value, metadata, parents)];
    }
    case "[object Uint8Array]": {
      return [PROP_TYPE.Uint8Array, Array.from(value)];
    }
    case "[object Uint16Array]": {
      return [PROP_TYPE.Uint16Array, Array.from(value)];
    }
    case "[object Uint32Array]": {
      return [PROP_TYPE.Uint32Array, Array.from(value)];
    }
    default: {
      if (value !== null && typeof value === "object") {
        return [PROP_TYPE.Value, serializeObject(value, metadata, parents)];
      } else if (value === void 0) {
        return [PROP_TYPE.Value];
      } else {
        return [PROP_TYPE.Value, value];
      }
    }
  }
}
function serializeProps(props, metadata) {
  const serialized = JSON.stringify(serializeObject(props, metadata));
  return serialized;
}
function extractDirectives(inputProps, clientDirectives) {
  let extracted = {
    isPage: false,
    hydration: null,
    props: {},
    propsWithoutTransitionAttributes: {}
  };
  for (const [key, value] of Object.entries(inputProps)) {
    if (key.startsWith("server:")) {
      if (key === "server:root") {
        extracted.isPage = true;
      }
    }
    if (key.startsWith("client:")) {
      if (!extracted.hydration) {
        extracted.hydration = {
          directive: "",
          value: "",
          componentUrl: "",
          componentExport: { value: "" }
        };
      }
      switch (key) {
        case "client:component-path": {
          extracted.hydration.componentUrl = value;
          break;
        }
        case "client:component-export": {
          extracted.hydration.componentExport.value = value;
          break;
        }
        case "client:component-hydration": {
          break;
        }
        case "client:display-name": {
          break;
        }
        default: {
          extracted.hydration.directive = key.split(":")[1];
          extracted.hydration.value = value;
          if (!clientDirectives.has(extracted.hydration.directive)) {
            const hydrationMethods = Array.from(clientDirectives.keys()).map((d5) => `client:${d5}`).join(", ");
            throw new Error(
              `Error: invalid hydration directive "${key}". Supported hydration methods: ${hydrationMethods}`
            );
          }
          if (extracted.hydration.directive === "media" && typeof extracted.hydration.value !== "string") {
            throw new AstroError(MissingMediaQueryDirective);
          }
          break;
        }
      }
    } else {
      extracted.props[key] = value;
      if (!transitionDirectivesToCopyOnIsland.includes(key)) {
        extracted.propsWithoutTransitionAttributes[key] = value;
      }
    }
  }
  for (const sym of Object.getOwnPropertySymbols(inputProps)) {
    extracted.props[sym] = inputProps[sym];
    extracted.propsWithoutTransitionAttributes[sym] = inputProps[sym];
  }
  return extracted;
}
async function generateHydrateScript(scriptOptions, metadata) {
  const { renderer, result, astroId, props, attrs } = scriptOptions;
  const { hydrate, componentUrl, componentExport } = metadata;
  if (!componentExport.value) {
    throw new AstroError({
      ...NoMatchingImport,
      message: NoMatchingImport.message(metadata.displayName)
    });
  }
  const island = {
    children: "",
    props: {
      // This is for HMR, probably can avoid it in prod
      uid: astroId
    }
  };
  if (attrs) {
    for (const [key, value] of Object.entries(attrs)) {
      island.props[key] = escapeHTML(value);
    }
  }
  island.props["component-url"] = await result.resolve(decodeURI(componentUrl));
  if (renderer.clientEntrypoint) {
    island.props["component-export"] = componentExport.value;
    island.props["renderer-url"] = await result.resolve(decodeURI(renderer.clientEntrypoint));
    island.props["props"] = escapeHTML(serializeProps(props, metadata));
  }
  island.props["ssr"] = "";
  island.props["client"] = hydrate;
  let beforeHydrationUrl = await result.resolve("astro:scripts/before-hydration.js");
  if (beforeHydrationUrl.length) {
    island.props["before-hydration-url"] = beforeHydrationUrl;
  }
  island.props["opts"] = escapeHTML(
    JSON.stringify({
      name: metadata.displayName,
      value: metadata.hydrateArgs || ""
    })
  );
  transitionDirectivesToCopyOnIsland.forEach((name) => {
    if (props[name]) {
      island.props[name] = props[name];
    }
  });
  return island;
}
function bitwise(str) {
  let hash = 0;
  if (str.length === 0)
    return hash;
  for (let i3 = 0; i3 < str.length; i3++) {
    const ch = str.charCodeAt(i3);
    hash = (hash << 5) - hash + ch;
    hash = hash & hash;
  }
  return hash;
}
function shorthash(text2) {
  let num;
  let result = "";
  let integer = bitwise(text2);
  const sign = integer < 0 ? "Z" : "";
  integer = Math.abs(integer);
  while (integer >= binary) {
    num = integer % binary;
    integer = Math.floor(integer / binary);
    result = dictionary[num] + result;
  }
  if (integer > 0) {
    result = dictionary[integer] + result;
  }
  return sign + result;
}
function isAstroComponentFactory(obj) {
  return obj == null ? false : obj.isAstroComponentFactory === true;
}
function isAPropagatingComponent(result, factory) {
  let hint = factory.propagation || "none";
  if (factory.moduleId && result.componentMetadata.has(factory.moduleId) && hint === "none") {
    hint = result.componentMetadata.get(factory.moduleId).propagation;
  }
  return hint === "in-tree" || hint === "self";
}
function isHeadAndContent(obj) {
  return typeof obj === "object" && !!obj[headAndContentSym];
}
function determineIfNeedsHydrationScript(result) {
  if (result._metadata.hasHydrationScript) {
    return false;
  }
  return result._metadata.hasHydrationScript = true;
}
function determinesIfNeedsDirectiveScript(result, directive) {
  if (result._metadata.hasDirectives.has(directive)) {
    return false;
  }
  result._metadata.hasDirectives.add(directive);
  return true;
}
function getDirectiveScriptText(result, directive) {
  const clientDirectives = result.clientDirectives;
  const clientDirective = clientDirectives.get(directive);
  if (!clientDirective) {
    throw new Error(`Unknown directive: ${directive}`);
  }
  return clientDirective;
}
function getPrescripts(result, type, directive) {
  switch (type) {
    case "both":
      return `${ISLAND_STYLES}<script>${getDirectiveScriptText(result, directive)};${astro_island_prebuilt_default}<\/script>`;
    case "directive":
      return `<script>${getDirectiveScriptText(result, directive)}<\/script>`;
  }
  return "";
}
function defineScriptVars(vars) {
  let output = "";
  for (const [key, value] of Object.entries(vars)) {
    output += `const ${toIdent(key)} = ${JSON.stringify(value)?.replace(
      /<\/script>/g,
      "\\x3C/script>"
    )};
`;
  }
  return markHTMLString(output);
}
function formatList(values) {
  if (values.length === 1) {
    return values[0];
  }
  return `${values.slice(0, -1).join(", ")} or ${values[values.length - 1]}`;
}
function addAttribute(value, key, shouldEscape = true) {
  if (value == null) {
    return "";
  }
  if (value === false) {
    if (htmlEnumAttributes.test(key) || svgEnumAttributes.test(key)) {
      return markHTMLString(` ${key}="false"`);
    }
    return "";
  }
  if (STATIC_DIRECTIVES.has(key)) {
    console.warn(`[astro] The "${key}" directive cannot be applied dynamically at runtime. It will not be rendered as an attribute.

Make sure to use the static attribute syntax (\`${key}={value}\`) instead of the dynamic spread syntax (\`{...{ "${key}": value }}\`).`);
    return "";
  }
  if (key === "class:list") {
    const listValue = toAttributeString(clsx(value), shouldEscape);
    if (listValue === "") {
      return "";
    }
    return markHTMLString(` ${key.slice(0, -5)}="${listValue}"`);
  }
  if (key === "style" && !(value instanceof HTMLString)) {
    if (Array.isArray(value) && value.length === 2) {
      return markHTMLString(
        ` ${key}="${toAttributeString(`${toStyleString(value[0])};${value[1]}`, shouldEscape)}"`
      );
    }
    if (typeof value === "object") {
      return markHTMLString(` ${key}="${toAttributeString(toStyleString(value), shouldEscape)}"`);
    }
  }
  if (key === "className") {
    return markHTMLString(` class="${toAttributeString(value, shouldEscape)}"`);
  }
  if (value === true && (key.startsWith("data-") || htmlBooleanAttributes.test(key))) {
    return markHTMLString(` ${key}`);
  } else {
    return markHTMLString(` ${key}="${toAttributeString(value, shouldEscape)}"`);
  }
}
function internalSpreadAttributes(values, shouldEscape = true) {
  let output = "";
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, shouldEscape);
  }
  return markHTMLString(output);
}
function renderElement$1(name, { props: _props, children = "" }, shouldEscape = true) {
  const { lang: _6, "data-astro-id": astroId, "define:vars": defineVars, ...props } = _props;
  if (defineVars) {
    if (name === "style") {
      delete props["is:global"];
      delete props["is:scoped"];
    }
    if (name === "script") {
      delete props.hoist;
      children = defineScriptVars(defineVars) + "\n" + children;
    }
  }
  if ((children == null || children == "") && voidElementNames.test(name)) {
    return `<${name}${internalSpreadAttributes(props, shouldEscape)} />`;
  }
  return `<${name}${internalSpreadAttributes(props, shouldEscape)}>${children}</${name}>`;
}
function renderToBufferDestination(bufferRenderFunction) {
  const bufferChunks = [];
  const bufferDestination = {
    write: (chunk2) => bufferChunks.push(chunk2)
  };
  const renderPromise = bufferRenderFunction(bufferDestination);
  return {
    async renderToFinalDestination(destination) {
      for (const chunk2 of bufferChunks) {
        destination.write(chunk2);
      }
      bufferDestination.write = (chunk2) => destination.write(chunk2);
      await renderPromise;
    }
  };
}
function promiseWithResolvers() {
  let resolve, reject;
  const promise = new Promise((_resolve, _reject) => {
    resolve = _resolve;
    reject = _reject;
  });
  return {
    promise,
    resolve,
    reject
  };
}
function renderAllHeadContent(result) {
  result._metadata.hasRenderedHead = true;
  const styles2 = Array.from(result.styles).filter(uniqueElements).map(
    (style) => style.props.rel === "stylesheet" ? renderElement$1("link", style) : renderElement$1("style", style)
  );
  result.styles.clear();
  const scripts = Array.from(result.scripts).filter(uniqueElements).map((script) => {
    return renderElement$1("script", script, false);
  });
  const links = Array.from(result.links).filter(uniqueElements).map((link) => renderElement$1("link", link, false));
  let content = styles2.join("\n") + links.join("\n") + scripts.join("\n");
  if (result._metadata.extraHead.length > 0) {
    for (const part of result._metadata.extraHead) {
      content += part;
    }
  }
  return markHTMLString(content);
}
function* renderHead() {
  yield createRenderInstruction({ type: "head" });
}
function* maybeRenderHead() {
  yield createRenderInstruction({ type: "maybe-head" });
}
function isSlotString(str) {
  return !!str[slotString];
}
function renderSlot(result, slotted, fallback) {
  if (!slotted && fallback) {
    return renderSlot(result, fallback);
  }
  return {
    async render(destination) {
      await renderChild(destination, typeof slotted === "function" ? slotted(result) : slotted);
    }
  };
}
async function renderSlotToString(result, slotted, fallback) {
  let content = "";
  let instructions = null;
  const temporaryDestination = {
    write(chunk2) {
      if (chunk2 instanceof Response)
        return;
      if (typeof chunk2 === "object" && "type" in chunk2 && typeof chunk2.type === "string") {
        if (instructions === null) {
          instructions = [];
        }
        instructions.push(chunk2);
      } else {
        content += chunkToString(result, chunk2);
      }
    }
  };
  const renderInstance = renderSlot(result, slotted, fallback);
  await renderInstance.render(temporaryDestination);
  return markHTMLString(new SlotString(content, instructions));
}
async function renderSlots(result, slots = {}) {
  let slotInstructions = null;
  let children = {};
  if (slots) {
    await Promise.all(
      Object.entries(slots).map(
        ([key, value]) => renderSlotToString(result, value).then((output) => {
          if (output.instructions) {
            if (slotInstructions === null) {
              slotInstructions = [];
            }
            slotInstructions.push(...output.instructions);
          }
          children[key] = output;
        })
      )
    );
  }
  return { slotInstructions, children };
}
function stringifyChunk(result, chunk2) {
  if (isRenderInstruction(chunk2)) {
    const instruction = chunk2;
    switch (instruction.type) {
      case "directive": {
        const { hydration } = instruction;
        let needsHydrationScript = hydration && determineIfNeedsHydrationScript(result);
        let needsDirectiveScript = hydration && determinesIfNeedsDirectiveScript(result, hydration.directive);
        let prescriptType = needsHydrationScript ? "both" : needsDirectiveScript ? "directive" : null;
        if (prescriptType) {
          let prescripts = getPrescripts(result, prescriptType, hydration.directive);
          return markHTMLString(prescripts);
        } else {
          return "";
        }
      }
      case "head": {
        if (result._metadata.hasRenderedHead || result.partial) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      case "maybe-head": {
        if (result._metadata.hasRenderedHead || result._metadata.headInTree || result.partial) {
          return "";
        }
        return renderAllHeadContent(result);
      }
      case "renderer-hydration-script": {
        const { rendererSpecificHydrationScripts } = result._metadata;
        const { rendererName } = instruction;
        if (!rendererSpecificHydrationScripts.has(rendererName)) {
          rendererSpecificHydrationScripts.add(rendererName);
          return instruction.render();
        }
        return "";
      }
      default: {
        throw new Error(`Unknown chunk type: ${chunk2.type}`);
      }
    }
  } else if (chunk2 instanceof Response) {
    return "";
  } else if (isSlotString(chunk2)) {
    let out = "";
    const c4 = chunk2;
    if (c4.instructions) {
      for (const instr of c4.instructions) {
        out += stringifyChunk(result, instr);
      }
    }
    out += chunk2.toString();
    return out;
  }
  return chunk2.toString();
}
function chunkToString(result, chunk2) {
  if (ArrayBuffer.isView(chunk2)) {
    return decoder.decode(chunk2);
  } else {
    return stringifyChunk(result, chunk2);
  }
}
function chunkToByteArray(result, chunk2) {
  if (ArrayBuffer.isView(chunk2)) {
    return chunk2;
  } else {
    const stringified = stringifyChunk(result, chunk2);
    return encoder.encode(stringified.toString());
  }
}
function isRenderInstance(obj) {
  return !!obj && typeof obj === "object" && "render" in obj && typeof obj.render === "function";
}
async function renderChild(destination, child) {
  child = await child;
  if (child instanceof SlotString) {
    destination.write(child);
  } else if (isHTMLString(child)) {
    destination.write(child);
  } else if (Array.isArray(child)) {
    const childRenders = child.map((c4) => {
      return renderToBufferDestination((bufferDestination) => {
        return renderChild(bufferDestination, c4);
      });
    });
    for (const childRender of childRenders) {
      if (!childRender)
        continue;
      await childRender.renderToFinalDestination(destination);
    }
  } else if (typeof child === "function") {
    await renderChild(destination, child());
  } else if (typeof child === "string") {
    destination.write(markHTMLString(escapeHTML(child)));
  } else if (!child && child !== 0)
    ;
  else if (isRenderInstance(child)) {
    await child.render(destination);
  } else if (isRenderTemplateResult(child)) {
    await child.render(destination);
  } else if (isAstroComponentInstance(child)) {
    await child.render(destination);
  } else if (ArrayBuffer.isView(child)) {
    destination.write(child);
  } else if (typeof child === "object" && (Symbol.asyncIterator in child || Symbol.iterator in child)) {
    for await (const value of child) {
      await renderChild(destination, value);
    }
  } else {
    destination.write(child);
  }
}
function validateComponentProps(props, displayName) {
  if (props != null) {
    for (const prop of Object.keys(props)) {
      if (prop.startsWith("client:")) {
        console.warn(
          `You are attempting to render <${displayName} ${prop} />, but ${displayName} is an Astro component. Astro components do not render in the client and should not have a hydration directive. Please use a framework component for client rendering.`
        );
      }
    }
  }
}
function createAstroComponentInstance(result, displayName, factory, props, slots = {}) {
  validateComponentProps(props, displayName);
  const instance = new AstroComponentInstance(result, props, slots, factory);
  if (isAPropagatingComponent(result, factory)) {
    result._metadata.propagators.add(instance);
  }
  return instance;
}
function isAstroComponentInstance(obj) {
  return typeof obj === "object" && !!obj[astroComponentInstanceSym];
}
function isRenderTemplateResult(obj) {
  return typeof obj === "object" && !!obj[renderTemplateResultSym];
}
function renderTemplate(htmlParts, ...expressions) {
  return new RenderTemplateResult(htmlParts, expressions);
}
async function renderToString(result, componentFactory, props, children, isPage = false, route) {
  const templateResult = await callComponentAsTemplateResultOrResponse(
    result,
    componentFactory,
    props,
    children,
    route
  );
  if (templateResult instanceof Response)
    return templateResult;
  let str = "";
  let renderedFirstPageChunk = false;
  const destination = {
    write(chunk2) {
      if (isPage && !renderedFirstPageChunk) {
        renderedFirstPageChunk = true;
        if (!result.partial && !DOCTYPE_EXP.test(String(chunk2))) {
          const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
          str += doctype;
        }
      }
      if (chunk2 instanceof Response)
        return;
      str += chunkToString(result, chunk2);
    }
  };
  await templateResult.render(destination);
  return str;
}
async function renderToReadableStream(result, componentFactory, props, children, isPage = false, route) {
  const templateResult = await callComponentAsTemplateResultOrResponse(
    result,
    componentFactory,
    props,
    children,
    route
  );
  if (templateResult instanceof Response)
    return templateResult;
  let renderedFirstPageChunk = false;
  if (isPage) {
    await bufferHeadContent(result);
  }
  return new ReadableStream({
    start(controller) {
      const destination = {
        write(chunk2) {
          if (isPage && !renderedFirstPageChunk) {
            renderedFirstPageChunk = true;
            if (!result.partial && !DOCTYPE_EXP.test(String(chunk2))) {
              const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
              controller.enqueue(encoder.encode(doctype));
            }
          }
          if (chunk2 instanceof Response) {
            throw new AstroError({
              ...ResponseSentError
            });
          }
          const bytes = chunkToByteArray(result, chunk2);
          controller.enqueue(bytes);
        }
      };
      (async () => {
        try {
          await templateResult.render(destination);
          controller.close();
        } catch (e2) {
          if (AstroError.is(e2) && !e2.loc) {
            e2.setLocation({
              file: route?.component
            });
          }
          setTimeout(() => controller.error(e2), 0);
        }
      })();
    }
  });
}
async function callComponentAsTemplateResultOrResponse(result, componentFactory, props, children, route) {
  const factoryResult = await componentFactory(result, props, children);
  if (factoryResult instanceof Response) {
    return factoryResult;
  } else if (!isRenderTemplateResult(factoryResult)) {
    throw new AstroError({
      ...OnlyResponseCanBeReturned,
      message: OnlyResponseCanBeReturned.message(route?.route, typeof factoryResult),
      location: {
        file: route?.component
      }
    });
  }
  return isHeadAndContent(factoryResult) ? factoryResult.content : factoryResult;
}
async function bufferHeadContent(result) {
  const iterator = result._metadata.propagators.values();
  while (true) {
    const { value, done } = iterator.next();
    if (done) {
      break;
    }
    const returnValue = await value.init(result);
    if (isHeadAndContent(returnValue)) {
      result._metadata.extraHead.push(returnValue.head);
    }
  }
}
async function renderToAsyncIterable(result, componentFactory, props, children, isPage = false, route) {
  const templateResult = await callComponentAsTemplateResultOrResponse(
    result,
    componentFactory,
    props,
    children,
    route
  );
  if (templateResult instanceof Response)
    return templateResult;
  let renderedFirstPageChunk = false;
  if (isPage) {
    await bufferHeadContent(result);
  }
  let error2 = null;
  let next = promiseWithResolvers();
  const buffer = [];
  const iterator = {
    async next() {
      await next.promise;
      if (error2) {
        throw error2;
      }
      let length = 0;
      for (let i3 = 0, len = buffer.length; i3 < len; i3++) {
        length += buffer[i3].length;
      }
      let mergedArray = new Uint8Array(length);
      let offset = 0;
      for (let i3 = 0, len = buffer.length; i3 < len; i3++) {
        const item = buffer[i3];
        mergedArray.set(item, offset);
        offset += item.length;
      }
      buffer.length = 0;
      const returnValue = {
        // The iterator is done if there are no chunks to return.
        done: length === 0,
        value: mergedArray
      };
      return returnValue;
    }
  };
  const destination = {
    write(chunk2) {
      if (isPage && !renderedFirstPageChunk) {
        renderedFirstPageChunk = true;
        if (!result.partial && !DOCTYPE_EXP.test(String(chunk2))) {
          const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
          buffer.push(encoder.encode(doctype));
        }
      }
      if (chunk2 instanceof Response) {
        throw new AstroError(ResponseSentError);
      }
      const bytes = chunkToByteArray(result, chunk2);
      if (bytes.length > 0) {
        buffer.push(bytes);
        next.resolve();
        next = promiseWithResolvers();
      }
    }
  };
  const renderPromise = templateResult.render(destination);
  renderPromise.then(() => {
    next.resolve();
  }).catch((err2) => {
    error2 = err2;
    next.resolve();
  });
  return {
    [Symbol.asyncIterator]() {
      return iterator;
    }
  };
}
function componentIsHTMLElement(Component) {
  return typeof HTMLElement !== "undefined" && HTMLElement.isPrototypeOf(Component);
}
async function renderHTMLElement(result, constructor, props, slots) {
  const name = getHTMLElementName(constructor);
  let attrHTML = "";
  for (const attr in props) {
    attrHTML += ` ${attr}="${toAttributeString(await props[attr])}"`;
  }
  return markHTMLString(
    `<${name}${attrHTML}>${await renderSlotToString(result, slots?.default)}</${name}>`
  );
}
function getHTMLElementName(constructor) {
  const definedName = customElements.getName(constructor);
  if (definedName)
    return definedName;
  const assignedName = constructor.name.replace(/^HTML|Element$/g, "").replace(/[A-Z]/g, "-$&").toLowerCase().replace(/^-/, "html-");
  return assignedName;
}
function guessRenderers(componentUrl) {
  const extname = componentUrl?.split(".").pop();
  switch (extname) {
    case "svelte":
      return ["@astrojs/svelte"];
    case "vue":
      return ["@astrojs/vue"];
    case "jsx":
    case "tsx":
      return ["@astrojs/react", "@astrojs/preact", "@astrojs/solid-js", "@astrojs/vue (jsx)"];
    default:
      return [
        "@astrojs/react",
        "@astrojs/preact",
        "@astrojs/solid-js",
        "@astrojs/vue",
        "@astrojs/svelte",
        "@astrojs/lit"
      ];
  }
}
function isFragmentComponent(Component) {
  return Component === Fragment2;
}
function isHTMLComponent(Component) {
  return Component && Component["astro:html"] === true;
}
function removeStaticAstroSlot(html2, supportsAstroStaticSlot) {
  const exp = supportsAstroStaticSlot ? ASTRO_STATIC_SLOT_EXP : ASTRO_SLOT_EXP;
  return html2.replace(exp, "");
}
async function renderFrameworkComponent(result, displayName, Component, _props, slots = {}) {
  if (!Component && !_props["client:only"]) {
    throw new Error(
      `Unable to render ${displayName} because it is ${Component}!
Did you forget to import the component or is it possible there is a typo?`
    );
  }
  const { renderers: renderers2, clientDirectives } = result;
  const metadata = {
    astroStaticSlot: true,
    displayName
  };
  const { hydration, isPage, props, propsWithoutTransitionAttributes } = extractDirectives(
    _props,
    clientDirectives
  );
  let html2 = "";
  let attrs = void 0;
  if (hydration) {
    metadata.hydrate = hydration.directive;
    metadata.hydrateArgs = hydration.value;
    metadata.componentExport = hydration.componentExport;
    metadata.componentUrl = hydration.componentUrl;
  }
  const probableRendererNames = guessRenderers(metadata.componentUrl);
  const validRenderers = renderers2.filter((r4) => r4.name !== "astro:jsx");
  const { children, slotInstructions } = await renderSlots(result, slots);
  let renderer;
  if (metadata.hydrate !== "only") {
    let isTagged = false;
    try {
      isTagged = Component && Component[Renderer];
    } catch {
    }
    if (isTagged) {
      const rendererName = Component[Renderer];
      renderer = renderers2.find(({ name }) => name === rendererName);
    }
    if (!renderer) {
      let error2;
      for (const r4 of renderers2) {
        try {
          if (await r4.ssr.check.call({ result }, Component, props, children)) {
            renderer = r4;
            break;
          }
        } catch (e2) {
          error2 ??= e2;
        }
      }
      if (!renderer && error2) {
        throw error2;
      }
    }
    if (!renderer && typeof HTMLElement === "function" && componentIsHTMLElement(Component)) {
      const output = await renderHTMLElement(
        result,
        Component,
        _props,
        slots
      );
      return {
        render(destination) {
          destination.write(output);
        }
      };
    }
  } else {
    if (metadata.hydrateArgs) {
      const passedName = metadata.hydrateArgs;
      const rendererName = rendererAliases.has(passedName) ? rendererAliases.get(passedName) : passedName;
      renderer = renderers2.find(
        ({ name }) => name === `@astrojs/${rendererName}` || name === rendererName
      );
    }
    if (!renderer && validRenderers.length === 1) {
      renderer = validRenderers[0];
    }
    if (!renderer) {
      const extname = metadata.componentUrl?.split(".").pop();
      renderer = renderers2.filter(
        ({ name }) => name === `@astrojs/${extname}` || name === extname
      )[0];
    }
  }
  if (!renderer) {
    if (metadata.hydrate === "only") {
      throw new AstroError({
        ...NoClientOnlyHint,
        message: NoClientOnlyHint.message(metadata.displayName),
        hint: NoClientOnlyHint.hint(
          probableRendererNames.map((r4) => r4.replace("@astrojs/", "")).join("|")
        )
      });
    } else if (typeof Component !== "string") {
      const matchingRenderers = validRenderers.filter(
        (r4) => probableRendererNames.includes(r4.name)
      );
      const plural = validRenderers.length > 1;
      if (matchingRenderers.length === 0) {
        throw new AstroError({
          ...NoMatchingRenderer,
          message: NoMatchingRenderer.message(
            metadata.displayName,
            metadata?.componentUrl?.split(".").pop(),
            plural,
            validRenderers.length
          ),
          hint: NoMatchingRenderer.hint(
            formatList(probableRendererNames.map((r4) => "`" + r4 + "`"))
          )
        });
      } else if (matchingRenderers.length === 1) {
        renderer = matchingRenderers[0];
        ({ html: html2, attrs } = await renderer.ssr.renderToStaticMarkup.call(
          { result },
          Component,
          propsWithoutTransitionAttributes,
          children,
          metadata
        ));
      } else {
        throw new Error(`Unable to render ${metadata.displayName}!

This component likely uses ${formatList(probableRendererNames)},
but Astro encountered an error during server-side rendering.

Please ensure that ${metadata.displayName}:
1. Does not unconditionally access browser-specific globals like \`window\` or \`document\`.
   If this is unavoidable, use the \`client:only\` hydration directive.
2. Does not conditionally return \`null\` or \`undefined\` when rendered on the server.

If you're still stuck, please open an issue on GitHub or join us at https://astro.build/chat.`);
      }
    }
  } else {
    if (metadata.hydrate === "only") {
      html2 = await renderSlotToString(result, slots?.fallback);
    } else {
      performance.now();
      ({ html: html2, attrs } = await renderer.ssr.renderToStaticMarkup.call(
        { result },
        Component,
        propsWithoutTransitionAttributes,
        children,
        metadata
      ));
    }
  }
  if (renderer && !renderer.clientEntrypoint && renderer.name !== "@astrojs/lit" && metadata.hydrate) {
    throw new AstroError({
      ...NoClientEntrypoint,
      message: NoClientEntrypoint.message(
        displayName,
        metadata.hydrate,
        renderer.name
      )
    });
  }
  if (!html2 && typeof Component === "string") {
    const Tag = sanitizeElementName(Component);
    const childSlots = Object.values(children).join("");
    const renderTemplateResult = renderTemplate`<${Tag}${internalSpreadAttributes(
      props
    )}${markHTMLString(
      childSlots === "" && voidElementNames.test(Tag) ? `/>` : `>${childSlots}</${Tag}>`
    )}`;
    html2 = "";
    const destination = {
      write(chunk2) {
        if (chunk2 instanceof Response)
          return;
        html2 += chunkToString(result, chunk2);
      }
    };
    await renderTemplateResult.render(destination);
  }
  if (!hydration) {
    return {
      render(destination) {
        if (slotInstructions) {
          for (const instruction of slotInstructions) {
            destination.write(instruction);
          }
        }
        if (isPage || renderer?.name === "astro:jsx") {
          destination.write(html2);
        } else if (html2 && html2.length > 0) {
          destination.write(
            markHTMLString(
              removeStaticAstroSlot(html2, renderer?.ssr?.supportsAstroStaticSlot ?? false)
            )
          );
        }
      }
    };
  }
  const astroId = shorthash(
    `<!--${metadata.componentExport.value}:${metadata.componentUrl}-->
${html2}
${serializeProps(
      props,
      metadata
    )}`
  );
  const island = await generateHydrateScript(
    { renderer, result, astroId, props, attrs },
    metadata
  );
  let unrenderedSlots = [];
  if (html2) {
    if (Object.keys(children).length > 0) {
      for (const key of Object.keys(children)) {
        let tagName = renderer?.ssr?.supportsAstroStaticSlot ? !!metadata.hydrate ? "astro-slot" : "astro-static-slot" : "astro-slot";
        let expectedHTML = key === "default" ? `<${tagName}>` : `<${tagName} name="${key}">`;
        if (!html2.includes(expectedHTML)) {
          unrenderedSlots.push(key);
        }
      }
    }
  } else {
    unrenderedSlots = Object.keys(children);
  }
  const template = unrenderedSlots.length > 0 ? unrenderedSlots.map(
    (key) => `<template data-astro-template${key !== "default" ? `="${key}"` : ""}>${children[key]}</template>`
  ).join("") : "";
  island.children = `${html2 ?? ""}${template}`;
  if (island.children) {
    island.props["await-children"] = "";
    island.children += `<!--astro:end-->`;
  }
  return {
    render(destination) {
      if (slotInstructions) {
        for (const instruction of slotInstructions) {
          destination.write(instruction);
        }
      }
      destination.write(createRenderInstruction({ type: "directive", hydration }));
      if (hydration.directive !== "only" && renderer?.ssr.renderHydrationScript) {
        destination.write(
          createRenderInstruction({
            type: "renderer-hydration-script",
            rendererName: renderer.name,
            render: renderer.ssr.renderHydrationScript
          })
        );
      }
      destination.write(markHTMLString(renderElement$1("astro-island", island, false)));
    }
  };
}
function sanitizeElementName(tag) {
  const unsafe = /[&<>'"\s]+/;
  if (!unsafe.test(tag))
    return tag;
  return tag.trim().split(unsafe)[0].trim();
}
async function renderFragmentComponent(result, slots = {}) {
  const children = await renderSlotToString(result, slots?.default);
  return {
    render(destination) {
      if (children == null)
        return;
      destination.write(children);
    }
  };
}
async function renderHTMLComponent(result, Component, _props, slots = {}) {
  const { slotInstructions, children } = await renderSlots(result, slots);
  const html2 = Component({ slots: children });
  const hydrationHtml = slotInstructions ? slotInstructions.map((instr) => chunkToString(result, instr)).join("") : "";
  return {
    render(destination) {
      destination.write(markHTMLString(hydrationHtml + html2));
    }
  };
}
function renderAstroComponent(result, displayName, Component, props, slots = {}) {
  const instance = createAstroComponentInstance(result, displayName, Component, props, slots);
  return {
    async render(destination) {
      await instance.render(destination);
    }
  };
}
async function renderComponent(result, displayName, Component, props, slots = {}) {
  if (isPromise(Component)) {
    Component = await Component;
  }
  if (isFragmentComponent(Component)) {
    return await renderFragmentComponent(result, slots);
  }
  props = normalizeProps(props);
  if (isHTMLComponent(Component)) {
    return await renderHTMLComponent(result, Component, props, slots);
  }
  if (isAstroComponentFactory(Component)) {
    return renderAstroComponent(result, displayName, Component, props, slots);
  }
  return await renderFrameworkComponent(result, displayName, Component, props, slots);
}
function normalizeProps(props) {
  if (props["class:list"] !== void 0) {
    const value = props["class:list"];
    delete props["class:list"];
    props["class"] = clsx(props["class"], value);
    if (props["class"] === "") {
      delete props["class"];
    }
  }
  return props;
}
async function renderComponentToString(result, displayName, Component, props, slots = {}, isPage = false, route) {
  let str = "";
  let renderedFirstPageChunk = false;
  let head2 = "";
  if (nonAstroPageNeedsHeadInjection(Component)) {
    for (const headChunk of maybeRenderHead()) {
      head2 += chunkToString(result, headChunk);
    }
  }
  try {
    const destination = {
      write(chunk2) {
        if (isPage && !renderedFirstPageChunk) {
          renderedFirstPageChunk = true;
          if (!result.partial && !/<!doctype html/i.test(String(chunk2))) {
            const doctype = result.compressHTML ? "<!DOCTYPE html>" : "<!DOCTYPE html>\n";
            str += doctype + head2;
          }
        }
        if (chunk2 instanceof Response)
          return;
        str += chunkToString(result, chunk2);
      }
    };
    const renderInstance = await renderComponent(result, displayName, Component, props, slots);
    await renderInstance.render(destination);
  } catch (e2) {
    if (AstroError.is(e2) && !e2.loc) {
      e2.setLocation({
        file: route?.component
      });
    }
    throw e2;
  }
  return str;
}
function nonAstroPageNeedsHeadInjection(pageComponent) {
  return !!pageComponent?.[needsHeadRenderingSymbol];
}
async function renderJSX(result, vnode) {
  switch (true) {
    case vnode instanceof HTMLString:
      if (vnode.toString().trim() === "") {
        return "";
      }
      return vnode;
    case typeof vnode === "string":
      return markHTMLString(escapeHTML(vnode));
    case typeof vnode === "function":
      return vnode;
    case (!vnode && vnode !== 0):
      return "";
    case Array.isArray(vnode):
      return markHTMLString(
        (await Promise.all(vnode.map((v4) => renderJSX(result, v4)))).join("")
      );
  }
  let skip2;
  if (vnode.props) {
    if (vnode.props[Skip.symbol]) {
      skip2 = vnode.props[Skip.symbol];
    } else {
      skip2 = new Skip(vnode);
    }
  } else {
    skip2 = new Skip(vnode);
  }
  return renderJSXVNode(result, vnode, skip2);
}
async function renderJSXVNode(result, vnode, skip2) {
  if (isVNode(vnode)) {
    switch (true) {
      case !vnode.type: {
        throw new Error(`Unable to render ${result.pathname} because it contains an undefined Component!
Did you forget to import the component or is it possible there is a typo?`);
      }
      case vnode.type === Symbol.for("astro:fragment"):
        return renderJSX(result, vnode.props.children);
      case vnode.type.isAstroComponentFactory: {
        let props = {};
        let slots = {};
        for (const [key, value] of Object.entries(vnode.props ?? {})) {
          if (key === "children" || value && typeof value === "object" && value["$$slot"]) {
            slots[key === "children" ? "default" : key] = () => renderJSX(result, value);
          } else {
            props[key] = value;
          }
        }
        const str = await renderToString(result, vnode.type, props, slots);
        if (str instanceof Response) {
          throw str;
        }
        const html2 = markHTMLString(str);
        return html2;
      }
      case (!vnode.type && vnode.type !== 0):
        return "";
      case (typeof vnode.type === "string" && vnode.type !== ClientOnlyPlaceholder):
        return markHTMLString(await renderElement(result, vnode.type, vnode.props ?? {}));
    }
    if (vnode.type) {
      let extractSlots2 = function(child) {
        if (Array.isArray(child)) {
          return child.map((c4) => extractSlots2(c4));
        }
        if (!isVNode(child)) {
          _slots.default.push(child);
          return;
        }
        if ("slot" in child.props) {
          _slots[child.props.slot] = [..._slots[child.props.slot] ?? [], child];
          delete child.props.slot;
          return;
        }
        _slots.default.push(child);
      };
      if (typeof vnode.type === "function" && vnode.type["astro:renderer"]) {
        skip2.increment();
      }
      if (typeof vnode.type === "function" && vnode.props["server:root"]) {
        const output2 = await vnode.type(vnode.props ?? {});
        return await renderJSX(result, output2);
      }
      if (typeof vnode.type === "function") {
        if (skip2.haveNoTried() || skip2.isCompleted()) {
          useConsoleFilter();
          try {
            const output2 = await vnode.type(vnode.props ?? {});
            let renderResult;
            if (output2?.[AstroJSX]) {
              renderResult = await renderJSXVNode(result, output2, skip2);
              return renderResult;
            } else if (!output2) {
              renderResult = await renderJSXVNode(result, output2, skip2);
              return renderResult;
            }
          } catch (e2) {
            if (skip2.isCompleted()) {
              throw e2;
            }
            skip2.increment();
          } finally {
            finishUsingConsoleFilter();
          }
        } else {
          skip2.increment();
        }
      }
      const { children = null, ...props } = vnode.props ?? {};
      const _slots = {
        default: []
      };
      extractSlots2(children);
      for (const [key, value] of Object.entries(props)) {
        if (value["$$slot"]) {
          _slots[key] = value;
          delete props[key];
        }
      }
      const slotPromises = [];
      const slots = {};
      for (const [key, value] of Object.entries(_slots)) {
        slotPromises.push(
          renderJSX(result, value).then((output2) => {
            if (output2.toString().trim().length === 0)
              return;
            slots[key] = () => output2;
          })
        );
      }
      await Promise.all(slotPromises);
      props[Skip.symbol] = skip2;
      let output;
      if (vnode.type === ClientOnlyPlaceholder && vnode.props["client:only"]) {
        output = await renderComponentToString(
          result,
          vnode.props["client:display-name"] ?? "",
          null,
          props,
          slots
        );
      } else {
        output = await renderComponentToString(
          result,
          typeof vnode.type === "function" ? vnode.type.name : vnode.type,
          vnode.type,
          props,
          slots
        );
      }
      return markHTMLString(output);
    }
  }
  return markHTMLString(`${vnode}`);
}
async function renderElement(result, tag, { children, ...props }) {
  return markHTMLString(
    `<${tag}${spreadAttributes(props)}${markHTMLString(
      (children == null || children == "") && voidElementNames.test(tag) ? `/>` : `>${children == null ? "" : await renderJSX(result, prerenderElementChildren(tag, children))}</${tag}>`
    )}`
  );
}
function prerenderElementChildren(tag, children) {
  if (typeof children === "string" && (tag === "style" || tag === "script")) {
    return markHTMLString(children);
  } else {
    return children;
  }
}
function useConsoleFilter() {
  consoleFilterRefs++;
  if (!originalConsoleError) {
    originalConsoleError = console.error;
    try {
      console.error = filteredConsoleError;
    } catch (error2) {
    }
  }
}
function finishUsingConsoleFilter() {
  consoleFilterRefs--;
}
function filteredConsoleError(msg, ...rest) {
  if (consoleFilterRefs > 0 && typeof msg === "string") {
    const isKnownReactHookError = msg.includes("Warning: Invalid hook call.") && msg.includes("https://reactjs.org/link/invalid-hook-call");
    if (isKnownReactHookError)
      return;
  }
  originalConsoleError(msg, ...rest);
}
async function renderPage(result, componentFactory, props, children, streaming, route) {
  if (!isAstroComponentFactory(componentFactory)) {
    result._metadata.headInTree = result.componentMetadata.get(componentFactory.moduleId)?.containsHead ?? false;
    const pageProps = { ...props ?? {}, "server:root": true };
    const str = await renderComponentToString(
      result,
      componentFactory.name,
      componentFactory,
      pageProps,
      {},
      true,
      route
    );
    const bytes = encoder.encode(str);
    return new Response(bytes, {
      headers: new Headers([
        ["Content-Type", "text/html; charset=utf-8"],
        ["Content-Length", bytes.byteLength.toString()]
      ])
    });
  }
  result._metadata.headInTree = result.componentMetadata.get(componentFactory.moduleId)?.containsHead ?? false;
  let body;
  if (streaming) {
    if (isNode) {
      const nodeBody = await renderToAsyncIterable(
        result,
        componentFactory,
        props,
        children,
        true,
        route
      );
      body = nodeBody;
    } else {
      body = await renderToReadableStream(result, componentFactory, props, children, true, route);
    }
  } else {
    body = await renderToString(result, componentFactory, props, children, true, route);
  }
  if (body instanceof Response)
    return body;
  const init3 = result.response;
  const headers = new Headers(init3.headers);
  if (!streaming && typeof body === "string") {
    body = encoder.encode(body);
    headers.set("Content-Length", body.byteLength.toString());
  }
  if (route?.component.endsWith(".md")) {
    headers.set("Content-Type", "text/html; charset=utf-8");
  }
  const response = new Response(body, { ...init3, headers });
  return response;
}
function spreadAttributes(values = {}, _name, { class: scopedClassName } = {}) {
  let output = "";
  if (scopedClassName) {
    if (typeof values.class !== "undefined") {
      values.class += ` ${scopedClassName}`;
    } else if (typeof values["class:list"] !== "undefined") {
      values["class:list"] = [values["class:list"], scopedClassName];
    } else {
      values.class = scopedClassName;
    }
  }
  for (const [key, value] of Object.entries(values)) {
    output += addAttribute(value, key, true);
  }
  return markHTMLString(output);
}
var import_cssesc, ClientAddressNotAvailable, StaticClientAddressNotAvailable, NoMatchingStaticPathFound, OnlyResponseCanBeReturned, MissingMediaQueryDirective, NoMatchingRenderer, NoClientEntrypoint, NoClientOnlyHint, InvalidGetStaticPathsEntry, InvalidGetStaticPathsReturn, GetStaticPathsExpectedParams, GetStaticPathsInvalidRouteParam, GetStaticPathsRequired, ReservedSlotName, NoMatchingImport, InvalidComponentArgs, PageNumberParamNotFound, ImageMissingAlt, InvalidImageService, MissingImageDimension, FailedToFetchRemoteImageDimensions, UnsupportedImageFormat, UnsupportedImageConversion, PrerenderDynamicEndpointPathCollide, ExpectedImage, ExpectedImageOptions, IncompatibleDescriptorOptions, ResponseSentError, MiddlewareNoDataOrNextCalled, MiddlewareNotAResponse, LocalsNotAnObject, LocalImageUsedWrongly, AstroGlobUsedOutside, AstroGlobNoMatch, AstroError, ASTRO_VERSION, REROUTE_DIRECTIVE_HEADER, ROUTE_TYPE_HEADER, REROUTABLE_STATUS_CODES, clientAddressSymbol, clientLocalsSymbol, responseSentSymbol, escapeHTML, HTMLBytes, HTMLString, markHTMLString, AstroJSX, RenderInstructionSymbol, PROP_TYPE, transitionDirectivesToCopyOnIsland, dictionary, binary, headAndContentSym, astro_island_prebuilt_default, ISLAND_STYLES, voidElementNames, htmlBooleanAttributes, htmlEnumAttributes, svgEnumAttributes, STATIC_DIRECTIVES, toIdent, toAttributeString, kebab, toStyleString, isNode, uniqueElements, slotString, SlotString, Fragment2, Renderer, encoder, decoder, astroComponentInstanceSym, AstroComponentInstance, renderTemplateResultSym, RenderTemplateResult, DOCTYPE_EXP, needsHeadRenderingSymbol, rendererAliases, ASTRO_SLOT_EXP, ASTRO_STATIC_SLOT_EXP, ClientOnlyPlaceholder, Skip, originalConsoleError, consoleFilterRefs;
var init_astro_u8tnI5Mh = __esm({
  "dist/$server_build/chunks/astro_u8tnI5Mh.mjs"() {
    "use strict";
    init_colors();
    init_clsx();
    init_esm();
    import_cssesc = __toESM(require_cssesc(), 1);
    ClientAddressNotAvailable = {
      name: "ClientAddressNotAvailable",
      title: "`Astro.clientAddress` is not available in current adapter.",
      message: (adapterName) => `\`Astro.clientAddress\` is not available in the \`${adapterName}\` adapter. File an issue with the adapter to add support.`
    };
    StaticClientAddressNotAvailable = {
      name: "StaticClientAddressNotAvailable",
      title: "`Astro.clientAddress` is not available in static mode.",
      message: "`Astro.clientAddress` is only available when using `output: 'server'` or `output: 'hybrid'`. Update your Astro config if you need SSR features.",
      hint: "See https://docs.astro.build/en/guides/server-side-rendering/ for more information on how to enable SSR."
    };
    NoMatchingStaticPathFound = {
      name: "NoMatchingStaticPathFound",
      title: "No static path found for requested path.",
      message: (pathName) => `A \`getStaticPaths()\` route pattern was matched, but no matching static path was found for requested path \`${pathName}\`.`,
      hint: (possibleRoutes) => `Possible dynamic routes being matched: ${possibleRoutes.join(", ")}.`
    };
    OnlyResponseCanBeReturned = {
      name: "OnlyResponseCanBeReturned",
      title: "Invalid type returned by Astro page.",
      message: (route, returnedValue) => `Route \`${route ? route : ""}\` returned a \`${returnedValue}\`. Only a [Response](https://developer.mozilla.org/en-US/docs/Web/API/Response) can be returned from Astro files.`,
      hint: "See https://docs.astro.build/en/guides/server-side-rendering/#response for more information."
    };
    MissingMediaQueryDirective = {
      name: "MissingMediaQueryDirective",
      title: "Missing value for `client:media` directive.",
      message: 'Media query not provided for `client:media` directive. A media query similar to `client:media="(max-width: 600px)"` must be provided'
    };
    NoMatchingRenderer = {
      name: "NoMatchingRenderer",
      title: "No matching renderer found.",
      message: (componentName, componentExtension, plural, validRenderersCount) => `Unable to render \`${componentName}\`.

${validRenderersCount > 0 ? `There ${plural ? "are" : "is"} ${validRenderersCount} renderer${plural ? "s" : ""} configured in your \`astro.config.mjs\` file,
but ${plural ? "none were" : "it was not"} able to server-side render \`${componentName}\`.` : `No valid renderer was found ${componentExtension ? `for the \`.${componentExtension}\` file extension.` : `for this file extension.`}`}`,
      hint: (probableRenderers) => `Did you mean to enable the ${probableRenderers} integration?

See https://docs.astro.build/en/guides/framework-components/ for more information on how to install and configure integrations.`
    };
    NoClientEntrypoint = {
      name: "NoClientEntrypoint",
      title: "No client entrypoint specified in renderer.",
      message: (componentName, clientDirective, rendererName) => `\`${componentName}\` component has a \`client:${clientDirective}\` directive, but no client entrypoint was provided by \`${rendererName}\`.`,
      hint: "See https://docs.astro.build/en/reference/integrations-reference/#addrenderer-option for more information on how to configure your renderer."
    };
    NoClientOnlyHint = {
      name: "NoClientOnlyHint",
      title: "Missing hint on client:only directive.",
      message: (componentName) => `Unable to render \`${componentName}\`. When using the \`client:only\` hydration strategy, Astro needs a hint to use the correct renderer.`,
      hint: (probableRenderers) => `Did you mean to pass \`client:only="${probableRenderers}"\`? See https://docs.astro.build/en/reference/directives-reference/#clientonly for more information on client:only`
    };
    InvalidGetStaticPathsEntry = {
      name: "InvalidGetStaticPathsEntry",
      title: "Invalid entry inside getStaticPath's return value",
      message: (entryType) => `Invalid entry returned by getStaticPaths. Expected an object, got \`${entryType}\``,
      hint: "If you're using a `.map` call, you might be looking for `.flatMap()` instead. See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    InvalidGetStaticPathsReturn = {
      name: "InvalidGetStaticPathsReturn",
      title: "Invalid value returned by getStaticPaths.",
      message: (returnType) => `Invalid type returned by \`getStaticPaths\`. Expected an \`array\`, got \`${returnType}\``,
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsExpectedParams = {
      name: "GetStaticPathsExpectedParams",
      title: "Missing params property on `getStaticPaths` route.",
      message: "Missing or empty required `params` property on `getStaticPaths` route.",
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsInvalidRouteParam = {
      name: "GetStaticPathsInvalidRouteParam",
      title: "Invalid value for `getStaticPaths` route parameter.",
      message: (key, value, valueType) => `Invalid getStaticPaths route parameter for \`${key}\`. Expected undefined, a string or a number, received \`${valueType}\` (\`${value}\`)`,
      hint: "See https://docs.astro.build/en/reference/api-reference/#getstaticpaths for more information on getStaticPaths."
    };
    GetStaticPathsRequired = {
      name: "GetStaticPathsRequired",
      title: "`getStaticPaths()` function required for dynamic routes.",
      message: "`getStaticPaths()` function is required for dynamic routes. Make sure that you `export` a `getStaticPaths` function from your dynamic route.",
      hint: `See https://docs.astro.build/en/guides/routing/#dynamic-routes for more information on dynamic routes.

Alternatively, set \`output: "server"\` or \`output: "hybrid"\` in your Astro config file to switch to a non-static server build. This error can also occur if using \`export const prerender = true;\`.
See https://docs.astro.build/en/guides/server-side-rendering/ for more information on non-static rendering.`
    };
    ReservedSlotName = {
      name: "ReservedSlotName",
      title: "Invalid slot name.",
      message: (slotName2) => `Unable to create a slot named \`${slotName2}\`. \`${slotName2}\` is a reserved slot name. Please update the name of this slot.`
    };
    NoMatchingImport = {
      name: "NoMatchingImport",
      title: "No import found for component.",
      message: (componentName) => `Could not render \`${componentName}\`. No matching import has been found for \`${componentName}\`.`,
      hint: "Please make sure the component is properly imported."
    };
    InvalidComponentArgs = {
      name: "InvalidComponentArgs",
      title: "Invalid component arguments.",
      message: (name) => `Invalid arguments passed to${name ? ` <${name}>` : ""} component.`,
      hint: "Astro components cannot be rendered directly via function call, such as `Component()` or `{items.map(Component)}`."
    };
    PageNumberParamNotFound = {
      name: "PageNumberParamNotFound",
      title: "Page number param not found.",
      message: (paramName) => `[paginate()] page number param \`${paramName}\` not found in your filepath.`,
      hint: "Rename your file to `[page].astro` or `[...page].astro`."
    };
    ImageMissingAlt = {
      name: "ImageMissingAlt",
      title: 'Image missing required "alt" property.',
      message: 'Image missing "alt" property. "alt" text is required to describe important images on the page.',
      hint: 'Use an empty string ("") for decorative images.'
    };
    InvalidImageService = {
      name: "InvalidImageService",
      title: "Error while loading image service.",
      message: "There was an error loading the configured image service. Please see the stack trace for more information."
    };
    MissingImageDimension = {
      name: "MissingImageDimension",
      title: "Missing image dimensions",
      message: (missingDimension, imageURL) => `Missing ${missingDimension === "both" ? "width and height attributes" : `${missingDimension} attribute`} for ${imageURL}. When using remote images, both dimensions are required unless in order to avoid CLS.`,
      hint: "If your image is inside your `src` folder, you probably meant to import it instead. See [the Imports guide for more information](https://docs.astro.build/en/guides/imports/#other-assets). You can also use `inferSize={true}` for remote images to get the original dimensions."
    };
    FailedToFetchRemoteImageDimensions = {
      name: "FailedToFetchRemoteImageDimensions",
      title: "Failed to retrieve remote image dimensions",
      message: (imageURL) => `Failed to get the dimensions for ${imageURL}.`,
      hint: "Verify your remote image URL is accurate, and that you are not using `inferSize` with a file located in your `public/` folder."
    };
    UnsupportedImageFormat = {
      name: "UnsupportedImageFormat",
      title: "Unsupported image format",
      message: (format2, imagePath, supportedFormats) => `Received unsupported format \`${format2}\` from \`${imagePath}\`. Currently only ${supportedFormats.join(
        ", "
      )} are supported by our image services.`,
      hint: "Using an `img` tag directly instead of the `Image` component might be what you're looking for."
    };
    UnsupportedImageConversion = {
      name: "UnsupportedImageConversion",
      title: "Unsupported image conversion",
      message: "Converting between vector (such as SVGs) and raster (such as PNGs and JPEGs) images is not currently supported."
    };
    PrerenderDynamicEndpointPathCollide = {
      name: "PrerenderDynamicEndpointPathCollide",
      title: "Prerendered dynamic endpoint has path collision.",
      message: (pathname) => `Could not render \`${pathname}\` with an \`undefined\` param as the generated path will collide during prerendering. Prevent passing \`undefined\` as \`params\` for the endpoint's \`getStaticPaths()\` function, or add an additional extension to the endpoint's filename.`,
      hint: (filename) => `Rename \`${filename}\` to \`${filename.replace(/\.(?:js|ts)/, (m4) => `.json` + m4)}\``
    };
    ExpectedImage = {
      name: "ExpectedImage",
      title: "Expected src to be an image.",
      message: (src, typeofOptions, fullOptions) => `Expected \`src\` property for \`getImage\` or \`<Image />\` to be either an ESM imported image or a string with the path of a remote image. Received \`${src}\` (type: \`${typeofOptions}\`).

Full serialized options received: \`${fullOptions}\`.`,
      hint: "This error can often happen because of a wrong path. Make sure the path to your image is correct. If you're passing an async function, make sure to call and await it."
    };
    ExpectedImageOptions = {
      name: "ExpectedImageOptions",
      title: "Expected image options.",
      message: (options) => `Expected getImage() parameter to be an object. Received \`${options}\`.`
    };
    IncompatibleDescriptorOptions = {
      name: "IncompatibleDescriptorOptions",
      title: "Cannot set both `densities` and `widths`",
      message: "Only one of `densities` or `widths` can be specified. In most cases, you'll probably want to use only `widths` if you require specific widths.",
      hint: "Those attributes are used to construct a `srcset` attribute, which cannot have both `x` and `w` descriptors."
    };
    ResponseSentError = {
      name: "ResponseSentError",
      title: "Unable to set response.",
      message: "The response has already been sent to the browser and cannot be altered."
    };
    MiddlewareNoDataOrNextCalled = {
      name: "MiddlewareNoDataOrNextCalled",
      title: "The middleware didn't return a `Response`.",
      message: "Make sure your middleware returns a `Response` object, either directly or by returning the `Response` from calling the `next` function."
    };
    MiddlewareNotAResponse = {
      name: "MiddlewareNotAResponse",
      title: "The middleware returned something that is not a `Response` object.",
      message: "Any data returned from middleware must be a valid `Response` object."
    };
    LocalsNotAnObject = {
      name: "LocalsNotAnObject",
      title: "Value assigned to `locals` is not accepted.",
      message: "`locals` can only be assigned to an object. Other values like numbers, strings, etc. are not accepted.",
      hint: "If you tried to remove some information from the `locals` object, try to use `delete` or set the property to `undefined`."
    };
    LocalImageUsedWrongly = {
      name: "LocalImageUsedWrongly",
      title: "Local images must be imported.",
      message: (imageFilePath) => `\`Image\`'s and \`getImage\`'s \`src\` parameter must be an imported image or an URL, it cannot be a string filepath. Received \`${imageFilePath}\`.`,
      hint: "If you want to use an image from your `src` folder, you need to either import it or if the image is coming from a content collection, use the [image() schema helper](https://docs.astro.build/en/guides/images/#images-in-content-collections). See https://docs.astro.build/en/guides/images/#src-required for more information on the `src` property."
    };
    AstroGlobUsedOutside = {
      name: "AstroGlobUsedOutside",
      title: "Astro.glob() used outside of an Astro file.",
      message: (globStr) => `\`Astro.glob(${globStr})\` can only be used in \`.astro\` files. \`import.meta.glob(${globStr})\` can be used instead to achieve a similar result.`,
      hint: "See Vite's documentation on `import.meta.glob` for more information: https://vitejs.dev/guide/features.html#glob-import"
    };
    AstroGlobNoMatch = {
      name: "AstroGlobNoMatch",
      title: "Astro.glob() did not match any files.",
      message: (globStr) => `\`Astro.glob(${globStr})\` did not return any matching files.`,
      hint: "Check the pattern for typos."
    };
    AstroError = class extends Error {
      loc;
      title;
      hint;
      frame;
      type = "AstroError";
      constructor(props, options) {
        const { name, title, message: message2, stack, location, hint, frame } = props;
        super(message2, options);
        this.title = title;
        this.name = name;
        if (message2)
          this.message = message2;
        this.stack = stack ? stack : this.stack;
        this.loc = location;
        this.hint = hint;
        this.frame = frame;
      }
      setLocation(location) {
        this.loc = location;
      }
      setName(name) {
        this.name = name;
      }
      setMessage(message2) {
        this.message = message2;
      }
      setHint(hint) {
        this.hint = hint;
      }
      setFrame(source, location) {
        this.frame = codeFrame(source, location);
      }
      static is(err2) {
        return err2.type === "AstroError";
      }
    };
    ASTRO_VERSION = "4.4.1";
    REROUTE_DIRECTIVE_HEADER = "X-Astro-Reroute";
    ROUTE_TYPE_HEADER = "X-Astro-Route-Type";
    REROUTABLE_STATUS_CODES = [404, 500];
    clientAddressSymbol = Symbol.for("astro.clientAddress");
    clientLocalsSymbol = Symbol.for("astro.locals");
    responseSentSymbol = Symbol.for("astro.responseSent");
    escapeHTML = escape;
    HTMLBytes = class extends Uint8Array {
    };
    Object.defineProperty(HTMLBytes.prototype, Symbol.toStringTag, {
      get() {
        return "HTMLBytes";
      }
    });
    HTMLString = class extends String {
      get [Symbol.toStringTag]() {
        return "HTMLString";
      }
    };
    markHTMLString = (value) => {
      if (value instanceof HTMLString) {
        return value;
      }
      if (typeof value === "string") {
        return new HTMLString(value);
      }
      return value;
    };
    AstroJSX = "astro:jsx";
    RenderInstructionSymbol = Symbol.for("astro:render");
    PROP_TYPE = {
      Value: 0,
      JSON: 1,
      // Actually means Array
      RegExp: 2,
      Date: 3,
      Map: 4,
      Set: 5,
      BigInt: 6,
      URL: 7,
      Uint8Array: 8,
      Uint16Array: 9,
      Uint32Array: 10
    };
    transitionDirectivesToCopyOnIsland = Object.freeze([
      "data-astro-transition-scope",
      "data-astro-transition-persist"
    ]);
    dictionary = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXY";
    binary = dictionary.length;
    headAndContentSym = Symbol.for("astro.headAndContent");
    astro_island_prebuilt_default = `(()=>{var v=Object.defineProperty;var A=(c,s,a)=>s in c?v(c,s,{enumerable:!0,configurable:!0,writable:!0,value:a}):c[s]=a;var d=(c,s,a)=>(A(c,typeof s!="symbol"?s+"":s,a),a);var u;{let c={0:t=>m(t),1:t=>a(t),2:t=>new RegExp(t),3:t=>new Date(t),4:t=>new Map(a(t)),5:t=>new Set(a(t)),6:t=>BigInt(t),7:t=>new URL(t),8:t=>new Uint8Array(t),9:t=>new Uint16Array(t),10:t=>new Uint32Array(t)},s=t=>{let[e,n]=t;return e in c?c[e](n):void 0},a=t=>t.map(s),m=t=>typeof t!="object"||t===null?t:Object.fromEntries(Object.entries(t).map(([e,n])=>[e,s(n)]));customElements.get("astro-island")||customElements.define("astro-island",(u=class extends HTMLElement{constructor(){super(...arguments);d(this,"Component");d(this,"hydrator");d(this,"hydrate",async()=>{var f;if(!this.hydrator||!this.isConnected)return;let e=(f=this.parentElement)==null?void 0:f.closest("astro-island[ssr]");if(e){e.addEventListener("astro:hydrate",this.hydrate,{once:!0});return}let n=this.querySelectorAll("astro-slot"),r={},l=this.querySelectorAll("template[data-astro-template]");for(let o of l){let i=o.closest(this.tagName);i!=null&&i.isSameNode(this)&&(r[o.getAttribute("data-astro-template")||"default"]=o.innerHTML,o.remove())}for(let o of n){let i=o.closest(this.tagName);i!=null&&i.isSameNode(this)&&(r[o.getAttribute("name")||"default"]=o.innerHTML)}let h;try{h=this.hasAttribute("props")?m(JSON.parse(this.getAttribute("props"))):{}}catch(o){let i=this.getAttribute("component-url")||"<unknown>",b=this.getAttribute("component-export");throw b&&(i+=\` (export \${b})\`),console.error(\`[hydrate] Error parsing props for component \${i}\`,this.getAttribute("props"),o),o}let p;await this.hydrator(this)(this.Component,h,r,{client:this.getAttribute("client")}),this.removeAttribute("ssr"),this.dispatchEvent(new CustomEvent("astro:hydrate"))});d(this,"unmount",()=>{this.isConnected||this.dispatchEvent(new CustomEvent("astro:unmount"))})}disconnectedCallback(){document.removeEventListener("astro:after-swap",this.unmount),document.addEventListener("astro:after-swap",this.unmount,{once:!0})}connectedCallback(){if(!this.hasAttribute("await-children")||document.readyState==="interactive"||document.readyState==="complete")this.childrenConnectedCallback();else{let e=()=>{document.removeEventListener("DOMContentLoaded",e),n.disconnect(),this.childrenConnectedCallback()},n=new MutationObserver(()=>{var r;((r=this.lastChild)==null?void 0:r.nodeType)===Node.COMMENT_NODE&&this.lastChild.nodeValue==="astro:end"&&(this.lastChild.remove(),e())});n.observe(this,{childList:!0}),document.addEventListener("DOMContentLoaded",e)}}async childrenConnectedCallback(){let e=this.getAttribute("before-hydration-url");e&&await import(e),this.start()}async start(){let e=JSON.parse(this.getAttribute("opts")),n=this.getAttribute("client");if(Astro[n]===void 0){window.addEventListener(\`astro:\${n}\`,()=>this.start(),{once:!0});return}try{await Astro[n](async()=>{let r=this.getAttribute("renderer-url"),[l,{default:h}]=await Promise.all([import(this.getAttribute("component-url")),r?import(r):()=>()=>{}]),p=this.getAttribute("component-export")||"default";if(!p.includes("."))this.Component=l[p];else{this.Component=l;for(let y of p.split("."))this.Component=this.Component[y]}return this.hydrator=h,this.hydrate},e,this)}catch(r){console.error(\`[astro-island] Error hydrating \${this.getAttribute("component-url")}\`,r)}}attributeChangedCallback(){this.hydrate()}},d(u,"observedAttributes",["props"]),u))}})();`;
    ISLAND_STYLES = `<style>astro-island,astro-slot,astro-static-slot{display:contents}</style>`;
    voidElementNames = /^(area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/i;
    htmlBooleanAttributes = /^(?:allowfullscreen|async|autofocus|autoplay|controls|default|defer|disabled|disablepictureinpicture|disableremoteplayback|formnovalidate|hidden|loop|nomodule|novalidate|open|playsinline|readonly|required|reversed|scoped|seamless|itemscope)$/i;
    htmlEnumAttributes = /^(?:contenteditable|draggable|spellcheck|value)$/i;
    svgEnumAttributes = /^(?:autoReverse|externalResourcesRequired|focusable|preserveAlpha)$/i;
    STATIC_DIRECTIVES = /* @__PURE__ */ new Set(["set:html", "set:text"]);
    toIdent = (k6) => k6.trim().replace(/(?!^)\b\w|\s+|\W+/g, (match, index) => {
      if (/\W/.test(match))
        return "";
      return index === 0 ? match : match.toUpperCase();
    });
    toAttributeString = (value, shouldEscape = true) => shouldEscape ? String(value).replace(/&/g, "&#38;").replace(/"/g, "&#34;") : value;
    kebab = (k6) => k6.toLowerCase() === k6 ? k6 : k6.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
    toStyleString = (obj) => Object.entries(obj).filter(([_6, v4]) => typeof v4 === "string" && v4.trim() || typeof v4 === "number").map(([k6, v4]) => {
      if (k6[0] !== "-" && k6[1] !== "-")
        return `${kebab(k6)}:${v4}`;
      return `${k6}:${v4}`;
    }).join(";");
    isNode = typeof process !== "undefined" && Object.prototype.toString.call(process) === "[object process]";
    uniqueElements = (item, index, all) => {
      const props = JSON.stringify(item.props);
      const children = item.children;
      return index === all.findIndex((i3) => JSON.stringify(i3.props) === props && i3.children == children);
    };
    slotString = Symbol.for("astro:slot-string");
    SlotString = class extends HTMLString {
      instructions;
      [slotString];
      constructor(content, instructions) {
        super(content);
        this.instructions = instructions;
        this[slotString] = true;
      }
    };
    Fragment2 = Symbol.for("astro:fragment");
    Renderer = Symbol.for("astro:renderer");
    encoder = new TextEncoder();
    decoder = new TextDecoder();
    astroComponentInstanceSym = Symbol.for("astro.componentInstance");
    AstroComponentInstance = class {
      [astroComponentInstanceSym] = true;
      result;
      props;
      slotValues;
      factory;
      returnValue;
      constructor(result, props, slots, factory) {
        this.result = result;
        this.props = props;
        this.factory = factory;
        this.slotValues = {};
        for (const name in slots) {
          let didRender = false;
          let value = slots[name](result);
          this.slotValues[name] = () => {
            if (!didRender) {
              didRender = true;
              return value;
            }
            return slots[name](result);
          };
        }
      }
      async init(result) {
        if (this.returnValue !== void 0)
          return this.returnValue;
        this.returnValue = this.factory(result, this.props, this.slotValues);
        return this.returnValue;
      }
      async render(destination) {
        if (this.returnValue === void 0) {
          await this.init(this.result);
        }
        let value = this.returnValue;
        if (isPromise(value)) {
          value = await value;
        }
        if (isHeadAndContent(value)) {
          await value.content.render(destination);
        } else {
          await renderChild(destination, value);
        }
      }
    };
    renderTemplateResultSym = Symbol.for("astro.renderTemplateResult");
    RenderTemplateResult = class {
      [renderTemplateResultSym] = true;
      htmlParts;
      expressions;
      error;
      constructor(htmlParts, expressions) {
        this.htmlParts = htmlParts;
        this.error = void 0;
        this.expressions = expressions.map((expression) => {
          if (isPromise(expression)) {
            return Promise.resolve(expression).catch((err2) => {
              if (!this.error) {
                this.error = err2;
                throw err2;
              }
            });
          }
          return expression;
        });
      }
      async render(destination) {
        const expRenders = this.expressions.map((exp) => {
          return renderToBufferDestination((bufferDestination) => {
            if (exp || exp === 0) {
              return renderChild(bufferDestination, exp);
            }
          });
        });
        for (let i3 = 0; i3 < this.htmlParts.length; i3++) {
          const html2 = this.htmlParts[i3];
          const expRender = expRenders[i3];
          destination.write(markHTMLString(html2));
          if (expRender) {
            await expRender.renderToFinalDestination(destination);
          }
        }
      }
    };
    DOCTYPE_EXP = /<!doctype html/i;
    needsHeadRenderingSymbol = Symbol.for("astro.needsHeadRendering");
    rendererAliases = /* @__PURE__ */ new Map([["solid", "solid-js"]]);
    ASTRO_SLOT_EXP = /<\/?astro-slot\b[^>]*>/g;
    ASTRO_STATIC_SLOT_EXP = /<\/?astro-static-slot\b[^>]*>/g;
    ClientOnlyPlaceholder = "astro-client-only";
    Skip = class {
      constructor(vnode) {
        this.vnode = vnode;
        this.count = 0;
      }
      count;
      increment() {
        this.count++;
      }
      haveNoTried() {
        return this.count === 0;
      }
      isCompleted() {
        return this.count > 2;
      }
      static symbol = Symbol("astro:jsx:skip");
    };
    consoleFilterRefs = 0;
    "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_".split("").reduce((v4, c4) => (v4[c4.charCodeAt(0)] = c4, v4), []);
    "-0123456789_".split("").reduce((v4, c4) => (v4[c4.charCodeAt(0)] = c4, v4), []);
  }
});

// dist/$server_build/chunks/astro/assets-service_1zQtc2bO.mjs
var assets_service_1zQtc2bO_exports = {};
__export(assets_service_1zQtc2bO_exports, {
  D: () => DEFAULT_HASH_PROPS,
  a: () => isESMImportedImage,
  b: () => isLocalService,
  c: () => isRemotePath,
  d: () => isRemoteAllowed,
  e: () => appendForwardSlash,
  f: () => collapseDuplicateSlashes,
  i: () => isRemoteImage,
  j: () => joinPaths,
  n: () => noop,
  p: () => prependForwardSlash,
  r: () => removeTrailingForwardSlash,
  s: () => slash,
  t: () => trimSlashes
});
function appendForwardSlash(path) {
  return path.endsWith("/") ? path : path + "/";
}
function prependForwardSlash(path) {
  return path[0] === "/" ? path : "/" + path;
}
function collapseDuplicateSlashes(path) {
  return path.replace(/(?<!:)\/\/+/g, "/");
}
function removeTrailingForwardSlash(path) {
  return path.endsWith("/") ? path.slice(0, path.length - 1) : path;
}
function removeLeadingForwardSlash(path) {
  return path.startsWith("/") ? path.substring(1) : path;
}
function trimSlashes(path) {
  return path.replace(/^\/|\/$/g, "");
}
function isString(path) {
  return typeof path === "string" || path instanceof String;
}
function joinPaths(...paths) {
  return paths.filter(isString).map((path, i3) => {
    if (i3 === 0) {
      return removeTrailingForwardSlash(path);
    } else if (i3 === paths.length - 1) {
      return removeLeadingForwardSlash(path);
    } else {
      return trimSlashes(path);
    }
  }).join("/");
}
function isRemotePath(src) {
  return /^(http|ftp|https|ws):?\/\//.test(src) || src.startsWith("data:");
}
function slash(path) {
  return path.replace(/\\/g, "/");
}
function isESMImportedImage(src) {
  return typeof src === "object";
}
function isRemoteImage(src) {
  return typeof src === "string";
}
function matchPattern(url, remotePattern) {
  return matchProtocol(url, remotePattern.protocol) && matchHostname(url, remotePattern.hostname, true) && matchPort(url, remotePattern.port) && matchPathname(url, remotePattern.pathname, true);
}
function matchPort(url, port) {
  return !port || port === url.port;
}
function matchProtocol(url, protocol) {
  return !protocol || protocol === url.protocol.slice(0, -1);
}
function matchHostname(url, hostname, allowWildcard) {
  if (!hostname) {
    return true;
  } else if (!allowWildcard || !hostname.startsWith("*")) {
    return hostname === url.hostname;
  } else if (hostname.startsWith("**.")) {
    const slicedHostname = hostname.slice(2);
    return slicedHostname !== url.hostname && url.hostname.endsWith(slicedHostname);
  } else if (hostname.startsWith("*.")) {
    const slicedHostname = hostname.slice(1);
    const additionalSubdomains = url.hostname.replace(slicedHostname, "").split(".").filter(Boolean);
    return additionalSubdomains.length === 1;
  }
  return false;
}
function matchPathname(url, pathname, allowWildcard) {
  if (!pathname) {
    return true;
  } else if (!allowWildcard || !pathname.endsWith("*")) {
    return pathname === url.pathname;
  } else if (pathname.endsWith("/**")) {
    const slicedPathname = pathname.slice(0, -2);
    return slicedPathname !== url.pathname && url.pathname.startsWith(slicedPathname);
  } else if (pathname.endsWith("/*")) {
    const slicedPathname = pathname.slice(0, -1);
    const additionalPathChunks = url.pathname.replace(slicedPathname, "").split("/").filter(Boolean);
    return additionalPathChunks.length === 1;
  }
  return false;
}
function isRemoteAllowed(src, {
  domains = [],
  remotePatterns = []
}) {
  if (!isRemotePath(src))
    return false;
  const url = new URL(src);
  return domains.some((domain) => matchHostname(url, domain)) || remotePatterns.some((remotePattern) => matchPattern(url, remotePattern));
}
function isLocalService(service) {
  if (!service) {
    return false;
  }
  return "transform" in service;
}
function getTargetDimensions(options) {
  let targetWidth = options.width;
  let targetHeight = options.height;
  if (isESMImportedImage(options.src)) {
    const aspectRatio = options.src.width / options.src.height;
    if (targetHeight && !targetWidth) {
      targetWidth = Math.round(targetHeight * aspectRatio);
    } else if (targetWidth && !targetHeight) {
      targetHeight = Math.round(targetWidth / aspectRatio);
    } else if (!targetWidth && !targetHeight) {
      targetWidth = options.src.width;
      targetHeight = options.src.height;
    }
  }
  return {
    targetWidth,
    targetHeight
  };
}
var VALID_SUPPORTED_FORMATS, DEFAULT_OUTPUT_FORMAT, DEFAULT_HASH_PROPS, baseService, noopService, noop_default, noop;
var init_assets_service_1zQtc2bO = __esm({
  "dist/$server_build/chunks/astro/assets-service_1zQtc2bO.mjs"() {
    "use strict";
    init_astro_u8tnI5Mh();
    VALID_SUPPORTED_FORMATS = [
      "jpeg",
      "jpg",
      "png",
      "tiff",
      "webp",
      "gif",
      "svg",
      "avif"
    ];
    DEFAULT_OUTPUT_FORMAT = "webp";
    DEFAULT_HASH_PROPS = ["src", "width", "height", "format", "quality"];
    baseService = {
      propertiesToHash: DEFAULT_HASH_PROPS,
      validateOptions(options) {
        if (!options.src || typeof options.src !== "string" && typeof options.src !== "object") {
          throw new AstroError({
            ...ExpectedImage,
            message: ExpectedImage.message(
              JSON.stringify(options.src),
              typeof options.src,
              JSON.stringify(options, (_6, v4) => v4 === void 0 ? null : v4)
            )
          });
        }
        if (!isESMImportedImage(options.src)) {
          if (options.src.startsWith("/@fs/") || !isRemotePath(options.src) && !options.src.startsWith("/")) {
            throw new AstroError({
              ...LocalImageUsedWrongly,
              message: LocalImageUsedWrongly.message(options.src)
            });
          }
          let missingDimension;
          if (!options.width && !options.height) {
            missingDimension = "both";
          } else if (!options.width && options.height) {
            missingDimension = "width";
          } else if (options.width && !options.height) {
            missingDimension = "height";
          }
          if (missingDimension) {
            throw new AstroError({
              ...MissingImageDimension,
              message: MissingImageDimension.message(missingDimension, options.src)
            });
          }
        } else {
          if (!VALID_SUPPORTED_FORMATS.includes(options.src.format)) {
            throw new AstroError({
              ...UnsupportedImageFormat,
              message: UnsupportedImageFormat.message(
                options.src.format,
                options.src.src,
                VALID_SUPPORTED_FORMATS
              )
            });
          }
          if (options.widths && options.densities) {
            throw new AstroError(IncompatibleDescriptorOptions);
          }
          if (options.src.format === "svg") {
            options.format = "svg";
          }
          if (options.src.format === "svg" && options.format !== "svg" || options.src.format !== "svg" && options.format === "svg") {
            throw new AstroError(UnsupportedImageConversion);
          }
        }
        if (!options.format) {
          options.format = DEFAULT_OUTPUT_FORMAT;
        }
        if (options.width)
          options.width = Math.round(options.width);
        if (options.height)
          options.height = Math.round(options.height);
        return options;
      },
      getHTMLAttributes(options) {
        const { targetWidth, targetHeight } = getTargetDimensions(options);
        const { src, width, height, format: format2, quality, densities, widths, formats, ...attributes } = options;
        return {
          ...attributes,
          width: targetWidth,
          height: targetHeight,
          loading: attributes.loading ?? "lazy",
          decoding: attributes.decoding ?? "async"
        };
      },
      getSrcSet(options) {
        const srcSet = [];
        const { targetWidth } = getTargetDimensions(options);
        const { widths, densities } = options;
        const targetFormat = options.format ?? DEFAULT_OUTPUT_FORMAT;
        let imageWidth = options.width;
        let maxWidth = Infinity;
        if (isESMImportedImage(options.src)) {
          imageWidth = options.src.width;
          maxWidth = imageWidth;
        }
        const {
          width: transformWidth,
          height: transformHeight,
          ...transformWithoutDimensions
        } = options;
        const allWidths = [];
        if (densities) {
          const densityValues = densities.map((density) => {
            if (typeof density === "number") {
              return density;
            } else {
              return parseFloat(density);
            }
          });
          const densityWidths = densityValues.sort().map((density) => Math.round(targetWidth * density));
          allWidths.push(
            ...densityWidths.map((width, index) => ({
              maxTargetWidth: Math.min(width, maxWidth),
              descriptor: `${densityValues[index]}x`
            }))
          );
        } else if (widths) {
          allWidths.push(
            ...widths.map((width) => ({
              maxTargetWidth: Math.min(width, maxWidth),
              descriptor: `${width}w`
            }))
          );
        }
        for (const { maxTargetWidth, descriptor } of allWidths) {
          const srcSetTransform = { ...transformWithoutDimensions };
          if (maxTargetWidth !== imageWidth) {
            srcSetTransform.width = maxTargetWidth;
          } else {
            if (options.width && options.height) {
              srcSetTransform.width = options.width;
              srcSetTransform.height = options.height;
            }
          }
          srcSet.push({
            transform: srcSetTransform,
            descriptor,
            attributes: {
              type: `image/${targetFormat}`
            }
          });
        }
        return srcSet;
      },
      getURL(options, imageConfig2) {
        const searchParams = new URLSearchParams();
        if (isESMImportedImage(options.src)) {
          searchParams.append("href", options.src.src);
        } else if (isRemoteAllowed(options.src, imageConfig2)) {
          searchParams.append("href", options.src);
        } else {
          return options.src;
        }
        const params = {
          w: "width",
          h: "height",
          q: "quality",
          f: "format"
        };
        Object.entries(params).forEach(([param, key]) => {
          options[key] && searchParams.append(param, options[key].toString());
        });
        const imageEndpoint = joinPaths("/", "/_image");
        return `${imageEndpoint}?${searchParams}`;
      },
      parseURL(url) {
        const params = url.searchParams;
        if (!params.has("href")) {
          return void 0;
        }
        const transform = {
          src: params.get("href"),
          width: params.has("w") ? parseInt(params.get("w")) : void 0,
          height: params.has("h") ? parseInt(params.get("h")) : void 0,
          format: params.get("f"),
          quality: params.get("q")
        };
        return transform;
      }
    };
    noopService = {
      ...baseService,
      propertiesToHash: ["src"],
      async transform(inputBuffer, transformOptions) {
        return {
          data: inputBuffer,
          format: transformOptions.format
        };
      }
    };
    noop_default = noopService;
    noop = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: noop_default
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// ../../node_modules/mime/Mime.js
var require_Mime = __commonJS({
  "../../node_modules/mime/Mime.js"(exports2, module) {
    "use strict";
    function Mime() {
      this._types = /* @__PURE__ */ Object.create(null);
      this._extensions = /* @__PURE__ */ Object.create(null);
      for (let i3 = 0; i3 < arguments.length; i3++) {
        this.define(arguments[i3]);
      }
      this.define = this.define.bind(this);
      this.getType = this.getType.bind(this);
      this.getExtension = this.getExtension.bind(this);
    }
    Mime.prototype.define = function(typeMap, force) {
      for (let type in typeMap) {
        let extensions = typeMap[type].map(function(t2) {
          return t2.toLowerCase();
        });
        type = type.toLowerCase();
        for (let i3 = 0; i3 < extensions.length; i3++) {
          const ext = extensions[i3];
          if (ext[0] === "*") {
            continue;
          }
          if (!force && ext in this._types) {
            throw new Error(
              'Attempt to change mapping for "' + ext + '" extension from "' + this._types[ext] + '" to "' + type + '". Pass `force=true` to allow this, otherwise remove "' + ext + '" from the list of extensions for "' + type + '".'
            );
          }
          this._types[ext] = type;
        }
        if (force || !this._extensions[type]) {
          const ext = extensions[0];
          this._extensions[type] = ext[0] !== "*" ? ext : ext.substr(1);
        }
      }
    };
    Mime.prototype.getType = function(path) {
      path = String(path);
      let last = path.replace(/^.*[/\\]/, "").toLowerCase();
      let ext = last.replace(/^.*\./, "").toLowerCase();
      let hasPath = last.length < path.length;
      let hasDot = ext.length < last.length - 1;
      return (hasDot || !hasPath) && this._types[ext] || null;
    };
    Mime.prototype.getExtension = function(type) {
      type = /^\s*([^;\s]*)/.test(type) && RegExp.$1;
      return type && this._extensions[type.toLowerCase()] || null;
    };
    module.exports = Mime;
  }
});

// ../../node_modules/mime/types/standard.js
var require_standard = __commonJS({
  "../../node_modules/mime/types/standard.js"(exports2, module) {
    module.exports = { "application/andrew-inset": ["ez"], "application/applixware": ["aw"], "application/atom+xml": ["atom"], "application/atomcat+xml": ["atomcat"], "application/atomdeleted+xml": ["atomdeleted"], "application/atomsvc+xml": ["atomsvc"], "application/atsc-dwd+xml": ["dwd"], "application/atsc-held+xml": ["held"], "application/atsc-rsat+xml": ["rsat"], "application/bdoc": ["bdoc"], "application/calendar+xml": ["xcs"], "application/ccxml+xml": ["ccxml"], "application/cdfx+xml": ["cdfx"], "application/cdmi-capability": ["cdmia"], "application/cdmi-container": ["cdmic"], "application/cdmi-domain": ["cdmid"], "application/cdmi-object": ["cdmio"], "application/cdmi-queue": ["cdmiq"], "application/cu-seeme": ["cu"], "application/dash+xml": ["mpd"], "application/davmount+xml": ["davmount"], "application/docbook+xml": ["dbk"], "application/dssc+der": ["dssc"], "application/dssc+xml": ["xdssc"], "application/ecmascript": ["es", "ecma"], "application/emma+xml": ["emma"], "application/emotionml+xml": ["emotionml"], "application/epub+zip": ["epub"], "application/exi": ["exi"], "application/express": ["exp"], "application/fdt+xml": ["fdt"], "application/font-tdpfr": ["pfr"], "application/geo+json": ["geojson"], "application/gml+xml": ["gml"], "application/gpx+xml": ["gpx"], "application/gxf": ["gxf"], "application/gzip": ["gz"], "application/hjson": ["hjson"], "application/hyperstudio": ["stk"], "application/inkml+xml": ["ink", "inkml"], "application/ipfix": ["ipfix"], "application/its+xml": ["its"], "application/java-archive": ["jar", "war", "ear"], "application/java-serialized-object": ["ser"], "application/java-vm": ["class"], "application/javascript": ["js", "mjs"], "application/json": ["json", "map"], "application/json5": ["json5"], "application/jsonml+json": ["jsonml"], "application/ld+json": ["jsonld"], "application/lgr+xml": ["lgr"], "application/lost+xml": ["lostxml"], "application/mac-binhex40": ["hqx"], "application/mac-compactpro": ["cpt"], "application/mads+xml": ["mads"], "application/manifest+json": ["webmanifest"], "application/marc": ["mrc"], "application/marcxml+xml": ["mrcx"], "application/mathematica": ["ma", "nb", "mb"], "application/mathml+xml": ["mathml"], "application/mbox": ["mbox"], "application/mediaservercontrol+xml": ["mscml"], "application/metalink+xml": ["metalink"], "application/metalink4+xml": ["meta4"], "application/mets+xml": ["mets"], "application/mmt-aei+xml": ["maei"], "application/mmt-usd+xml": ["musd"], "application/mods+xml": ["mods"], "application/mp21": ["m21", "mp21"], "application/mp4": ["mp4s", "m4p"], "application/msword": ["doc", "dot"], "application/mxf": ["mxf"], "application/n-quads": ["nq"], "application/n-triples": ["nt"], "application/node": ["cjs"], "application/octet-stream": ["bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy", "exe", "dll", "deb", "dmg", "iso", "img", "msi", "msp", "msm", "buffer"], "application/oda": ["oda"], "application/oebps-package+xml": ["opf"], "application/ogg": ["ogx"], "application/omdoc+xml": ["omdoc"], "application/onenote": ["onetoc", "onetoc2", "onetmp", "onepkg"], "application/oxps": ["oxps"], "application/p2p-overlay+xml": ["relo"], "application/patch-ops-error+xml": ["xer"], "application/pdf": ["pdf"], "application/pgp-encrypted": ["pgp"], "application/pgp-signature": ["asc", "sig"], "application/pics-rules": ["prf"], "application/pkcs10": ["p10"], "application/pkcs7-mime": ["p7m", "p7c"], "application/pkcs7-signature": ["p7s"], "application/pkcs8": ["p8"], "application/pkix-attr-cert": ["ac"], "application/pkix-cert": ["cer"], "application/pkix-crl": ["crl"], "application/pkix-pkipath": ["pkipath"], "application/pkixcmp": ["pki"], "application/pls+xml": ["pls"], "application/postscript": ["ai", "eps", "ps"], "application/provenance+xml": ["provx"], "application/pskc+xml": ["pskcxml"], "application/raml+yaml": ["raml"], "application/rdf+xml": ["rdf", "owl"], "application/reginfo+xml": ["rif"], "application/relax-ng-compact-syntax": ["rnc"], "application/resource-lists+xml": ["rl"], "application/resource-lists-diff+xml": ["rld"], "application/rls-services+xml": ["rs"], "application/route-apd+xml": ["rapd"], "application/route-s-tsid+xml": ["sls"], "application/route-usd+xml": ["rusd"], "application/rpki-ghostbusters": ["gbr"], "application/rpki-manifest": ["mft"], "application/rpki-roa": ["roa"], "application/rsd+xml": ["rsd"], "application/rss+xml": ["rss"], "application/rtf": ["rtf"], "application/sbml+xml": ["sbml"], "application/scvp-cv-request": ["scq"], "application/scvp-cv-response": ["scs"], "application/scvp-vp-request": ["spq"], "application/scvp-vp-response": ["spp"], "application/sdp": ["sdp"], "application/senml+xml": ["senmlx"], "application/sensml+xml": ["sensmlx"], "application/set-payment-initiation": ["setpay"], "application/set-registration-initiation": ["setreg"], "application/shf+xml": ["shf"], "application/sieve": ["siv", "sieve"], "application/smil+xml": ["smi", "smil"], "application/sparql-query": ["rq"], "application/sparql-results+xml": ["srx"], "application/srgs": ["gram"], "application/srgs+xml": ["grxml"], "application/sru+xml": ["sru"], "application/ssdl+xml": ["ssdl"], "application/ssml+xml": ["ssml"], "application/swid+xml": ["swidtag"], "application/tei+xml": ["tei", "teicorpus"], "application/thraud+xml": ["tfi"], "application/timestamped-data": ["tsd"], "application/toml": ["toml"], "application/trig": ["trig"], "application/ttml+xml": ["ttml"], "application/ubjson": ["ubj"], "application/urc-ressheet+xml": ["rsheet"], "application/urc-targetdesc+xml": ["td"], "application/voicexml+xml": ["vxml"], "application/wasm": ["wasm"], "application/widget": ["wgt"], "application/winhlp": ["hlp"], "application/wsdl+xml": ["wsdl"], "application/wspolicy+xml": ["wspolicy"], "application/xaml+xml": ["xaml"], "application/xcap-att+xml": ["xav"], "application/xcap-caps+xml": ["xca"], "application/xcap-diff+xml": ["xdf"], "application/xcap-el+xml": ["xel"], "application/xcap-ns+xml": ["xns"], "application/xenc+xml": ["xenc"], "application/xhtml+xml": ["xhtml", "xht"], "application/xliff+xml": ["xlf"], "application/xml": ["xml", "xsl", "xsd", "rng"], "application/xml-dtd": ["dtd"], "application/xop+xml": ["xop"], "application/xproc+xml": ["xpl"], "application/xslt+xml": ["*xsl", "xslt"], "application/xspf+xml": ["xspf"], "application/xv+xml": ["mxml", "xhvml", "xvml", "xvm"], "application/yang": ["yang"], "application/yin+xml": ["yin"], "application/zip": ["zip"], "audio/3gpp": ["*3gpp"], "audio/adpcm": ["adp"], "audio/amr": ["amr"], "audio/basic": ["au", "snd"], "audio/midi": ["mid", "midi", "kar", "rmi"], "audio/mobile-xmf": ["mxmf"], "audio/mp3": ["*mp3"], "audio/mp4": ["m4a", "mp4a"], "audio/mpeg": ["mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"], "audio/ogg": ["oga", "ogg", "spx", "opus"], "audio/s3m": ["s3m"], "audio/silk": ["sil"], "audio/wav": ["wav"], "audio/wave": ["*wav"], "audio/webm": ["weba"], "audio/xm": ["xm"], "font/collection": ["ttc"], "font/otf": ["otf"], "font/ttf": ["ttf"], "font/woff": ["woff"], "font/woff2": ["woff2"], "image/aces": ["exr"], "image/apng": ["apng"], "image/avif": ["avif"], "image/bmp": ["bmp"], "image/cgm": ["cgm"], "image/dicom-rle": ["drle"], "image/emf": ["emf"], "image/fits": ["fits"], "image/g3fax": ["g3"], "image/gif": ["gif"], "image/heic": ["heic"], "image/heic-sequence": ["heics"], "image/heif": ["heif"], "image/heif-sequence": ["heifs"], "image/hej2k": ["hej2"], "image/hsj2": ["hsj2"], "image/ief": ["ief"], "image/jls": ["jls"], "image/jp2": ["jp2", "jpg2"], "image/jpeg": ["jpeg", "jpg", "jpe"], "image/jph": ["jph"], "image/jphc": ["jhc"], "image/jpm": ["jpm"], "image/jpx": ["jpx", "jpf"], "image/jxr": ["jxr"], "image/jxra": ["jxra"], "image/jxrs": ["jxrs"], "image/jxs": ["jxs"], "image/jxsc": ["jxsc"], "image/jxsi": ["jxsi"], "image/jxss": ["jxss"], "image/ktx": ["ktx"], "image/ktx2": ["ktx2"], "image/png": ["png"], "image/sgi": ["sgi"], "image/svg+xml": ["svg", "svgz"], "image/t38": ["t38"], "image/tiff": ["tif", "tiff"], "image/tiff-fx": ["tfx"], "image/webp": ["webp"], "image/wmf": ["wmf"], "message/disposition-notification": ["disposition-notification"], "message/global": ["u8msg"], "message/global-delivery-status": ["u8dsn"], "message/global-disposition-notification": ["u8mdn"], "message/global-headers": ["u8hdr"], "message/rfc822": ["eml", "mime"], "model/3mf": ["3mf"], "model/gltf+json": ["gltf"], "model/gltf-binary": ["glb"], "model/iges": ["igs", "iges"], "model/mesh": ["msh", "mesh", "silo"], "model/mtl": ["mtl"], "model/obj": ["obj"], "model/step+xml": ["stpx"], "model/step+zip": ["stpz"], "model/step-xml+zip": ["stpxz"], "model/stl": ["stl"], "model/vrml": ["wrl", "vrml"], "model/x3d+binary": ["*x3db", "x3dbz"], "model/x3d+fastinfoset": ["x3db"], "model/x3d+vrml": ["*x3dv", "x3dvz"], "model/x3d+xml": ["x3d", "x3dz"], "model/x3d-vrml": ["x3dv"], "text/cache-manifest": ["appcache", "manifest"], "text/calendar": ["ics", "ifb"], "text/coffeescript": ["coffee", "litcoffee"], "text/css": ["css"], "text/csv": ["csv"], "text/html": ["html", "htm", "shtml"], "text/jade": ["jade"], "text/jsx": ["jsx"], "text/less": ["less"], "text/markdown": ["markdown", "md"], "text/mathml": ["mml"], "text/mdx": ["mdx"], "text/n3": ["n3"], "text/plain": ["txt", "text", "conf", "def", "list", "log", "in", "ini"], "text/richtext": ["rtx"], "text/rtf": ["*rtf"], "text/sgml": ["sgml", "sgm"], "text/shex": ["shex"], "text/slim": ["slim", "slm"], "text/spdx": ["spdx"], "text/stylus": ["stylus", "styl"], "text/tab-separated-values": ["tsv"], "text/troff": ["t", "tr", "roff", "man", "me", "ms"], "text/turtle": ["ttl"], "text/uri-list": ["uri", "uris", "urls"], "text/vcard": ["vcard"], "text/vtt": ["vtt"], "text/xml": ["*xml"], "text/yaml": ["yaml", "yml"], "video/3gpp": ["3gp", "3gpp"], "video/3gpp2": ["3g2"], "video/h261": ["h261"], "video/h263": ["h263"], "video/h264": ["h264"], "video/iso.segment": ["m4s"], "video/jpeg": ["jpgv"], "video/jpm": ["*jpm", "jpgm"], "video/mj2": ["mj2", "mjp2"], "video/mp2t": ["ts"], "video/mp4": ["mp4", "mp4v", "mpg4"], "video/mpeg": ["mpeg", "mpg", "mpe", "m1v", "m2v"], "video/ogg": ["ogv"], "video/quicktime": ["qt", "mov"], "video/webm": ["webm"] };
  }
});

// ../../node_modules/mime/lite.js
var require_lite = __commonJS({
  "../../node_modules/mime/lite.js"(exports2, module) {
    "use strict";
    var Mime = require_Mime();
    module.exports = new Mime(require_standard());
  }
});

// dist/$server_build/chunks/pages/generic_zgvMRVV2.mjs
var generic_zgvMRVV2_exports = {};
__export(generic_zgvMRVV2_exports, {
  GET: () => GET
});
function readUInt(input, bits2, offset, isBigEndian) {
  offset = offset || 0;
  const endian = isBigEndian ? "BE" : "LE";
  const methodName = "readUInt" + bits2 + endian;
  return methods[methodName](input, offset);
}
function readBox(buffer, offset) {
  if (buffer.length - offset < 4)
    return;
  const boxSize = readUInt32BE(buffer, offset);
  if (buffer.length - offset < boxSize)
    return;
  return {
    name: toUTF8String(buffer, 4 + offset, 8 + offset),
    offset,
    size: boxSize
  };
}
function findBox(buffer, boxName, offset) {
  while (offset < buffer.length) {
    const box = readBox(buffer, offset);
    if (!box)
      break;
    if (box.name === boxName)
      return box;
    offset += box.size;
  }
}
function getSizeFromOffset(input, offset) {
  const value = input[offset];
  return value === 0 ? 256 : value;
}
function getImageSize$1(input, imageIndex) {
  const offset = SIZE_HEADER$1 + imageIndex * SIZE_IMAGE_ENTRY;
  return {
    height: getSizeFromOffset(input, offset + 1),
    width: getSizeFromOffset(input, offset)
  };
}
function detectBrands(buffer, start, end3) {
  let brandsDetected = {};
  for (let i3 = start; i3 <= end3; i3 += 4) {
    const brand2 = toUTF8String(buffer, i3, i3 + 4);
    if (brand2 in brandMap) {
      brandsDetected[brand2] = 1;
    }
  }
  if ("avif" in brandsDetected) {
    return "avif";
  } else if ("heic" in brandsDetected || "heix" in brandsDetected || "hevc" in brandsDetected || "hevx" in brandsDetected) {
    return "heic";
  } else if ("mif1" in brandsDetected || "msf1" in brandsDetected) {
    return "heif";
  }
}
function readImageHeader(input, imageOffset) {
  const imageLengthOffset = imageOffset + ENTRY_LENGTH_OFFSET;
  return [
    toUTF8String(input, imageOffset, imageLengthOffset),
    readUInt32BE(input, imageLengthOffset)
  ];
}
function getImageSize(type) {
  const size = ICON_TYPE_SIZE[type];
  return { width: size, height: size, type };
}
function isEXIF(input) {
  return toHexString(input, 2, 6) === EXIF_MARKER;
}
function extractSize(input, index) {
  return {
    height: readUInt16BE(input, index),
    width: readUInt16BE(input, index + 2)
  };
}
function extractOrientation(exifBlock, isBigEndian) {
  const idfOffset = 8;
  const offset = EXIF_HEADER_BYTES + idfOffset;
  const idfDirectoryEntries = readUInt(exifBlock, 16, offset, isBigEndian);
  for (let directoryEntryNumber = 0; directoryEntryNumber < idfDirectoryEntries; directoryEntryNumber++) {
    const start = offset + NUM_DIRECTORY_ENTRIES_BYTES + directoryEntryNumber * IDF_ENTRY_BYTES;
    const end3 = start + IDF_ENTRY_BYTES;
    if (start > exifBlock.length) {
      return;
    }
    const block = exifBlock.slice(start, end3);
    const tagNumber = readUInt(block, 16, 0, isBigEndian);
    if (tagNumber === 274) {
      const dataFormat = readUInt(block, 16, 2, isBigEndian);
      if (dataFormat !== 3) {
        return;
      }
      const numberOfComponents = readUInt(block, 32, 4, isBigEndian);
      if (numberOfComponents !== 1) {
        return;
      }
      return readUInt(block, 16, 8, isBigEndian);
    }
  }
}
function validateExifBlock(input, index) {
  const exifBlock = input.slice(APP1_DATA_SIZE_BYTES, index);
  const byteAlign = toHexString(
    exifBlock,
    EXIF_HEADER_BYTES,
    EXIF_HEADER_BYTES + TIFF_BYTE_ALIGN_BYTES
  );
  const isBigEndian = byteAlign === BIG_ENDIAN_BYTE_ALIGN;
  const isLittleEndian = byteAlign === LITTLE_ENDIAN_BYTE_ALIGN;
  if (isBigEndian || isLittleEndian) {
    return extractOrientation(exifBlock, isBigEndian);
  }
}
function validateInput(input, index) {
  if (index > input.length) {
    throw new TypeError("Corrupt JPG, exceeded buffer limits");
  }
}
function parseLength(len) {
  const m4 = unitsReg.exec(len);
  if (!m4) {
    return void 0;
  }
  return Math.round(Number(m4[1]) * (units[m4[2]] || 1));
}
function parseViewbox(viewbox) {
  const bounds = viewbox.split(" ");
  return {
    height: parseLength(bounds[3]),
    width: parseLength(bounds[2])
  };
}
function parseAttributes(root) {
  const width = root.match(extractorRegExps.width);
  const height = root.match(extractorRegExps.height);
  const viewbox = root.match(extractorRegExps.viewbox);
  return {
    height: height && parseLength(height[2]),
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
    viewbox: viewbox && parseViewbox(viewbox[2]),
    width: width && parseLength(width[2])
  };
}
function calculateByDimensions(attrs) {
  return {
    height: attrs.height,
    width: attrs.width
  };
}
function calculateByViewbox(attrs, viewbox) {
  const ratio = viewbox.width / viewbox.height;
  if (attrs.width) {
    return {
      height: Math.floor(attrs.width / ratio),
      width: attrs.width
    };
  }
  if (attrs.height) {
    return {
      height: attrs.height,
      width: Math.floor(attrs.height * ratio)
    };
  }
  return {
    height: viewbox.height,
    width: viewbox.width
  };
}
function readIFD(input, isBigEndian) {
  const ifdOffset = readUInt(input, 32, 4, isBigEndian);
  return input.slice(ifdOffset + 2);
}
function readValue(input, isBigEndian) {
  const low = readUInt(input, 16, 8, isBigEndian);
  const high = readUInt(input, 16, 10, isBigEndian);
  return (high << 16) + low;
}
function nextTag(input) {
  if (input.length > 24) {
    return input.slice(12);
  }
}
function extractTags(input, isBigEndian) {
  const tags = {};
  let temp = input;
  while (temp && temp.length) {
    const code = readUInt(temp, 16, 0, isBigEndian);
    const type = readUInt(temp, 16, 2, isBigEndian);
    const length = readUInt(temp, 32, 4, isBigEndian);
    if (code === 0) {
      break;
    } else {
      if (length === 1 && (type === 3 || type === 4)) {
        tags[code] = readValue(temp, isBigEndian);
      }
      temp = nextTag(temp);
    }
  }
  return tags;
}
function determineEndianness(input) {
  const signature = toUTF8String(input, 0, 2);
  if ("II" === signature) {
    return "LE";
  } else if ("MM" === signature) {
    return "BE";
  }
}
function calculateExtended(input) {
  return {
    height: 1 + readUInt24LE(input, 7),
    width: 1 + readUInt24LE(input, 4)
  };
}
function calculateLossless(input) {
  return {
    height: 1 + ((input[4] & 15) << 10 | input[3] << 2 | (input[2] & 192) >> 6),
    width: 1 + ((input[2] & 63) << 8 | input[1])
  };
}
function calculateLossy(input) {
  return {
    height: readInt16LE(input, 8) & 16383,
    width: readInt16LE(input, 6) & 16383
  };
}
function detector(input) {
  const byte = input[0];
  const type = firstBytes.get(byte);
  if (type && typeHandlers.get(type).validate(input)) {
    return type;
  }
  return types.find((fileType) => typeHandlers.get(fileType).validate(input));
}
function lookup(input) {
  const type = detector(input);
  if (typeof type !== "undefined") {
    if (globalOptions.disabledTypes.indexOf(type) > -1) {
      throw new TypeError("disabled file type: " + type);
    }
    const size = typeHandlers.get(type).calculate(input);
    if (size !== void 0) {
      size.type = size.type ?? type;
      return size;
    }
  }
  throw new TypeError("unsupported file type: " + type);
}
async function probe(url) {
  const response = await fetch(url);
  if (!response.body || !response.ok) {
    throw new Error("Failed to fetch image");
  }
  const reader = response.body.getReader();
  let done, value;
  let accumulatedChunks = new Uint8Array();
  while (!done) {
    const readResult2 = await reader.read();
    done = readResult2.done;
    if (done)
      break;
    if (readResult2.value) {
      value = readResult2.value;
      let tmp = new Uint8Array(accumulatedChunks.length + value.length);
      tmp.set(accumulatedChunks, 0);
      tmp.set(value, accumulatedChunks.length);
      accumulatedChunks = tmp;
      try {
        const dimensions = lookup(accumulatedChunks);
        if (dimensions) {
          await reader.cancel();
          return dimensions;
        }
      } catch (error2) {
      }
    }
  }
  throw new Error("Failed to parse the size");
}
async function getConfiguredImageService() {
  if (!globalThis?.astroAsset?.imageService) {
    const { default: service } = await Promise.resolve().then(() => (init_assets_service_1zQtc2bO(), assets_service_1zQtc2bO_exports)).then((n3) => n3.n).catch((e2) => {
      const error2 = new AstroError(InvalidImageService);
      error2.cause = e2;
      throw error2;
    });
    if (!globalThis.astroAsset)
      globalThis.astroAsset = {};
    globalThis.astroAsset.imageService = service;
    return service;
  }
  return globalThis.astroAsset.imageService;
}
async function getImage$1(options, imageConfig2) {
  if (!options || typeof options !== "object") {
    throw new AstroError({
      ...ExpectedImageOptions,
      message: ExpectedImageOptions.message(JSON.stringify(options))
    });
  }
  if (typeof options.src === "undefined") {
    throw new AstroError({
      ...ExpectedImage,
      message: ExpectedImage.message(
        options.src,
        "undefined",
        JSON.stringify(options)
      )
    });
  }
  const service = await getConfiguredImageService();
  const resolvedOptions = {
    ...options,
    src: typeof options.src === "object" && "then" in options.src ? (await options.src).default ?? await options.src : options.src
  };
  if (options.inferSize && isRemoteImage(resolvedOptions.src)) {
    try {
      const result = await probe(resolvedOptions.src);
      resolvedOptions.width ??= result.width;
      resolvedOptions.height ??= result.height;
      delete resolvedOptions.inferSize;
    } catch {
      throw new AstroError({
        ...FailedToFetchRemoteImageDimensions,
        message: FailedToFetchRemoteImageDimensions.message(resolvedOptions.src)
      });
    }
  }
  const originalPath = isESMImportedImage(resolvedOptions.src) ? resolvedOptions.src.fsPath : resolvedOptions.src;
  const clonedSrc = isESMImportedImage(resolvedOptions.src) ? (
    // @ts-expect-error - clone is a private, hidden prop
    resolvedOptions.src.clone ?? resolvedOptions.src
  ) : resolvedOptions.src;
  resolvedOptions.src = clonedSrc;
  const validatedOptions = service.validateOptions ? await service.validateOptions(resolvedOptions, imageConfig2) : resolvedOptions;
  const srcSetTransforms = service.getSrcSet ? await service.getSrcSet(validatedOptions, imageConfig2) : [];
  let imageURL = await service.getURL(validatedOptions, imageConfig2);
  let srcSets = await Promise.all(
    srcSetTransforms.map(async (srcSet) => ({
      transform: srcSet.transform,
      url: await service.getURL(srcSet.transform, imageConfig2),
      descriptor: srcSet.descriptor,
      attributes: srcSet.attributes
    }))
  );
  if (isLocalService(service) && globalThis.astroAsset.addStaticImage && !(isRemoteImage(validatedOptions.src) && imageURL === validatedOptions.src)) {
    const propsToHash = service.propertiesToHash ?? DEFAULT_HASH_PROPS;
    imageURL = globalThis.astroAsset.addStaticImage(validatedOptions, propsToHash, originalPath);
    srcSets = srcSetTransforms.map((srcSet) => ({
      transform: srcSet.transform,
      url: globalThis.astroAsset.addStaticImage(srcSet.transform, propsToHash, originalPath),
      descriptor: srcSet.descriptor,
      attributes: srcSet.attributes
    }));
  }
  return {
    rawOptions: resolvedOptions,
    options: validatedOptions,
    src: imageURL,
    srcSet: {
      values: srcSets,
      attribute: srcSets.map((srcSet) => `${srcSet.url} ${srcSet.descriptor}`).join(", ")
    },
    attributes: service.getHTMLAttributes !== void 0 ? await service.getHTMLAttributes(validatedOptions, imageConfig2) : {}
  };
}
async function loadRemoteImage(src) {
  try {
    const res = await fetch(src);
    if (!res.ok) {
      return void 0;
    }
    return await res.arrayBuffer();
  } catch (err2) {
    return void 0;
  }
}
var import_lite, decoder2, toUTF8String, toHexString, readInt16LE, readUInt16BE, readUInt16LE, readUInt24LE, readInt32LE, readUInt32BE, readUInt32LE, methods, BMP, TYPE_ICON, SIZE_HEADER$1, SIZE_IMAGE_ENTRY, ICO, TYPE_CURSOR, CUR, DDS, gifRegexp, GIF, brandMap, HEIF, SIZE_HEADER, FILE_LENGTH_OFFSET, ENTRY_LENGTH_OFFSET, ICON_TYPE_SIZE, ICNS, J2C, JP2, EXIF_MARKER, APP1_DATA_SIZE_BYTES, EXIF_HEADER_BYTES, TIFF_BYTE_ALIGN_BYTES, BIG_ENDIAN_BYTE_ALIGN, LITTLE_ENDIAN_BYTE_ALIGN, IDF_ENTRY_BYTES, NUM_DIRECTORY_ENTRIES_BYTES, JPG, KTX, pngSignature, pngImageHeaderChunkName, pngFriedChunkName, PNG, PNMTypes, handlers, PNM, PSD, svgReg, extractorRegExps, INCH_CM, units, unitsReg, SVG, TGA, signatures, TIFF, WEBP, typeHandlers, types, firstBytes, globalOptions, fnv1a52, etag, $$Astro$1, $$Image, $$Astro, $$Picture, imageConfig, getImage, GET;
var init_generic_zgvMRVV2 = __esm({
  "dist/$server_build/chunks/pages/generic_zgvMRVV2.mjs"() {
    "use strict";
    init_assets_service_1zQtc2bO();
    import_lite = __toESM(require_lite(), 1);
    init_astro_u8tnI5Mh();
    init_clsx();
    decoder2 = new TextDecoder();
    toUTF8String = (input, start = 0, end3 = input.length) => decoder2.decode(input.slice(start, end3));
    toHexString = (input, start = 0, end3 = input.length) => input.slice(start, end3).reduce((memo, i3) => memo + ("0" + i3.toString(16)).slice(-2), "");
    readInt16LE = (input, offset = 0) => {
      const val = input[offset] + input[offset + 1] * 2 ** 8;
      return val | (val & 2 ** 15) * 131070;
    };
    readUInt16BE = (input, offset = 0) => input[offset] * 2 ** 8 + input[offset + 1];
    readUInt16LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8;
    readUInt24LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16;
    readInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + (input[offset + 3] << 24);
    readUInt32BE = (input, offset = 0) => input[offset] * 2 ** 24 + input[offset + 1] * 2 ** 16 + input[offset + 2] * 2 ** 8 + input[offset + 3];
    readUInt32LE = (input, offset = 0) => input[offset] + input[offset + 1] * 2 ** 8 + input[offset + 2] * 2 ** 16 + input[offset + 3] * 2 ** 24;
    methods = {
      readUInt16BE,
      readUInt16LE,
      readUInt32BE,
      readUInt32LE
    };
    BMP = {
      validate: (input) => toUTF8String(input, 0, 2) === "BM",
      calculate: (input) => ({
        height: Math.abs(readInt32LE(input, 22)),
        width: readUInt32LE(input, 18)
      })
    };
    TYPE_ICON = 1;
    SIZE_HEADER$1 = 2 + 2 + 2;
    SIZE_IMAGE_ENTRY = 1 + 1 + 1 + 1 + 2 + 2 + 4 + 4;
    ICO = {
      validate(input) {
        const reserved = readUInt16LE(input, 0);
        const imageCount = readUInt16LE(input, 4);
        if (reserved !== 0 || imageCount === 0)
          return false;
        const imageType = readUInt16LE(input, 2);
        return imageType === TYPE_ICON;
      },
      calculate(input) {
        const nbImages = readUInt16LE(input, 4);
        const imageSize = getImageSize$1(input, 0);
        if (nbImages === 1)
          return imageSize;
        const imgs = [imageSize];
        for (let imageIndex = 1; imageIndex < nbImages; imageIndex += 1) {
          imgs.push(getImageSize$1(input, imageIndex));
        }
        return {
          height: imageSize.height,
          images: imgs,
          width: imageSize.width
        };
      }
    };
    TYPE_CURSOR = 2;
    CUR = {
      validate(input) {
        const reserved = readUInt16LE(input, 0);
        const imageCount = readUInt16LE(input, 4);
        if (reserved !== 0 || imageCount === 0)
          return false;
        const imageType = readUInt16LE(input, 2);
        return imageType === TYPE_CURSOR;
      },
      calculate: (input) => ICO.calculate(input)
    };
    DDS = {
      validate: (input) => readUInt32LE(input, 0) === 542327876,
      calculate: (input) => ({
        height: readUInt32LE(input, 12),
        width: readUInt32LE(input, 16)
      })
    };
    gifRegexp = /^GIF8[79]a/;
    GIF = {
      validate: (input) => gifRegexp.test(toUTF8String(input, 0, 6)),
      calculate: (input) => ({
        height: readUInt16LE(input, 8),
        width: readUInt16LE(input, 6)
      })
    };
    brandMap = {
      avif: "avif",
      mif1: "heif",
      msf1: "heif",
      // hief-sequence
      heic: "heic",
      heix: "heic",
      hevc: "heic",
      // heic-sequence
      hevx: "heic"
      // heic-sequence
    };
    HEIF = {
      validate(buffer) {
        const ftype = toUTF8String(buffer, 4, 8);
        const brand2 = toUTF8String(buffer, 8, 12);
        return "ftyp" === ftype && brand2 in brandMap;
      },
      calculate(buffer) {
        const metaBox = findBox(buffer, "meta", 0);
        const iprpBox = metaBox && findBox(buffer, "iprp", metaBox.offset + 12);
        const ipcoBox = iprpBox && findBox(buffer, "ipco", iprpBox.offset + 8);
        const ispeBox = ipcoBox && findBox(buffer, "ispe", ipcoBox.offset + 8);
        if (ispeBox) {
          return {
            height: readUInt32BE(buffer, ispeBox.offset + 16),
            width: readUInt32BE(buffer, ispeBox.offset + 12),
            type: detectBrands(buffer, 8, metaBox.offset)
          };
        }
        throw new TypeError("Invalid HEIF, no size found");
      }
    };
    SIZE_HEADER = 4 + 4;
    FILE_LENGTH_OFFSET = 4;
    ENTRY_LENGTH_OFFSET = 4;
    ICON_TYPE_SIZE = {
      ICON: 32,
      "ICN#": 32,
      // m => 16 x 16
      "icm#": 16,
      icm4: 16,
      icm8: 16,
      // s => 16 x 16
      "ics#": 16,
      ics4: 16,
      ics8: 16,
      is32: 16,
      s8mk: 16,
      icp4: 16,
      // l => 32 x 32
      icl4: 32,
      icl8: 32,
      il32: 32,
      l8mk: 32,
      icp5: 32,
      ic11: 32,
      // h => 48 x 48
      ich4: 48,
      ich8: 48,
      ih32: 48,
      h8mk: 48,
      // . => 64 x 64
      icp6: 64,
      ic12: 32,
      // t => 128 x 128
      it32: 128,
      t8mk: 128,
      ic07: 128,
      // . => 256 x 256
      ic08: 256,
      ic13: 256,
      // . => 512 x 512
      ic09: 512,
      ic14: 512,
      // . => 1024 x 1024
      ic10: 1024
    };
    ICNS = {
      validate: (input) => toUTF8String(input, 0, 4) === "icns",
      calculate(input) {
        const inputLength = input.length;
        const fileLength = readUInt32BE(input, FILE_LENGTH_OFFSET);
        let imageOffset = SIZE_HEADER;
        let imageHeader = readImageHeader(input, imageOffset);
        let imageSize = getImageSize(imageHeader[0]);
        imageOffset += imageHeader[1];
        if (imageOffset === fileLength)
          return imageSize;
        const result = {
          height: imageSize.height,
          images: [imageSize],
          width: imageSize.width
        };
        while (imageOffset < fileLength && imageOffset < inputLength) {
          imageHeader = readImageHeader(input, imageOffset);
          imageSize = getImageSize(imageHeader[0]);
          imageOffset += imageHeader[1];
          result.images.push(imageSize);
        }
        return result;
      }
    };
    J2C = {
      // TODO: this doesn't seem right. SIZ marker doesn't have to be right after the SOC
      validate: (input) => toHexString(input, 0, 4) === "ff4fff51",
      calculate: (input) => ({
        height: readUInt32BE(input, 12),
        width: readUInt32BE(input, 8)
      })
    };
    JP2 = {
      validate(input) {
        if (readUInt32BE(input, 4) !== 1783636e3 || readUInt32BE(input, 0) < 1)
          return false;
        const ftypBox = findBox(input, "ftyp", 0);
        if (!ftypBox)
          return false;
        return readUInt32BE(input, ftypBox.offset + 4) === 1718909296;
      },
      calculate(input) {
        const jp2hBox = findBox(input, "jp2h", 0);
        const ihdrBox = jp2hBox && findBox(input, "ihdr", jp2hBox.offset + 8);
        if (ihdrBox) {
          return {
            height: readUInt32BE(input, ihdrBox.offset + 8),
            width: readUInt32BE(input, ihdrBox.offset + 12)
          };
        }
        throw new TypeError("Unsupported JPEG 2000 format");
      }
    };
    EXIF_MARKER = "45786966";
    APP1_DATA_SIZE_BYTES = 2;
    EXIF_HEADER_BYTES = 6;
    TIFF_BYTE_ALIGN_BYTES = 2;
    BIG_ENDIAN_BYTE_ALIGN = "4d4d";
    LITTLE_ENDIAN_BYTE_ALIGN = "4949";
    IDF_ENTRY_BYTES = 12;
    NUM_DIRECTORY_ENTRIES_BYTES = 2;
    JPG = {
      validate: (input) => toHexString(input, 0, 2) === "ffd8",
      calculate(input) {
        input = input.slice(4);
        let orientation;
        let next;
        while (input.length) {
          const i3 = readUInt16BE(input, 0);
          if (input[i3] !== 255) {
            input = input.slice(1);
            continue;
          }
          if (isEXIF(input)) {
            orientation = validateExifBlock(input, i3);
          }
          validateInput(input, i3);
          next = input[i3 + 1];
          if (next === 192 || next === 193 || next === 194) {
            const size = extractSize(input, i3 + 5);
            if (!orientation) {
              return size;
            }
            return {
              height: size.height,
              orientation,
              width: size.width
            };
          }
          input = input.slice(i3 + 2);
        }
        throw new TypeError("Invalid JPG, no size found");
      }
    };
    KTX = {
      validate: (input) => {
        const signature = toUTF8String(input, 1, 7);
        return ["KTX 11", "KTX 20"].includes(signature);
      },
      calculate: (input) => {
        const type = input[5] === 49 ? "ktx" : "ktx2";
        const offset = type === "ktx" ? 36 : 20;
        return {
          height: readUInt32LE(input, offset + 4),
          width: readUInt32LE(input, offset),
          type
        };
      }
    };
    pngSignature = "PNG\r\n\n";
    pngImageHeaderChunkName = "IHDR";
    pngFriedChunkName = "CgBI";
    PNG = {
      validate(input) {
        if (pngSignature === toUTF8String(input, 1, 8)) {
          let chunkName = toUTF8String(input, 12, 16);
          if (chunkName === pngFriedChunkName) {
            chunkName = toUTF8String(input, 28, 32);
          }
          if (chunkName !== pngImageHeaderChunkName) {
            throw new TypeError("Invalid PNG");
          }
          return true;
        }
        return false;
      },
      calculate(input) {
        if (toUTF8String(input, 12, 16) === pngFriedChunkName) {
          return {
            height: readUInt32BE(input, 36),
            width: readUInt32BE(input, 32)
          };
        }
        return {
          height: readUInt32BE(input, 20),
          width: readUInt32BE(input, 16)
        };
      }
    };
    PNMTypes = {
      P1: "pbm/ascii",
      P2: "pgm/ascii",
      P3: "ppm/ascii",
      P4: "pbm",
      P5: "pgm",
      P6: "ppm",
      P7: "pam",
      PF: "pfm"
    };
    handlers = {
      default: (lines) => {
        let dimensions = [];
        while (lines.length > 0) {
          const line = lines.shift();
          if (line[0] === "#") {
            continue;
          }
          dimensions = line.split(" ");
          break;
        }
        if (dimensions.length === 2) {
          return {
            height: parseInt(dimensions[1], 10),
            width: parseInt(dimensions[0], 10)
          };
        } else {
          throw new TypeError("Invalid PNM");
        }
      },
      pam: (lines) => {
        const size = {};
        while (lines.length > 0) {
          const line = lines.shift();
          if (line.length > 16 || line.charCodeAt(0) > 128) {
            continue;
          }
          const [key, value] = line.split(" ");
          if (key && value) {
            size[key.toLowerCase()] = parseInt(value, 10);
          }
          if (size.height && size.width) {
            break;
          }
        }
        if (size.height && size.width) {
          return {
            height: size.height,
            width: size.width
          };
        } else {
          throw new TypeError("Invalid PAM");
        }
      }
    };
    PNM = {
      validate: (input) => toUTF8String(input, 0, 2) in PNMTypes,
      calculate(input) {
        const signature = toUTF8String(input, 0, 2);
        const type = PNMTypes[signature];
        const lines = toUTF8String(input, 3).split(/[\r\n]+/);
        const handler = handlers[type] || handlers.default;
        return handler(lines);
      }
    };
    PSD = {
      validate: (input) => toUTF8String(input, 0, 4) === "8BPS",
      calculate: (input) => ({
        height: readUInt32BE(input, 14),
        width: readUInt32BE(input, 18)
      })
    };
    svgReg = /<svg\s([^>"']|"[^"]*"|'[^']*')*>/;
    extractorRegExps = {
      height: /\sheight=(['"])([^%]+?)\1/,
      root: svgReg,
      viewbox: /\sviewBox=(['"])(.+?)\1/i,
      width: /\swidth=(['"])([^%]+?)\1/
    };
    INCH_CM = 2.54;
    units = {
      in: 96,
      cm: 96 / INCH_CM,
      em: 16,
      ex: 8,
      m: 96 / INCH_CM * 100,
      mm: 96 / INCH_CM / 10,
      pc: 96 / 72 / 12,
      pt: 96 / 72,
      px: 1
    };
    unitsReg = new RegExp(
      // eslint-disable-next-line regexp/prefer-d
      `^([0-9.]+(?:e\\d+)?)(${Object.keys(units).join("|")})?$`
    );
    SVG = {
      // Scan only the first kilo-byte to speed up the check on larger files
      validate: (input) => svgReg.test(toUTF8String(input, 0, 1e3)),
      calculate(input) {
        const root = toUTF8String(input).match(extractorRegExps.root);
        if (root) {
          const attrs = parseAttributes(root[0]);
          if (attrs.width && attrs.height) {
            return calculateByDimensions(attrs);
          }
          if (attrs.viewbox) {
            return calculateByViewbox(attrs, attrs.viewbox);
          }
        }
        throw new TypeError("Invalid SVG");
      }
    };
    TGA = {
      validate(input) {
        return readUInt16LE(input, 0) === 0 && readUInt16LE(input, 4) === 0;
      },
      calculate(input) {
        return {
          height: readUInt16LE(input, 14),
          width: readUInt16LE(input, 12)
        };
      }
    };
    signatures = [
      // '492049', // currently not supported
      "49492a00",
      // Little endian
      "4d4d002a"
      // Big Endian
      // '4d4d002a', // BigTIFF > 4GB. currently not supported
    ];
    TIFF = {
      validate: (input) => signatures.includes(toHexString(input, 0, 4)),
      calculate(input) {
        const isBigEndian = determineEndianness(input) === "BE";
        const ifdBuffer = readIFD(input, isBigEndian);
        const tags = extractTags(ifdBuffer, isBigEndian);
        const width = tags[256];
        const height = tags[257];
        if (!width || !height) {
          throw new TypeError("Invalid Tiff. Missing tags");
        }
        return { height, width };
      }
    };
    WEBP = {
      validate(input) {
        const riffHeader = "RIFF" === toUTF8String(input, 0, 4);
        const webpHeader = "WEBP" === toUTF8String(input, 8, 12);
        const vp8Header = "VP8" === toUTF8String(input, 12, 15);
        return riffHeader && webpHeader && vp8Header;
      },
      calculate(input) {
        const chunkHeader = toUTF8String(input, 12, 16);
        input = input.slice(20, 30);
        if (chunkHeader === "VP8X") {
          const extendedHeader = input[0];
          const validStart = (extendedHeader & 192) === 0;
          const validEnd = (extendedHeader & 1) === 0;
          if (validStart && validEnd) {
            return calculateExtended(input);
          } else {
            throw new TypeError("Invalid WebP");
          }
        }
        if (chunkHeader === "VP8 " && input[0] !== 47) {
          return calculateLossy(input);
        }
        const signature = toHexString(input, 3, 6);
        if (chunkHeader === "VP8L" && signature !== "9d012a") {
          return calculateLossless(input);
        }
        throw new TypeError("Invalid WebP");
      }
    };
    typeHandlers = /* @__PURE__ */ new Map([
      ["bmp", BMP],
      ["cur", CUR],
      ["dds", DDS],
      ["gif", GIF],
      ["heif", HEIF],
      ["icns", ICNS],
      ["ico", ICO],
      ["j2c", J2C],
      ["jp2", JP2],
      ["jpg", JPG],
      ["ktx", KTX],
      ["png", PNG],
      ["pnm", PNM],
      ["psd", PSD],
      ["svg", SVG],
      ["tga", TGA],
      ["tiff", TIFF],
      ["webp", WEBP]
    ]);
    types = Array.from(typeHandlers.keys());
    firstBytes = /* @__PURE__ */ new Map([
      [56, "psd"],
      [66, "bmp"],
      [68, "dds"],
      [71, "gif"],
      [73, "tiff"],
      [77, "tiff"],
      [82, "webp"],
      [105, "icns"],
      [137, "png"],
      [255, "jpg"]
    ]);
    globalOptions = {
      disabledTypes: []
    };
    fnv1a52 = (str) => {
      const len = str.length;
      let i3 = 0, t0 = 0, v0 = 8997, t1 = 0, v1 = 33826, t2 = 0, v22 = 40164, t3 = 0, v32 = 52210;
      while (i3 < len) {
        v0 ^= str.charCodeAt(i3++);
        t0 = v0 * 435;
        t1 = v1 * 435;
        t2 = v22 * 435;
        t3 = v32 * 435;
        t2 += v0 << 8;
        t3 += v1 << 8;
        t1 += t0 >>> 16;
        v0 = t0 & 65535;
        t2 += t1 >>> 16;
        v1 = t1 & 65535;
        v32 = t3 + (t2 >>> 16) & 65535;
        v22 = t2 & 65535;
      }
      return (v32 & 15) * 281474976710656 + v22 * 4294967296 + v1 * 65536 + (v0 ^ v32 >> 4);
    };
    etag = (payload, weak = false) => {
      const prefix = weak ? 'W/"' : '"';
      return prefix + fnv1a52(payload).toString(36) + payload.length.toString(36) + '"';
    };
    $$Astro$1 = createAstro();
    $$Image = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
      Astro2.self = $$Image;
      const props = Astro2.props;
      if (props.alt === void 0 || props.alt === null) {
        throw new AstroError(ImageMissingAlt);
      }
      if (typeof props.width === "string") {
        props.width = parseInt(props.width);
      }
      if (typeof props.height === "string") {
        props.height = parseInt(props.height);
      }
      const image = await getImage(props);
      const additionalAttributes = {};
      if (image.srcSet.values.length > 0) {
        additionalAttributes.srcset = image.srcSet.attribute;
      }
      return renderTemplate`${maybeRenderHead()}<img${addAttribute(image.src, "src")}${spreadAttributes(additionalAttributes)}${spreadAttributes(image.attributes)}>`;
    }, "/home/runner/work/monext/monext/node_modules/astro/components/Image.astro", void 0);
    $$Astro = createAstro();
    $$Picture = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
      Astro2.self = $$Picture;
      const defaultFormats = ["webp"];
      const defaultFallbackFormat = "png";
      const specialFormatsFallback = ["gif", "svg", "jpg", "jpeg"];
      const { formats = defaultFormats, pictureAttributes = {}, fallbackFormat, ...props } = Astro2.props;
      if (props.alt === void 0 || props.alt === null) {
        throw new AstroError(ImageMissingAlt);
      }
      const optimizedImages = await Promise.all(
        formats.map(
          async (format2) => await getImage({ ...props, format: format2, widths: props.widths, densities: props.densities })
        )
      );
      let resultFallbackFormat = fallbackFormat ?? defaultFallbackFormat;
      if (!fallbackFormat && isESMImportedImage(props.src) && specialFormatsFallback.includes(props.src.format)) {
        resultFallbackFormat = props.src.format;
      }
      const fallbackImage = await getImage({
        ...props,
        format: resultFallbackFormat,
        widths: props.widths,
        densities: props.densities
      });
      const imgAdditionalAttributes = {};
      const sourceAdditionalAttributes = {};
      if (props.sizes) {
        sourceAdditionalAttributes.sizes = props.sizes;
      }
      if (fallbackImage.srcSet.values.length > 0) {
        imgAdditionalAttributes.srcset = fallbackImage.srcSet.attribute;
      }
      return renderTemplate`${maybeRenderHead()}<picture${spreadAttributes(pictureAttributes)}> ${Object.entries(optimizedImages).map(([_6, image]) => {
        const srcsetAttribute = props.densities || !props.densities && !props.widths ? `${image.src}${image.srcSet.values.length > 0 ? ", " + image.srcSet.attribute : ""}` : image.srcSet.attribute;
        return renderTemplate`<source${addAttribute(srcsetAttribute, "srcset")}${addAttribute("image/" + image.options.format, "type")}${spreadAttributes(sourceAdditionalAttributes)}>`;
      })} <img${addAttribute(fallbackImage.src, "src")}${spreadAttributes(imgAdditionalAttributes)}${spreadAttributes(fallbackImage.attributes)}> </picture>`;
    }, "/home/runner/work/monext/monext/node_modules/astro/components/Picture.astro", void 0);
    imageConfig = { "service": { "entrypoint": "astro/assets/services/noop", "config": {} }, "domains": [], "remotePatterns": [] };
    new URL("file:///home/runner/work/monext/monext/apps/blogging/dist/");
    getImage = async (options) => await getImage$1(options, imageConfig);
    GET = async ({ request }) => {
      try {
        const imageService = await getConfiguredImageService();
        if (!("transform" in imageService)) {
          throw new Error("Configured image service is not a local service");
        }
        const url = new URL(request.url);
        const transform = await imageService.parseURL(url, imageConfig);
        if (!transform?.src) {
          throw new Error("Incorrect transform returned by `parseURL`");
        }
        let inputBuffer = void 0;
        const sourceUrl = isRemotePath(transform.src) ? new URL(transform.src) : new URL(transform.src, url.origin);
        if (isRemotePath(transform.src) && isRemoteAllowed(transform.src, imageConfig) === false) {
          return new Response("Forbidden", { status: 403 });
        }
        inputBuffer = await loadRemoteImage(sourceUrl);
        if (!inputBuffer) {
          return new Response("Not Found", { status: 404 });
        }
        const { data, format: format2 } = await imageService.transform(
          new Uint8Array(inputBuffer),
          transform,
          imageConfig
        );
        return new Response(data, {
          status: 200,
          headers: {
            "Content-Type": import_lite.default.getType(format2) ?? `image/${format2}`,
            "Cache-Control": "public, max-age=31536000",
            ETag: etag(data.toString()),
            Date: (/* @__PURE__ */ new Date()).toUTCString()
          }
        });
      } catch (err2) {
        console.error("Could not process image request:", err2);
        return new Response(`Server Error: ${err2}`, { status: 500 });
      }
    };
  }
});

// dist/$server_build/chunks/generic_wXMUwGw_.mjs
var generic_wXMUwGw_exports = {};
__export(generic_wXMUwGw_exports, {
  page: () => page,
  renderers: () => renderers
});
var page;
var init_generic_wXMUwGw = __esm({
  "dist/$server_build/chunks/generic_wXMUwGw_.mjs"() {
    "use strict";
    init_renderers();
    page = () => Promise.resolve().then(() => (init_generic_zgvMRVV2(), generic_zgvMRVV2_exports));
  }
});

// ../../node_modules/@auth/core/lib/utils/cookie.js
function defaultCookies(useSecureCookies) {
  const cookiePrefix = useSecureCookies ? "__Secure-" : "";
  return {
    // default cookie options
    sessionToken: {
      name: `${cookiePrefix}authjs.session-token`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies
      }
    },
    callbackUrl: {
      name: `${cookiePrefix}authjs.callback-url`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies
      }
    },
    csrfToken: {
      // Default to __Host- for CSRF token for additional protection if using useSecureCookies
      // NB: The `__Host-` prefix is stricter than the `__Secure-` prefix.
      name: `${useSecureCookies ? "__Host-" : ""}authjs.csrf-token`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies
      }
    },
    pkceCodeVerifier: {
      name: `${cookiePrefix}authjs.pkce.code_verifier`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies,
        maxAge: 60 * 15
        // 15 minutes in seconds
      }
    },
    state: {
      name: `${cookiePrefix}authjs.state`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies,
        maxAge: 60 * 15
        // 15 minutes in seconds
      }
    },
    nonce: {
      name: `${cookiePrefix}authjs.nonce`,
      options: {
        httpOnly: true,
        sameSite: "lax",
        path: "/",
        secure: useSecureCookies
      }
    }
  };
}
var __classPrivateFieldSet, __classPrivateFieldGet, _SessionStore_instances, _SessionStore_chunks, _SessionStore_option, _SessionStore_logger, _SessionStore_chunk, _SessionStore_clean, ALLOWED_COOKIE_SIZE, ESTIMATED_EMPTY_COOKIE_SIZE, CHUNK_SIZE, SessionStore;
var init_cookie = __esm({
  "../../node_modules/@auth/core/lib/utils/cookie.js"() {
    __classPrivateFieldSet = function(receiver, state2, value, kind, f4) {
      if (kind === "m")
        throw new TypeError("Private method is not writable");
      if (kind === "a" && !f4)
        throw new TypeError("Private accessor was defined without a setter");
      if (typeof state2 === "function" ? receiver !== state2 || !f4 : !state2.has(receiver))
        throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return kind === "a" ? f4.call(receiver, value) : f4 ? f4.value = value : state2.set(receiver, value), value;
    };
    __classPrivateFieldGet = function(receiver, state2, kind, f4) {
      if (kind === "a" && !f4)
        throw new TypeError("Private accessor was defined without a getter");
      if (typeof state2 === "function" ? receiver !== state2 || !f4 : !state2.has(receiver))
        throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f4 : kind === "a" ? f4.call(receiver) : f4 ? f4.value : state2.get(receiver);
    };
    ALLOWED_COOKIE_SIZE = 4096;
    ESTIMATED_EMPTY_COOKIE_SIZE = 160;
    CHUNK_SIZE = ALLOWED_COOKIE_SIZE - ESTIMATED_EMPTY_COOKIE_SIZE;
    SessionStore = class {
      constructor(option, cookies, logger2) {
        _SessionStore_instances.add(this);
        _SessionStore_chunks.set(this, {});
        _SessionStore_option.set(this, void 0);
        _SessionStore_logger.set(this, void 0);
        __classPrivateFieldSet(this, _SessionStore_logger, logger2, "f");
        __classPrivateFieldSet(this, _SessionStore_option, option, "f");
        if (!cookies)
          return;
        const { name: sessionCookiePrefix } = option;
        for (const [name, value] of Object.entries(cookies)) {
          if (!name.startsWith(sessionCookiePrefix) || !value)
            continue;
          __classPrivateFieldGet(this, _SessionStore_chunks, "f")[name] = value;
        }
      }
      /**
       * The JWT Session or database Session ID
       * constructed from the cookie chunks.
       */
      get value() {
        const sortedKeys = Object.keys(__classPrivateFieldGet(this, _SessionStore_chunks, "f")).sort((a3, b5) => {
          const aSuffix = parseInt(a3.split(".").pop() || "0");
          const bSuffix = parseInt(b5.split(".").pop() || "0");
          return aSuffix - bSuffix;
        });
        return sortedKeys.map((key) => __classPrivateFieldGet(this, _SessionStore_chunks, "f")[key]).join("");
      }
      /**
       * Given a cookie value, return new cookies, chunked, to fit the allowed cookie size.
       * If the cookie has changed from chunked to unchunked or vice versa,
       * it deletes the old cookies as well.
       */
      chunk(value, options) {
        const cookies = __classPrivateFieldGet(this, _SessionStore_instances, "m", _SessionStore_clean).call(this);
        const chunked = __classPrivateFieldGet(this, _SessionStore_instances, "m", _SessionStore_chunk).call(this, {
          name: __classPrivateFieldGet(this, _SessionStore_option, "f").name,
          value,
          options: { ...__classPrivateFieldGet(this, _SessionStore_option, "f").options, ...options }
        });
        for (const chunk2 of chunked) {
          cookies[chunk2.name] = chunk2;
        }
        return Object.values(cookies);
      }
      /** Returns a list of cookies that should be cleaned. */
      clean() {
        return Object.values(__classPrivateFieldGet(this, _SessionStore_instances, "m", _SessionStore_clean).call(this));
      }
    };
    _SessionStore_chunks = /* @__PURE__ */ new WeakMap(), _SessionStore_option = /* @__PURE__ */ new WeakMap(), _SessionStore_logger = /* @__PURE__ */ new WeakMap(), _SessionStore_instances = /* @__PURE__ */ new WeakSet(), _SessionStore_chunk = function _SessionStore_chunk2(cookie) {
      const chunkCount = Math.ceil(cookie.value.length / CHUNK_SIZE);
      if (chunkCount === 1) {
        __classPrivateFieldGet(this, _SessionStore_chunks, "f")[cookie.name] = cookie.value;
        return [cookie];
      }
      const cookies = [];
      for (let i3 = 0; i3 < chunkCount; i3++) {
        const name = `${cookie.name}.${i3}`;
        const value = cookie.value.substr(i3 * CHUNK_SIZE, CHUNK_SIZE);
        cookies.push({ ...cookie, name, value });
        __classPrivateFieldGet(this, _SessionStore_chunks, "f")[name] = value;
      }
      __classPrivateFieldGet(this, _SessionStore_logger, "f").debug("CHUNKING_SESSION_COOKIE", {
        message: `Session cookie exceeds allowed ${ALLOWED_COOKIE_SIZE} bytes.`,
        emptyCookieSize: ESTIMATED_EMPTY_COOKIE_SIZE,
        valueSize: cookie.value.length,
        chunks: cookies.map((c4) => c4.value.length + ESTIMATED_EMPTY_COOKIE_SIZE)
      });
      return cookies;
    }, _SessionStore_clean = function _SessionStore_clean2() {
      const cleanedChunks = {};
      for (const name in __classPrivateFieldGet(this, _SessionStore_chunks, "f")) {
        delete __classPrivateFieldGet(this, _SessionStore_chunks, "f")?.[name];
        cleanedChunks[name] = {
          name,
          value: "",
          options: { ...__classPrivateFieldGet(this, _SessionStore_option, "f").options, maxAge: 0 }
        };
      }
      return cleanedChunks;
    };
  }
});

// ../../node_modules/@auth/core/errors.js
var AuthError, SignInError, AdapterError, AuthorizedCallbackError, CallbackRouteError, ErrorPageLoop, EventError, InvalidCallbackUrl, CredentialsSignin, InvalidEndpoints, InvalidCheck, JWTSessionError, MissingAdapter, MissingAdapterMethods, MissingAuthorize, MissingSecret, OAuthAccountNotLinked, OAuthCallbackError, OAuthProfileParseError, SessionTokenError, OAuthSignInError, EmailSignInError, SignOutError, UnknownAction, UnsupportedStrategy, InvalidProvider, UntrustedHost, Verification, MissingCSRF;
var init_errors = __esm({
  "../../node_modules/@auth/core/errors.js"() {
    AuthError = class extends Error {
      constructor(message2, errorOptions) {
        if (message2 instanceof Error) {
          super(void 0, {
            cause: { err: message2, ...message2.cause, ...errorOptions }
          });
        } else if (typeof message2 === "string") {
          if (errorOptions instanceof Error) {
            errorOptions = { err: errorOptions, ...errorOptions.cause };
          }
          super(message2, errorOptions);
        } else {
          super(void 0, message2);
        }
        this.name = this.constructor.name;
        this.type = this.constructor.type ?? "AuthError";
        this.kind = this.constructor.kind ?? "error";
        Error.captureStackTrace?.(this, this.constructor);
        const url = `https://errors.authjs.dev#${this.type.toLowerCase()}`;
        this.message += `${this.message ? " ." : ""}Read more at ${url}`;
      }
    };
    SignInError = class extends AuthError {
    };
    SignInError.kind = "signIn";
    AdapterError = class extends AuthError {
    };
    AdapterError.type = "AdapterError";
    AuthorizedCallbackError = class extends AuthError {
    };
    AuthorizedCallbackError.type = "AuthorizedCallbackError";
    CallbackRouteError = class extends AuthError {
    };
    CallbackRouteError.type = "CallbackRouteError";
    ErrorPageLoop = class extends AuthError {
    };
    ErrorPageLoop.type = "ErrorPageLoop";
    EventError = class extends AuthError {
    };
    EventError.type = "EventError";
    InvalidCallbackUrl = class extends AuthError {
    };
    InvalidCallbackUrl.type = "InvalidCallbackUrl";
    CredentialsSignin = class extends SignInError {
    };
    CredentialsSignin.type = "CredentialsSignin";
    InvalidEndpoints = class extends AuthError {
    };
    InvalidEndpoints.type = "InvalidEndpoints";
    InvalidCheck = class extends AuthError {
    };
    InvalidCheck.type = "InvalidCheck";
    JWTSessionError = class extends AuthError {
    };
    JWTSessionError.type = "JWTSessionError";
    MissingAdapter = class extends AuthError {
    };
    MissingAdapter.type = "MissingAdapter";
    MissingAdapterMethods = class extends AuthError {
    };
    MissingAdapterMethods.type = "MissingAdapterMethods";
    MissingAuthorize = class extends AuthError {
    };
    MissingAuthorize.type = "MissingAuthorize";
    MissingSecret = class extends AuthError {
    };
    MissingSecret.type = "MissingSecret";
    OAuthAccountNotLinked = class extends SignInError {
    };
    OAuthAccountNotLinked.type = "OAuthAccountNotLinked";
    OAuthCallbackError = class extends SignInError {
    };
    OAuthCallbackError.type = "OAuthCallbackError";
    OAuthProfileParseError = class extends AuthError {
    };
    OAuthProfileParseError.type = "OAuthProfileParseError";
    SessionTokenError = class extends AuthError {
    };
    SessionTokenError.type = "SessionTokenError";
    OAuthSignInError = class extends SignInError {
    };
    OAuthSignInError.type = "OAuthSignInError";
    EmailSignInError = class extends SignInError {
    };
    EmailSignInError.type = "EmailSignInError";
    SignOutError = class extends AuthError {
    };
    SignOutError.type = "SignOutError";
    UnknownAction = class extends AuthError {
    };
    UnknownAction.type = "UnknownAction";
    UnsupportedStrategy = class extends AuthError {
    };
    UnsupportedStrategy.type = "UnsupportedStrategy";
    InvalidProvider = class extends AuthError {
    };
    InvalidProvider.type = "InvalidProvider";
    UntrustedHost = class extends AuthError {
    };
    UntrustedHost.type = "UntrustedHost";
    Verification = class extends AuthError {
    };
    Verification.type = "Verification";
    MissingCSRF = class extends SignInError {
    };
    MissingCSRF.type = "MissingCSRF";
  }
});

// ../../node_modules/@auth/core/lib/utils/assert.js
function isValidHttpUrl(url, baseUrl) {
  try {
    return /^https?:/.test(new URL(url, url.startsWith("/") ? baseUrl : void 0).protocol);
  } catch {
    return false;
  }
}
function assertConfig(request, options) {
  const { url } = request;
  const warnings = [];
  if (!warned && options.debug)
    warnings.push("debug-enabled");
  if (!options.trustHost) {
    return new UntrustedHost(`Host must be trusted. URL was: ${request.url}`);
  }
  if (!options.secret) {
    return new MissingSecret("Please define a `secret`.");
  }
  const callbackUrlParam = request.query?.callbackUrl;
  if (callbackUrlParam && !isValidHttpUrl(callbackUrlParam, url.origin)) {
    return new InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlParam}`);
  }
  const { callbackUrl: defaultCallbackUrl } = defaultCookies(options.useSecureCookies ?? url.protocol === "https:");
  const callbackUrlCookie = request.cookies?.[options.cookies?.callbackUrl?.name ?? defaultCallbackUrl.name];
  if (callbackUrlCookie && !isValidHttpUrl(callbackUrlCookie, url.origin)) {
    return new InvalidCallbackUrl(`Invalid callback URL. Received: ${callbackUrlCookie}`);
  }
  for (const p6 of options.providers) {
    const provider = typeof p6 === "function" ? p6() : p6;
    if ((provider.type === "oauth" || provider.type === "oidc") && !(provider.issuer ?? provider.options?.issuer)) {
      const { authorization: a3, token: t2, userinfo: u4 } = provider;
      let key;
      if (typeof a3 !== "string" && !a3?.url)
        key = "authorization";
      else if (typeof t2 !== "string" && !t2?.url)
        key = "token";
      else if (typeof u4 !== "string" && !u4?.url)
        key = "userinfo";
      if (key) {
        return new InvalidEndpoints(`Provider "${provider.id}" is missing both \`issuer\` and \`${key}\` endpoint config. At least one of them is required.`);
      }
    }
    if (provider.type === "credentials")
      hasCredentials = true;
    else if (provider.type === "email")
      hasEmail = true;
  }
  if (hasCredentials) {
    const dbStrategy = options.session?.strategy === "database";
    const onlyCredentials = !options.providers.some((p6) => (typeof p6 === "function" ? p6() : p6).type !== "credentials");
    if (dbStrategy && onlyCredentials) {
      return new UnsupportedStrategy("Signing in with credentials only supported if JWT strategy is enabled");
    }
    const credentialsNoAuthorize = options.providers.some((p6) => {
      const provider = typeof p6 === "function" ? p6() : p6;
      return provider.type === "credentials" && !provider.authorize;
    });
    if (credentialsNoAuthorize) {
      return new MissingAuthorize("Must define an authorize() handler to use credentials authentication provider");
    }
  }
  const { adapter, session: session2 } = options;
  if (hasEmail || session2?.strategy === "database" || !session2?.strategy && adapter) {
    let methods2;
    if (hasEmail) {
      if (!adapter)
        return new MissingAdapter("Email login requires an adapter.");
      methods2 = emailMethods;
    } else {
      if (!adapter)
        return new MissingAdapter("Database session requires an adapter.");
      methods2 = sessionMethods;
    }
    const missing = methods2.filter((m4) => !adapter[m4]);
    if (missing.length) {
      return new MissingAdapterMethods(`Required adapter methods were missing: ${missing.join(", ")}`);
    }
  }
  if (!warned)
    warned = true;
  return warnings;
}
var warned, hasCredentials, hasEmail, emailMethods, sessionMethods;
var init_assert = __esm({
  "../../node_modules/@auth/core/lib/utils/assert.js"() {
    init_cookie();
    init_errors();
    warned = false;
    hasCredentials = false;
    hasEmail = false;
    emailMethods = [
      "createVerificationToken",
      "useVerificationToken",
      "getUserByEmail"
    ];
    sessionMethods = [
      "createUser",
      "getUser",
      "getUserByEmail",
      "getUserByAccount",
      "updateUser",
      "linkAccount",
      "createSession",
      "getSessionAndUser",
      "updateSession",
      "deleteSession"
    ];
  }
});

// ../../node_modules/@panva/hkdf/dist/web/runtime/hkdf.js
var getGlobal, hkdf_default;
var init_hkdf = __esm({
  "../../node_modules/@panva/hkdf/dist/web/runtime/hkdf.js"() {
    getGlobal = () => {
      if (typeof globalThis !== "undefined")
        return globalThis;
      if (typeof self !== "undefined")
        return self;
      if (typeof window !== "undefined")
        return window;
      throw new Error("unable to locate global object");
    };
    hkdf_default = async (digest2, ikm, salt, info2, keylen) => {
      const { crypto: { subtle } } = getGlobal();
      return new Uint8Array(await subtle.deriveBits({
        name: "HKDF",
        hash: `SHA-${digest2.substr(3)}`,
        salt,
        info: info2
      }, await subtle.importKey("raw", ikm, "HKDF", false, ["deriveBits"]), keylen << 3));
    };
  }
});

// ../../node_modules/@panva/hkdf/dist/web/index.js
function normalizeDigest(digest2) {
  switch (digest2) {
    case "sha256":
    case "sha384":
    case "sha512":
    case "sha1":
      return digest2;
    default:
      throw new TypeError('unsupported "digest" value');
  }
}
function normalizeUint8Array(input, label) {
  if (typeof input === "string")
    return new TextEncoder().encode(input);
  if (!(input instanceof Uint8Array))
    throw new TypeError(`"${label}"" must be an instance of Uint8Array or a string`);
  return input;
}
function normalizeIkm(input) {
  const ikm = normalizeUint8Array(input, "ikm");
  if (!ikm.byteLength)
    throw new TypeError(`"ikm" must be at least one byte in length`);
  return ikm;
}
function normalizeInfo(input) {
  const info2 = normalizeUint8Array(input, "info");
  if (info2.byteLength > 1024) {
    throw TypeError('"info" must not contain more than 1024 bytes');
  }
  return info2;
}
function normalizeKeylen(input, digest2) {
  if (typeof input !== "number" || !Number.isInteger(input) || input < 1) {
    throw new TypeError('"keylen" must be a positive integer');
  }
  const hashlen = parseInt(digest2.substr(3), 10) >> 3 || 20;
  if (input > 255 * hashlen) {
    throw new TypeError('"keylen" too large');
  }
  return input;
}
async function hkdf(digest2, ikm, salt, info2, keylen) {
  return hkdf_default(normalizeDigest(digest2), normalizeIkm(ikm), normalizeUint8Array(salt, "salt"), normalizeInfo(info2), normalizeKeylen(keylen, digest2));
}
var init_web = __esm({
  "../../node_modules/@panva/hkdf/dist/web/index.js"() {
    init_hkdf();
  }
});

// ../../node_modules/jose/dist/browser/runtime/webcrypto.js
var webcrypto_default, isCryptoKey;
var init_webcrypto = __esm({
  "../../node_modules/jose/dist/browser/runtime/webcrypto.js"() {
    webcrypto_default = crypto;
    isCryptoKey = (key) => key instanceof CryptoKey;
  }
});

// ../../node_modules/jose/dist/browser/runtime/digest.js
var digest, digest_default;
var init_digest = __esm({
  "../../node_modules/jose/dist/browser/runtime/digest.js"() {
    init_webcrypto();
    digest = async (algorithm, data) => {
      const subtleDigest = `SHA-${algorithm.slice(-3)}`;
      return new Uint8Array(await webcrypto_default.subtle.digest(subtleDigest, data));
    };
    digest_default = digest;
  }
});

// ../../node_modules/jose/dist/browser/lib/buffer_utils.js
function concat(...buffers) {
  const size = buffers.reduce((acc, { length }) => acc + length, 0);
  const buf2 = new Uint8Array(size);
  let i3 = 0;
  for (const buffer of buffers) {
    buf2.set(buffer, i3);
    i3 += buffer.length;
  }
  return buf2;
}
function p2s(alg, p2sInput) {
  return concat(encoder2.encode(alg), new Uint8Array([0]), p2sInput);
}
function writeUInt32BE(buf2, value, offset) {
  if (value < 0 || value >= MAX_INT32) {
    throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);
  }
  buf2.set([value >>> 24, value >>> 16, value >>> 8, value & 255], offset);
}
function uint64be(value) {
  const high = Math.floor(value / MAX_INT32);
  const low = value % MAX_INT32;
  const buf2 = new Uint8Array(8);
  writeUInt32BE(buf2, high, 0);
  writeUInt32BE(buf2, low, 4);
  return buf2;
}
function uint32be(value) {
  const buf2 = new Uint8Array(4);
  writeUInt32BE(buf2, value);
  return buf2;
}
function lengthAndInput(input) {
  return concat(uint32be(input.length), input);
}
async function concatKdf(secret, bits2, value) {
  const iterations = Math.ceil((bits2 >> 3) / 32);
  const res = new Uint8Array(iterations * 32);
  for (let iter = 0; iter < iterations; iter++) {
    const buf2 = new Uint8Array(4 + secret.length + value.length);
    buf2.set(uint32be(iter + 1));
    buf2.set(secret, 4);
    buf2.set(value, 4 + secret.length);
    res.set(await digest_default("sha256", buf2), iter * 32);
  }
  return res.slice(0, bits2 >> 3);
}
var encoder2, decoder3, MAX_INT32;
var init_buffer_utils = __esm({
  "../../node_modules/jose/dist/browser/lib/buffer_utils.js"() {
    init_digest();
    encoder2 = new TextEncoder();
    decoder3 = new TextDecoder();
    MAX_INT32 = 2 ** 32;
  }
});

// ../../node_modules/jose/dist/browser/runtime/base64url.js
var encodeBase64, encode, decodeBase64, decode;
var init_base64url = __esm({
  "../../node_modules/jose/dist/browser/runtime/base64url.js"() {
    init_buffer_utils();
    encodeBase64 = (input) => {
      let unencoded = input;
      if (typeof unencoded === "string") {
        unencoded = encoder2.encode(unencoded);
      }
      const CHUNK_SIZE3 = 32768;
      const arr = [];
      for (let i3 = 0; i3 < unencoded.length; i3 += CHUNK_SIZE3) {
        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i3, i3 + CHUNK_SIZE3)));
      }
      return btoa(arr.join(""));
    };
    encode = (input) => {
      return encodeBase64(input).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
    };
    decodeBase64 = (encoded) => {
      const binary2 = atob(encoded);
      const bytes = new Uint8Array(binary2.length);
      for (let i3 = 0; i3 < binary2.length; i3++) {
        bytes[i3] = binary2.charCodeAt(i3);
      }
      return bytes;
    };
    decode = (input) => {
      let encoded = input;
      if (encoded instanceof Uint8Array) {
        encoded = decoder3.decode(encoded);
      }
      encoded = encoded.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, "");
      try {
        return decodeBase64(encoded);
      } catch {
        throw new TypeError("The input to be decoded is not correctly encoded.");
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/util/errors.js
var JOSEError, JWTClaimValidationFailed, JWTExpired, JOSEAlgNotAllowed, JOSENotSupported, JWEDecryptionFailed, JWEInvalid, JWTInvalid;
var init_errors2 = __esm({
  "../../node_modules/jose/dist/browser/util/errors.js"() {
    JOSEError = class extends Error {
      static get code() {
        return "ERR_JOSE_GENERIC";
      }
      constructor(message2) {
        super(message2);
        this.code = "ERR_JOSE_GENERIC";
        this.name = this.constructor.name;
        Error.captureStackTrace?.(this, this.constructor);
      }
    };
    JWTClaimValidationFailed = class extends JOSEError {
      static get code() {
        return "ERR_JWT_CLAIM_VALIDATION_FAILED";
      }
      constructor(message2, claim = "unspecified", reason = "unspecified") {
        super(message2);
        this.code = "ERR_JWT_CLAIM_VALIDATION_FAILED";
        this.claim = claim;
        this.reason = reason;
      }
    };
    JWTExpired = class extends JOSEError {
      static get code() {
        return "ERR_JWT_EXPIRED";
      }
      constructor(message2, claim = "unspecified", reason = "unspecified") {
        super(message2);
        this.code = "ERR_JWT_EXPIRED";
        this.claim = claim;
        this.reason = reason;
      }
    };
    JOSEAlgNotAllowed = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JOSE_ALG_NOT_ALLOWED";
      }
      static get code() {
        return "ERR_JOSE_ALG_NOT_ALLOWED";
      }
    };
    JOSENotSupported = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JOSE_NOT_SUPPORTED";
      }
      static get code() {
        return "ERR_JOSE_NOT_SUPPORTED";
      }
    };
    JWEDecryptionFailed = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWE_DECRYPTION_FAILED";
        this.message = "decryption operation failed";
      }
      static get code() {
        return "ERR_JWE_DECRYPTION_FAILED";
      }
    };
    JWEInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWE_INVALID";
      }
      static get code() {
        return "ERR_JWE_INVALID";
      }
    };
    JWTInvalid = class extends JOSEError {
      constructor() {
        super(...arguments);
        this.code = "ERR_JWT_INVALID";
      }
      static get code() {
        return "ERR_JWT_INVALID";
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/random.js
var random_default;
var init_random = __esm({
  "../../node_modules/jose/dist/browser/runtime/random.js"() {
    init_webcrypto();
    random_default = webcrypto_default.getRandomValues.bind(webcrypto_default);
  }
});

// ../../node_modules/jose/dist/browser/lib/iv.js
function bitLength(alg) {
  switch (alg) {
    case "A128GCM":
    case "A128GCMKW":
    case "A192GCM":
    case "A192GCMKW":
    case "A256GCM":
    case "A256GCMKW":
      return 96;
    case "A128CBC-HS256":
    case "A192CBC-HS384":
    case "A256CBC-HS512":
      return 128;
    default:
      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);
  }
}
var iv_default;
var init_iv = __esm({
  "../../node_modules/jose/dist/browser/lib/iv.js"() {
    init_errors2();
    init_random();
    iv_default = (alg) => random_default(new Uint8Array(bitLength(alg) >> 3));
  }
});

// ../../node_modules/jose/dist/browser/lib/check_iv_length.js
var checkIvLength, check_iv_length_default;
var init_check_iv_length = __esm({
  "../../node_modules/jose/dist/browser/lib/check_iv_length.js"() {
    init_errors2();
    init_iv();
    checkIvLength = (enc, iv) => {
      if (iv.length << 3 !== bitLength(enc)) {
        throw new JWEInvalid("Invalid Initialization Vector length");
      }
    };
    check_iv_length_default = checkIvLength;
  }
});

// ../../node_modules/jose/dist/browser/runtime/check_cek_length.js
var checkCekLength, check_cek_length_default;
var init_check_cek_length = __esm({
  "../../node_modules/jose/dist/browser/runtime/check_cek_length.js"() {
    init_errors2();
    checkCekLength = (cek, expected) => {
      const actual = cek.byteLength << 3;
      if (actual !== expected) {
        throw new JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);
      }
    };
    check_cek_length_default = checkCekLength;
  }
});

// ../../node_modules/jose/dist/browser/runtime/timing_safe_equal.js
var timingSafeEqual, timing_safe_equal_default;
var init_timing_safe_equal = __esm({
  "../../node_modules/jose/dist/browser/runtime/timing_safe_equal.js"() {
    timingSafeEqual = (a3, b5) => {
      if (!(a3 instanceof Uint8Array)) {
        throw new TypeError("First argument must be a buffer");
      }
      if (!(b5 instanceof Uint8Array)) {
        throw new TypeError("Second argument must be a buffer");
      }
      if (a3.length !== b5.length) {
        throw new TypeError("Input buffers must have the same length");
      }
      const len = a3.length;
      let out = 0;
      let i3 = -1;
      while (++i3 < len) {
        out |= a3[i3] ^ b5[i3];
      }
      return out === 0;
    };
    timing_safe_equal_default = timingSafeEqual;
  }
});

// ../../node_modules/jose/dist/browser/lib/crypto_key.js
function unusable(name, prop = "algorithm.name") {
  return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);
}
function isAlgorithm(algorithm, name) {
  return algorithm.name === name;
}
function getHashLength(hash) {
  return parseInt(hash.name.slice(4), 10);
}
function checkUsage(key, usages) {
  if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {
    let msg = "CryptoKey does not support this operation, its usages must include ";
    if (usages.length > 2) {
      const last = usages.pop();
      msg += `one of ${usages.join(", ")}, or ${last}.`;
    } else if (usages.length === 2) {
      msg += `one of ${usages[0]} or ${usages[1]}.`;
    } else {
      msg += `${usages[0]}.`;
    }
    throw new TypeError(msg);
  }
}
function checkEncCryptoKey(key, alg, ...usages) {
  switch (alg) {
    case "A128GCM":
    case "A192GCM":
    case "A256GCM": {
      if (!isAlgorithm(key.algorithm, "AES-GCM"))
        throw unusable("AES-GCM");
      const expected = parseInt(alg.slice(1, 4), 10);
      const actual = key.algorithm.length;
      if (actual !== expected)
        throw unusable(expected, "algorithm.length");
      break;
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      if (!isAlgorithm(key.algorithm, "AES-KW"))
        throw unusable("AES-KW");
      const expected = parseInt(alg.slice(1, 4), 10);
      const actual = key.algorithm.length;
      if (actual !== expected)
        throw unusable(expected, "algorithm.length");
      break;
    }
    case "ECDH": {
      switch (key.algorithm.name) {
        case "ECDH":
        case "X25519":
        case "X448":
          break;
        default:
          throw unusable("ECDH, X25519, or X448");
      }
      break;
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW":
      if (!isAlgorithm(key.algorithm, "PBKDF2"))
        throw unusable("PBKDF2");
      break;
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      if (!isAlgorithm(key.algorithm, "RSA-OAEP"))
        throw unusable("RSA-OAEP");
      const expected = parseInt(alg.slice(9), 10) || 1;
      const actual = getHashLength(key.algorithm.hash);
      if (actual !== expected)
        throw unusable(`SHA-${expected}`, "algorithm.hash");
      break;
    }
    default:
      throw new TypeError("CryptoKey does not support this operation");
  }
  checkUsage(key, usages);
}
var init_crypto_key = __esm({
  "../../node_modules/jose/dist/browser/lib/crypto_key.js"() {
  }
});

// ../../node_modules/jose/dist/browser/lib/invalid_key_input.js
function message(msg, actual, ...types3) {
  if (types3.length > 2) {
    const last = types3.pop();
    msg += `one of type ${types3.join(", ")}, or ${last}.`;
  } else if (types3.length === 2) {
    msg += `one of type ${types3[0]} or ${types3[1]}.`;
  } else {
    msg += `of type ${types3[0]}.`;
  }
  if (actual == null) {
    msg += ` Received ${actual}`;
  } else if (typeof actual === "function" && actual.name) {
    msg += ` Received function ${actual.name}`;
  } else if (typeof actual === "object" && actual != null) {
    if (actual.constructor?.name) {
      msg += ` Received an instance of ${actual.constructor.name}`;
    }
  }
  return msg;
}
function withAlg(alg, actual, ...types3) {
  return message(`Key for the ${alg} algorithm must be `, actual, ...types3);
}
var invalid_key_input_default;
var init_invalid_key_input = __esm({
  "../../node_modules/jose/dist/browser/lib/invalid_key_input.js"() {
    invalid_key_input_default = (actual, ...types3) => {
      return message("Key must be ", actual, ...types3);
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/is_key_like.js
var is_key_like_default, types2;
var init_is_key_like = __esm({
  "../../node_modules/jose/dist/browser/runtime/is_key_like.js"() {
    init_webcrypto();
    is_key_like_default = (key) => {
      return isCryptoKey(key);
    };
    types2 = ["CryptoKey"];
  }
});

// ../../node_modules/jose/dist/browser/runtime/decrypt.js
async function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {
  if (!(cek instanceof Uint8Array)) {
    throw new TypeError(invalid_key_input_default(cek, "Uint8Array"));
  }
  const keySize = parseInt(enc.slice(1, 4), 10);
  const encKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(keySize >> 3), "AES-CBC", false, ["decrypt"]);
  const macKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(0, keySize >> 3), {
    hash: `SHA-${keySize << 1}`,
    name: "HMAC"
  }, false, ["sign"]);
  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));
  const expectedTag = new Uint8Array((await webcrypto_default.subtle.sign("HMAC", macKey, macData)).slice(0, keySize >> 3));
  let macCheckPassed;
  try {
    macCheckPassed = timing_safe_equal_default(tag, expectedTag);
  } catch {
  }
  if (!macCheckPassed) {
    throw new JWEDecryptionFailed();
  }
  let plaintext;
  try {
    plaintext = new Uint8Array(await webcrypto_default.subtle.decrypt({ iv, name: "AES-CBC" }, encKey, ciphertext));
  } catch {
  }
  if (!plaintext) {
    throw new JWEDecryptionFailed();
  }
  return plaintext;
}
async function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {
  let encKey;
  if (cek instanceof Uint8Array) {
    encKey = await webcrypto_default.subtle.importKey("raw", cek, "AES-GCM", false, ["decrypt"]);
  } else {
    checkEncCryptoKey(cek, enc, "decrypt");
    encKey = cek;
  }
  try {
    return new Uint8Array(await webcrypto_default.subtle.decrypt({
      additionalData: aad,
      iv,
      name: "AES-GCM",
      tagLength: 128
    }, encKey, concat(ciphertext, tag)));
  } catch {
    throw new JWEDecryptionFailed();
  }
}
var decrypt, decrypt_default;
var init_decrypt = __esm({
  "../../node_modules/jose/dist/browser/runtime/decrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_timing_safe_equal();
    init_errors2();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    decrypt = async (enc, cek, ciphertext, iv, tag, aad) => {
      if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {
        throw new TypeError(invalid_key_input_default(cek, ...types2, "Uint8Array"));
      }
      if (!iv) {
        throw new JWEInvalid("JWE Initialization Vector missing");
      }
      if (!tag) {
        throw new JWEInvalid("JWE Authentication Tag missing");
      }
      check_iv_length_default(enc, iv);
      switch (enc) {
        case "A128CBC-HS256":
        case "A192CBC-HS384":
        case "A256CBC-HS512":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(-3), 10));
          return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);
        case "A128GCM":
        case "A192GCM":
        case "A256GCM":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(1, 4), 10));
          return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);
        default:
          throw new JOSENotSupported("Unsupported JWE Content Encryption Algorithm");
      }
    };
    decrypt_default = decrypt;
  }
});

// ../../node_modules/jose/dist/browser/lib/is_disjoint.js
var isDisjoint, is_disjoint_default;
var init_is_disjoint = __esm({
  "../../node_modules/jose/dist/browser/lib/is_disjoint.js"() {
    isDisjoint = (...headers) => {
      const sources = headers.filter(Boolean);
      if (sources.length === 0 || sources.length === 1) {
        return true;
      }
      let acc;
      for (const header of sources) {
        const parameters = Object.keys(header);
        if (!acc || acc.size === 0) {
          acc = new Set(parameters);
          continue;
        }
        for (const parameter of parameters) {
          if (acc.has(parameter)) {
            return false;
          }
          acc.add(parameter);
        }
      }
      return true;
    };
    is_disjoint_default = isDisjoint;
  }
});

// ../../node_modules/jose/dist/browser/lib/is_object.js
function isObjectLike(value) {
  return typeof value === "object" && value !== null;
}
function isObject(input) {
  if (!isObjectLike(input) || Object.prototype.toString.call(input) !== "[object Object]") {
    return false;
  }
  if (Object.getPrototypeOf(input) === null) {
    return true;
  }
  let proto = input;
  while (Object.getPrototypeOf(proto) !== null) {
    proto = Object.getPrototypeOf(proto);
  }
  return Object.getPrototypeOf(input) === proto;
}
var init_is_object = __esm({
  "../../node_modules/jose/dist/browser/lib/is_object.js"() {
  }
});

// ../../node_modules/jose/dist/browser/runtime/bogus.js
var bogusWebCrypto, bogus_default;
var init_bogus = __esm({
  "../../node_modules/jose/dist/browser/runtime/bogus.js"() {
    bogusWebCrypto = [
      { hash: "SHA-256", name: "HMAC" },
      true,
      ["sign"]
    ];
    bogus_default = bogusWebCrypto;
  }
});

// ../../node_modules/jose/dist/browser/runtime/aeskw.js
function checkKeySize(key, alg) {
  if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {
    throw new TypeError(`Invalid key size for alg: ${alg}`);
  }
}
function getCryptoKey(key, alg, usage) {
  if (isCryptoKey(key)) {
    checkEncCryptoKey(key, alg, usage);
    return key;
  }
  if (key instanceof Uint8Array) {
    return webcrypto_default.subtle.importKey("raw", key, "AES-KW", true, [usage]);
  }
  throw new TypeError(invalid_key_input_default(key, ...types2, "Uint8Array"));
}
var wrap, unwrap;
var init_aeskw = __esm({
  "../../node_modules/jose/dist/browser/runtime/aeskw.js"() {
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    wrap = async (alg, key, cek) => {
      const cryptoKey = await getCryptoKey(key, alg, "wrapKey");
      checkKeySize(cryptoKey, alg);
      const cryptoKeyCek = await webcrypto_default.subtle.importKey("raw", cek, ...bogus_default);
      return new Uint8Array(await webcrypto_default.subtle.wrapKey("raw", cryptoKeyCek, cryptoKey, "AES-KW"));
    };
    unwrap = async (alg, key, encryptedKey) => {
      const cryptoKey = await getCryptoKey(key, alg, "unwrapKey");
      checkKeySize(cryptoKey, alg);
      const cryptoKeyCek = await webcrypto_default.subtle.unwrapKey("raw", encryptedKey, cryptoKey, "AES-KW", ...bogus_default);
      return new Uint8Array(await webcrypto_default.subtle.exportKey("raw", cryptoKeyCek));
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/ecdhes.js
async function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {
  if (!isCryptoKey(publicKey)) {
    throw new TypeError(invalid_key_input_default(publicKey, ...types2));
  }
  checkEncCryptoKey(publicKey, "ECDH");
  if (!isCryptoKey(privateKey)) {
    throw new TypeError(invalid_key_input_default(privateKey, ...types2));
  }
  checkEncCryptoKey(privateKey, "ECDH", "deriveBits");
  const value = concat(lengthAndInput(encoder2.encode(algorithm)), lengthAndInput(apu), lengthAndInput(apv), uint32be(keyLength));
  let length;
  if (publicKey.algorithm.name === "X25519") {
    length = 256;
  } else if (publicKey.algorithm.name === "X448") {
    length = 448;
  } else {
    length = Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;
  }
  const sharedSecret = new Uint8Array(await webcrypto_default.subtle.deriveBits({
    name: publicKey.algorithm.name,
    public: publicKey
  }, privateKey, length));
  return concatKdf(sharedSecret, keyLength, value);
}
async function generateEpk(key) {
  if (!isCryptoKey(key)) {
    throw new TypeError(invalid_key_input_default(key, ...types2));
  }
  return webcrypto_default.subtle.generateKey(key.algorithm, true, ["deriveBits"]);
}
function ecdhAllowed(key) {
  if (!isCryptoKey(key)) {
    throw new TypeError(invalid_key_input_default(key, ...types2));
  }
  return ["P-256", "P-384", "P-521"].includes(key.algorithm.namedCurve) || key.algorithm.name === "X25519" || key.algorithm.name === "X448";
}
var init_ecdhes = __esm({
  "../../node_modules/jose/dist/browser/runtime/ecdhes.js"() {
    init_buffer_utils();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});

// ../../node_modules/jose/dist/browser/lib/check_p2s.js
function checkP2s(p2s2) {
  if (!(p2s2 instanceof Uint8Array) || p2s2.length < 8) {
    throw new JWEInvalid("PBES2 Salt Input must be 8 or more octets");
  }
}
var init_check_p2s = __esm({
  "../../node_modules/jose/dist/browser/lib/check_p2s.js"() {
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/runtime/pbes2kw.js
function getCryptoKey2(key, alg) {
  if (key instanceof Uint8Array) {
    return webcrypto_default.subtle.importKey("raw", key, "PBKDF2", false, ["deriveBits"]);
  }
  if (isCryptoKey(key)) {
    checkEncCryptoKey(key, alg, "deriveBits", "deriveKey");
    return key;
  }
  throw new TypeError(invalid_key_input_default(key, ...types2, "Uint8Array"));
}
async function deriveKey2(p2s2, alg, p2c, key) {
  checkP2s(p2s2);
  const salt = p2s(alg, p2s2);
  const keylen = parseInt(alg.slice(13, 16), 10);
  const subtleAlg = {
    hash: `SHA-${alg.slice(8, 11)}`,
    iterations: p2c,
    name: "PBKDF2",
    salt
  };
  const wrapAlg = {
    length: keylen,
    name: "AES-KW"
  };
  const cryptoKey = await getCryptoKey2(key, alg);
  if (cryptoKey.usages.includes("deriveBits")) {
    return new Uint8Array(await webcrypto_default.subtle.deriveBits(subtleAlg, cryptoKey, keylen));
  }
  if (cryptoKey.usages.includes("deriveKey")) {
    return webcrypto_default.subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, ["wrapKey", "unwrapKey"]);
  }
  throw new TypeError('PBKDF2 key "usages" must include "deriveBits" or "deriveKey"');
}
var encrypt, decrypt2;
var init_pbes2kw = __esm({
  "../../node_modules/jose/dist/browser/runtime/pbes2kw.js"() {
    init_random();
    init_buffer_utils();
    init_base64url();
    init_aeskw();
    init_check_p2s();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
    encrypt = async (alg, key, cek, p2c = 2048, p2s2 = random_default(new Uint8Array(16))) => {
      const derived = await deriveKey2(p2s2, alg, p2c, key);
      const encryptedKey = await wrap(alg.slice(-6), derived, cek);
      return { encryptedKey, p2c, p2s: encode(p2s2) };
    };
    decrypt2 = async (alg, key, encryptedKey, p2c, p2s2) => {
      const derived = await deriveKey2(p2s2, alg, p2c, key);
      return unwrap(alg.slice(-6), derived, encryptedKey);
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js
function subtleRsaEs(alg) {
  switch (alg) {
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512":
      return "RSA-OAEP";
    default:
      throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);
  }
}
var init_subtle_rsaes = __esm({
  "../../node_modules/jose/dist/browser/runtime/subtle_rsaes.js"() {
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/runtime/check_key_length.js
var check_key_length_default;
var init_check_key_length = __esm({
  "../../node_modules/jose/dist/browser/runtime/check_key_length.js"() {
    check_key_length_default = (alg, key) => {
      if (alg.startsWith("RS") || alg.startsWith("PS")) {
        const { modulusLength } = key.algorithm;
        if (typeof modulusLength !== "number" || modulusLength < 2048) {
          throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);
        }
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/rsaes.js
var encrypt2, decrypt3;
var init_rsaes = __esm({
  "../../node_modules/jose/dist/browser/runtime/rsaes.js"() {
    init_subtle_rsaes();
    init_bogus();
    init_webcrypto();
    init_crypto_key();
    init_check_key_length();
    init_invalid_key_input();
    init_is_key_like();
    encrypt2 = async (alg, key, cek) => {
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types2));
      }
      checkEncCryptoKey(key, alg, "encrypt", "wrapKey");
      check_key_length_default(alg, key);
      if (key.usages.includes("encrypt")) {
        return new Uint8Array(await webcrypto_default.subtle.encrypt(subtleRsaEs(alg), key, cek));
      }
      if (key.usages.includes("wrapKey")) {
        const cryptoKeyCek = await webcrypto_default.subtle.importKey("raw", cek, ...bogus_default);
        return new Uint8Array(await webcrypto_default.subtle.wrapKey("raw", cryptoKeyCek, key, subtleRsaEs(alg)));
      }
      throw new TypeError('RSA-OAEP key "usages" must include "encrypt" or "wrapKey" for this operation');
    };
    decrypt3 = async (alg, key, encryptedKey) => {
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types2));
      }
      checkEncCryptoKey(key, alg, "decrypt", "unwrapKey");
      check_key_length_default(alg, key);
      if (key.usages.includes("decrypt")) {
        return new Uint8Array(await webcrypto_default.subtle.decrypt(subtleRsaEs(alg), key, encryptedKey));
      }
      if (key.usages.includes("unwrapKey")) {
        const cryptoKeyCek = await webcrypto_default.subtle.unwrapKey("raw", encryptedKey, key, subtleRsaEs(alg), ...bogus_default);
        return new Uint8Array(await webcrypto_default.subtle.exportKey("raw", cryptoKeyCek));
      }
      throw new TypeError('RSA-OAEP key "usages" must include "decrypt" or "unwrapKey" for this operation');
    };
  }
});

// ../../node_modules/jose/dist/browser/lib/cek.js
function bitLength2(alg) {
  switch (alg) {
    case "A128GCM":
      return 128;
    case "A192GCM":
      return 192;
    case "A256GCM":
    case "A128CBC-HS256":
      return 256;
    case "A192CBC-HS384":
      return 384;
    case "A256CBC-HS512":
      return 512;
    default:
      throw new JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);
  }
}
var cek_default;
var init_cek = __esm({
  "../../node_modules/jose/dist/browser/lib/cek.js"() {
    init_errors2();
    init_random();
    cek_default = (alg) => random_default(new Uint8Array(bitLength2(alg) >> 3));
  }
});

// ../../node_modules/jose/dist/browser/lib/format_pem.js
var init_format_pem = __esm({
  "../../node_modules/jose/dist/browser/lib/format_pem.js"() {
  }
});

// ../../node_modules/jose/dist/browser/runtime/asn1.js
var init_asn1 = __esm({
  "../../node_modules/jose/dist/browser/runtime/asn1.js"() {
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_format_pem();
    init_errors2();
    init_is_key_like();
  }
});

// ../../node_modules/jose/dist/browser/runtime/jwk_to_key.js
function subtleMapping(jwk) {
  let algorithm;
  let keyUsages;
  switch (jwk.kty) {
    case "RSA": {
      switch (jwk.alg) {
        case "PS256":
        case "PS384":
        case "PS512":
          algorithm = { name: "RSA-PSS", hash: `SHA-${jwk.alg.slice(-3)}` };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "RS256":
        case "RS384":
        case "RS512":
          algorithm = { name: "RSASSA-PKCS1-v1_5", hash: `SHA-${jwk.alg.slice(-3)}` };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "RSA-OAEP":
        case "RSA-OAEP-256":
        case "RSA-OAEP-384":
        case "RSA-OAEP-512":
          algorithm = {
            name: "RSA-OAEP",
            hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`
          };
          keyUsages = jwk.d ? ["decrypt", "unwrapKey"] : ["encrypt", "wrapKey"];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    case "EC": {
      switch (jwk.alg) {
        case "ES256":
          algorithm = { name: "ECDSA", namedCurve: "P-256" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ES384":
          algorithm = { name: "ECDSA", namedCurve: "P-384" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ES512":
          algorithm = { name: "ECDSA", namedCurve: "P-521" };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ECDH-ES":
        case "ECDH-ES+A128KW":
        case "ECDH-ES+A192KW":
        case "ECDH-ES+A256KW":
          algorithm = { name: "ECDH", namedCurve: jwk.crv };
          keyUsages = jwk.d ? ["deriveBits"] : [];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    case "OKP": {
      switch (jwk.alg) {
        case "EdDSA":
          algorithm = { name: jwk.crv };
          keyUsages = jwk.d ? ["sign"] : ["verify"];
          break;
        case "ECDH-ES":
        case "ECDH-ES+A128KW":
        case "ECDH-ES+A192KW":
        case "ECDH-ES+A256KW":
          algorithm = { name: jwk.crv };
          keyUsages = jwk.d ? ["deriveBits"] : [];
          break;
        default:
          throw new JOSENotSupported('Invalid or unsupported JWK "alg" (Algorithm) Parameter value');
      }
      break;
    }
    default:
      throw new JOSENotSupported('Invalid or unsupported JWK "kty" (Key Type) Parameter value');
  }
  return { algorithm, keyUsages };
}
var parse2, jwk_to_key_default;
var init_jwk_to_key = __esm({
  "../../node_modules/jose/dist/browser/runtime/jwk_to_key.js"() {
    init_webcrypto();
    init_errors2();
    parse2 = async (jwk) => {
      if (!jwk.alg) {
        throw new TypeError('"alg" argument is required when "jwk.alg" is not present');
      }
      const { algorithm, keyUsages } = subtleMapping(jwk);
      const rest = [
        algorithm,
        jwk.ext ?? false,
        jwk.key_ops ?? keyUsages
      ];
      const keyData = { ...jwk };
      delete keyData.alg;
      delete keyData.use;
      return webcrypto_default.subtle.importKey("jwk", keyData, ...rest);
    };
    jwk_to_key_default = parse2;
  }
});

// ../../node_modules/jose/dist/browser/key/import.js
async function importJWK(jwk, alg) {
  if (!isObject(jwk)) {
    throw new TypeError("JWK must be an object");
  }
  alg || (alg = jwk.alg);
  switch (jwk.kty) {
    case "oct":
      if (typeof jwk.k !== "string" || !jwk.k) {
        throw new TypeError('missing "k" (Key Value) Parameter value');
      }
      return decode(jwk.k);
    case "RSA":
      if (jwk.oth !== void 0) {
        throw new JOSENotSupported('RSA JWK "oth" (Other Primes Info) Parameter value is not supported');
      }
    case "EC":
    case "OKP":
      return jwk_to_key_default({ ...jwk, alg });
    default:
      throw new JOSENotSupported('Unsupported "kty" (Key Type) Parameter value');
  }
}
var init_import = __esm({
  "../../node_modules/jose/dist/browser/key/import.js"() {
    init_base64url();
    init_asn1();
    init_jwk_to_key();
    init_errors2();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/lib/check_key_type.js
var symmetricTypeCheck, asymmetricTypeCheck, checkKeyType, check_key_type_default;
var init_check_key_type = __esm({
  "../../node_modules/jose/dist/browser/lib/check_key_type.js"() {
    init_invalid_key_input();
    init_is_key_like();
    symmetricTypeCheck = (alg, key) => {
      if (key instanceof Uint8Array)
        return;
      if (!is_key_like_default(key)) {
        throw new TypeError(withAlg(alg, key, ...types2, "Uint8Array"));
      }
      if (key.type !== "secret") {
        throw new TypeError(`${types2.join(" or ")} instances for symmetric algorithms must be of type "secret"`);
      }
    };
    asymmetricTypeCheck = (alg, key, usage) => {
      if (!is_key_like_default(key)) {
        throw new TypeError(withAlg(alg, key, ...types2));
      }
      if (key.type === "secret") {
        throw new TypeError(`${types2.join(" or ")} instances for asymmetric algorithms must not be of type "secret"`);
      }
      if (usage === "sign" && key.type === "public") {
        throw new TypeError(`${types2.join(" or ")} instances for asymmetric algorithm signing must be of type "private"`);
      }
      if (usage === "decrypt" && key.type === "public") {
        throw new TypeError(`${types2.join(" or ")} instances for asymmetric algorithm decryption must be of type "private"`);
      }
      if (key.algorithm && usage === "verify" && key.type === "private") {
        throw new TypeError(`${types2.join(" or ")} instances for asymmetric algorithm verifying must be of type "public"`);
      }
      if (key.algorithm && usage === "encrypt" && key.type === "private") {
        throw new TypeError(`${types2.join(" or ")} instances for asymmetric algorithm encryption must be of type "public"`);
      }
    };
    checkKeyType = (alg, key, usage) => {
      const symmetric = alg.startsWith("HS") || alg === "dir" || alg.startsWith("PBES2") || /^A\d{3}(?:GCM)?KW$/.test(alg);
      if (symmetric) {
        symmetricTypeCheck(alg, key);
      } else {
        asymmetricTypeCheck(alg, key, usage);
      }
    };
    check_key_type_default = checkKeyType;
  }
});

// ../../node_modules/jose/dist/browser/runtime/encrypt.js
async function cbcEncrypt(enc, plaintext, cek, iv, aad) {
  if (!(cek instanceof Uint8Array)) {
    throw new TypeError(invalid_key_input_default(cek, "Uint8Array"));
  }
  const keySize = parseInt(enc.slice(1, 4), 10);
  const encKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(keySize >> 3), "AES-CBC", false, ["encrypt"]);
  const macKey = await webcrypto_default.subtle.importKey("raw", cek.subarray(0, keySize >> 3), {
    hash: `SHA-${keySize << 1}`,
    name: "HMAC"
  }, false, ["sign"]);
  const ciphertext = new Uint8Array(await webcrypto_default.subtle.encrypt({
    iv,
    name: "AES-CBC"
  }, encKey, plaintext));
  const macData = concat(aad, iv, ciphertext, uint64be(aad.length << 3));
  const tag = new Uint8Array((await webcrypto_default.subtle.sign("HMAC", macKey, macData)).slice(0, keySize >> 3));
  return { ciphertext, tag };
}
async function gcmEncrypt(enc, plaintext, cek, iv, aad) {
  let encKey;
  if (cek instanceof Uint8Array) {
    encKey = await webcrypto_default.subtle.importKey("raw", cek, "AES-GCM", false, ["encrypt"]);
  } else {
    checkEncCryptoKey(cek, enc, "encrypt");
    encKey = cek;
  }
  const encrypted = new Uint8Array(await webcrypto_default.subtle.encrypt({
    additionalData: aad,
    iv,
    name: "AES-GCM",
    tagLength: 128
  }, encKey, plaintext));
  const tag = encrypted.slice(-16);
  const ciphertext = encrypted.slice(0, -16);
  return { ciphertext, tag };
}
var encrypt3, encrypt_default;
var init_encrypt = __esm({
  "../../node_modules/jose/dist/browser/runtime/encrypt.js"() {
    init_buffer_utils();
    init_check_iv_length();
    init_check_cek_length();
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_errors2();
    init_is_key_like();
    encrypt3 = async (enc, plaintext, cek, iv, aad) => {
      if (!isCryptoKey(cek) && !(cek instanceof Uint8Array)) {
        throw new TypeError(invalid_key_input_default(cek, ...types2, "Uint8Array"));
      }
      check_iv_length_default(enc, iv);
      switch (enc) {
        case "A128CBC-HS256":
        case "A192CBC-HS384":
        case "A256CBC-HS512":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(-3), 10));
          return cbcEncrypt(enc, plaintext, cek, iv, aad);
        case "A128GCM":
        case "A192GCM":
        case "A256GCM":
          if (cek instanceof Uint8Array)
            check_cek_length_default(cek, parseInt(enc.slice(1, 4), 10));
          return gcmEncrypt(enc, plaintext, cek, iv, aad);
        default:
          throw new JOSENotSupported("Unsupported JWE Content Encryption Algorithm");
      }
    };
    encrypt_default = encrypt3;
  }
});

// ../../node_modules/jose/dist/browser/lib/aesgcmkw.js
async function wrap2(alg, key, cek, iv) {
  const jweAlgorithm = alg.slice(0, 7);
  iv || (iv = iv_default(jweAlgorithm));
  const { ciphertext: encryptedKey, tag } = await encrypt_default(jweAlgorithm, cek, key, iv, new Uint8Array(0));
  return { encryptedKey, iv: encode(iv), tag: encode(tag) };
}
async function unwrap2(alg, key, encryptedKey, iv, tag) {
  const jweAlgorithm = alg.slice(0, 7);
  return decrypt_default(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));
}
var init_aesgcmkw = __esm({
  "../../node_modules/jose/dist/browser/lib/aesgcmkw.js"() {
    init_encrypt();
    init_decrypt();
    init_iv();
    init_base64url();
  }
});

// ../../node_modules/jose/dist/browser/lib/decrypt_key_management.js
async function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {
  check_key_type_default(alg, key, "decrypt");
  switch (alg) {
    case "dir": {
      if (encryptedKey !== void 0)
        throw new JWEInvalid("Encountered unexpected JWE Encrypted Key");
      return key;
    }
    case "ECDH-ES":
      if (encryptedKey !== void 0)
        throw new JWEInvalid("Encountered unexpected JWE Encrypted Key");
    case "ECDH-ES+A128KW":
    case "ECDH-ES+A192KW":
    case "ECDH-ES+A256KW": {
      if (!isObject(joseHeader.epk))
        throw new JWEInvalid(`JOSE Header "epk" (Ephemeral Public Key) missing or invalid`);
      if (!ecdhAllowed(key))
        throw new JOSENotSupported("ECDH with the provided key is not allowed or not supported by your javascript runtime");
      const epk = await importJWK(joseHeader.epk, alg);
      let partyUInfo;
      let partyVInfo;
      if (joseHeader.apu !== void 0) {
        if (typeof joseHeader.apu !== "string")
          throw new JWEInvalid(`JOSE Header "apu" (Agreement PartyUInfo) invalid`);
        try {
          partyUInfo = decode(joseHeader.apu);
        } catch {
          throw new JWEInvalid("Failed to base64url decode the apu");
        }
      }
      if (joseHeader.apv !== void 0) {
        if (typeof joseHeader.apv !== "string")
          throw new JWEInvalid(`JOSE Header "apv" (Agreement PartyVInfo) invalid`);
        try {
          partyVInfo = decode(joseHeader.apv);
        } catch {
          throw new JWEInvalid("Failed to base64url decode the apv");
        }
      }
      const sharedSecret = await deriveKey(epk, key, alg === "ECDH-ES" ? joseHeader.enc : alg, alg === "ECDH-ES" ? bitLength2(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);
      if (alg === "ECDH-ES")
        return sharedSecret;
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return unwrap(alg.slice(-6), sharedSecret, encryptedKey);
    }
    case "RSA1_5":
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return decrypt3(alg, key, encryptedKey);
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      if (typeof joseHeader.p2c !== "number")
        throw new JWEInvalid(`JOSE Header "p2c" (PBES2 Count) missing or invalid`);
      const p2cLimit = options?.maxPBES2Count || 1e4;
      if (joseHeader.p2c > p2cLimit)
        throw new JWEInvalid(`JOSE Header "p2c" (PBES2 Count) out is of acceptable bounds`);
      if (typeof joseHeader.p2s !== "string")
        throw new JWEInvalid(`JOSE Header "p2s" (PBES2 Salt) missing or invalid`);
      let p2s2;
      try {
        p2s2 = decode(joseHeader.p2s);
      } catch {
        throw new JWEInvalid("Failed to base64url decode the p2s");
      }
      return decrypt2(alg, key, encryptedKey, joseHeader.p2c, p2s2);
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      return unwrap(alg, key, encryptedKey);
    }
    case "A128GCMKW":
    case "A192GCMKW":
    case "A256GCMKW": {
      if (encryptedKey === void 0)
        throw new JWEInvalid("JWE Encrypted Key missing");
      if (typeof joseHeader.iv !== "string")
        throw new JWEInvalid(`JOSE Header "iv" (Initialization Vector) missing or invalid`);
      if (typeof joseHeader.tag !== "string")
        throw new JWEInvalid(`JOSE Header "tag" (Authentication Tag) missing or invalid`);
      let iv;
      try {
        iv = decode(joseHeader.iv);
      } catch {
        throw new JWEInvalid("Failed to base64url decode the iv");
      }
      let tag;
      try {
        tag = decode(joseHeader.tag);
      } catch {
        throw new JWEInvalid("Failed to base64url decode the tag");
      }
      return unwrap2(alg, key, encryptedKey, iv, tag);
    }
    default: {
      throw new JOSENotSupported('Invalid or unsupported "alg" (JWE Algorithm) header value');
    }
  }
}
var decrypt_key_management_default;
var init_decrypt_key_management = __esm({
  "../../node_modules/jose/dist/browser/lib/decrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_errors2();
    init_cek();
    init_import();
    init_check_key_type();
    init_is_object();
    init_aesgcmkw();
    decrypt_key_management_default = decryptKeyManagement;
  }
});

// ../../node_modules/jose/dist/browser/lib/validate_crit.js
function validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {
  if (joseHeader.crit !== void 0 && protectedHeader.crit === void 0) {
    throw new Err('"crit" (Critical) Header Parameter MUST be integrity protected');
  }
  if (!protectedHeader || protectedHeader.crit === void 0) {
    return /* @__PURE__ */ new Set();
  }
  if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input) => typeof input !== "string" || input.length === 0)) {
    throw new Err('"crit" (Critical) Header Parameter MUST be an array of non-empty strings when present');
  }
  let recognized;
  if (recognizedOption !== void 0) {
    recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);
  } else {
    recognized = recognizedDefault;
  }
  for (const parameter of protectedHeader.crit) {
    if (!recognized.has(parameter)) {
      throw new JOSENotSupported(`Extension Header Parameter "${parameter}" is not recognized`);
    }
    if (joseHeader[parameter] === void 0) {
      throw new Err(`Extension Header Parameter "${parameter}" is missing`);
    }
    if (recognized.get(parameter) && protectedHeader[parameter] === void 0) {
      throw new Err(`Extension Header Parameter "${parameter}" MUST be integrity protected`);
    }
  }
  return new Set(protectedHeader.crit);
}
var validate_crit_default;
var init_validate_crit = __esm({
  "../../node_modules/jose/dist/browser/lib/validate_crit.js"() {
    init_errors2();
    validate_crit_default = validateCrit;
  }
});

// ../../node_modules/jose/dist/browser/lib/validate_algorithms.js
var validateAlgorithms, validate_algorithms_default;
var init_validate_algorithms = __esm({
  "../../node_modules/jose/dist/browser/lib/validate_algorithms.js"() {
    validateAlgorithms = (option, algorithms) => {
      if (algorithms !== void 0 && (!Array.isArray(algorithms) || algorithms.some((s3) => typeof s3 !== "string"))) {
        throw new TypeError(`"${option}" option must be an array of strings`);
      }
      if (!algorithms) {
        return void 0;
      }
      return new Set(algorithms);
    };
    validate_algorithms_default = validateAlgorithms;
  }
});

// ../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js
async function flattenedDecrypt(jwe, key, options) {
  if (!isObject(jwe)) {
    throw new JWEInvalid("Flattened JWE must be an object");
  }
  if (jwe.protected === void 0 && jwe.header === void 0 && jwe.unprotected === void 0) {
    throw new JWEInvalid("JOSE Header missing");
  }
  if (jwe.iv !== void 0 && typeof jwe.iv !== "string") {
    throw new JWEInvalid("JWE Initialization Vector incorrect type");
  }
  if (typeof jwe.ciphertext !== "string") {
    throw new JWEInvalid("JWE Ciphertext missing or incorrect type");
  }
  if (jwe.tag !== void 0 && typeof jwe.tag !== "string") {
    throw new JWEInvalid("JWE Authentication Tag incorrect type");
  }
  if (jwe.protected !== void 0 && typeof jwe.protected !== "string") {
    throw new JWEInvalid("JWE Protected Header incorrect type");
  }
  if (jwe.encrypted_key !== void 0 && typeof jwe.encrypted_key !== "string") {
    throw new JWEInvalid("JWE Encrypted Key incorrect type");
  }
  if (jwe.aad !== void 0 && typeof jwe.aad !== "string") {
    throw new JWEInvalid("JWE AAD incorrect type");
  }
  if (jwe.header !== void 0 && !isObject(jwe.header)) {
    throw new JWEInvalid("JWE Shared Unprotected Header incorrect type");
  }
  if (jwe.unprotected !== void 0 && !isObject(jwe.unprotected)) {
    throw new JWEInvalid("JWE Per-Recipient Unprotected Header incorrect type");
  }
  let parsedProt;
  if (jwe.protected) {
    try {
      const protectedHeader2 = decode(jwe.protected);
      parsedProt = JSON.parse(decoder3.decode(protectedHeader2));
    } catch {
      throw new JWEInvalid("JWE Protected Header is invalid");
    }
  }
  if (!is_disjoint_default(parsedProt, jwe.header, jwe.unprotected)) {
    throw new JWEInvalid("JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint");
  }
  const joseHeader = {
    ...parsedProt,
    ...jwe.header,
    ...jwe.unprotected
  };
  validate_crit_default(JWEInvalid, /* @__PURE__ */ new Map(), options?.crit, parsedProt, joseHeader);
  if (joseHeader.zip !== void 0) {
    throw new JOSENotSupported('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');
  }
  const { alg, enc } = joseHeader;
  if (typeof alg !== "string" || !alg) {
    throw new JWEInvalid("missing JWE Algorithm (alg) in JWE Header");
  }
  if (typeof enc !== "string" || !enc) {
    throw new JWEInvalid("missing JWE Encryption Algorithm (enc) in JWE Header");
  }
  const keyManagementAlgorithms = options && validate_algorithms_default("keyManagementAlgorithms", options.keyManagementAlgorithms);
  const contentEncryptionAlgorithms = options && validate_algorithms_default("contentEncryptionAlgorithms", options.contentEncryptionAlgorithms);
  if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg) || !keyManagementAlgorithms && alg.startsWith("PBES2")) {
    throw new JOSEAlgNotAllowed('"alg" (Algorithm) Header Parameter value not allowed');
  }
  if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {
    throw new JOSEAlgNotAllowed('"enc" (Encryption Algorithm) Header Parameter value not allowed');
  }
  let encryptedKey;
  if (jwe.encrypted_key !== void 0) {
    try {
      encryptedKey = decode(jwe.encrypted_key);
    } catch {
      throw new JWEInvalid("Failed to base64url decode the encrypted_key");
    }
  }
  let resolvedKey = false;
  if (typeof key === "function") {
    key = await key(parsedProt, jwe);
    resolvedKey = true;
  }
  let cek;
  try {
    cek = await decrypt_key_management_default(alg, key, encryptedKey, joseHeader, options);
  } catch (err2) {
    if (err2 instanceof TypeError || err2 instanceof JWEInvalid || err2 instanceof JOSENotSupported) {
      throw err2;
    }
    cek = cek_default(enc);
  }
  let iv;
  let tag;
  if (jwe.iv !== void 0) {
    try {
      iv = decode(jwe.iv);
    } catch {
      throw new JWEInvalid("Failed to base64url decode the iv");
    }
  }
  if (jwe.tag !== void 0) {
    try {
      tag = decode(jwe.tag);
    } catch {
      throw new JWEInvalid("Failed to base64url decode the tag");
    }
  }
  const protectedHeader = encoder2.encode(jwe.protected ?? "");
  let additionalData;
  if (jwe.aad !== void 0) {
    additionalData = concat(protectedHeader, encoder2.encode("."), encoder2.encode(jwe.aad));
  } else {
    additionalData = protectedHeader;
  }
  let ciphertext;
  try {
    ciphertext = decode(jwe.ciphertext);
  } catch {
    throw new JWEInvalid("Failed to base64url decode the ciphertext");
  }
  const plaintext = await decrypt_default(enc, cek, ciphertext, iv, tag, additionalData);
  const result = { plaintext };
  if (jwe.protected !== void 0) {
    result.protectedHeader = parsedProt;
  }
  if (jwe.aad !== void 0) {
    try {
      result.additionalAuthenticatedData = decode(jwe.aad);
    } catch {
      throw new JWEInvalid("Failed to base64url decode the aad");
    }
  }
  if (jwe.unprotected !== void 0) {
    result.sharedUnprotectedHeader = jwe.unprotected;
  }
  if (jwe.header !== void 0) {
    result.unprotectedHeader = jwe.header;
  }
  if (resolvedKey) {
    return { ...result, key };
  }
  return result;
}
var init_decrypt2 = __esm({
  "../../node_modules/jose/dist/browser/jwe/flattened/decrypt.js"() {
    init_base64url();
    init_decrypt();
    init_errors2();
    init_is_disjoint();
    init_is_object();
    init_decrypt_key_management();
    init_buffer_utils();
    init_cek();
    init_validate_crit();
    init_validate_algorithms();
  }
});

// ../../node_modules/jose/dist/browser/jwe/compact/decrypt.js
async function compactDecrypt(jwe, key, options) {
  if (jwe instanceof Uint8Array) {
    jwe = decoder3.decode(jwe);
  }
  if (typeof jwe !== "string") {
    throw new JWEInvalid("Compact JWE must be a string or Uint8Array");
  }
  const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length } = jwe.split(".");
  if (length !== 5) {
    throw new JWEInvalid("Invalid Compact JWE");
  }
  const decrypted = await flattenedDecrypt({
    ciphertext,
    iv: iv || void 0,
    protected: protectedHeader,
    tag: tag || void 0,
    encrypted_key: encryptedKey || void 0
  }, key, options);
  const result = { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: decrypted.key };
  }
  return result;
}
var init_decrypt3 = __esm({
  "../../node_modules/jose/dist/browser/jwe/compact/decrypt.js"() {
    init_decrypt2();
    init_errors2();
    init_buffer_utils();
  }
});

// ../../node_modules/jose/dist/browser/jwe/general/decrypt.js
var init_decrypt4 = __esm({
  "../../node_modules/jose/dist/browser/jwe/general/decrypt.js"() {
    init_decrypt2();
    init_errors2();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/runtime/key_to_jwk.js
var keyToJWK, key_to_jwk_default;
var init_key_to_jwk = __esm({
  "../../node_modules/jose/dist/browser/runtime/key_to_jwk.js"() {
    init_webcrypto();
    init_invalid_key_input();
    init_base64url();
    init_is_key_like();
    keyToJWK = async (key) => {
      if (key instanceof Uint8Array) {
        return {
          kty: "oct",
          k: encode(key)
        };
      }
      if (!isCryptoKey(key)) {
        throw new TypeError(invalid_key_input_default(key, ...types2, "Uint8Array"));
      }
      if (!key.extractable) {
        throw new TypeError("non-extractable CryptoKey cannot be exported as a JWK");
      }
      const { ext, key_ops, alg, use, ...jwk } = await webcrypto_default.subtle.exportKey("jwk", key);
      return jwk;
    };
    key_to_jwk_default = keyToJWK;
  }
});

// ../../node_modules/jose/dist/browser/key/export.js
async function exportJWK(key) {
  return key_to_jwk_default(key);
}
var init_export = __esm({
  "../../node_modules/jose/dist/browser/key/export.js"() {
    init_asn1();
    init_asn1();
    init_key_to_jwk();
  }
});

// ../../node_modules/jose/dist/browser/lib/encrypt_key_management.js
async function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {
  let encryptedKey;
  let parameters;
  let cek;
  check_key_type_default(alg, key, "encrypt");
  switch (alg) {
    case "dir": {
      cek = key;
      break;
    }
    case "ECDH-ES":
    case "ECDH-ES+A128KW":
    case "ECDH-ES+A192KW":
    case "ECDH-ES+A256KW": {
      if (!ecdhAllowed(key)) {
        throw new JOSENotSupported("ECDH with the provided key is not allowed or not supported by your javascript runtime");
      }
      const { apu, apv } = providedParameters;
      let { epk: ephemeralKey } = providedParameters;
      ephemeralKey || (ephemeralKey = (await generateEpk(key)).privateKey);
      const { x: x4, y: y3, crv, kty } = await exportJWK(ephemeralKey);
      const sharedSecret = await deriveKey(key, ephemeralKey, alg === "ECDH-ES" ? enc : alg, alg === "ECDH-ES" ? bitLength2(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);
      parameters = { epk: { x: x4, crv, kty } };
      if (kty === "EC")
        parameters.epk.y = y3;
      if (apu)
        parameters.apu = encode(apu);
      if (apv)
        parameters.apv = encode(apv);
      if (alg === "ECDH-ES") {
        cek = sharedSecret;
        break;
      }
      cek = providedCek || cek_default(enc);
      const kwAlg = alg.slice(-6);
      encryptedKey = await wrap(kwAlg, sharedSecret, cek);
      break;
    }
    case "RSA1_5":
    case "RSA-OAEP":
    case "RSA-OAEP-256":
    case "RSA-OAEP-384":
    case "RSA-OAEP-512": {
      cek = providedCek || cek_default(enc);
      encryptedKey = await encrypt2(alg, key, cek);
      break;
    }
    case "PBES2-HS256+A128KW":
    case "PBES2-HS384+A192KW":
    case "PBES2-HS512+A256KW": {
      cek = providedCek || cek_default(enc);
      const { p2c, p2s: p2s2 } = providedParameters;
      ({ encryptedKey, ...parameters } = await encrypt(alg, key, cek, p2c, p2s2));
      break;
    }
    case "A128KW":
    case "A192KW":
    case "A256KW": {
      cek = providedCek || cek_default(enc);
      encryptedKey = await wrap(alg, key, cek);
      break;
    }
    case "A128GCMKW":
    case "A192GCMKW":
    case "A256GCMKW": {
      cek = providedCek || cek_default(enc);
      const { iv } = providedParameters;
      ({ encryptedKey, ...parameters } = await wrap2(alg, key, cek, iv));
      break;
    }
    default: {
      throw new JOSENotSupported('Invalid or unsupported "alg" (JWE Algorithm) header value');
    }
  }
  return { cek, encryptedKey, parameters };
}
var encrypt_key_management_default;
var init_encrypt_key_management = __esm({
  "../../node_modules/jose/dist/browser/lib/encrypt_key_management.js"() {
    init_aeskw();
    init_ecdhes();
    init_pbes2kw();
    init_rsaes();
    init_base64url();
    init_cek();
    init_errors2();
    init_export();
    init_check_key_type();
    init_aesgcmkw();
    encrypt_key_management_default = encryptKeyManagement;
  }
});

// ../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js
var unprotected, FlattenedEncrypt;
var init_encrypt2 = __esm({
  "../../node_modules/jose/dist/browser/jwe/flattened/encrypt.js"() {
    init_base64url();
    init_encrypt();
    init_iv();
    init_encrypt_key_management();
    init_errors2();
    init_is_disjoint();
    init_buffer_utils();
    init_validate_crit();
    unprotected = Symbol();
    FlattenedEncrypt = class {
      constructor(plaintext) {
        if (!(plaintext instanceof Uint8Array)) {
          throw new TypeError("plaintext must be an instance of Uint8Array");
        }
        this._plaintext = plaintext;
      }
      setKeyManagementParameters(parameters) {
        if (this._keyManagementParameters) {
          throw new TypeError("setKeyManagementParameters can only be called once");
        }
        this._keyManagementParameters = parameters;
        return this;
      }
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setSharedUnprotectedHeader(sharedUnprotectedHeader) {
        if (this._sharedUnprotectedHeader) {
          throw new TypeError("setSharedUnprotectedHeader can only be called once");
        }
        this._sharedUnprotectedHeader = sharedUnprotectedHeader;
        return this;
      }
      setUnprotectedHeader(unprotectedHeader) {
        if (this._unprotectedHeader) {
          throw new TypeError("setUnprotectedHeader can only be called once");
        }
        this._unprotectedHeader = unprotectedHeader;
        return this;
      }
      setAdditionalAuthenticatedData(aad) {
        this._aad = aad;
        return this;
      }
      setContentEncryptionKey(cek) {
        if (this._cek) {
          throw new TypeError("setContentEncryptionKey can only be called once");
        }
        this._cek = cek;
        return this;
      }
      setInitializationVector(iv) {
        if (this._iv) {
          throw new TypeError("setInitializationVector can only be called once");
        }
        this._iv = iv;
        return this;
      }
      async encrypt(key, options) {
        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {
          throw new JWEInvalid("either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()");
        }
        if (!is_disjoint_default(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {
          throw new JWEInvalid("JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint");
        }
        const joseHeader = {
          ...this._protectedHeader,
          ...this._unprotectedHeader,
          ...this._sharedUnprotectedHeader
        };
        validate_crit_default(JWEInvalid, /* @__PURE__ */ new Map(), options?.crit, this._protectedHeader, joseHeader);
        if (joseHeader.zip !== void 0) {
          throw new JOSENotSupported('JWE "zip" (Compression Algorithm) Header Parameter is not supported.');
        }
        const { alg, enc } = joseHeader;
        if (typeof alg !== "string" || !alg) {
          throw new JWEInvalid('JWE "alg" (Algorithm) Header Parameter missing or invalid');
        }
        if (typeof enc !== "string" || !enc) {
          throw new JWEInvalid('JWE "enc" (Encryption Algorithm) Header Parameter missing or invalid');
        }
        let encryptedKey;
        if (alg === "dir") {
          if (this._cek) {
            throw new TypeError("setContentEncryptionKey cannot be called when using Direct Encryption");
          }
        } else if (alg === "ECDH-ES") {
          if (this._cek) {
            throw new TypeError("setContentEncryptionKey cannot be called when using Direct Key Agreement");
          }
        }
        let cek;
        {
          let parameters;
          ({ cek, encryptedKey, parameters } = await encrypt_key_management_default(alg, enc, key, this._cek, this._keyManagementParameters));
          if (parameters) {
            if (options && unprotected in options) {
              if (!this._unprotectedHeader) {
                this.setUnprotectedHeader(parameters);
              } else {
                this._unprotectedHeader = { ...this._unprotectedHeader, ...parameters };
              }
            } else {
              if (!this._protectedHeader) {
                this.setProtectedHeader(parameters);
              } else {
                this._protectedHeader = { ...this._protectedHeader, ...parameters };
              }
            }
          }
        }
        this._iv || (this._iv = iv_default(enc));
        let additionalData;
        let protectedHeader;
        let aadMember;
        if (this._protectedHeader) {
          protectedHeader = encoder2.encode(encode(JSON.stringify(this._protectedHeader)));
        } else {
          protectedHeader = encoder2.encode("");
        }
        if (this._aad) {
          aadMember = encode(this._aad);
          additionalData = concat(protectedHeader, encoder2.encode("."), encoder2.encode(aadMember));
        } else {
          additionalData = protectedHeader;
        }
        const { ciphertext, tag } = await encrypt_default(enc, this._plaintext, cek, this._iv, additionalData);
        const jwe = {
          ciphertext: encode(ciphertext),
          iv: encode(this._iv),
          tag: encode(tag)
        };
        if (encryptedKey) {
          jwe.encrypted_key = encode(encryptedKey);
        }
        if (aadMember) {
          jwe.aad = aadMember;
        }
        if (this._protectedHeader) {
          jwe.protected = decoder3.decode(protectedHeader);
        }
        if (this._sharedUnprotectedHeader) {
          jwe.unprotected = this._sharedUnprotectedHeader;
        }
        if (this._unprotectedHeader) {
          jwe.header = this._unprotectedHeader;
        }
        return jwe;
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/jwe/general/encrypt.js
var init_encrypt3 = __esm({
  "../../node_modules/jose/dist/browser/jwe/general/encrypt.js"() {
    init_encrypt2();
    init_errors2();
    init_cek();
    init_is_disjoint();
    init_encrypt_key_management();
    init_base64url();
    init_validate_crit();
  }
});

// ../../node_modules/jose/dist/browser/runtime/subtle_dsa.js
var init_subtle_dsa = __esm({
  "../../node_modules/jose/dist/browser/runtime/subtle_dsa.js"() {
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js
var init_get_sign_verify_key = __esm({
  "../../node_modules/jose/dist/browser/runtime/get_sign_verify_key.js"() {
    init_webcrypto();
    init_crypto_key();
    init_invalid_key_input();
    init_is_key_like();
  }
});

// ../../node_modules/jose/dist/browser/runtime/verify.js
var init_verify = __esm({
  "../../node_modules/jose/dist/browser/runtime/verify.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
  }
});

// ../../node_modules/jose/dist/browser/jws/flattened/verify.js
var init_verify2 = __esm({
  "../../node_modules/jose/dist/browser/jws/flattened/verify.js"() {
    init_base64url();
    init_verify();
    init_errors2();
    init_buffer_utils();
    init_is_disjoint();
    init_is_object();
    init_check_key_type();
    init_validate_crit();
    init_validate_algorithms();
  }
});

// ../../node_modules/jose/dist/browser/jws/compact/verify.js
var init_verify3 = __esm({
  "../../node_modules/jose/dist/browser/jws/compact/verify.js"() {
    init_verify2();
    init_errors2();
    init_buffer_utils();
  }
});

// ../../node_modules/jose/dist/browser/jws/general/verify.js
var init_verify4 = __esm({
  "../../node_modules/jose/dist/browser/jws/general/verify.js"() {
    init_verify2();
    init_errors2();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/lib/epoch.js
var epoch_default;
var init_epoch = __esm({
  "../../node_modules/jose/dist/browser/lib/epoch.js"() {
    epoch_default = (date) => Math.floor(date.getTime() / 1e3);
  }
});

// ../../node_modules/jose/dist/browser/lib/secs.js
var minute, hour, day, week, year, REGEX, secs_default;
var init_secs = __esm({
  "../../node_modules/jose/dist/browser/lib/secs.js"() {
    minute = 60;
    hour = minute * 60;
    day = hour * 24;
    week = day * 7;
    year = day * 365.25;
    REGEX = /^(\+|\-)? ?(\d+|\d+\.\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;
    secs_default = (str) => {
      const matched = REGEX.exec(str);
      if (!matched || matched[4] && matched[1]) {
        throw new TypeError("Invalid time period format");
      }
      const value = parseFloat(matched[2]);
      const unit = matched[3].toLowerCase();
      let numericDate;
      switch (unit) {
        case "sec":
        case "secs":
        case "second":
        case "seconds":
        case "s":
          numericDate = Math.round(value);
          break;
        case "minute":
        case "minutes":
        case "min":
        case "mins":
        case "m":
          numericDate = Math.round(value * minute);
          break;
        case "hour":
        case "hours":
        case "hr":
        case "hrs":
        case "h":
          numericDate = Math.round(value * hour);
          break;
        case "day":
        case "days":
        case "d":
          numericDate = Math.round(value * day);
          break;
        case "week":
        case "weeks":
        case "w":
          numericDate = Math.round(value * week);
          break;
        default:
          numericDate = Math.round(value * year);
          break;
      }
      if (matched[1] === "-" || matched[4] === "ago") {
        return -numericDate;
      }
      return numericDate;
    };
  }
});

// ../../node_modules/jose/dist/browser/lib/jwt_claims_set.js
var normalizeTyp, checkAudiencePresence, jwt_claims_set_default;
var init_jwt_claims_set = __esm({
  "../../node_modules/jose/dist/browser/lib/jwt_claims_set.js"() {
    init_errors2();
    init_buffer_utils();
    init_epoch();
    init_secs();
    init_is_object();
    normalizeTyp = (value) => value.toLowerCase().replace(/^application\//, "");
    checkAudiencePresence = (audPayload, audOption) => {
      if (typeof audPayload === "string") {
        return audOption.includes(audPayload);
      }
      if (Array.isArray(audPayload)) {
        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));
      }
      return false;
    };
    jwt_claims_set_default = (protectedHeader, encodedPayload, options = {}) => {
      const { typ } = options;
      if (typ && (typeof protectedHeader.typ !== "string" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {
        throw new JWTClaimValidationFailed('unexpected "typ" JWT header value', "typ", "check_failed");
      }
      let payload;
      try {
        payload = JSON.parse(decoder3.decode(encodedPayload));
      } catch {
      }
      if (!isObject(payload)) {
        throw new JWTInvalid("JWT Claims Set must be a top-level JSON object");
      }
      const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;
      const presenceCheck = [...requiredClaims];
      if (maxTokenAge !== void 0)
        presenceCheck.push("iat");
      if (audience !== void 0)
        presenceCheck.push("aud");
      if (subject !== void 0)
        presenceCheck.push("sub");
      if (issuer !== void 0)
        presenceCheck.push("iss");
      for (const claim of new Set(presenceCheck.reverse())) {
        if (!(claim in payload)) {
          throw new JWTClaimValidationFailed(`missing required "${claim}" claim`, claim, "missing");
        }
      }
      if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {
        throw new JWTClaimValidationFailed('unexpected "iss" claim value', "iss", "check_failed");
      }
      if (subject && payload.sub !== subject) {
        throw new JWTClaimValidationFailed('unexpected "sub" claim value', "sub", "check_failed");
      }
      if (audience && !checkAudiencePresence(payload.aud, typeof audience === "string" ? [audience] : audience)) {
        throw new JWTClaimValidationFailed('unexpected "aud" claim value', "aud", "check_failed");
      }
      let tolerance;
      switch (typeof options.clockTolerance) {
        case "string":
          tolerance = secs_default(options.clockTolerance);
          break;
        case "number":
          tolerance = options.clockTolerance;
          break;
        case "undefined":
          tolerance = 0;
          break;
        default:
          throw new TypeError("Invalid clockTolerance option type");
      }
      const { currentDate } = options;
      const now2 = epoch_default(currentDate || /* @__PURE__ */ new Date());
      if ((payload.iat !== void 0 || maxTokenAge) && typeof payload.iat !== "number") {
        throw new JWTClaimValidationFailed('"iat" claim must be a number', "iat", "invalid");
      }
      if (payload.nbf !== void 0) {
        if (typeof payload.nbf !== "number") {
          throw new JWTClaimValidationFailed('"nbf" claim must be a number', "nbf", "invalid");
        }
        if (payload.nbf > now2 + tolerance) {
          throw new JWTClaimValidationFailed('"nbf" claim timestamp check failed', "nbf", "check_failed");
        }
      }
      if (payload.exp !== void 0) {
        if (typeof payload.exp !== "number") {
          throw new JWTClaimValidationFailed('"exp" claim must be a number', "exp", "invalid");
        }
        if (payload.exp <= now2 - tolerance) {
          throw new JWTExpired('"exp" claim timestamp check failed', "exp", "check_failed");
        }
      }
      if (maxTokenAge) {
        const age = now2 - payload.iat;
        const max2 = typeof maxTokenAge === "number" ? maxTokenAge : secs_default(maxTokenAge);
        if (age - tolerance > max2) {
          throw new JWTExpired('"iat" claim timestamp check failed (too far in the past)', "iat", "check_failed");
        }
        if (age < 0 - tolerance) {
          throw new JWTClaimValidationFailed('"iat" claim timestamp check failed (it should be in the past)', "iat", "check_failed");
        }
      }
      return payload;
    };
  }
});

// ../../node_modules/jose/dist/browser/jwt/verify.js
var init_verify5 = __esm({
  "../../node_modules/jose/dist/browser/jwt/verify.js"() {
    init_verify3();
    init_jwt_claims_set();
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/jwt/decrypt.js
async function jwtDecrypt(jwt2, key, options) {
  const decrypted = await compactDecrypt(jwt2, key, options);
  const payload = jwt_claims_set_default(decrypted.protectedHeader, decrypted.plaintext, options);
  const { protectedHeader } = decrypted;
  if (protectedHeader.iss !== void 0 && protectedHeader.iss !== payload.iss) {
    throw new JWTClaimValidationFailed('replicated "iss" claim header parameter mismatch', "iss", "mismatch");
  }
  if (protectedHeader.sub !== void 0 && protectedHeader.sub !== payload.sub) {
    throw new JWTClaimValidationFailed('replicated "sub" claim header parameter mismatch', "sub", "mismatch");
  }
  if (protectedHeader.aud !== void 0 && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {
    throw new JWTClaimValidationFailed('replicated "aud" claim header parameter mismatch', "aud", "mismatch");
  }
  const result = { payload, protectedHeader };
  if (typeof key === "function") {
    return { ...result, key: decrypted.key };
  }
  return result;
}
var init_decrypt5 = __esm({
  "../../node_modules/jose/dist/browser/jwt/decrypt.js"() {
    init_decrypt3();
    init_jwt_claims_set();
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/jwe/compact/encrypt.js
var CompactEncrypt;
var init_encrypt4 = __esm({
  "../../node_modules/jose/dist/browser/jwe/compact/encrypt.js"() {
    init_encrypt2();
    CompactEncrypt = class {
      constructor(plaintext) {
        this._flattened = new FlattenedEncrypt(plaintext);
      }
      setContentEncryptionKey(cek) {
        this._flattened.setContentEncryptionKey(cek);
        return this;
      }
      setInitializationVector(iv) {
        this._flattened.setInitializationVector(iv);
        return this;
      }
      setProtectedHeader(protectedHeader) {
        this._flattened.setProtectedHeader(protectedHeader);
        return this;
      }
      setKeyManagementParameters(parameters) {
        this._flattened.setKeyManagementParameters(parameters);
        return this;
      }
      async encrypt(key, options) {
        const jwe = await this._flattened.encrypt(key, options);
        return [jwe.protected, jwe.encrypted_key, jwe.iv, jwe.ciphertext, jwe.tag].join(".");
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/runtime/sign.js
var init_sign = __esm({
  "../../node_modules/jose/dist/browser/runtime/sign.js"() {
    init_subtle_dsa();
    init_webcrypto();
    init_check_key_length();
    init_get_sign_verify_key();
  }
});

// ../../node_modules/jose/dist/browser/jws/flattened/sign.js
var init_sign2 = __esm({
  "../../node_modules/jose/dist/browser/jws/flattened/sign.js"() {
    init_base64url();
    init_sign();
    init_is_disjoint();
    init_errors2();
    init_buffer_utils();
    init_check_key_type();
    init_validate_crit();
  }
});

// ../../node_modules/jose/dist/browser/jws/compact/sign.js
var init_sign3 = __esm({
  "../../node_modules/jose/dist/browser/jws/compact/sign.js"() {
    init_sign2();
  }
});

// ../../node_modules/jose/dist/browser/jws/general/sign.js
var init_sign4 = __esm({
  "../../node_modules/jose/dist/browser/jws/general/sign.js"() {
    init_sign2();
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/jwt/produce.js
function validateInput2(label, input) {
  if (!Number.isFinite(input)) {
    throw new TypeError(`Invalid ${label} input`);
  }
  return input;
}
var ProduceJWT;
var init_produce = __esm({
  "../../node_modules/jose/dist/browser/jwt/produce.js"() {
    init_epoch();
    init_is_object();
    init_secs();
    ProduceJWT = class {
      constructor(payload = {}) {
        if (!isObject(payload)) {
          throw new TypeError("JWT Claims Set MUST be an object");
        }
        this._payload = payload;
      }
      setIssuer(issuer) {
        this._payload = { ...this._payload, iss: issuer };
        return this;
      }
      setSubject(subject) {
        this._payload = { ...this._payload, sub: subject };
        return this;
      }
      setAudience(audience) {
        this._payload = { ...this._payload, aud: audience };
        return this;
      }
      setJti(jwtId) {
        this._payload = { ...this._payload, jti: jwtId };
        return this;
      }
      setNotBefore(input) {
        if (typeof input === "number") {
          this._payload = { ...this._payload, nbf: validateInput2("setNotBefore", input) };
        } else if (input instanceof Date) {
          this._payload = { ...this._payload, nbf: validateInput2("setNotBefore", epoch_default(input)) };
        } else {
          this._payload = { ...this._payload, nbf: epoch_default(/* @__PURE__ */ new Date()) + secs_default(input) };
        }
        return this;
      }
      setExpirationTime(input) {
        if (typeof input === "number") {
          this._payload = { ...this._payload, exp: validateInput2("setExpirationTime", input) };
        } else if (input instanceof Date) {
          this._payload = { ...this._payload, exp: validateInput2("setExpirationTime", epoch_default(input)) };
        } else {
          this._payload = { ...this._payload, exp: epoch_default(/* @__PURE__ */ new Date()) + secs_default(input) };
        }
        return this;
      }
      setIssuedAt(input) {
        if (typeof input === "undefined") {
          this._payload = { ...this._payload, iat: epoch_default(/* @__PURE__ */ new Date()) };
        } else if (input instanceof Date) {
          this._payload = { ...this._payload, iat: validateInput2("setIssuedAt", epoch_default(input)) };
        } else if (typeof input === "string") {
          this._payload = {
            ...this._payload,
            iat: validateInput2("setIssuedAt", epoch_default(/* @__PURE__ */ new Date()) + secs_default(input))
          };
        } else {
          this._payload = { ...this._payload, iat: validateInput2("setIssuedAt", input) };
        }
        return this;
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/jwt/sign.js
var init_sign5 = __esm({
  "../../node_modules/jose/dist/browser/jwt/sign.js"() {
    init_sign3();
    init_errors2();
    init_buffer_utils();
    init_produce();
  }
});

// ../../node_modules/jose/dist/browser/jwt/encrypt.js
var EncryptJWT;
var init_encrypt5 = __esm({
  "../../node_modules/jose/dist/browser/jwt/encrypt.js"() {
    init_encrypt4();
    init_buffer_utils();
    init_produce();
    EncryptJWT = class extends ProduceJWT {
      setProtectedHeader(protectedHeader) {
        if (this._protectedHeader) {
          throw new TypeError("setProtectedHeader can only be called once");
        }
        this._protectedHeader = protectedHeader;
        return this;
      }
      setKeyManagementParameters(parameters) {
        if (this._keyManagementParameters) {
          throw new TypeError("setKeyManagementParameters can only be called once");
        }
        this._keyManagementParameters = parameters;
        return this;
      }
      setContentEncryptionKey(cek) {
        if (this._cek) {
          throw new TypeError("setContentEncryptionKey can only be called once");
        }
        this._cek = cek;
        return this;
      }
      setInitializationVector(iv) {
        if (this._iv) {
          throw new TypeError("setInitializationVector can only be called once");
        }
        this._iv = iv;
        return this;
      }
      replicateIssuerAsHeader() {
        this._replicateIssuerAsHeader = true;
        return this;
      }
      replicateSubjectAsHeader() {
        this._replicateSubjectAsHeader = true;
        return this;
      }
      replicateAudienceAsHeader() {
        this._replicateAudienceAsHeader = true;
        return this;
      }
      async encrypt(key, options) {
        const enc = new CompactEncrypt(encoder2.encode(JSON.stringify(this._payload)));
        if (this._replicateIssuerAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, iss: this._payload.iss };
        }
        if (this._replicateSubjectAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, sub: this._payload.sub };
        }
        if (this._replicateAudienceAsHeader) {
          this._protectedHeader = { ...this._protectedHeader, aud: this._payload.aud };
        }
        enc.setProtectedHeader(this._protectedHeader);
        if (this._iv) {
          enc.setInitializationVector(this._iv);
        }
        if (this._cek) {
          enc.setContentEncryptionKey(this._cek);
        }
        if (this._keyManagementParameters) {
          enc.setKeyManagementParameters(this._keyManagementParameters);
        }
        return enc.encrypt(key, options);
      }
    };
  }
});

// ../../node_modules/jose/dist/browser/jwk/thumbprint.js
var init_thumbprint = __esm({
  "../../node_modules/jose/dist/browser/jwk/thumbprint.js"() {
    init_digest();
    init_base64url();
    init_errors2();
    init_buffer_utils();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/jwk/embedded.js
var init_embedded = __esm({
  "../../node_modules/jose/dist/browser/jwk/embedded.js"() {
    init_import();
    init_is_object();
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/jwks/local.js
var init_local = __esm({
  "../../node_modules/jose/dist/browser/jwks/local.js"() {
    init_import();
    init_errors2();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/runtime/fetch_jwks.js
var init_fetch_jwks = __esm({
  "../../node_modules/jose/dist/browser/runtime/fetch_jwks.js"() {
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/jwks/remote.js
var USER_AGENT;
var init_remote = __esm({
  "../../node_modules/jose/dist/browser/jwks/remote.js"() {
    init_fetch_jwks();
    init_errors2();
    init_local();
    if (typeof navigator === "undefined" || !navigator.userAgent?.startsWith?.("Mozilla/5.0 ")) {
      const NAME = "jose";
      const VERSION = "v5.2.2";
      USER_AGENT = `${NAME}/${VERSION}`;
    }
  }
});

// ../../node_modules/jose/dist/browser/jwt/unsecured.js
var init_unsecured = __esm({
  "../../node_modules/jose/dist/browser/jwt/unsecured.js"() {
    init_base64url();
    init_buffer_utils();
    init_errors2();
    init_jwt_claims_set();
    init_produce();
  }
});

// ../../node_modules/jose/dist/browser/util/base64url.js
var base64url_exports2 = {};
__export(base64url_exports2, {
  decode: () => decode2,
  encode: () => encode2
});
var encode2, decode2;
var init_base64url2 = __esm({
  "../../node_modules/jose/dist/browser/util/base64url.js"() {
    init_base64url();
    encode2 = encode;
    decode2 = decode;
  }
});

// ../../node_modules/jose/dist/browser/util/decode_protected_header.js
var init_decode_protected_header = __esm({
  "../../node_modules/jose/dist/browser/util/decode_protected_header.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
  }
});

// ../../node_modules/jose/dist/browser/util/decode_jwt.js
var init_decode_jwt = __esm({
  "../../node_modules/jose/dist/browser/util/decode_jwt.js"() {
    init_base64url2();
    init_buffer_utils();
    init_is_object();
    init_errors2();
  }
});

// ../../node_modules/jose/dist/browser/runtime/generate.js
var init_generate = __esm({
  "../../node_modules/jose/dist/browser/runtime/generate.js"() {
    init_webcrypto();
    init_errors2();
    init_random();
  }
});

// ../../node_modules/jose/dist/browser/key/generate_key_pair.js
var init_generate_key_pair = __esm({
  "../../node_modules/jose/dist/browser/key/generate_key_pair.js"() {
    init_generate();
  }
});

// ../../node_modules/jose/dist/browser/key/generate_secret.js
var init_generate_secret = __esm({
  "../../node_modules/jose/dist/browser/key/generate_secret.js"() {
    init_generate();
  }
});

// ../../node_modules/jose/dist/browser/runtime/runtime.js
var init_runtime = __esm({
  "../../node_modules/jose/dist/browser/runtime/runtime.js"() {
  }
});

// ../../node_modules/jose/dist/browser/util/runtime.js
var init_runtime2 = __esm({
  "../../node_modules/jose/dist/browser/util/runtime.js"() {
    init_runtime();
  }
});

// ../../node_modules/jose/dist/browser/index.js
var init_browser = __esm({
  "../../node_modules/jose/dist/browser/index.js"() {
    init_decrypt3();
    init_decrypt2();
    init_decrypt4();
    init_encrypt3();
    init_verify3();
    init_verify2();
    init_verify4();
    init_verify5();
    init_decrypt5();
    init_encrypt4();
    init_encrypt2();
    init_sign3();
    init_sign2();
    init_sign4();
    init_sign5();
    init_encrypt5();
    init_thumbprint();
    init_embedded();
    init_local();
    init_remote();
    init_unsecured();
    init_export();
    init_import();
    init_decode_protected_header();
    init_decode_jwt();
    init_errors2();
    init_generate_key_pair();
    init_generate_secret();
    init_base64url2();
    init_runtime2();
  }
});

// ../../node_modules/@auth/core/node_modules/cookie/index.js
var require_cookie2 = __commonJS({
  "../../node_modules/@auth/core/node_modules/cookie/index.js"(exports2) {
    "use strict";
    exports2.parse = parse7;
    exports2.serialize = serialize3;
    var __toString = Object.prototype.toString;
    var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse7(str, options) {
      if (typeof str !== "string") {
        throw new TypeError("argument str must be a string");
      }
      var obj = {};
      var opt = options || {};
      var dec = opt.decode || decode5;
      var index = 0;
      while (index < str.length) {
        var eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) {
          break;
        }
        var endIdx = str.indexOf(";", index);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index, eqIdx).trim();
        if (void 0 === obj[key]) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode2(val, dec);
        }
        index = endIdx + 1;
      }
      return obj;
    }
    function serialize3(name, val, options) {
      var opt = options || {};
      var enc = opt.encode || encode4;
      if (typeof enc !== "function") {
        throw new TypeError("option encode is invalid");
      }
      if (!fieldContentRegExp.test(name)) {
        throw new TypeError("argument name is invalid");
      }
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value)) {
        throw new TypeError("argument val is invalid");
      }
      var str = name + "=" + value;
      if (null != opt.maxAge) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain)) {
          throw new TypeError("option domain is invalid");
        }
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path)) {
          throw new TypeError("option path is invalid");
        }
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate(expires) || isNaN(expires.valueOf())) {
          throw new TypeError("option expires is invalid");
        }
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.partitioned) {
        str += "; Partitioned";
      }
      if (opt.priority) {
        var priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode5(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode4(val) {
      return encodeURIComponent(val);
    }
    function isDate(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode2(str, decode6) {
      try {
        return decode6(str);
      } catch (e2) {
        return str;
      }
    }
  }
});

// ../../node_modules/@auth/core/jwt.js
async function encode3(params) {
  const { token = {}, secret, maxAge = DEFAULT_MAX_AGE, salt } = params;
  const encryptionSecret = await getDerivedEncryptionKey(secret, salt);
  return await new EncryptJWT(token).setProtectedHeader({ alg: "dir", enc: "A256GCM" }).setIssuedAt().setExpirationTime(now() + maxAge).setJti(crypto.randomUUID()).encrypt(encryptionSecret);
}
async function decode3(params) {
  const { token, secret, salt } = params;
  if (!token)
    return null;
  const encryptionSecret = await getDerivedEncryptionKey(secret, salt);
  const { payload } = await jwtDecrypt(token, encryptionSecret, {
    clockTolerance: 15
  });
  return payload;
}
async function getDerivedEncryptionKey(keyMaterial, salt) {
  return await hkdf("sha256", keyMaterial, salt, `Auth.js Generated Encryption Key (${salt})`, 32);
}
var import_cookie5, DEFAULT_MAX_AGE, now;
var init_jwt = __esm({
  "../../node_modules/@auth/core/jwt.js"() {
    init_web();
    init_browser();
    init_cookie();
    init_errors();
    import_cookie5 = __toESM(require_cookie2(), 1);
    DEFAULT_MAX_AGE = 30 * 24 * 60 * 60;
    now = () => Date.now() / 1e3 | 0;
  }
});

// ../../node_modules/@auth/core/lib/utils/callback-url.js
async function createCallbackUrl({ options, paramValue, cookieValue }) {
  const { url, callbacks } = options;
  let callbackUrl = url.origin;
  if (paramValue) {
    callbackUrl = await callbacks.redirect({
      url: paramValue,
      baseUrl: url.origin
    });
  } else if (cookieValue) {
    callbackUrl = await callbacks.redirect({
      url: cookieValue,
      baseUrl: url.origin
    });
  }
  return {
    callbackUrl,
    // Save callback URL in a cookie so that it can be used for subsequent requests in signin/signout/callback flow
    callbackUrlCookie: callbackUrl !== cookieValue ? callbackUrl : void 0
  };
}
var init_callback_url = __esm({
  "../../node_modules/@auth/core/lib/utils/callback-url.js"() {
  }
});

// ../../node_modules/@auth/core/lib/utils/web.js
async function getBody(req) {
  if (!("body" in req) || !req.body || req.method !== "POST")
    return;
  const contentType = req.headers.get("content-type");
  if (contentType?.includes("application/json")) {
    return await req.json();
  } else if (contentType?.includes("application/x-www-form-urlencoded")) {
    const params = new URLSearchParams(await req.text());
    return Object.fromEntries(params);
  }
}
async function toInternalRequest(req) {
  try {
    let originalUrl = new URL(req.url.replace(/\/$/, ""));
    let url = new URL(originalUrl);
    const pathname = url.pathname.replace(/\/$/, "");
    const action = actions.find((a3) => pathname.includes(a3));
    if (!action) {
      throw new UnknownAction(`Cannot detect action in pathname (${pathname}).`);
    }
    const re2 = new RegExp(`/${action}.*`);
    url = new URL(url.href.replace(re2, ""));
    if (req.method !== "GET" && req.method !== "POST") {
      throw new UnknownAction("Only GET and POST requests are supported.");
    }
    const providerIdOrAction = pathname.split("/").pop();
    let providerId;
    if (providerIdOrAction && !action.includes(providerIdOrAction) && ["signin", "callback"].includes(action)) {
      providerId = providerIdOrAction;
    }
    return {
      url,
      action,
      providerId,
      method: req.method,
      headers: Object.fromEntries(req.headers),
      body: req.body ? await getBody(req) : void 0,
      cookies: (0, import_cookie6.parse)(req.headers.get("cookie") ?? "") ?? {},
      error: originalUrl.searchParams.get("error") ?? void 0,
      query: Object.fromEntries(originalUrl.searchParams)
    };
  } catch (e2) {
    return e2;
  }
}
function toRequest(request) {
  return new Request(request.url, {
    headers: request.headers,
    method: request.method,
    body: request.method === "POST" ? JSON.stringify(request.body ?? {}) : void 0
  });
}
function toResponse(res) {
  const headers = new Headers(res.headers);
  res.cookies?.forEach((cookie) => {
    const { name, value, options } = cookie;
    const cookieHeader = (0, import_cookie6.serialize)(name, value, options);
    if (headers.has("Set-Cookie"))
      headers.append("Set-Cookie", cookieHeader);
    else
      headers.set("Set-Cookie", cookieHeader);
  });
  let body = res.body;
  if (headers.get("content-type") === "application/json")
    body = JSON.stringify(res.body);
  else if (headers.get("content-type") === "application/x-www-form-urlencoded")
    body = new URLSearchParams(res.body).toString();
  const status = res.redirect ? 302 : res.status ?? 200;
  const response = new Response(body, { headers, status });
  if (res.redirect)
    response.headers.set("Location", res.redirect);
  return response;
}
async function createHash(message2) {
  const data = new TextEncoder().encode(message2);
  const hash = await crypto.subtle.digest("SHA-256", data);
  return Array.from(new Uint8Array(hash)).map((b5) => b5.toString(16).padStart(2, "0")).join("").toString();
}
function randomString(size) {
  const i2hex = (i3) => ("0" + i3.toString(16)).slice(-2);
  const r4 = (a3, i3) => a3 + i2hex(i3);
  const bytes = crypto.getRandomValues(new Uint8Array(size));
  return Array.from(bytes).reduce(r4, "");
}
var import_cookie6, actions;
var init_web2 = __esm({
  "../../node_modules/@auth/core/lib/utils/web.js"() {
    import_cookie6 = __toESM(require_cookie2(), 1);
    init_errors();
    actions = [
      "providers",
      "session",
      "csrf",
      "signin",
      "signout",
      "callback",
      "verify-request",
      "error"
    ];
  }
});

// ../../node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js
async function createCSRFToken({ options, cookieValue, isPost, bodyValue }) {
  if (cookieValue) {
    const [csrfToken2, csrfTokenHash2] = cookieValue.split("|");
    const expectedCsrfTokenHash = await createHash(`${csrfToken2}${options.secret}`);
    if (csrfTokenHash2 === expectedCsrfTokenHash) {
      const csrfTokenVerified = isPost && csrfToken2 === bodyValue;
      return { csrfTokenVerified, csrfToken: csrfToken2 };
    }
  }
  const csrfToken = randomString(32);
  const csrfTokenHash = await createHash(`${csrfToken}${options.secret}`);
  const cookie = `${csrfToken}|${csrfTokenHash}`;
  return { cookie, csrfToken };
}
function validateCSRF(action, verified) {
  if (verified)
    return;
  throw new MissingCSRF(`CSRF token was missing during an action ${action}.`);
}
var init_csrf_token = __esm({
  "../../node_modules/@auth/core/lib/actions/callback/oauth/csrf-token.js"() {
    init_web2();
    init_errors();
  }
});

// ../../node_modules/@auth/core/lib/utils/merge.js
function isObject2(item) {
  return item && typeof item === "object" && !Array.isArray(item);
}
function merge(target, ...sources) {
  if (!sources.length)
    return target;
  const source = sources.shift();
  if (isObject2(target) && isObject2(source)) {
    for (const key in source) {
      if (isObject2(source[key])) {
        if (!target[key])
          Object.assign(target, { [key]: {} });
        merge(target[key], source[key]);
      } else {
        Object.assign(target, { [key]: source[key] });
      }
    }
  }
  return merge(target, ...sources);
}
var init_merge = __esm({
  "../../node_modules/@auth/core/lib/utils/merge.js"() {
  }
});

// ../../node_modules/@auth/core/lib/utils/providers.js
function parseProviders(params) {
  const { url, providerId, options } = params;
  const providers2 = params.providers.map((p6) => {
    const provider = typeof p6 === "function" ? p6() : p6;
    const { options: userOptions, ...defaults } = provider;
    const id = userOptions?.id ?? defaults.id;
    const merged = merge(defaults, userOptions, {
      signinUrl: `${url}/signin/${id}`,
      callbackUrl: `${url}/callback/${id}`
    });
    if (provider.type === "oauth" || provider.type === "oidc") {
      merged.redirectProxyUrl ?? (merged.redirectProxyUrl = options.redirectProxyUrl);
      return normalizeOAuth(merged);
    }
    return merged;
  });
  return {
    providers: providers2,
    provider: providers2.find(({ id }) => id === providerId)
  };
}
function normalizeOAuth(c4) {
  if (c4.issuer)
    c4.wellKnown ?? (c4.wellKnown = `${c4.issuer}/.well-known/openid-configuration`);
  const authorization = normalizeEndpoint(c4.authorization, c4.issuer);
  if (authorization && !authorization.url?.searchParams.has("scope")) {
    authorization.url.searchParams.set("scope", "openid profile email");
  }
  const token = normalizeEndpoint(c4.token, c4.issuer);
  const userinfo = normalizeEndpoint(c4.userinfo, c4.issuer);
  const checks = c4.checks ?? ["pkce"];
  if (c4.redirectProxyUrl) {
    if (!checks.includes("state"))
      checks.push("state");
    c4.redirectProxyUrl = `${c4.redirectProxyUrl}/callback/${c4.id}`;
  }
  return {
    ...c4,
    authorization,
    token,
    checks,
    userinfo,
    profile: c4.profile ?? defaultProfile,
    account: c4.account ?? defaultAccount
  };
}
function stripUndefined(o5) {
  const result = {};
  for (let [k6, v4] of Object.entries(o5))
    v4 !== void 0 && (result[k6] = v4);
  return result;
}
function normalizeEndpoint(e2, issuer) {
  if (!e2 && issuer)
    return;
  if (typeof e2 === "string") {
    return { url: new URL(e2) };
  }
  const url = new URL(e2?.url ?? "https://authjs.dev");
  if (e2?.params != null) {
    for (let [key, value] of Object.entries(e2.params)) {
      if (key === "claims")
        value = JSON.stringify(value);
      url.searchParams.set(key, String(value));
    }
  }
  return { url, request: e2?.request, conform: e2?.conform };
}
var defaultProfile, defaultAccount;
var init_providers = __esm({
  "../../node_modules/@auth/core/lib/utils/providers.js"() {
    init_errors();
    init_merge();
    defaultProfile = (profile) => {
      const id = profile.sub ?? profile.id;
      if (!id)
        throw new OAuthProfileParseError("Missing user id");
      return stripUndefined({
        id: id.toString(),
        name: profile.name ?? profile.nickname ?? profile.preferred_username,
        email: profile.email,
        image: profile.picture
      });
    };
    defaultAccount = (account) => {
      return stripUndefined({
        access_token: account.access_token,
        id_token: account.id_token,
        refresh_token: account.refresh_token,
        expires_at: account.expires_at,
        scope: account.scope,
        token_type: account.token_type,
        session_state: account.session_state
      });
    };
  }
});

// ../../node_modules/@auth/core/lib/utils/logger.js
function setLogger(newLogger = {}, debug3) {
  if (!debug3)
    logger.debug = () => {
    };
  if (newLogger.error)
    logger.error = newLogger.error;
  if (newLogger.warn)
    logger.warn = newLogger.warn;
  if (newLogger.debug)
    logger.debug = newLogger.debug;
}
var red2, yellow2, grey2, reset2, logger;
var init_logger = __esm({
  "../../node_modules/@auth/core/lib/utils/logger.js"() {
    init_errors();
    red2 = "\x1B[31m";
    yellow2 = "\x1B[33m";
    grey2 = "\x1B[90m";
    reset2 = "\x1B[0m";
    logger = {
      error(error2) {
        const name = error2 instanceof AuthError ? error2.type : error2.name;
        console.error(`${red2}[auth][error]${reset2} ${name}: ${error2.message}`);
        if (error2.cause && typeof error2.cause === "object" && "err" in error2.cause && error2.cause.err instanceof Error) {
          const { err: err2, ...data } = error2.cause;
          console.error(`${red2}[auth][cause]${reset2}:`, err2.stack);
          if (data)
            console.error(`${red2}[auth][details]${reset2}:`, JSON.stringify(data, null, 2));
        } else if (error2.stack) {
          console.error(error2.stack.replace(/.*/, "").substring(1));
        }
      },
      warn(code) {
        const url = `https://warnings.authjs.dev#${code}`;
        console.warn(`${yellow2}[auth][warn][${code}]${reset2}`, `Read more: ${url}`);
      },
      debug(message2, metadata) {
        console.log(`${grey2}[auth][debug]:${reset2} ${message2}`, JSON.stringify(metadata, null, 2));
      }
    };
  }
});

// ../../node_modules/@auth/core/lib/init.js
async function init2({ authOptions, providerId, action, url, cookies: reqCookies, callbackUrl: reqCallbackUrl, csrfToken: reqCsrfToken, csrfDisabled, isPost }) {
  const { providers: providers2, provider } = parseProviders({
    providers: authOptions.providers,
    url,
    providerId,
    options: authOptions
  });
  const maxAge = 30 * 24 * 60 * 60;
  let isOnRedirectProxy = false;
  if ((provider?.type === "oauth" || provider?.type === "oidc") && provider.redirectProxyUrl) {
    try {
      isOnRedirectProxy = new URL(provider.redirectProxyUrl).origin === url.origin;
    } catch {
      throw new TypeError(`redirectProxyUrl must be a valid URL. Received: ${provider.redirectProxyUrl}`);
    }
  }
  const options = {
    debug: false,
    pages: {},
    theme: {
      colorScheme: "auto",
      logo: "",
      brandColor: "",
      buttonText: ""
    },
    // Custom options override defaults
    ...authOptions,
    // These computed settings can have values in userOptions but we override them
    // and are request-specific.
    url,
    action,
    // @ts-expect-errors
    provider,
    cookies: {
      ...defaultCookies(authOptions.useSecureCookies ?? url.protocol === "https:"),
      // Allow user cookie options to override any cookie settings above
      ...authOptions.cookies
    },
    providers: providers2,
    // Session options
    session: {
      // If no adapter specified, force use of JSON Web Tokens (stateless)
      strategy: authOptions.adapter ? "database" : "jwt",
      maxAge,
      updateAge: 24 * 60 * 60,
      generateSessionToken: () => crypto.randomUUID(),
      ...authOptions.session
    },
    // JWT options
    jwt: {
      // Asserted in assert.ts
      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
      secret: authOptions.secret,
      maxAge: authOptions.session?.maxAge ?? maxAge,
      encode: encode3,
      decode: decode3,
      ...authOptions.jwt
    },
    // Event messages
    events: eventsErrorHandler(authOptions.events ?? {}, logger),
    adapter: adapterErrorHandler(authOptions.adapter, logger),
    // Callback functions
    callbacks: { ...defaultCallbacks, ...authOptions.callbacks },
    logger,
    callbackUrl: url.origin,
    isOnRedirectProxy
  };
  const cookies = [];
  if (csrfDisabled) {
    options.csrfTokenVerified = true;
  } else {
    const { csrfToken, cookie: csrfCookie, csrfTokenVerified } = await createCSRFToken({
      options,
      cookieValue: reqCookies?.[options.cookies.csrfToken.name],
      isPost,
      bodyValue: reqCsrfToken
    });
    options.csrfToken = csrfToken;
    options.csrfTokenVerified = csrfTokenVerified;
    if (csrfCookie) {
      cookies.push({
        name: options.cookies.csrfToken.name,
        value: csrfCookie,
        options: options.cookies.csrfToken.options
      });
    }
  }
  const { callbackUrl, callbackUrlCookie } = await createCallbackUrl({
    options,
    cookieValue: reqCookies?.[options.cookies.callbackUrl.name],
    paramValue: reqCallbackUrl
  });
  options.callbackUrl = callbackUrl;
  if (callbackUrlCookie) {
    cookies.push({
      name: options.cookies.callbackUrl.name,
      value: callbackUrlCookie,
      options: options.cookies.callbackUrl.options
    });
  }
  return { options, cookies };
}
function eventsErrorHandler(methods2, logger2) {
  return Object.keys(methods2).reduce((acc, name) => {
    acc[name] = async (...args) => {
      try {
        const method = methods2[name];
        return await method(...args);
      } catch (e2) {
        logger2.error(new EventError(e2));
      }
    };
    return acc;
  }, {});
}
function adapterErrorHandler(adapter, logger2) {
  if (!adapter)
    return;
  return Object.keys(adapter).reduce((acc, name) => {
    acc[name] = async (...args) => {
      try {
        logger2.debug(`adapter_${name}`, { args });
        const method = adapter[name];
        return await method(...args);
      } catch (e2) {
        const error2 = new AdapterError(e2);
        logger2.error(error2);
        throw error2;
      }
    };
    return acc;
  }, {});
}
var defaultCallbacks;
var init_init = __esm({
  "../../node_modules/@auth/core/lib/init.js"() {
    init_jwt();
    init_callback_url();
    init_cookie();
    init_csrf_token();
    init_errors();
    init_providers();
    init_logger();
    defaultCallbacks = {
      signIn() {
        return true;
      },
      redirect({ url, baseUrl }) {
        if (url.startsWith("/"))
          return `${baseUrl}${url}`;
        else if (new URL(url).origin === baseUrl)
          return url;
        return baseUrl;
      },
      session({ session: session2 }) {
        return session2;
      },
      jwt({ token }) {
        return token;
      }
    };
  }
});

// ../../node_modules/preact/dist/preact.module.js
function s(n3, l3) {
  for (var u4 in l3)
    n3[u4] = l3[u4];
  return n3;
}
function a(n3) {
  var l3 = n3.parentNode;
  l3 && l3.removeChild(n3);
}
function v(n3, i3, t2, o5, r4) {
  var f4 = { type: n3, props: i3, key: t2, ref: o5, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: null == r4 ? ++u2 : r4 };
  return null == r4 && null != l.vnode && l.vnode(f4), f4;
}
function p2(n3) {
  return n3.children;
}
function d(n3, l3) {
  this.props = n3, this.context = l3;
}
function _2(n3, l3) {
  if (null == l3)
    return n3.__ ? _2(n3.__, n3.__.__k.indexOf(n3) + 1) : null;
  for (var u4; l3 < n3.__k.length; l3++)
    if (null != (u4 = n3.__k[l3]) && null != u4.__e)
      return u4.__e;
  return "function" == typeof n3.type ? _2(n3) : null;
}
function k2(n3) {
  var l3, u4;
  if (null != (n3 = n3.__) && null != n3.__c) {
    for (n3.__e = n3.__c.base = null, l3 = 0; l3 < n3.__k.length; l3++)
      if (null != (u4 = n3.__k[l3]) && null != u4.__e) {
        n3.__e = n3.__c.base = u4.__e;
        break;
      }
    return k2(n3);
  }
}
function b2(n3) {
  (!n3.__d && (n3.__d = true) && t.push(n3) && !g.__r++ || o2 !== l.debounceRendering) && ((o2 = l.debounceRendering) || setTimeout)(g);
}
function g() {
  for (var n3; g.__r = t.length; )
    n3 = t.sort(function(n4, l3) {
      return n4.__v.__b - l3.__v.__b;
    }), t = [], n3.some(function(n4) {
      var l3, u4, i3, t2, o5, r4;
      n4.__d && (o5 = (t2 = (l3 = n4).__v).__e, (r4 = l3.__P) && (u4 = [], (i3 = s({}, t2)).__v = t2.__v + 1, j2(r4, t2, i3, l3.__n, void 0 !== r4.ownerSVGElement, null != t2.__h ? [o5] : null, u4, null == o5 ? _2(t2) : o5, t2.__h), z2(u4, t2), t2.__e != o5 && k2(t2)));
    });
}
function w2(n3, l3, u4, i3, t2, o5, r4, c4, s3, a3) {
  var h2, y3, d5, k6, b5, g4, w7, x4 = i3 && i3.__k || e, C5 = x4.length;
  for (u4.__k = [], h2 = 0; h2 < l3.length; h2++)
    if (null != (k6 = u4.__k[h2] = null == (k6 = l3[h2]) || "boolean" == typeof k6 ? null : "string" == typeof k6 || "number" == typeof k6 || "bigint" == typeof k6 ? v(null, k6, null, null, k6) : Array.isArray(k6) ? v(p2, { children: k6 }, null, null, null) : k6.__b > 0 ? v(k6.type, k6.props, k6.key, k6.ref ? k6.ref : null, k6.__v) : k6)) {
      if (k6.__ = u4, k6.__b = u4.__b + 1, null === (d5 = x4[h2]) || d5 && k6.key == d5.key && k6.type === d5.type)
        x4[h2] = void 0;
      else
        for (y3 = 0; y3 < C5; y3++) {
          if ((d5 = x4[y3]) && k6.key == d5.key && k6.type === d5.type) {
            x4[y3] = void 0;
            break;
          }
          d5 = null;
        }
      j2(n3, k6, d5 = d5 || f2, t2, o5, r4, c4, s3, a3), b5 = k6.__e, (y3 = k6.ref) && d5.ref != y3 && (w7 || (w7 = []), d5.ref && w7.push(d5.ref, null, k6), w7.push(y3, k6.__c || b5, k6)), null != b5 ? (null == g4 && (g4 = b5), "function" == typeof k6.type && k6.__k === d5.__k ? k6.__d = s3 = m(k6, s3, n3) : s3 = A(n3, k6, d5, x4, b5, s3), "function" == typeof u4.type && (u4.__d = s3)) : s3 && d5.__e == s3 && s3.parentNode != n3 && (s3 = _2(d5));
    }
  for (u4.__e = g4, h2 = C5; h2--; )
    null != x4[h2] && N2(x4[h2], x4[h2]);
  if (w7)
    for (h2 = 0; h2 < w7.length; h2++)
      M(w7[h2], w7[++h2], w7[++h2]);
}
function m(n3, l3, u4) {
  for (var i3, t2 = n3.__k, o5 = 0; t2 && o5 < t2.length; o5++)
    (i3 = t2[o5]) && (i3.__ = n3, l3 = "function" == typeof i3.type ? m(i3, l3, u4) : A(u4, i3, i3, t2, i3.__e, l3));
  return l3;
}
function A(n3, l3, u4, i3, t2, o5) {
  var r4, f4, e2;
  if (void 0 !== l3.__d)
    r4 = l3.__d, l3.__d = void 0;
  else if (null == u4 || t2 != o5 || null == t2.parentNode)
    n:
      if (null == o5 || o5.parentNode !== n3)
        n3.appendChild(t2), r4 = null;
      else {
        for (f4 = o5, e2 = 0; (f4 = f4.nextSibling) && e2 < i3.length; e2 += 1)
          if (f4 == t2)
            break n;
        n3.insertBefore(t2, o5), r4 = o5;
      }
  return void 0 !== r4 ? r4 : t2.nextSibling;
}
function C(n3, l3, u4, i3, t2) {
  var o5;
  for (o5 in u4)
    "children" === o5 || "key" === o5 || o5 in l3 || H(n3, o5, null, u4[o5], i3);
  for (o5 in l3)
    t2 && "function" != typeof l3[o5] || "children" === o5 || "key" === o5 || "value" === o5 || "checked" === o5 || u4[o5] === l3[o5] || H(n3, o5, l3[o5], u4[o5], i3);
}
function $2(n3, l3, u4) {
  "-" === l3[0] ? n3.setProperty(l3, u4) : n3[l3] = null == u4 ? "" : "number" != typeof u4 || c.test(l3) ? u4 : u4 + "px";
}
function H(n3, l3, u4, i3, t2) {
  var o5;
  n:
    if ("style" === l3)
      if ("string" == typeof u4)
        n3.style.cssText = u4;
      else {
        if ("string" == typeof i3 && (n3.style.cssText = i3 = ""), i3)
          for (l3 in i3)
            u4 && l3 in u4 || $2(n3.style, l3, "");
        if (u4)
          for (l3 in u4)
            i3 && u4[l3] === i3[l3] || $2(n3.style, l3, u4[l3]);
      }
    else if ("o" === l3[0] && "n" === l3[1])
      o5 = l3 !== (l3 = l3.replace(/Capture$/, "")), l3 = l3.toLowerCase() in n3 ? l3.toLowerCase().slice(2) : l3.slice(2), n3.l || (n3.l = {}), n3.l[l3 + o5] = u4, u4 ? i3 || n3.addEventListener(l3, o5 ? T : I2, o5) : n3.removeEventListener(l3, o5 ? T : I2, o5);
    else if ("dangerouslySetInnerHTML" !== l3) {
      if (t2)
        l3 = l3.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
      else if ("href" !== l3 && "list" !== l3 && "form" !== l3 && "tabIndex" !== l3 && "download" !== l3 && l3 in n3)
        try {
          n3[l3] = null == u4 ? "" : u4;
          break n;
        } catch (n4) {
        }
      "function" == typeof u4 || (null == u4 || false === u4 && -1 == l3.indexOf("-") ? n3.removeAttribute(l3) : n3.setAttribute(l3, u4));
    }
}
function I2(n3) {
  this.l[n3.type + false](l.event ? l.event(n3) : n3);
}
function T(n3) {
  this.l[n3.type + true](l.event ? l.event(n3) : n3);
}
function j2(n3, u4, i3, t2, o5, r4, f4, e2, c4) {
  var a3, h2, v4, y3, _6, k6, b5, g4, m4, x4, A4, C5, $4, H3, I4, T4 = u4.type;
  if (void 0 !== u4.constructor)
    return null;
  null != i3.__h && (c4 = i3.__h, e2 = u4.__e = i3.__e, u4.__h = null, r4 = [e2]), (a3 = l.__b) && a3(u4);
  try {
    n:
      if ("function" == typeof T4) {
        if (g4 = u4.props, m4 = (a3 = T4.contextType) && t2[a3.__c], x4 = a3 ? m4 ? m4.props.value : a3.__ : t2, i3.__c ? b5 = (h2 = u4.__c = i3.__c).__ = h2.__E : ("prototype" in T4 && T4.prototype.render ? u4.__c = h2 = new T4(g4, x4) : (u4.__c = h2 = new d(g4, x4), h2.constructor = T4, h2.render = O2), m4 && m4.sub(h2), h2.props = g4, h2.state || (h2.state = {}), h2.context = x4, h2.__n = t2, v4 = h2.__d = true, h2.__h = [], h2._sb = []), null == h2.__s && (h2.__s = h2.state), null != T4.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = s({}, h2.__s)), s(h2.__s, T4.getDerivedStateFromProps(g4, h2.__s))), y3 = h2.props, _6 = h2.state, v4)
          null == T4.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);
        else {
          if (null == T4.getDerivedStateFromProps && g4 !== y3 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(g4, x4), !h2.__e && null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(g4, h2.__s, x4) || u4.__v === i3.__v) {
            for (h2.props = g4, h2.state = h2.__s, u4.__v !== i3.__v && (h2.__d = false), h2.__v = u4, u4.__e = i3.__e, u4.__k = i3.__k, u4.__k.forEach(function(n4) {
              n4 && (n4.__ = u4);
            }), A4 = 0; A4 < h2._sb.length; A4++)
              h2.__h.push(h2._sb[A4]);
            h2._sb = [], h2.__h.length && f4.push(h2);
            break n;
          }
          null != h2.componentWillUpdate && h2.componentWillUpdate(g4, h2.__s, x4), null != h2.componentDidUpdate && h2.__h.push(function() {
            h2.componentDidUpdate(y3, _6, k6);
          });
        }
        if (h2.context = x4, h2.props = g4, h2.__v = u4, h2.__P = n3, C5 = l.__r, $4 = 0, "prototype" in T4 && T4.prototype.render) {
          for (h2.state = h2.__s, h2.__d = false, C5 && C5(u4), a3 = h2.render(h2.props, h2.state, h2.context), H3 = 0; H3 < h2._sb.length; H3++)
            h2.__h.push(h2._sb[H3]);
          h2._sb = [];
        } else
          do {
            h2.__d = false, C5 && C5(u4), a3 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s;
          } while (h2.__d && ++$4 < 25);
        h2.state = h2.__s, null != h2.getChildContext && (t2 = s(s({}, t2), h2.getChildContext())), v4 || null == h2.getSnapshotBeforeUpdate || (k6 = h2.getSnapshotBeforeUpdate(y3, _6)), I4 = null != a3 && a3.type === p2 && null == a3.key ? a3.props.children : a3, w2(n3, Array.isArray(I4) ? I4 : [I4], u4, i3, t2, o5, r4, f4, e2, c4), h2.base = u4.__e, u4.__h = null, h2.__h.length && f4.push(h2), b5 && (h2.__E = h2.__ = null), h2.__e = false;
      } else
        null == r4 && u4.__v === i3.__v ? (u4.__k = i3.__k, u4.__e = i3.__e) : u4.__e = L(i3.__e, u4, i3, t2, o5, r4, f4, c4);
    (a3 = l.diffed) && a3(u4);
  } catch (n4) {
    u4.__v = null, (c4 || null != r4) && (u4.__e = e2, u4.__h = !!c4, r4[r4.indexOf(e2)] = null), l.__e(n4, u4, i3);
  }
}
function z2(n3, u4) {
  l.__c && l.__c(u4, n3), n3.some(function(u5) {
    try {
      n3 = u5.__h, u5.__h = [], n3.some(function(n4) {
        n4.call(u5);
      });
    } catch (n4) {
      l.__e(n4, u5.__v);
    }
  });
}
function L(l3, u4, i3, t2, o5, r4, e2, c4) {
  var s3, h2, v4, y3 = i3.props, p6 = u4.props, d5 = u4.type, k6 = 0;
  if ("svg" === d5 && (o5 = true), null != r4) {
    for (; k6 < r4.length; k6++)
      if ((s3 = r4[k6]) && "setAttribute" in s3 == !!d5 && (d5 ? s3.localName === d5 : 3 === s3.nodeType)) {
        l3 = s3, r4[k6] = null;
        break;
      }
  }
  if (null == l3) {
    if (null === d5)
      return document.createTextNode(p6);
    l3 = o5 ? document.createElementNS("http://www.w3.org/2000/svg", d5) : document.createElement(d5, p6.is && p6), r4 = null, c4 = false;
  }
  if (null === d5)
    y3 === p6 || c4 && l3.data === p6 || (l3.data = p6);
  else {
    if (r4 = r4 && n.call(l3.childNodes), h2 = (y3 = i3.props || f2).dangerouslySetInnerHTML, v4 = p6.dangerouslySetInnerHTML, !c4) {
      if (null != r4)
        for (y3 = {}, k6 = 0; k6 < l3.attributes.length; k6++)
          y3[l3.attributes[k6].name] = l3.attributes[k6].value;
      (v4 || h2) && (v4 && (h2 && v4.__html == h2.__html || v4.__html === l3.innerHTML) || (l3.innerHTML = v4 && v4.__html || ""));
    }
    if (C(l3, p6, y3, o5, c4), v4)
      u4.__k = [];
    else if (k6 = u4.props.children, w2(l3, Array.isArray(k6) ? k6 : [k6], u4, i3, t2, o5 && "foreignObject" !== d5, r4, e2, r4 ? r4[0] : i3.__k && _2(i3, 0), c4), null != r4)
      for (k6 = r4.length; k6--; )
        null != r4[k6] && a(r4[k6]);
    c4 || ("value" in p6 && void 0 !== (k6 = p6.value) && (k6 !== l3.value || "progress" === d5 && !k6 || "option" === d5 && k6 !== y3.value) && H(l3, "value", k6, y3.value, false), "checked" in p6 && void 0 !== (k6 = p6.checked) && k6 !== l3.checked && H(l3, "checked", k6, y3.checked, false));
  }
  return l3;
}
function M(n3, u4, i3) {
  try {
    "function" == typeof n3 ? n3(u4) : n3.current = u4;
  } catch (n4) {
    l.__e(n4, i3);
  }
}
function N2(n3, u4, i3) {
  var t2, o5;
  if (l.unmount && l.unmount(n3), (t2 = n3.ref) && (t2.current && t2.current !== n3.__e || M(t2, null, u4)), null != (t2 = n3.__c)) {
    if (t2.componentWillUnmount)
      try {
        t2.componentWillUnmount();
      } catch (n4) {
        l.__e(n4, u4);
      }
    t2.base = t2.__P = null, n3.__c = void 0;
  }
  if (t2 = n3.__k)
    for (o5 = 0; o5 < t2.length; o5++)
      t2[o5] && N2(t2[o5], u4, i3 || "function" != typeof n3.type);
  i3 || null == n3.__e || a(n3.__e), n3.__ = n3.__e = n3.__d = void 0;
}
function O2(n3, l3, u4) {
  return this.constructor(n3, u4);
}
var n, l, u2, i, t, o2, r2, f2, e, c;
var init_preact_module = __esm({
  "../../node_modules/preact/dist/preact.module.js"() {
    f2 = {};
    e = [];
    c = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;
    n = e.slice, l = { __e: function(n3, l3, u4, i3) {
      for (var t2, o5, r4; l3 = l3.__; )
        if ((t2 = l3.__c) && !t2.__)
          try {
            if ((o5 = t2.constructor) && null != o5.getDerivedStateFromError && (t2.setState(o5.getDerivedStateFromError(n3)), r4 = t2.__d), null != t2.componentDidCatch && (t2.componentDidCatch(n3, i3 || {}), r4 = t2.__d), r4)
              return t2.__E = t2;
          } catch (l4) {
            n3 = l4;
          }
      throw n3;
    } }, u2 = 0, i = function(n3) {
      return null != n3 && void 0 === n3.constructor;
    }, d.prototype.setState = function(n3, l3) {
      var u4;
      u4 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = s({}, this.state), "function" == typeof n3 && (n3 = n3(s({}, u4), this.props)), n3 && s(u4, n3), null != n3 && this.__v && (l3 && this._sb.push(l3), b2(this));
    }, d.prototype.forceUpdate = function(n3) {
      this.__v && (this.__e = true, n3 && this.__h.push(n3), b2(this));
    }, d.prototype.render = p2, t = [], g.__r = 0, r2 = 0;
  }
});

// ../../node_modules/preact-render-to-string/dist/index.mjs
function l2(e2) {
  if (false === a2.test(e2 += ""))
    return e2;
  for (var t2 = 0, r4 = 0, n3 = "", o5 = ""; r4 < e2.length; r4++) {
    switch (e2.charCodeAt(r4)) {
      case 34:
        o5 = "&quot;";
        break;
      case 38:
        o5 = "&amp;";
        break;
      case 60:
        o5 = "&lt;";
        break;
      default:
        continue;
    }
    r4 !== t2 && (n3 += e2.slice(t2, r4)), n3 += o5, t2 = r4 + 1;
  }
  return r4 !== t2 && (n3 += e2.slice(t2, r4)), n3;
}
function p3(e2) {
  var t2 = "";
  for (var n3 in e2) {
    var o5 = e2[n3];
    null != o5 && "" !== o5 && (t2 && (t2 += " "), t2 += "-" == n3[0] ? n3 : c2[n3] || (c2[n3] = n3.replace(u3, "-$1").toLowerCase()), t2 = "number" == typeof o5 && false === r3.test(n3) ? t2 + ": " + o5 + "px;" : t2 + ": " + o5 + ";");
  }
  return t2 || void 0;
}
function _3(e2, t2) {
  return Array.isArray(t2) ? t2.reduce(_3, e2) : null != t2 && false !== t2 && e2.push(t2), e2;
}
function d2() {
  this.__d = true;
}
function v2(e2, t2) {
  return { __v: e2, context: t2, props: e2.props, setState: d2, forceUpdate: d2, __d: true, __h: [] };
}
function h(e2, t2) {
  var r4 = e2.contextType, n3 = r4 && t2[r4.__c];
  return null != r4 ? n3 ? n3.props.value : r4.__ : t2;
}
function y2(r4, a3, c4, u4, d5, m4) {
  if (null == r4 || "boolean" == typeof r4)
    return "";
  if ("object" != typeof r4)
    return l2(r4);
  var b5 = c4.pretty, x4 = b5 && "string" == typeof b5 ? b5 : "	";
  if (Array.isArray(r4)) {
    for (var k6 = "", S5 = 0; S5 < r4.length; S5++)
      b5 && S5 > 0 && (k6 += "\n"), k6 += y2(r4[S5], a3, c4, u4, d5, m4);
    return k6;
  }
  var w7, C5 = r4.type, O6 = r4.props, j5 = false;
  if ("function" == typeof C5) {
    if (j5 = true, !c4.shallow || !u4 && false !== c4.renderRootComponent) {
      if (C5 === p2) {
        var A4 = [];
        return _3(A4, r4.props.children), y2(A4, a3, c4, false !== c4.shallowHighOrder, d5, m4);
      }
      var F3, H3 = r4.__c = v2(r4, a3);
      l.__b && l.__b(r4);
      var M4 = l.__r;
      if (C5.prototype && "function" == typeof C5.prototype.render) {
        var L5 = h(C5, a3);
        (H3 = r4.__c = new C5(O6, L5)).__v = r4, H3._dirty = H3.__d = true, H3.props = O6, null == H3.state && (H3.state = {}), null == H3._nextState && null == H3.__s && (H3._nextState = H3.__s = H3.state), H3.context = L5, C5.getDerivedStateFromProps ? H3.state = Object.assign({}, H3.state, C5.getDerivedStateFromProps(H3.props, H3.state)) : H3.componentWillMount && (H3.componentWillMount(), H3.state = H3._nextState !== H3.state ? H3._nextState : H3.__s !== H3.state ? H3.__s : H3.state), M4 && M4(r4), F3 = H3.render(H3.props, H3.state, H3.context);
      } else
        for (var T4 = h(C5, a3), E2 = 0; H3.__d && E2++ < 25; )
          H3.__d = false, M4 && M4(r4), F3 = C5.call(r4.__c, O6, T4);
      return H3.getChildContext && (a3 = Object.assign({}, a3, H3.getChildContext())), l.diffed && l.diffed(r4), y2(F3, a3, c4, false !== c4.shallowHighOrder, d5, m4);
    }
    C5 = (w7 = C5).displayName || w7 !== Function && w7.name || function(e2) {
      var t2 = (Function.prototype.toString.call(e2).match(/^\s*function\s+([^( ]+)/) || "")[1];
      if (!t2) {
        for (var r5 = -1, n3 = g2.length; n3--; )
          if (g2[n3] === e2) {
            r5 = n3;
            break;
          }
        r5 < 0 && (r5 = g2.push(e2) - 1), t2 = "UnnamedComponent" + r5;
      }
      return t2;
    }(w7);
  }
  var $4, D4, N5 = "<" + C5;
  if (O6) {
    var P3 = Object.keys(O6);
    c4 && true === c4.sortAttributes && P3.sort();
    for (var W2 = 0; W2 < P3.length; W2++) {
      var I4 = P3[W2], R5 = O6[I4];
      if ("children" !== I4) {
        if (!o3.test(I4) && (c4 && c4.allAttributes || "key" !== I4 && "ref" !== I4 && "__self" !== I4 && "__source" !== I4)) {
          if ("defaultValue" === I4)
            I4 = "value";
          else if ("defaultChecked" === I4)
            I4 = "checked";
          else if ("defaultSelected" === I4)
            I4 = "selected";
          else if ("className" === I4) {
            if (void 0 !== O6.class)
              continue;
            I4 = "class";
          } else
            d5 && i2.test(I4) && (I4 = I4.toLowerCase().replace(/^xlink:?/, "xlink:"));
          if ("htmlFor" === I4) {
            if (O6.for)
              continue;
            I4 = "for";
          }
          "style" === I4 && R5 && "object" == typeof R5 && (R5 = p3(R5)), "a" === I4[0] && "r" === I4[1] && "boolean" == typeof R5 && (R5 = String(R5));
          var U3 = c4.attributeHook && c4.attributeHook(I4, R5, a3, c4, j5);
          if (U3 || "" === U3)
            N5 += U3;
          else if ("dangerouslySetInnerHTML" === I4)
            D4 = R5 && R5.__html;
          else if ("textarea" === C5 && "value" === I4)
            $4 = R5;
          else if ((R5 || 0 === R5 || "" === R5) && "function" != typeof R5) {
            if (!(true !== R5 && "" !== R5 || (R5 = I4, c4 && c4.xml))) {
              N5 = N5 + " " + I4;
              continue;
            }
            if ("value" === I4) {
              if ("select" === C5) {
                m4 = R5;
                continue;
              }
              "option" === C5 && m4 == R5 && void 0 === O6.selected && (N5 += " selected");
            }
            N5 = N5 + " " + I4 + '="' + l2(R5) + '"';
          }
        }
      } else
        $4 = R5;
    }
  }
  if (b5) {
    var V3 = N5.replace(/\n\s*/, " ");
    V3 === N5 || ~V3.indexOf("\n") ? b5 && ~N5.indexOf("\n") && (N5 += "\n") : N5 = V3;
  }
  if (N5 += ">", o3.test(C5))
    throw new Error(C5 + " is not a valid HTML tag name in " + N5);
  var q3, z5 = n2.test(C5) || c4.voidElements && c4.voidElements.test(C5), Z2 = [];
  if (D4)
    b5 && f3(D4) && (D4 = "\n" + x4 + s2(D4, x4)), N5 += D4;
  else if (null != $4 && _3(q3 = [], $4).length) {
    for (var B2 = b5 && ~N5.indexOf("\n"), G2 = false, J2 = 0; J2 < q3.length; J2++) {
      var K2 = q3[J2];
      if (null != K2 && false !== K2) {
        var Q2 = y2(K2, a3, c4, true, "svg" === C5 || "foreignObject" !== C5 && d5, m4);
        if (b5 && !B2 && f3(Q2) && (B2 = true), Q2)
          if (b5) {
            var X2 = Q2.length > 0 && "<" != Q2[0];
            G2 && X2 ? Z2[Z2.length - 1] += Q2 : Z2.push(Q2), G2 = X2;
          } else
            Z2.push(Q2);
      }
    }
    if (b5 && B2)
      for (var Y2 = Z2.length; Y2--; )
        Z2[Y2] = "\n" + x4 + s2(Z2[Y2], x4);
  }
  if (Z2.length || D4)
    N5 += Z2.join("");
  else if (c4 && c4.xml)
    return N5.substring(0, N5.length - 1) + " />";
  return !z5 || q3 || D4 ? (b5 && ~N5.indexOf("\n") && (N5 += "\n"), N5 = N5 + "</" + C5 + ">") : N5 = N5.replace(/>$/, " />"), N5;
}
function k3(e2, r4, n3) {
  r4 = r4 || {};
  var o5, i3 = l.__s;
  return l.__s = true, o5 = n3 && (n3.pretty || n3.voidElements || n3.sortAttributes || n3.shallow || n3.allAttributes || n3.xml || n3.attributeHook) ? y2(e2, r4, n3) : j3(e2, r4, false, void 0), l.__c && l.__c(e2, x2), l.__s = i3, x2.length = 0, o5;
}
function S2(e2, t2) {
  return "className" === e2 ? "class" : "htmlFor" === e2 ? "for" : "defaultValue" === e2 ? "value" : "defaultChecked" === e2 ? "checked" : "defaultSelected" === e2 ? "selected" : t2 && i2.test(e2) ? e2.toLowerCase().replace(/^xlink:?/, "xlink:") : e2;
}
function w3(e2, t2) {
  return "style" === e2 && null != t2 && "object" == typeof t2 ? p3(t2) : "a" === e2[0] && "r" === e2[1] && "boolean" == typeof t2 ? String(t2) : t2;
}
function j3(r4, i3, a3, s3) {
  if (null == r4 || true === r4 || false === r4 || "" === r4)
    return "";
  if ("object" != typeof r4)
    return l2(r4);
  if (C2(r4)) {
    for (var f4 = "", c4 = 0; c4 < r4.length; c4++)
      f4 += j3(r4[c4], i3, a3, s3);
    return f4;
  }
  l.__b && l.__b(r4);
  var u4 = r4.type, p6 = r4.props;
  if ("function" == typeof u4) {
    if (u4 === p2)
      return j3(r4.props.children, i3, a3, s3);
    var _6;
    _6 = u4.prototype && "function" == typeof u4.prototype.render ? function(e2, r5) {
      var n3 = e2.type, o5 = h(n3, r5), i4 = new n3(e2.props, o5);
      e2.__c = i4, i4.__v = e2, i4.__d = true, i4.props = e2.props, null == i4.state && (i4.state = {}), null == i4.__s && (i4.__s = i4.state), i4.context = o5, n3.getDerivedStateFromProps ? i4.state = O3({}, i4.state, n3.getDerivedStateFromProps(i4.props, i4.state)) : i4.componentWillMount && (i4.componentWillMount(), i4.state = i4.__s !== i4.state ? i4.__s : i4.state);
      var a4 = l.__r;
      return a4 && a4(e2), i4.render(i4.props, i4.state, i4.context);
    }(r4, i3) : function(e2, r5) {
      var n3, o5 = v2(e2, r5), i4 = h(e2.type, r5);
      e2.__c = o5;
      for (var a4 = l.__r, l3 = 0; o5.__d && l3++ < 25; )
        o5.__d = false, a4 && a4(e2), n3 = e2.type.call(o5, e2.props, i4);
      return n3;
    }(r4, i3);
    var d5 = r4.__c;
    d5.getChildContext && (i3 = O3({}, i3, d5.getChildContext()));
    var g4 = j3(_6, i3, a3, s3);
    return l.diffed && l.diffed(r4), g4;
  }
  var y3, m4, b5 = "<";
  if (b5 += u4, p6)
    for (var x4 in y3 = p6.children, p6) {
      var k6 = p6[x4];
      if (!("key" === x4 || "ref" === x4 || "__self" === x4 || "__source" === x4 || "children" === x4 || "className" === x4 && "class" in p6 || "htmlFor" === x4 && "for" in p6 || o3.test(x4))) {
        if (k6 = w3(x4 = S2(x4, a3), k6), "dangerouslySetInnerHTML" === x4)
          m4 = k6 && k6.__html;
        else if ("textarea" === u4 && "value" === x4)
          y3 = k6;
        else if ((k6 || 0 === k6 || "" === k6) && "function" != typeof k6) {
          if (true === k6 || "" === k6) {
            k6 = x4, b5 = b5 + " " + x4;
            continue;
          }
          if ("value" === x4) {
            if ("select" === u4) {
              s3 = k6;
              continue;
            }
            "option" !== u4 || s3 != k6 || "selected" in p6 || (b5 += " selected");
          }
          b5 = b5 + " " + x4 + '="' + l2(k6) + '"';
        }
      }
    }
  var A4 = b5;
  if (b5 += ">", o3.test(u4))
    throw new Error(u4 + " is not a valid HTML tag name in " + b5);
  var F3 = "", H3 = false;
  if (m4)
    F3 += m4, H3 = true;
  else if ("string" == typeof y3)
    F3 += l2(y3), H3 = true;
  else if (C2(y3))
    for (var M4 = 0; M4 < y3.length; M4++) {
      var L5 = y3[M4];
      if (null != L5 && false !== L5) {
        var T4 = j3(L5, i3, "svg" === u4 || "foreignObject" !== u4 && a3, s3);
        T4 && (F3 += T4, H3 = true);
      }
    }
  else if (null != y3 && false !== y3 && true !== y3) {
    var E2 = j3(y3, i3, "svg" === u4 || "foreignObject" !== u4 && a3, s3);
    E2 && (F3 += E2, H3 = true);
  }
  if (l.diffed && l.diffed(r4), H3)
    b5 += F3;
  else if (n2.test(u4))
    return A4 + " />";
  return b5 + "</" + u4 + ">";
}
var r3, n2, o3, i2, a2, s2, f3, c2, u3, g2, m2, b3, x2, C2, O3;
var init_dist2 = __esm({
  "../../node_modules/preact-render-to-string/dist/index.mjs"() {
    init_preact_module();
    r3 = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i;
    n2 = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/;
    o3 = /[\s\n\\/='"\0<>]/;
    i2 = /^xlink:?./;
    a2 = /["&<]/;
    s2 = function(e2, t2) {
      return String(e2).replace(/(\n+)/g, "$1" + (t2 || "	"));
    };
    f3 = function(e2, t2, r4) {
      return String(e2).length > (t2 || 40) || !r4 && -1 !== String(e2).indexOf("\n") || -1 !== String(e2).indexOf("<");
    };
    c2 = {};
    u3 = /([A-Z])/g;
    g2 = [];
    m2 = { shallow: true };
    k3.render = k3;
    b3 = function(e2, t2) {
      return k3(e2, t2, m2);
    };
    x2 = [];
    C2 = Array.isArray;
    O3 = Object.assign;
    k3.shallowRender = b3;
  }
});

// ../../node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js
function o4(o5, e2, n3, t2, f4) {
  var l3, s3, u4 = {};
  for (s3 in e2)
    "ref" == s3 ? l3 = e2[s3] : u4[s3] = e2[s3];
  var a3 = { type: o5, props: u4, key: n3, ref: l3, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, __h: null, constructor: void 0, __v: --_4, __source: f4, __self: t2 };
  if ("function" == typeof o5 && (l3 = o5.defaultProps))
    for (s3 in l3)
      void 0 === u4[s3] && (u4[s3] = l3[s3]);
  return l.vnode && l.vnode(a3), a3;
}
var _4;
var init_jsxRuntime_module = __esm({
  "../../node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js"() {
    init_preact_module();
    init_preact_module();
    _4 = 0;
  }
});

// ../../node_modules/@auth/core/lib/pages/error.js
function ErrorPage(props) {
  const { url, error: error2 = "default", theme } = props;
  const signinPageUrl = `${url}/signin`;
  const errors = {
    default: {
      status: 200,
      heading: "Error",
      message: o4("p", { children: o4("a", { className: "site", href: url?.origin, children: url?.host }) })
    },
    Configuration: {
      status: 500,
      heading: "Server error",
      message: o4("div", { children: [o4("p", { children: "There is a problem with the server configuration." }), o4("p", { children: "Check the server logs for more information." })] })
    },
    AccessDenied: {
      status: 403,
      heading: "Access Denied",
      message: o4("div", { children: [o4("p", { children: "You do not have permission to sign in." }), o4("p", { children: o4("a", { className: "button", href: signinPageUrl, children: "Sign in" }) })] })
    },
    Verification: {
      status: 403,
      heading: "Unable to sign in",
      message: o4("div", { children: [o4("p", { children: "The sign in link is no longer valid." }), o4("p", { children: "It may have been used already or it may have expired." })] }),
      signin: o4("a", { className: "button", href: signinPageUrl, children: "Sign in" })
    }
  };
  const { status, heading, message: message2, signin } = errors[error2] ?? errors.default;
  return {
    status,
    html: o4("div", { className: "error", children: [theme?.brandColor && o4("style", { dangerouslySetInnerHTML: {
      __html: `
        :root {
          --brand-color: ${theme?.brandColor}
        }
      `
    } }), o4("div", { className: "card", children: [theme?.logo && o4("img", { src: theme?.logo, alt: "Logo", className: "logo" }), o4("h1", { children: heading }), o4("div", { className: "message", children: message2 }), signin] })] })
  };
}
var init_error = __esm({
  "../../node_modules/@auth/core/lib/pages/error.js"() {
    init_jsxRuntime_module();
  }
});

// ../../node_modules/@auth/core/lib/pages/signin.js
function hexToRgba(hex, alpha = 1) {
  if (!hex) {
    return;
  }
  hex = hex.replace(/^#/, "");
  if (hex.length === 3) {
    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
  }
  const bigint = parseInt(hex, 16);
  const r4 = bigint >> 16 & 255;
  const g4 = bigint >> 8 & 255;
  const b5 = bigint & 255;
  alpha = Math.min(Math.max(alpha, 0), 1);
  const rgba = `rgba(${r4}, ${g4}, ${b5}, ${alpha})`;
  return rgba;
}
function SigninPage(props) {
  const { csrfToken, providers: providers2 = [], callbackUrl, theme, email, error: errorType } = props;
  if (typeof document !== "undefined" && theme?.brandColor) {
    document.documentElement.style.setProperty("--brand-color", theme.brandColor);
  }
  if (typeof document !== "undefined" && theme?.buttonText) {
    document.documentElement.style.setProperty("--button-text-color", theme.buttonText);
  }
  const error2 = errorType && (signinErrors[errorType] ?? signinErrors.default);
  const providerLogoPath = "https://authjs.dev/img/providers";
  return o4("div", { className: "signin", children: [theme?.brandColor && o4("style", { dangerouslySetInnerHTML: {
    __html: `:root {--brand-color: ${theme.brandColor}}`
  } }), theme?.buttonText && o4("style", { dangerouslySetInnerHTML: {
    __html: `
        :root {
          --button-text-color: ${theme.buttonText}
        }
      `
  } }), o4("div", { className: "card", children: [error2 && o4("div", { className: "error", children: o4("p", { children: error2 }) }), theme?.logo && o4("img", { src: theme.logo, alt: "Logo", className: "logo" }), providers2.map((provider, i3) => {
    let bg2, text2, logo, logoDark, bgDark, textDark;
    if (provider.type === "oauth" || provider.type === "oidc") {
      ;
      ({
        bg: bg2 = "",
        text: text2 = "",
        logo = "",
        bgDark = bg2,
        textDark = text2,
        logoDark = ""
      } = provider.style ?? {});
      logo = logo.startsWith("/") ? providerLogoPath + logo : logo;
      logoDark = logoDark.startsWith("/") ? providerLogoPath + logoDark : logoDark || logo;
      logoDark || (logoDark = logo);
    }
    return o4("div", { className: "provider", children: [provider.type === "oauth" || provider.type === "oidc" ? o4("form", { action: provider.signinUrl, method: "POST", children: [o4("input", { type: "hidden", name: "csrfToken", value: csrfToken }), callbackUrl && o4("input", { type: "hidden", name: "callbackUrl", value: callbackUrl }), o4("button", { type: "submit", className: "button", style: {
      "--provider-bg": bg2,
      "--provider-dark-bg": bgDark,
      "--provider-color": text2,
      "--provider-dark-color": textDark,
      "--provider-bg-hover": hexToRgba(bg2, 0.8),
      "--provider-dark-bg-hover": hexToRgba(bgDark, 0.8)
    }, tabIndex: 0, children: [logo && o4("img", { loading: "lazy", height: 24, width: 24, id: "provider-logo", src: logo }), logoDark && o4("img", { loading: "lazy", height: 24, width: 24, id: "provider-logo-dark", src: logoDark }), o4("span", { children: ["Sign in with ", provider.name] })] })] }) : null, (provider.type === "email" || provider.type === "credentials") && i3 > 0 && providers2[i3 - 1].type !== "email" && providers2[i3 - 1].type !== "credentials" && o4("hr", {}), provider.type === "email" && o4("form", { action: provider.signinUrl, method: "POST", children: [o4("input", { type: "hidden", name: "csrfToken", value: csrfToken }), o4("label", { className: "section-header", htmlFor: `input-email-for-${provider.id}-provider`, children: "Email" }), o4("input", { id: `input-email-for-${provider.id}-provider`, autoFocus: true, type: "email", name: "email", value: email, placeholder: "email@example.com", required: true }), o4("button", { id: "submitButton", type: "submit", tabIndex: 0, children: ["Sign in with ", provider.name] })] }), provider.type === "credentials" && o4("form", { action: provider.callbackUrl, method: "POST", children: [o4("input", { type: "hidden", name: "csrfToken", value: csrfToken }), Object.keys(provider.credentials).map((credential) => {
      return o4("div", { children: [o4("label", { className: "section-header", htmlFor: `input-${credential}-for-${provider.id}-provider`, children: provider.credentials[credential].label ?? credential }), o4("input", { name: credential, id: `input-${credential}-for-${provider.id}-provider`, type: provider.credentials[credential].type ?? "text", placeholder: provider.credentials[credential].placeholder ?? "", ...provider.credentials[credential] })] }, `input-group-${provider.id}`);
    }), o4("button", { id: "submitButton", type: "submit", tabIndex: 0, children: ["Sign in with ", provider.name] })] }), (provider.type === "email" || provider.type === "credentials") && i3 + 1 < providers2.length && o4("hr", {})] }, provider.id);
  })] })] });
}
var signinErrors;
var init_signin = __esm({
  "../../node_modules/@auth/core/lib/pages/signin.js"() {
    init_jsxRuntime_module();
    signinErrors = {
      default: "Unable to sign in.",
      Signin: "Try signing in with a different account.",
      OAuthSignin: "Try signing in with a different account.",
      OAuthCallbackError: "Try signing in with a different account.",
      OAuthCreateAccount: "Try signing in with a different account.",
      EmailCreateAccount: "Try signing in with a different account.",
      Callback: "Try signing in with a different account.",
      OAuthAccountNotLinked: "To confirm your identity, sign in with the same account you used originally.",
      EmailSignin: "The e-mail could not be sent.",
      CredentialsSignin: "Sign in failed. Check the details you provided are correct.",
      SessionRequired: "Please sign in to access this page."
    };
  }
});

// ../../node_modules/@auth/core/lib/pages/signout.js
function SignoutPage(props) {
  const { url, csrfToken, theme } = props;
  return o4("div", { className: "signout", children: [theme?.brandColor && o4("style", { dangerouslySetInnerHTML: {
    __html: `
        :root {
          --brand-color: ${theme.brandColor}
        }
      `
  } }), theme?.buttonText && o4("style", { dangerouslySetInnerHTML: {
    __html: `
        :root {
          --button-text-color: ${theme.buttonText}
        }
      `
  } }), o4("div", { className: "card", children: [theme?.logo && o4("img", { src: theme.logo, alt: "Logo", className: "logo" }), o4("h1", { children: "Signout" }), o4("p", { children: "Are you sure you want to sign out?" }), o4("form", { action: `${url}/signout`, method: "POST", children: [o4("input", { type: "hidden", name: "csrfToken", value: csrfToken }), o4("button", { id: "submitButton", type: "submit", children: "Sign out" })] })] })] });
}
var init_signout = __esm({
  "../../node_modules/@auth/core/lib/pages/signout.js"() {
    init_jsxRuntime_module();
  }
});

// ../../node_modules/@auth/core/lib/pages/styles.js
var styles_default;
var init_styles = __esm({
  "../../node_modules/@auth/core/lib/pages/styles.js"() {
    styles_default = `:root {
  --border-width: 1px;
  --border-radius: 0.5rem;
  --color-error: #c94b4b;
  --color-info: #157efb;
  --color-info-hover: #0f6ddb;
  --color-info-text: #fff;
}

.__next-auth-theme-auto,
.__next-auth-theme-light {
  --color-background: #ececec;
  --color-background-hover: rgba(236, 236, 236, 0.8);
  --color-background-card: #fff;
  --color-text: #000;
  --color-primary: #444;
  --color-control-border: #bbb;
  --color-button-active-background: #f9f9f9;
  --color-button-active-border: #aaa;
  --color-separator: #ccc;
}

.__next-auth-theme-dark {
  --color-background: #161b22;
  --color-background-hover: rgba(22, 27, 34, 0.8);
  --color-background-card: #0d1117;
  --color-text: #fff;
  --color-primary: #ccc;
  --color-control-border: #555;
  --color-button-active-background: #060606;
  --color-button-active-border: #666;
  --color-separator: #444;
}

@media (prefers-color-scheme: dark) {
  .__next-auth-theme-auto {
    --color-background: #161b22;
    --color-background-hover: rgba(22, 27, 34, 0.8);
    --color-background-card: #0d1117;
    --color-text: #fff;
    --color-primary: #ccc;
    --color-control-border: #555;
    --color-button-active-background: #060606;
    --color-button-active-border: #666;
    --color-separator: #444;
  }

  button,
  a.button {
    color: var(--provider-dark-color, var(--color-primary));
    background-color: var(--provider-dark-bg, var(--color-background));
  }
    button:hover, a.button:hover {
      background-color: var(--provider-dark-bg-hover, var(--color-background-hover)) !important;
    }
  #provider-logo {
    display: none !important;
  }
  #provider-logo-dark {
    width: 25px;
    display: block !important;
  }
}
html {
  box-sizing: border-box;
}
*,
*:before,
*:after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

body {
  background-color: var(--color-background);
  margin: 0;
  padding: 0;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
}

h1 {
  margin-bottom: 1.5rem;
  padding: 0 1rem;
  font-weight: 400;
  color: var(--color-text);
}

p {
  margin-bottom: 1.5rem;
  padding: 0 1rem;
  color: var(--color-text);
}

form {
  margin: 0;
  padding: 0;
}

label {
  font-weight: 500;
  text-align: left;
  margin-bottom: 0.25rem;
  display: block;
  color: var(--color-text);
}

input[type] {
  box-sizing: border-box;
  display: block;
  width: 100%;
  padding: 0.5rem 1rem;
  border: var(--border-width) solid var(--color-control-border);
  background: var(--color-background-card);
  font-size: 1rem;
  border-radius: var(--border-radius);
  color: var(--color-text);
}

input[type]:focus {
    box-shadow: none;
  }

p {
  font-size: 1.1rem;
  line-height: 2rem;
}

a.button {
  text-decoration: none;
  line-height: 1rem;
}

a.button:link,
  a.button:visited {
    background-color: var(--color-background);
    color: var(--color-primary);
  }

button span {
  flex-grow: 1;
}

button,
a.button {
  padding: 0.75rem 1rem;
  color: var(--provider-color, var(--color-primary));
  background-color: var(--provider-bg);
  font-size: 1.1rem;
  min-height: 62px;
  border-color: rgba(0, 0, 0, 0.1);
  border-radius: var(--border-radius);
  transition: all 0.1s ease-in-out;
  font-weight: 500;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}

button:hover, a.button:hover {
    background-color: var(--provider-bg-hover, var(--color-background-hover));
    cursor: pointer;
  }

button:active, a.button:active {
    cursor: pointer;
  }

button #provider-logo, a.button #provider-logo {
    width: 25px;
    display: block;
  }

button #provider-logo-dark, a.button #provider-logo-dark {
    display: none;
  }

#submitButton {
  color: var(--button-text-color, var(--color-info-text));
  background-color: var(--brand-color, var(--color-info));
  width: 100%;
}

#submitButton:hover {
    background-color: var(--button-hover-bg, var(--color-info-hover)) !important;
  }

a.site {
  color: var(--color-primary);
  text-decoration: none;
  font-size: 1rem;
  line-height: 2rem;
}

a.site:hover {
    text-decoration: underline;
  }

.page {
  position: absolute;
  width: 100%;
  height: 100%;
  display: grid;
  place-items: center;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.page > div {
    text-align: center;
  }

.error a.button {
    padding-left: 2rem;
    padding-right: 2rem;
    margin-top: 0.5rem;
  }

.error .message {
    margin-bottom: 1.5rem;
  }

.signin input[type="text"] {
    margin-left: auto;
    margin-right: auto;
    display: block;
  }

.signin hr {
    display: block;
    border: 0;
    border-top: 1px solid var(--color-separator);
    margin: 2rem auto 1rem auto;
    overflow: visible;
  }

.signin hr::before {
      content: "or";
      background: var(--color-background-card);
      color: #888;
      padding: 0 0.4rem;
      position: relative;
      top: -0.7rem;
    }

.signin .error {
    background: #f5f5f5;
    font-weight: 500;
    border-radius: 0.3rem;
    background: var(--color-error);
  }

.signin .error p {
      text-align: left;
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      line-height: 1.2rem;
      color: var(--color-info-text);
    }

.signin > div,
  .signin form {
    display: block;
  }

.signin > div input[type], .signin form input[type] {
      margin-bottom: 0.5rem;
    }

.signin > div button, .signin form button {
      width: 100%;
    }

.signin .provider + .provider {
    margin-top: 1rem;
  }

.logo {
  display: inline-block;
  max-width: 150px;
  margin: 1.25rem 0;
  max-height: 70px;
}

.card {
  background-color: var(--color-background-card);
  border-radius: 2rem;
  padding: 1.25rem 2rem;
}

.card .header {
    color: var(--color-primary);
  }

.section-header {
  color: var(--color-text);
}

@media screen and (min-width: 450px) {
  .card {
    margin: 2rem 0;
    width: 368px;
  }
}
@media screen and (max-width: 450px) {
  .card {
    margin: 1rem 0;
    width: 343px;
  }
}
`;
  }
});

// ../../node_modules/@auth/core/lib/pages/verify-request.js
function VerifyRequestPage(props) {
  const { url, theme } = props;
  return o4("div", { className: "verify-request", children: [theme.brandColor && o4("style", { dangerouslySetInnerHTML: {
    __html: `
        :root {
          --brand-color: ${theme.brandColor}
        }
      `
  } }), o4("div", { className: "card", children: [theme.logo && o4("img", { src: theme.logo, alt: "Logo", className: "logo" }), o4("h1", { children: "Check your email" }), o4("p", { children: "A sign in link has been sent to your email address." }), o4("p", { children: o4("a", { className: "site", href: url.origin, children: url.host }) })] })] });
}
var init_verify_request = __esm({
  "../../node_modules/@auth/core/lib/pages/verify-request.js"() {
    init_jsxRuntime_module();
  }
});

// ../../node_modules/@auth/core/lib/pages/index.js
function send({ html: html2, title, status, cookies, theme }) {
  return {
    cookies,
    status,
    headers: { "Content-Type": "text/html" },
    body: `<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge"><meta name="viewport" content="width=device-width, initial-scale=1.0"><style>${styles_default}</style><title>${title}</title></head><body class="__next-auth-theme-${theme?.colorScheme ?? "auto"}"><div class="page">${k3(html2)}</div></body></html>`
  };
}
function renderPage2(params) {
  const { url, theme, query, cookies, pages } = params;
  return {
    csrf(skip2, options, cookies2) {
      if (!skip2) {
        return {
          headers: { "Content-Type": "application/json" },
          body: { csrfToken: options.csrfToken },
          cookies: cookies2
        };
      }
      options.logger.warn("csrf-disabled");
      cookies2.push({
        name: options.cookies.csrfToken.name,
        value: "",
        options: { ...options.cookies.csrfToken.options, maxAge: 0 }
      });
      return { status: 404, cookies: cookies2 };
    },
    providers(providers2) {
      return {
        headers: { "Content-Type": "application/json" },
        body: providers2.reduce((acc, { id, name, type, signinUrl, callbackUrl }) => {
          acc[id] = { id, name, type, signinUrl, callbackUrl };
          return acc;
        }, {})
      };
    },
    signin(error2) {
      if (pages?.signIn) {
        let signinUrl = `${pages.signIn}${pages.signIn.includes("?") ? "&" : "?"}${new URLSearchParams({ callbackUrl: params.callbackUrl ?? "/" })}`;
        if (error2)
          signinUrl = `${signinUrl}&${new URLSearchParams({ error: error2 })}`;
        return { redirect: signinUrl, cookies };
      }
      return send({
        cookies,
        theme,
        html: SigninPage({
          csrfToken: params.csrfToken,
          // We only want to render providers
          providers: params.providers?.filter((provider) => (
            // Always render oauth and email type providers
            ["email", "oauth", "oidc"].includes(provider.type) || // Only render credentials type provider if credentials are defined
            provider.type === "credentials" && provider.credentials || // Don't render other provider types
            false
          )),
          callbackUrl: params.callbackUrl,
          theme: params.theme,
          error: error2,
          ...query
        }),
        title: "Sign In"
      });
    },
    signout() {
      if (pages?.signOut)
        return { redirect: pages.signOut, cookies };
      return send({
        cookies,
        theme,
        html: SignoutPage({ csrfToken: params.csrfToken, url, theme }),
        title: "Sign Out"
      });
    },
    verifyRequest(props) {
      if (pages?.verifyRequest)
        return { redirect: pages.verifyRequest, cookies };
      return send({
        cookies,
        theme,
        html: VerifyRequestPage({ url, theme, ...props }),
        title: "Verify Request"
      });
    },
    error(error2) {
      if (pages?.error) {
        return {
          redirect: `${pages.error}${pages.error.includes("?") ? "&" : "?"}error=${error2}`,
          cookies
        };
      }
      return send({
        cookies,
        theme,
        // @ts-expect-error fix error type
        ...ErrorPage({ url, theme, error: error2 }),
        title: "Error"
      });
    }
  };
}
var init_pages = __esm({
  "../../node_modules/@auth/core/lib/pages/index.js"() {
    init_dist2();
    init_error();
    init_signin();
    init_signout();
    init_styles();
    init_verify_request();
  }
});

// ../../node_modules/@auth/core/lib/utils/date.js
function fromDate(time, date = Date.now()) {
  return new Date(date + time * 1e3);
}
var init_date = __esm({
  "../../node_modules/@auth/core/lib/utils/date.js"() {
  }
});

// ../../node_modules/@auth/core/lib/actions/callback/handle-login.js
async function handleLoginOrRegister(sessionToken, _profile, _account, options) {
  if (!_account?.providerAccountId || !_account.type)
    throw new Error("Missing or invalid provider account");
  if (!["email", "oauth", "oidc"].includes(_account.type))
    throw new Error("Provider not supported");
  const { adapter, jwt: jwt2, events, session: { strategy: sessionStrategy, generateSessionToken } } = options;
  if (!adapter) {
    return { user: _profile, account: _account };
  }
  const profile = _profile;
  let account = _account;
  const { createUser, updateUser, getUser, getUserByAccount, getUserByEmail, linkAccount, createSession, getSessionAndUser, deleteSession } = adapter;
  let session2 = null;
  let user = null;
  let isNewUser = false;
  const useJwtSession = sessionStrategy === "jwt";
  if (sessionToken) {
    if (useJwtSession) {
      try {
        const salt = options.cookies.sessionToken.name;
        session2 = await jwt2.decode({ ...jwt2, token: sessionToken, salt });
        if (session2 && "sub" in session2 && session2.sub) {
          user = await getUser(session2.sub);
        }
      } catch {
      }
    } else {
      const userAndSession = await getSessionAndUser(sessionToken);
      if (userAndSession) {
        session2 = userAndSession.session;
        user = userAndSession.user;
      }
    }
  }
  if (account.type === "email") {
    const userByEmail = await getUserByEmail(profile.email);
    if (userByEmail) {
      if (user?.id !== userByEmail.id && !useJwtSession && sessionToken) {
        await deleteSession(sessionToken);
      }
      user = await updateUser({ id: userByEmail.id, emailVerified: /* @__PURE__ */ new Date() });
      await events.updateUser?.({ user });
    } else {
      const { id: _6, ...newUser } = { ...profile, emailVerified: /* @__PURE__ */ new Date() };
      user = await createUser(newUser);
      await events.createUser?.({ user });
      isNewUser = true;
    }
    session2 = useJwtSession ? {} : await createSession({
      sessionToken: generateSessionToken(),
      userId: user.id,
      expires: fromDate(options.session.maxAge)
    });
    return { session: session2, user, isNewUser };
  }
  const userByAccount = await getUserByAccount({
    providerAccountId: account.providerAccountId,
    provider: account.provider
  });
  if (userByAccount) {
    if (user) {
      if (userByAccount.id === user.id) {
        return { session: session2, user, isNewUser };
      }
      throw new OAuthAccountNotLinked("The account is already associated with another user", { provider: account.provider });
    }
    session2 = useJwtSession ? {} : await createSession({
      sessionToken: generateSessionToken(),
      userId: userByAccount.id,
      expires: fromDate(options.session.maxAge)
    });
    return { session: session2, user: userByAccount, isNewUser };
  } else {
    const { provider: p6 } = options;
    const { type, provider, providerAccountId, userId, ...tokenSet } = account;
    const defaults = { providerAccountId, provider, type, userId };
    account = Object.assign(p6.account(tokenSet) ?? {}, defaults);
    if (user) {
      await linkAccount({ ...account, userId: user.id });
      await events.linkAccount?.({ user, account, profile });
      return { session: session2, user, isNewUser };
    }
    const userByEmail = profile.email ? await getUserByEmail(profile.email) : null;
    if (userByEmail) {
      const provider2 = options.provider;
      if (provider2?.allowDangerousEmailAccountLinking) {
        user = userByEmail;
      } else {
        throw new OAuthAccountNotLinked("Another account already exists with the same e-mail address", { provider: account.provider });
      }
    } else {
      const { id: _6, ...newUser } = { ...profile, emailVerified: null };
      user = await createUser(newUser);
    }
    await events.createUser?.({ user });
    await linkAccount({ ...account, userId: user.id });
    await events.linkAccount?.({ user, account, profile });
    session2 = useJwtSession ? {} : await createSession({
      sessionToken: generateSessionToken(),
      userId: user.id,
      expires: fromDate(options.session.maxAge)
    });
    return { session: session2, user, isNewUser: true };
  }
}
var init_handle_login = __esm({
  "../../node_modules/@auth/core/lib/actions/callback/handle-login.js"() {
    init_errors();
    init_date();
  }
});

// ../../node_modules/oauth4webapi/build/index.js
function looseInstanceOf(input, expected) {
  if (input == null) {
    return false;
  }
  try {
    return input instanceof expected || Object.getPrototypeOf(input)[Symbol.toStringTag] === expected.prototype[Symbol.toStringTag];
  } catch {
    return false;
  }
}
function buf(input) {
  if (typeof input === "string") {
    return encoder3.encode(input);
  }
  return decoder4.decode(input);
}
function encodeBase64Url(input) {
  if (input instanceof ArrayBuffer) {
    input = new Uint8Array(input);
  }
  const arr = [];
  for (let i3 = 0; i3 < input.byteLength; i3 += CHUNK_SIZE2) {
    arr.push(String.fromCharCode.apply(null, input.subarray(i3, i3 + CHUNK_SIZE2)));
  }
  return btoa(arr.join("")).replace(/=/g, "").replace(/\+/g, "-").replace(/\//g, "_");
}
function decodeBase64Url(input) {
  try {
    const binary2 = atob(input.replace(/-/g, "+").replace(/_/g, "/").replace(/\s/g, ""));
    const bytes = new Uint8Array(binary2.length);
    for (let i3 = 0; i3 < binary2.length; i3++) {
      bytes[i3] = binary2.charCodeAt(i3);
    }
    return bytes;
  } catch (cause) {
    throw new OPE("The input to be decoded is not correctly encoded.", { cause });
  }
}
function b64u(input) {
  if (typeof input === "string") {
    return decodeBase64Url(input);
  }
  return encodeBase64Url(input);
}
function isCryptoKey2(key) {
  return key instanceof CryptoKey;
}
function isPrivateKey(key) {
  return isCryptoKey2(key) && key.type === "private";
}
function isPublicKey(key) {
  return isCryptoKey2(key) && key.type === "public";
}
function processDpopNonce(response) {
  try {
    const nonce2 = response.headers.get("dpop-nonce");
    if (nonce2) {
      dpopNonces.set(new URL(response.url).origin, nonce2);
    }
  } catch {
  }
  return response;
}
function isJsonObject(input) {
  if (input === null || typeof input !== "object" || Array.isArray(input)) {
    return false;
  }
  return true;
}
function prepareHeaders(input) {
  if (looseInstanceOf(input, Headers)) {
    input = Object.fromEntries(input.entries());
  }
  const headers = new Headers(input);
  if (USER_AGENT2 && !headers.has("user-agent")) {
    headers.set("user-agent", USER_AGENT2);
  }
  if (headers.has("authorization")) {
    throw new TypeError('"options.headers" must not include the "authorization" header name');
  }
  if (headers.has("dpop")) {
    throw new TypeError('"options.headers" must not include the "dpop" header name');
  }
  return headers;
}
function signal(value) {
  if (typeof value === "function") {
    value = value();
  }
  if (!(value instanceof AbortSignal)) {
    throw new TypeError('"options.signal" must return or be an instance of AbortSignal');
  }
  return value;
}
async function discoveryRequest(issuerIdentifier, options) {
  if (!(issuerIdentifier instanceof URL)) {
    throw new TypeError('"issuerIdentifier" must be an instance of URL');
  }
  if (issuerIdentifier.protocol !== "https:" && issuerIdentifier.protocol !== "http:") {
    throw new TypeError('"issuer.protocol" must be "https:" or "http:"');
  }
  const url = new URL(issuerIdentifier.href);
  switch (options?.algorithm) {
    case void 0:
    case "oidc":
      url.pathname = `${url.pathname}/.well-known/openid-configuration`.replace("//", "/");
      break;
    case "oauth2":
      if (url.pathname === "/") {
        url.pathname = ".well-known/oauth-authorization-server";
      } else {
        url.pathname = `.well-known/oauth-authorization-server/${url.pathname}`.replace("//", "/");
      }
      break;
    default:
      throw new TypeError('"options.algorithm" must be "oidc" (default), or "oauth2"');
  }
  const headers = prepareHeaders(options?.headers);
  headers.set("accept", "application/json");
  return (options?.[customFetch] || fetch)(url.href, {
    headers: Object.fromEntries(headers.entries()),
    method: "GET",
    redirect: "manual",
    signal: options?.signal ? signal(options.signal) : null
  }).then(processDpopNonce);
}
function validateString(input) {
  return typeof input === "string" && input.length !== 0;
}
async function processDiscoveryResponse(expectedIssuerIdentifier, response) {
  if (!(expectedIssuerIdentifier instanceof URL)) {
    throw new TypeError('"expectedIssuer" must be an instance of URL');
  }
  if (!looseInstanceOf(response, Response)) {
    throw new TypeError('"response" must be an instance of Response');
  }
  if (response.status !== 200) {
    throw new OPE('"response" is not a conform Authorization Server Metadata response');
  }
  assertReadableResponse(response);
  let json;
  try {
    json = await response.json();
  } catch (cause) {
    throw new OPE('failed to parse "response" body as JSON', { cause });
  }
  if (!isJsonObject(json)) {
    throw new OPE('"response" body must be a top level object');
  }
  if (!validateString(json.issuer)) {
    throw new OPE('"response" body "issuer" property must be a non-empty string');
  }
  if (new URL(json.issuer).href !== expectedIssuerIdentifier.href) {
    throw new OPE('"response" body "issuer" does not match "expectedIssuer"');
  }
  return json;
}
function randomBytes() {
  return b64u(crypto.getRandomValues(new Uint8Array(32)));
}
function generateRandomCodeVerifier() {
  return randomBytes();
}
function generateRandomState() {
  return randomBytes();
}
function generateRandomNonce() {
  return randomBytes();
}
async function calculatePKCECodeChallenge(codeVerifier) {
  if (!validateString(codeVerifier)) {
    throw new TypeError('"codeVerifier" must be a non-empty string');
  }
  return b64u(await crypto.subtle.digest("SHA-256", buf(codeVerifier)));
}
function getKeyAndKid(input) {
  if (input instanceof CryptoKey) {
    return { key: input };
  }
  if (!(input?.key instanceof CryptoKey)) {
    return {};
  }
  if (input.kid !== void 0 && !validateString(input.kid)) {
    throw new TypeError('"kid" must be a non-empty string');
  }
  return { key: input.key, kid: input.kid };
}
function formUrlEncode(token) {
  return encodeURIComponent(token).replace(/%20/g, "+");
}
function clientSecretBasic(clientId, clientSecret) {
  const username = formUrlEncode(clientId);
  const password = formUrlEncode(clientSecret);
  const credentials = btoa(`${username}:${password}`);
  return `Basic ${credentials}`;
}
function psAlg(key) {
  switch (key.algorithm.hash.name) {
    case "SHA-256":
      return "PS256";
    case "SHA-384":
      return "PS384";
    case "SHA-512":
      return "PS512";
    default:
      throw new UnsupportedOperationError("unsupported RsaHashedKeyAlgorithm hash name");
  }
}
function rsAlg(key) {
  switch (key.algorithm.hash.name) {
    case "SHA-256":
      return "RS256";
    case "SHA-384":
      return "RS384";
    case "SHA-512":
      return "RS512";
    default:
      throw new UnsupportedOperationError("unsupported RsaHashedKeyAlgorithm hash name");
  }
}
function esAlg(key) {
  switch (key.algorithm.namedCurve) {
    case "P-256":
      return "ES256";
    case "P-384":
      return "ES384";
    case "P-521":
      return "ES512";
    default:
      throw new UnsupportedOperationError("unsupported EcKeyAlgorithm namedCurve");
  }
}
function keyToJws(key) {
  switch (key.algorithm.name) {
    case "RSA-PSS":
      return psAlg(key);
    case "RSASSA-PKCS1-v1_5":
      return rsAlg(key);
    case "ECDSA":
      return esAlg(key);
    case "Ed25519":
    case "Ed448":
      return "EdDSA";
    default:
      throw new UnsupportedOperationError("unsupported CryptoKey algorithm name");
  }
}
function getClockSkew(client2) {
  const skew = client2?.[clockSkew];
  return typeof skew === "number" && Number.isFinite(skew) ? skew : 0;
}
function getClockTolerance(client2) {
  const tolerance = client2?.[clockTolerance];
  return typeof tolerance === "number" && Number.isFinite(tolerance) && Math.sign(tolerance) !== -1 ? tolerance : 30;
}
function epochTime() {
  return Math.floor(Date.now() / 1e3);
}
function clientAssertion(as2, client2) {
  const now2 = epochTime() + getClockSkew(client2);
  return {
    jti: randomBytes(),
    aud: [as2.issuer, as2.token_endpoint],
    exp: now2 + 60,
    iat: now2,
    nbf: now2,
    iss: client2.client_id,
    sub: client2.client_id
  };
}
async function privateKeyJwt(as2, client2, key, kid) {
  return jwt({
    alg: keyToJws(key),
    kid
  }, clientAssertion(as2, client2), key);
}
function assertAs(as2) {
  if (typeof as2 !== "object" || as2 === null) {
    throw new TypeError('"as" must be an object');
  }
  if (!validateString(as2.issuer)) {
    throw new TypeError('"as.issuer" property must be a non-empty string');
  }
  return true;
}
function assertClient(client2) {
  if (typeof client2 !== "object" || client2 === null) {
    throw new TypeError('"client" must be an object');
  }
  if (!validateString(client2.client_id)) {
    throw new TypeError('"client.client_id" property must be a non-empty string');
  }
  return true;
}
function assertClientSecret(clientSecret) {
  if (!validateString(clientSecret)) {
    throw new TypeError('"client.client_secret" property must be a non-empty string');
  }
  return clientSecret;
}
function assertNoClientPrivateKey(clientAuthMethod, clientPrivateKey) {
  if (clientPrivateKey !== void 0) {
    throw new TypeError(`"options.clientPrivateKey" property must not be provided when ${clientAuthMethod} client authentication method is used.`);
  }
}
function assertNoClientSecret(clientAuthMethod, clientSecret) {
  if (clientSecret !== void 0) {
    throw new TypeError(`"client.client_secret" property must not be provided when ${clientAuthMethod} client authentication method is used.`);
  }
}
async function clientAuthentication(as2, client2, body, headers, clientPrivateKey) {
  body.delete("client_secret");
  body.delete("client_assertion_type");
  body.delete("client_assertion");
  switch (client2.token_endpoint_auth_method) {
    case void 0:
    case "client_secret_basic": {
      assertNoClientPrivateKey("client_secret_basic", clientPrivateKey);
      headers.set("authorization", clientSecretBasic(client2.client_id, assertClientSecret(client2.client_secret)));
      break;
    }
    case "client_secret_post": {
      assertNoClientPrivateKey("client_secret_post", clientPrivateKey);
      body.set("client_id", client2.client_id);
      body.set("client_secret", assertClientSecret(client2.client_secret));
      break;
    }
    case "private_key_jwt": {
      assertNoClientSecret("private_key_jwt", client2.client_secret);
      if (clientPrivateKey === void 0) {
        throw new TypeError('"options.clientPrivateKey" must be provided when "client.token_endpoint_auth_method" is "private_key_jwt"');
      }
      const { key, kid } = getKeyAndKid(clientPrivateKey);
      if (!isPrivateKey(key)) {
        throw new TypeError('"options.clientPrivateKey.key" must be a private CryptoKey');
      }
      body.set("client_id", client2.client_id);
      body.set("client_assertion_type", "urn:ietf:params:oauth:client-assertion-type:jwt-bearer");
      body.set("client_assertion", await privateKeyJwt(as2, client2, key, kid));
      break;
    }
    case "tls_client_auth":
    case "self_signed_tls_client_auth":
    case "none": {
      assertNoClientSecret(client2.token_endpoint_auth_method, client2.client_secret);
      assertNoClientPrivateKey(client2.token_endpoint_auth_method, clientPrivateKey);
      body.set("client_id", client2.client_id);
      break;
    }
    default:
      throw new UnsupportedOperationError("unsupported client token_endpoint_auth_method");
  }
}
async function jwt(header, claimsSet, key) {
  if (!key.usages.includes("sign")) {
    throw new TypeError('CryptoKey instances used for signing assertions must include "sign" in their "usages"');
  }
  const input = `${b64u(buf(JSON.stringify(header)))}.${b64u(buf(JSON.stringify(claimsSet)))}`;
  const signature = b64u(await crypto.subtle.sign(keyToSubtle(key), key, buf(input)));
  return `${input}.${signature}`;
}
async function dpopProofJwt(headers, options, url, htm, clockSkew2, accessToken) {
  const { privateKey, publicKey, nonce: nonce2 = dpopNonces.get(url.origin) } = options;
  if (!isPrivateKey(privateKey)) {
    throw new TypeError('"DPoP.privateKey" must be a private CryptoKey');
  }
  if (!isPublicKey(publicKey)) {
    throw new TypeError('"DPoP.publicKey" must be a public CryptoKey');
  }
  if (nonce2 !== void 0 && !validateString(nonce2)) {
    throw new TypeError('"DPoP.nonce" must be a non-empty string or undefined');
  }
  if (!publicKey.extractable) {
    throw new TypeError('"DPoP.publicKey.extractable" must be true');
  }
  const now2 = epochTime() + clockSkew2;
  const proof = await jwt({
    alg: keyToJws(privateKey),
    typ: "dpop+jwt",
    jwk: await publicJwk(publicKey)
  }, {
    iat: now2,
    jti: randomBytes(),
    htm,
    nonce: nonce2,
    htu: `${url.origin}${url.pathname}`,
    ath: accessToken ? b64u(await crypto.subtle.digest("SHA-256", buf(accessToken))) : void 0
  }, privateKey);
  headers.set("dpop", proof);
}
async function getSetPublicJwkCache(key) {
  const { kty, e: e2, n: n3, x: x4, y: y3, crv } = await crypto.subtle.exportKey("jwk", key);
  const jwk = { kty, e: e2, n: n3, x: x4, y: y3, crv };
  jwkCache.set(key, jwk);
  return jwk;
}
async function publicJwk(key) {
  jwkCache || (jwkCache = /* @__PURE__ */ new WeakMap());
  return jwkCache.get(key) || getSetPublicJwkCache(key);
}
function validateEndpoint(value, endpoint, options) {
  if (typeof value !== "string") {
    if (options?.[useMtlsAlias]) {
      throw new TypeError(`"as.mtls_endpoint_aliases.${endpoint}" must be a string`);
    }
    throw new TypeError(`"as.${endpoint}" must be a string`);
  }
  return new URL(value);
}
function resolveEndpoint(as2, endpoint, options) {
  if (options?.[useMtlsAlias] && as2.mtls_endpoint_aliases && endpoint in as2.mtls_endpoint_aliases) {
    return validateEndpoint(as2.mtls_endpoint_aliases[endpoint], endpoint, options);
  }
  return validateEndpoint(as2[endpoint], endpoint);
}
function isOAuth2Error(input) {
  const value = input;
  if (typeof value !== "object" || Array.isArray(value) || value === null) {
    return false;
  }
  return value.error !== void 0;
}
function unquote(value) {
  if (value.length >= 2 && value[0] === '"' && value[value.length - 1] === '"') {
    return value.slice(1, -1);
  }
  return value;
}
function wwwAuth(scheme, params) {
  const arr = params.split(SPLIT_REGEXP).slice(1);
  if (!arr.length) {
    return { scheme: scheme.toLowerCase(), parameters: {} };
  }
  arr[arr.length - 1] = arr[arr.length - 1].replace(/,$/, "");
  const parameters = {};
  for (let i3 = 1; i3 < arr.length; i3 += 2) {
    const idx = i3;
    if (arr[idx][0] === '"') {
      while (arr[idx].slice(-1) !== '"' && ++i3 < arr.length) {
        arr[idx] += arr[i3];
      }
    }
    const key = arr[idx - 1].replace(/^(?:, ?)|=$/g, "").toLowerCase();
    parameters[key] = unquote(arr[idx]);
  }
  return {
    scheme: scheme.toLowerCase(),
    parameters
  };
}
function parseWwwAuthenticateChallenges(response) {
  if (!looseInstanceOf(response, Response)) {
    throw new TypeError('"response" must be an instance of Response');
  }
  const header = response.headers.get("www-authenticate");
  if (header === null) {
    return void 0;
  }
  const result = [];
  for (const { 1: scheme, index } of header.matchAll(SCHEMES_REGEXP)) {
    result.push([scheme, index]);
  }
  if (!result.length) {
    return void 0;
  }
  const challenges = result.map(([scheme, indexOf], i3, others) => {
    const next = others[i3 + 1];
    let parameters;
    if (next) {
      parameters = header.slice(indexOf, next[1]);
    } else {
      parameters = header.slice(indexOf);
    }
    return wwwAuth(scheme, parameters);
  });
  return challenges;
}
async function protectedResourceRequest(accessToken, method, url, headers, body, options) {
  if (!validateString(accessToken)) {
    throw new TypeError('"accessToken" must be a non-empty string');
  }
  if (!(url instanceof URL)) {
    throw new TypeError('"url" must be an instance of URL');
  }
  headers = prepareHeaders(headers);
  if (options?.DPoP === void 0) {
    headers.set("authorization", `Bearer ${accessToken}`);
  } else {
    await dpopProofJwt(headers, options.DPoP, url, "GET", getClockSkew({ [clockSkew]: options?.[clockSkew] }), accessToken);
    headers.set("authorization", `DPoP ${accessToken}`);
  }
  return (options?.[customFetch] || fetch)(url.href, {
    body,
    headers: Object.fromEntries(headers.entries()),
    method,
    redirect: "manual",
    signal: options?.signal ? signal(options.signal) : null
  }).then(processDpopNonce);
}
async function userInfoRequest(as2, client2, accessToken, options) {
  assertAs(as2);
  assertClient(client2);
  const url = resolveEndpoint(as2, "userinfo_endpoint", options);
  const headers = prepareHeaders(options?.headers);
  if (client2.userinfo_signed_response_alg) {
    headers.set("accept", "application/jwt");
  } else {
    headers.set("accept", "application/json");
    headers.append("accept", "application/jwt");
  }
  return protectedResourceRequest(accessToken, "GET", url, headers, null, {
    ...options,
    [clockSkew]: getClockSkew(client2)
  });
}
async function authenticatedRequest(as2, client2, method, url, body, headers, options) {
  await clientAuthentication(as2, client2, body, headers, options?.clientPrivateKey);
  headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
  return (options?.[customFetch] || fetch)(url.href, {
    body,
    headers: Object.fromEntries(headers.entries()),
    method,
    redirect: "manual",
    signal: options?.signal ? signal(options.signal) : null
  }).then(processDpopNonce);
}
async function tokenEndpointRequest(as2, client2, grantType, parameters, options) {
  const url = resolveEndpoint(as2, "token_endpoint", options);
  parameters.set("grant_type", grantType);
  const headers = prepareHeaders(options?.headers);
  headers.set("accept", "application/json");
  if (options?.DPoP !== void 0) {
    await dpopProofJwt(headers, options.DPoP, url, "POST", getClockSkew(client2));
  }
  return authenticatedRequest(as2, client2, "POST", url, parameters, headers, options);
}
function getValidatedIdTokenClaims(ref) {
  if (!ref.id_token) {
    return void 0;
  }
  const claims = idTokenClaims.get(ref);
  if (!claims) {
    throw new TypeError('"ref" was already garbage collected or did not resolve from the proper sources');
  }
  return claims;
}
async function processGenericAccessTokenResponse(as2, client2, response, ignoreIdToken = false, ignoreRefreshToken = false) {
  assertAs(as2);
  assertClient(client2);
  if (!looseInstanceOf(response, Response)) {
    throw new TypeError('"response" must be an instance of Response');
  }
  if (response.status !== 200) {
    let err2;
    if (err2 = await handleOAuthBodyError(response)) {
      return err2;
    }
    throw new OPE('"response" is not a conform Token Endpoint response');
  }
  assertReadableResponse(response);
  let json;
  try {
    json = await response.json();
  } catch (cause) {
    throw new OPE('failed to parse "response" body as JSON', { cause });
  }
  if (!isJsonObject(json)) {
    throw new OPE('"response" body must be a top level object');
  }
  if (!validateString(json.access_token)) {
    throw new OPE('"response" body "access_token" property must be a non-empty string');
  }
  if (!validateString(json.token_type)) {
    throw new OPE('"response" body "token_type" property must be a non-empty string');
  }
  json.token_type = json.token_type.toLowerCase();
  if (json.token_type !== "dpop" && json.token_type !== "bearer") {
    throw new UnsupportedOperationError("unsupported `token_type` value");
  }
  if (json.expires_in !== void 0 && (typeof json.expires_in !== "number" || json.expires_in <= 0)) {
    throw new OPE('"response" body "expires_in" property must be a positive number');
  }
  if (!ignoreRefreshToken && json.refresh_token !== void 0 && !validateString(json.refresh_token)) {
    throw new OPE('"response" body "refresh_token" property must be a non-empty string');
  }
  if (json.scope !== void 0 && typeof json.scope !== "string") {
    throw new OPE('"response" body "scope" property must be a string');
  }
  if (!ignoreIdToken) {
    if (json.id_token !== void 0 && !validateString(json.id_token)) {
      throw new OPE('"response" body "id_token" property must be a non-empty string');
    }
    if (json.id_token) {
      const { claims } = await validateJwt(json.id_token, checkSigningAlgorithm.bind(void 0, client2.id_token_signed_response_alg, as2.id_token_signing_alg_values_supported), noSignatureCheck, getClockSkew(client2), getClockTolerance(client2)).then(validatePresence.bind(void 0, ["aud", "exp", "iat", "iss", "sub"])).then(validateIssuer.bind(void 0, as2.issuer)).then(validateAudience.bind(void 0, client2.client_id));
      if (Array.isArray(claims.aud) && claims.aud.length !== 1 && claims.azp !== client2.client_id) {
        throw new OPE('unexpected ID Token "azp" (authorized party) claim value');
      }
      if (client2.require_auth_time && typeof claims.auth_time !== "number") {
        throw new OPE('unexpected ID Token "auth_time" (authentication time) claim value');
      }
      idTokenClaims.set(json, claims);
    }
  }
  return json;
}
function validateAudience(expected, result) {
  if (Array.isArray(result.claims.aud)) {
    if (!result.claims.aud.includes(expected)) {
      throw new OPE('unexpected JWT "aud" (audience) claim value');
    }
  } else if (result.claims.aud !== expected) {
    throw new OPE('unexpected JWT "aud" (audience) claim value');
  }
  return result;
}
function validateIssuer(expected, result) {
  if (result.claims.iss !== expected) {
    throw new OPE('unexpected JWT "iss" (issuer) claim value');
  }
  return result;
}
function brand(searchParams) {
  branded.add(searchParams);
  return searchParams;
}
async function authorizationCodeGrantRequest(as2, client2, callbackParameters, redirectUri, codeVerifier, options) {
  assertAs(as2);
  assertClient(client2);
  if (!branded.has(callbackParameters)) {
    throw new TypeError('"callbackParameters" must be an instance of URLSearchParams obtained from "validateAuthResponse()", or "validateJwtAuthResponse()');
  }
  if (!validateString(redirectUri)) {
    throw new TypeError('"redirectUri" must be a non-empty string');
  }
  if (!validateString(codeVerifier)) {
    throw new TypeError('"codeVerifier" must be a non-empty string');
  }
  const code = getURLSearchParameter(callbackParameters, "code");
  if (!code) {
    throw new OPE('no authorization code in "callbackParameters"');
  }
  const parameters = new URLSearchParams(options?.additionalParameters);
  parameters.set("redirect_uri", redirectUri);
  parameters.set("code_verifier", codeVerifier);
  parameters.set("code", code);
  return tokenEndpointRequest(as2, client2, "authorization_code", parameters, options);
}
function validatePresence(required, result) {
  for (const claim of required) {
    if (result.claims[claim] === void 0) {
      throw new OPE(`JWT "${claim}" (${jwtClaimNames[claim]}) claim missing`);
    }
  }
  return result;
}
async function processAuthorizationCodeOpenIDResponse(as2, client2, response, expectedNonce, maxAge) {
  const result = await processGenericAccessTokenResponse(as2, client2, response);
  if (isOAuth2Error(result)) {
    return result;
  }
  if (!validateString(result.id_token)) {
    throw new OPE('"response" body "id_token" property must be a non-empty string');
  }
  maxAge ?? (maxAge = client2.default_max_age ?? skipAuthTimeCheck);
  const claims = getValidatedIdTokenClaims(result);
  if ((client2.require_auth_time || maxAge !== skipAuthTimeCheck) && claims.auth_time === void 0) {
    throw new OPE('ID Token "auth_time" (authentication time) claim missing');
  }
  if (maxAge !== skipAuthTimeCheck) {
    if (typeof maxAge !== "number" || maxAge < 0) {
      throw new TypeError('"options.max_age" must be a non-negative number');
    }
    const now2 = epochTime() + getClockSkew(client2);
    const tolerance = getClockTolerance(client2);
    if (claims.auth_time + maxAge < now2 - tolerance) {
      throw new OPE("too much time has elapsed since the last End-User authentication");
    }
  }
  switch (expectedNonce) {
    case void 0:
    case expectNoNonce:
      if (claims.nonce !== void 0) {
        throw new OPE('unexpected ID Token "nonce" claim value');
      }
      break;
    default:
      if (!validateString(expectedNonce)) {
        throw new TypeError('"expectedNonce" must be a non-empty string');
      }
      if (claims.nonce === void 0) {
        throw new OPE('ID Token "nonce" claim missing');
      }
      if (claims.nonce !== expectedNonce) {
        throw new OPE('unexpected ID Token "nonce" claim value');
      }
  }
  return result;
}
async function processAuthorizationCodeOAuth2Response(as2, client2, response) {
  const result = await processGenericAccessTokenResponse(as2, client2, response, true);
  if (isOAuth2Error(result)) {
    return result;
  }
  if (result.id_token !== void 0) {
    if (typeof result.id_token === "string" && result.id_token.length) {
      throw new OPE("Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing");
    }
    delete result.id_token;
  }
  return result;
}
function assertReadableResponse(response) {
  if (response.bodyUsed) {
    throw new TypeError('"response" body has been used already');
  }
}
async function handleOAuthBodyError(response) {
  if (response.status > 399 && response.status < 500) {
    assertReadableResponse(response);
    try {
      const json = await response.json();
      if (isJsonObject(json) && typeof json.error === "string" && json.error.length) {
        if (json.error_description !== void 0 && typeof json.error_description !== "string") {
          delete json.error_description;
        }
        if (json.error_uri !== void 0 && typeof json.error_uri !== "string") {
          delete json.error_uri;
        }
        if (json.algs !== void 0 && typeof json.algs !== "string") {
          delete json.algs;
        }
        if (json.scope !== void 0 && typeof json.scope !== "string") {
          delete json.scope;
        }
        return json;
      }
    } catch {
    }
  }
  return void 0;
}
function checkRsaKeyAlgorithm(algorithm) {
  if (typeof algorithm.modulusLength !== "number" || algorithm.modulusLength < 2048) {
    throw new OPE(`${algorithm.name} modulusLength must be at least 2048 bits`);
  }
}
function ecdsaHashName(namedCurve) {
  switch (namedCurve) {
    case "P-256":
      return "SHA-256";
    case "P-384":
      return "SHA-384";
    case "P-521":
      return "SHA-512";
    default:
      throw new UnsupportedOperationError();
  }
}
function keyToSubtle(key) {
  switch (key.algorithm.name) {
    case "ECDSA":
      return {
        name: key.algorithm.name,
        hash: ecdsaHashName(key.algorithm.namedCurve)
      };
    case "RSA-PSS": {
      checkRsaKeyAlgorithm(key.algorithm);
      switch (key.algorithm.hash.name) {
        case "SHA-256":
        case "SHA-384":
        case "SHA-512":
          return {
            name: key.algorithm.name,
            saltLength: parseInt(key.algorithm.hash.name.slice(-3), 10) >> 3
          };
        default:
          throw new UnsupportedOperationError();
      }
    }
    case "RSASSA-PKCS1-v1_5":
      checkRsaKeyAlgorithm(key.algorithm);
      return key.algorithm.name;
    case "Ed448":
    case "Ed25519":
      return key.algorithm.name;
  }
  throw new UnsupportedOperationError();
}
async function validateJwt(jws, checkAlg, getKey, clockSkew2, clockTolerance2) {
  const { 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split(".");
  if (length === 5) {
    throw new UnsupportedOperationError("JWE structure JWTs are not supported");
  }
  if (length !== 3) {
    throw new OPE("Invalid JWT");
  }
  let header;
  try {
    header = JSON.parse(buf(b64u(protectedHeader)));
  } catch (cause) {
    throw new OPE("failed to parse JWT Header body as base64url encoded JSON", { cause });
  }
  if (!isJsonObject(header)) {
    throw new OPE("JWT Header must be a top level object");
  }
  checkAlg(header);
  if (header.crit !== void 0) {
    throw new OPE('unexpected JWT "crit" header parameter');
  }
  const signature = b64u(encodedSignature);
  let key;
  if (getKey !== noSignatureCheck) {
    key = await getKey(header);
    const input = `${protectedHeader}.${payload}`;
    const verified = await crypto.subtle.verify(keyToSubtle(key), key, signature, buf(input));
    if (!verified) {
      throw new OPE("JWT signature verification failed");
    }
  }
  let claims;
  try {
    claims = JSON.parse(buf(b64u(payload)));
  } catch (cause) {
    throw new OPE("failed to parse JWT Payload body as base64url encoded JSON", { cause });
  }
  if (!isJsonObject(claims)) {
    throw new OPE("JWT Payload must be a top level object");
  }
  const now2 = epochTime() + clockSkew2;
  if (claims.exp !== void 0) {
    if (typeof claims.exp !== "number") {
      throw new OPE('unexpected JWT "exp" (expiration time) claim type');
    }
    if (claims.exp <= now2 - clockTolerance2) {
      throw new OPE('unexpected JWT "exp" (expiration time) claim value, timestamp is <= now()');
    }
  }
  if (claims.iat !== void 0) {
    if (typeof claims.iat !== "number") {
      throw new OPE('unexpected JWT "iat" (issued at) claim type');
    }
  }
  if (claims.iss !== void 0) {
    if (typeof claims.iss !== "string") {
      throw new OPE('unexpected JWT "iss" (issuer) claim type');
    }
  }
  if (claims.nbf !== void 0) {
    if (typeof claims.nbf !== "number") {
      throw new OPE('unexpected JWT "nbf" (not before) claim type');
    }
    if (claims.nbf > now2 + clockTolerance2) {
      throw new OPE('unexpected JWT "nbf" (not before) claim value, timestamp is > now()');
    }
  }
  if (claims.aud !== void 0) {
    if (typeof claims.aud !== "string" && !Array.isArray(claims.aud)) {
      throw new OPE('unexpected JWT "aud" (audience) claim type');
    }
  }
  return { header, claims, signature, key };
}
function checkSigningAlgorithm(client2, issuer, header) {
  if (client2 !== void 0) {
    if (header.alg !== client2) {
      throw new OPE('unexpected JWT "alg" header parameter');
    }
    return;
  }
  if (Array.isArray(issuer)) {
    if (!issuer.includes(header.alg)) {
      throw new OPE('unexpected JWT "alg" header parameter');
    }
    return;
  }
  if (header.alg !== "RS256") {
    throw new OPE('unexpected JWT "alg" header parameter');
  }
}
function getURLSearchParameter(parameters, name) {
  const { 0: value, length } = parameters.getAll(name);
  if (length > 1) {
    throw new OPE(`"${name}" parameter must be provided only once`);
  }
  return value;
}
function validateAuthResponse(as2, client2, parameters, expectedState) {
  assertAs(as2);
  assertClient(client2);
  if (parameters instanceof URL) {
    parameters = parameters.searchParams;
  }
  if (!(parameters instanceof URLSearchParams)) {
    throw new TypeError('"parameters" must be an instance of URLSearchParams, or URL');
  }
  if (getURLSearchParameter(parameters, "response")) {
    throw new OPE('"parameters" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');
  }
  const iss = getURLSearchParameter(parameters, "iss");
  const state2 = getURLSearchParameter(parameters, "state");
  if (!iss && as2.authorization_response_iss_parameter_supported) {
    throw new OPE('response parameter "iss" (issuer) missing');
  }
  if (iss && iss !== as2.issuer) {
    throw new OPE('unexpected "iss" (issuer) response parameter value');
  }
  switch (expectedState) {
    case void 0:
    case expectNoState:
      if (state2 !== void 0) {
        throw new OPE('unexpected "state" response parameter encountered');
      }
      break;
    case skipStateCheck:
      break;
    default:
      if (!validateString(expectedState)) {
        throw new OPE('"expectedState" must be a non-empty string');
      }
      if (state2 === void 0) {
        throw new OPE('response parameter "state" missing');
      }
      if (state2 !== expectedState) {
        throw new OPE('unexpected "state" response parameter value');
      }
  }
  const error2 = getURLSearchParameter(parameters, "error");
  if (error2) {
    return {
      error: error2,
      error_description: getURLSearchParameter(parameters, "error_description"),
      error_uri: getURLSearchParameter(parameters, "error_uri")
    };
  }
  const id_token = getURLSearchParameter(parameters, "id_token");
  const token = getURLSearchParameter(parameters, "token");
  if (id_token !== void 0 || token !== void 0) {
    throw new UnsupportedOperationError("implicit and hybrid flows are not supported");
  }
  return brand(new URLSearchParams(parameters));
}
var USER_AGENT2, clockSkew, clockTolerance, customFetch, useMtlsAlias, encoder3, decoder4, CHUNK_SIZE2, LRU, UnsupportedOperationError, OperationProcessingError, OPE, dpopNonces, jwkCache, SPLIT_REGEXP, SCHEMES_REGEXP, skipSubjectCheck, idTokenClaims, branded, jwtClaimNames, expectNoNonce, skipAuthTimeCheck, noSignatureCheck, skipStateCheck, expectNoState;
var init_build = __esm({
  "../../node_modules/oauth4webapi/build/index.js"() {
    if (typeof navigator === "undefined" || !navigator.userAgent?.startsWith?.("Mozilla/5.0 ")) {
      const NAME = "oauth4webapi";
      const VERSION = "v2.10.3";
      USER_AGENT2 = `${NAME}/${VERSION}`;
    }
    clockSkew = Symbol();
    clockTolerance = Symbol();
    customFetch = Symbol();
    useMtlsAlias = Symbol();
    encoder3 = new TextEncoder();
    decoder4 = new TextDecoder();
    CHUNK_SIZE2 = 32768;
    LRU = class {
      constructor(maxSize) {
        this.cache = /* @__PURE__ */ new Map();
        this._cache = /* @__PURE__ */ new Map();
        this.maxSize = maxSize;
      }
      get(key) {
        let v4 = this.cache.get(key);
        if (v4) {
          return v4;
        }
        if (v4 = this._cache.get(key)) {
          this.update(key, v4);
          return v4;
        }
        return void 0;
      }
      has(key) {
        return this.cache.has(key) || this._cache.has(key);
      }
      set(key, value) {
        if (this.cache.has(key)) {
          this.cache.set(key, value);
        } else {
          this.update(key, value);
        }
        return this;
      }
      delete(key) {
        if (this.cache.has(key)) {
          return this.cache.delete(key);
        }
        if (this._cache.has(key)) {
          return this._cache.delete(key);
        }
        return false;
      }
      update(key, value) {
        this.cache.set(key, value);
        if (this.cache.size >= this.maxSize) {
          this._cache = this.cache;
          this.cache = /* @__PURE__ */ new Map();
        }
      }
    };
    UnsupportedOperationError = class extends Error {
      constructor(message2) {
        super(message2 ?? "operation not supported");
        this.name = this.constructor.name;
        Error.captureStackTrace?.(this, this.constructor);
      }
    };
    OperationProcessingError = class extends Error {
      constructor(message2, options) {
        super(message2, options);
        this.name = this.constructor.name;
        Error.captureStackTrace?.(this, this.constructor);
      }
    };
    OPE = OperationProcessingError;
    dpopNonces = new LRU(100);
    SPLIT_REGEXP = /((?:,|, )?[0-9a-zA-Z!#$%&'*+-.^_`|~]+=)/;
    SCHEMES_REGEXP = /(?:^|, ?)([0-9a-zA-Z!#$%&'*+\-.^_`|~]+)(?=$|[ ,])/g;
    skipSubjectCheck = Symbol();
    idTokenClaims = /* @__PURE__ */ new WeakMap();
    branded = /* @__PURE__ */ new WeakSet();
    jwtClaimNames = {
      aud: "audience",
      c_hash: "code hash",
      client_id: "client id",
      exp: "expiration time",
      iat: "issued at",
      iss: "issuer",
      jti: "jwt id",
      nonce: "nonce",
      s_hash: "state hash",
      sub: "subject",
      ath: "access token hash",
      htm: "http method",
      htu: "http uri",
      cnf: "confirmation"
    };
    expectNoNonce = Symbol();
    skipAuthTimeCheck = Symbol();
    noSignatureCheck = Symbol();
    skipStateCheck = Symbol();
    expectNoState = Symbol();
  }
});

// ../../node_modules/@auth/core/lib/actions/callback/oauth/checks.js
async function signCookie(type, value, maxAge, options, data) {
  const { cookies, logger: logger2 } = options;
  logger2.debug(`CREATE_${type.toUpperCase()}`, { value, maxAge });
  const expires = /* @__PURE__ */ new Date();
  expires.setTime(expires.getTime() + maxAge * 1e3);
  const token = { value };
  if (type === "state" && data)
    token.data = data;
  const name = cookies[type].name;
  return {
    name,
    value: await encode3({ ...options.jwt, maxAge, token, salt: name }),
    options: { ...cookies[type].options, expires }
  };
}
function decodeState(value) {
  try {
    const decoder5 = new TextDecoder();
    return JSON.parse(decoder5.decode(base64url_exports2.decode(value)));
  } catch {
  }
}
function handleState(query, provider, isOnRedirectProxy) {
  let randomState;
  let proxyRedirect;
  if (provider.redirectProxyUrl && !query?.state) {
    throw new InvalidCheck("Missing state in query, but required for redirect proxy");
  }
  const state2 = decodeState(query?.state);
  randomState = state2?.random;
  if (isOnRedirectProxy) {
    if (!state2?.origin)
      return { randomState };
    proxyRedirect = `${state2.origin}?${new URLSearchParams(query)}`;
  }
  return { randomState, proxyRedirect };
}
var PKCE_MAX_AGE, pkce, STATE_MAX_AGE, state, NONCE_MAX_AGE, nonce;
var init_checks = __esm({
  "../../node_modules/@auth/core/lib/actions/callback/oauth/checks.js"() {
    init_browser();
    init_build();
    init_errors();
    init_jwt();
    PKCE_MAX_AGE = 60 * 15;
    pkce = {
      async create(options) {
        const code_verifier = generateRandomCodeVerifier();
        const value = await calculatePKCECodeChallenge(code_verifier);
        const maxAge = PKCE_MAX_AGE;
        const cookie = await signCookie("pkceCodeVerifier", code_verifier, maxAge, options);
        return { cookie, value };
      },
      /**
       * Returns code_verifier if the provider is configured to use PKCE,
       * and clears the container cookie afterwards.
       * An error is thrown if the code_verifier is missing or invalid.
       * @see https://www.rfc-editor.org/rfc/rfc7636
       * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#pkce
       */
      async use(cookies, resCookies, options) {
        const { provider } = options;
        if (!provider?.checks?.includes("pkce"))
          return;
        const codeVerifier = cookies?.[options.cookies.pkceCodeVerifier.name];
        if (!codeVerifier)
          throw new InvalidCheck("PKCE code_verifier cookie was missing.");
        const value = await decode3({
          ...options.jwt,
          token: codeVerifier,
          salt: options.cookies.pkceCodeVerifier.name
        });
        if (!value?.value)
          throw new InvalidCheck("PKCE code_verifier value could not be parsed.");
        resCookies.push({
          name: options.cookies.pkceCodeVerifier.name,
          value: "",
          options: { ...options.cookies.pkceCodeVerifier.options, maxAge: 0 }
        });
        return value.value;
      }
    };
    STATE_MAX_AGE = 60 * 15;
    state = {
      async create(options, data) {
        const { provider } = options;
        if (!provider.checks.includes("state")) {
          if (data) {
            throw new InvalidCheck("State data was provided but the provider is not configured to use state.");
          }
          return;
        }
        const encodedState = base64url_exports2.encode(JSON.stringify({ ...data, random: generateRandomState() }));
        const maxAge = STATE_MAX_AGE;
        const cookie = await signCookie("state", encodedState, maxAge, options, data);
        return { cookie, value: encodedState };
      },
      /**
       * Returns state if the provider is configured to use state,
       * and clears the container cookie afterwards.
       * An error is thrown if the state is missing or invalid.
       * @see https://www.rfc-editor.org/rfc/rfc6749#section-10.12
       * @see https://www.rfc-editor.org/rfc/rfc6749#section-4.1.1
       */
      async use(cookies, resCookies, options, paramRandom) {
        const { provider } = options;
        if (!provider.checks.includes("state"))
          return;
        const state2 = cookies?.[options.cookies.state.name];
        if (!state2)
          throw new InvalidCheck("State cookie was missing.");
        const encodedState = await decode3({
          ...options.jwt,
          token: state2,
          salt: options.cookies.state.name
        });
        if (!encodedState?.value)
          throw new InvalidCheck("State (cookie) value could not be parsed.");
        const decodedState = decodeState(encodedState.value);
        if (!decodedState)
          throw new InvalidCheck("State (encoded) value could not be parsed.");
        if (decodedState.random !== paramRandom)
          throw new InvalidCheck(`Random state values did not match. Expected: ${decodedState.random}. Got: ${paramRandom}`);
        resCookies.push({
          name: options.cookies.state.name,
          value: "",
          options: { ...options.cookies.state.options, maxAge: 0 }
        });
        return encodedState.value;
      }
    };
    NONCE_MAX_AGE = 60 * 15;
    nonce = {
      async create(options) {
        if (!options.provider.checks.includes("nonce"))
          return;
        const value = generateRandomNonce();
        const maxAge = NONCE_MAX_AGE;
        const cookie = await signCookie("nonce", value, maxAge, options);
        return { cookie, value };
      },
      /**
       * Returns nonce if the provider is configured to use nonce,
       * and clears the container cookie afterwards.
       * An error is thrown if the nonce is missing or invalid.
       * @see https://openid.net/specs/openid-connect-core-1_0.html#NonceNotes
       * @see https://danielfett.de/2020/05/16/pkce-vs-nonce-equivalent-or-not/#nonce
       */
      async use(cookies, resCookies, options) {
        const { provider } = options;
        if (!provider?.checks?.includes("nonce"))
          return;
        const nonce2 = cookies?.[options.cookies.nonce.name];
        if (!nonce2)
          throw new InvalidCheck("Nonce cookie was missing.");
        const value = await decode3({
          ...options.jwt,
          token: nonce2,
          salt: options.cookies.nonce.name
        });
        if (!value?.value)
          throw new InvalidCheck("Nonce value could not be parsed.");
        resCookies.push({
          name: options.cookies.nonce.name,
          value: "",
          options: { ...options.cookies.nonce.options, maxAge: 0 }
        });
        return value.value;
      }
    };
  }
});

// ../../node_modules/@auth/core/lib/actions/callback/oauth/callback.js
async function handleOAuth(query, cookies, options, randomState) {
  const { logger: logger2, provider } = options;
  let as2;
  const { token, userinfo } = provider;
  if ((!token?.url || token.url.host === "authjs.dev") && (!userinfo?.url || userinfo.url.host === "authjs.dev")) {
    const issuer = new URL(provider.issuer);
    const discoveryResponse = await discoveryRequest(issuer);
    const discoveredAs = await processDiscoveryResponse(issuer, discoveryResponse);
    if (!discoveredAs.token_endpoint)
      throw new TypeError("TODO: Authorization server did not provide a token endpoint.");
    if (!discoveredAs.userinfo_endpoint)
      throw new TypeError("TODO: Authorization server did not provide a userinfo endpoint.");
    as2 = discoveredAs;
  } else {
    as2 = {
      issuer: provider.issuer ?? "https://authjs.dev",
      token_endpoint: token?.url.toString(),
      userinfo_endpoint: userinfo?.url.toString()
    };
  }
  const client2 = {
    client_id: provider.clientId,
    client_secret: provider.clientSecret,
    ...provider.client
  };
  const resCookies = [];
  const state2 = await state.use(cookies, resCookies, options, randomState);
  const codeGrantParams = validateAuthResponse(as2, client2, new URLSearchParams(query), provider.checks.includes("state") ? state2 : skipStateCheck);
  if (isOAuth2Error(codeGrantParams)) {
    const cause = { providerId: provider.id, ...codeGrantParams };
    logger2.debug("OAuthCallbackError", cause);
    throw new OAuthCallbackError("OAuth Provider returned an error", cause);
  }
  const codeVerifier = await pkce.use(cookies, resCookies, options);
  let redirect_uri = provider.callbackUrl;
  if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {
    redirect_uri = provider.redirectProxyUrl;
  }
  let codeGrantResponse = await authorizationCodeGrantRequest(
    as2,
    client2,
    codeGrantParams,
    redirect_uri,
    codeVerifier ?? "auth"
    // TODO: review fallback code verifier
  );
  if (provider.token?.conform) {
    codeGrantResponse = await provider.token.conform(codeGrantResponse.clone()) ?? codeGrantResponse;
  }
  let challenges;
  if (challenges = parseWwwAuthenticateChallenges(codeGrantResponse)) {
    for (const challenge of challenges) {
      console.log("challenge", challenge);
    }
    throw new Error("TODO: Handle www-authenticate challenges as needed");
  }
  let profile = {};
  let tokens;
  if (provider.type === "oidc") {
    const nonce2 = await nonce.use(cookies, resCookies, options);
    const result = await processAuthorizationCodeOpenIDResponse(as2, client2, codeGrantResponse, nonce2 ?? expectNoNonce);
    if (isOAuth2Error(result)) {
      console.log("error", result);
      throw new Error("TODO: Handle OIDC response body error");
    }
    profile = getValidatedIdTokenClaims(result);
    tokens = result;
  } else {
    tokens = await processAuthorizationCodeOAuth2Response(as2, client2, codeGrantResponse);
    if (isOAuth2Error(tokens)) {
      console.log("error", tokens);
      throw new Error("TODO: Handle OAuth 2.0 response body error");
    }
    if (userinfo?.request) {
      const _profile = await userinfo.request({ tokens, provider });
      if (_profile instanceof Object)
        profile = _profile;
    } else if (userinfo?.url) {
      const userinfoResponse = await userInfoRequest(as2, client2, tokens.access_token);
      profile = await userinfoResponse.json();
    } else {
      throw new TypeError("No userinfo endpoint configured");
    }
  }
  if (tokens.expires_in) {
    tokens.expires_at = Math.floor(Date.now() / 1e3) + Number(tokens.expires_in);
  }
  const profileResult = await getUserAndAccount(profile, provider, tokens, logger2);
  return { ...profileResult, profile, cookies: resCookies };
}
async function getUserAndAccount(OAuthProfile, provider, tokens, logger2) {
  try {
    const user = await provider.profile(OAuthProfile, tokens);
    user.email = user.email?.toLowerCase();
    if (!user.id) {
      throw new TypeError(`User id is missing in ${provider.name} OAuth profile response`);
    }
    return {
      user,
      account: {
        ...tokens,
        provider: provider.id,
        type: provider.type,
        providerAccountId: user.id.toString()
      }
    };
  } catch (e2) {
    logger2.debug("getProfile error details", OAuthProfile);
    logger2.error(new OAuthProfileParseError(e2, { provider: provider.id }));
  }
}
var init_callback = __esm({
  "../../node_modules/@auth/core/lib/actions/callback/oauth/callback.js"() {
    init_checks();
    init_build();
    init_errors();
  }
});

// ../../node_modules/@auth/core/lib/actions/callback/index.js
async function callback(request, options, sessionStore, cookies) {
  if (!options.provider)
    throw new InvalidProvider("Callback route called without provider");
  const { query, body, method, headers } = request;
  const { provider, adapter, url, callbackUrl, pages, jwt: jwt2, events, callbacks, session: { strategy: sessionStrategy, maxAge: sessionMaxAge }, logger: logger2 } = options;
  const useJwtSession = sessionStrategy === "jwt";
  try {
    if (provider.type === "oauth" || provider.type === "oidc") {
      const { proxyRedirect, randomState } = handleState(query, provider, options.isOnRedirectProxy);
      if (proxyRedirect) {
        logger2.debug("proxy redirect", { proxyRedirect, randomState });
        return { redirect: proxyRedirect };
      }
      const authorizationResult = await handleOAuth(query, request.cookies, options, randomState);
      if (authorizationResult.cookies.length) {
        cookies.push(...authorizationResult.cookies);
      }
      logger2.debug("authorization result", authorizationResult);
      const { user: userFromProvider, account, profile: OAuthProfile } = authorizationResult;
      if (!userFromProvider || !account || !OAuthProfile) {
        return { redirect: `${url}/signin`, cookies };
      }
      let userByAccount;
      if (adapter) {
        const { getUserByAccount } = adapter;
        userByAccount = await getUserByAccount({
          providerAccountId: account.providerAccountId,
          provider: provider.id
        });
      }
      await handleAuthorized({
        user: userByAccount ?? userFromProvider,
        account,
        profile: OAuthProfile
      }, options.callbacks.signIn);
      const { user, session: session2, isNewUser } = await handleLoginOrRegister(sessionStore.value, userFromProvider, account, options);
      if (useJwtSession) {
        const defaultToken = {
          name: user.name,
          email: user.email,
          picture: user.image,
          sub: user.id?.toString()
        };
        const token = await callbacks.jwt({
          token: defaultToken,
          user,
          account,
          profile: OAuthProfile,
          isNewUser,
          trigger: isNewUser ? "signUp" : "signIn"
        });
        if (token === null) {
          cookies.push(...sessionStore.clean());
        } else {
          const salt = options.cookies.sessionToken.name;
          const newToken = await jwt2.encode({ ...jwt2, token, salt });
          const cookieExpires = /* @__PURE__ */ new Date();
          cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1e3);
          const sessionCookies = sessionStore.chunk(newToken, {
            expires: cookieExpires
          });
          cookies.push(...sessionCookies);
        }
      } else {
        cookies.push({
          name: options.cookies.sessionToken.name,
          value: session2.sessionToken,
          options: {
            ...options.cookies.sessionToken.options,
            expires: session2.expires
          }
        });
      }
      await events.signIn?.({ user, account, profile: OAuthProfile, isNewUser });
      if (isNewUser && pages.newUser) {
        return {
          redirect: `${pages.newUser}${pages.newUser.includes("?") ? "&" : "?"}${new URLSearchParams({ callbackUrl })}`,
          cookies
        };
      }
      return { redirect: callbackUrl, cookies };
    } else if (provider.type === "email") {
      const token = query?.token;
      const identifier = query?.email;
      if (!token || !identifier) {
        const e2 = new TypeError("Missing token or email. The sign-in URL was manually opened without token/identifier or the link was not sent correctly in the email.", { cause: { hasToken: !!token, hasEmail: !!identifier } });
        e2.name = "Configuration";
        throw e2;
      }
      const secret = provider.secret ?? options.secret;
      const invite = await adapter.useVerificationToken({
        identifier,
        token: await createHash(`${token}${secret}`)
      });
      const hasInvite = !!invite;
      const expired = invite ? invite.expires.valueOf() < Date.now() : void 0;
      const invalidInvite = !hasInvite || expired;
      if (invalidInvite)
        throw new Verification({ hasInvite, expired });
      const user = await adapter.getUserByEmail(identifier) ?? {
        id: identifier,
        email: identifier,
        emailVerified: null
      };
      const account = {
        providerAccountId: user.email,
        userId: user.id,
        type: "email",
        provider: provider.id
      };
      await handleAuthorized({ user, account }, options.callbacks.signIn);
      const { user: loggedInUser, session: session2, isNewUser } = await handleLoginOrRegister(sessionStore.value, user, account, options);
      if (useJwtSession) {
        const defaultToken = {
          name: loggedInUser.name,
          email: loggedInUser.email,
          picture: loggedInUser.image,
          sub: loggedInUser.id?.toString()
        };
        const token2 = await callbacks.jwt({
          token: defaultToken,
          user: loggedInUser,
          account,
          isNewUser,
          trigger: isNewUser ? "signUp" : "signIn"
        });
        if (token2 === null) {
          cookies.push(...sessionStore.clean());
        } else {
          const salt = options.cookies.sessionToken.name;
          const newToken = await jwt2.encode({ ...jwt2, token: token2, salt });
          const cookieExpires = /* @__PURE__ */ new Date();
          cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1e3);
          const sessionCookies = sessionStore.chunk(newToken, {
            expires: cookieExpires
          });
          cookies.push(...sessionCookies);
        }
      } else {
        cookies.push({
          name: options.cookies.sessionToken.name,
          value: session2.sessionToken,
          options: {
            ...options.cookies.sessionToken.options,
            expires: session2.expires
          }
        });
      }
      await events.signIn?.({ user: loggedInUser, account, isNewUser });
      if (isNewUser && pages.newUser) {
        return {
          redirect: `${pages.newUser}${pages.newUser.includes("?") ? "&" : "?"}${new URLSearchParams({ callbackUrl })}`,
          cookies
        };
      }
      return { redirect: callbackUrl, cookies };
    } else if (provider.type === "credentials" && method === "POST") {
      const credentials = body ?? {};
      Object.entries(query ?? {}).forEach(([k6, v4]) => url.searchParams.set(k6, v4));
      const user = await provider.authorize(
        credentials,
        // prettier-ignore
        new Request(url, { headers, method, body: JSON.stringify(body) })
      );
      if (!user)
        throw new CredentialsSignin();
      const account = {
        providerAccountId: user.id,
        type: "credentials",
        provider: provider.id
      };
      await handleAuthorized({ user, account, credentials }, options.callbacks.signIn);
      const defaultToken = {
        name: user.name,
        email: user.email,
        picture: user.image,
        sub: user.id?.toString()
      };
      const token = await callbacks.jwt({
        token: defaultToken,
        user,
        account,
        isNewUser: false,
        trigger: "signIn"
      });
      if (token === null) {
        cookies.push(...sessionStore.clean());
      } else {
        const salt = options.cookies.sessionToken.name;
        const newToken = await jwt2.encode({ ...jwt2, token, salt });
        const cookieExpires = /* @__PURE__ */ new Date();
        cookieExpires.setTime(cookieExpires.getTime() + sessionMaxAge * 1e3);
        const sessionCookies = sessionStore.chunk(newToken, {
          expires: cookieExpires
        });
        cookies.push(...sessionCookies);
      }
      await events.signIn?.({ user, account });
      return { redirect: callbackUrl, cookies };
    }
    throw new InvalidProvider(`Callback for provider type (${provider.type}) is not supported`);
  } catch (e2) {
    if (e2 instanceof AuthError)
      throw e2;
    const error2 = new CallbackRouteError(e2, { provider: provider.id });
    logger2.debug("callback route error details", { method, query, body });
    throw error2;
  }
}
async function handleAuthorized(params, signIn2) {
  try {
    const authorized = await signIn2(params);
    if (!authorized)
      throw new AuthorizedCallbackError("AccessDenied");
  } catch (e2) {
    if (e2 instanceof AuthError)
      throw e2;
    throw new AuthorizedCallbackError(e2);
  }
}
var init_callback2 = __esm({
  "../../node_modules/@auth/core/lib/actions/callback/index.js"() {
    init_errors();
    init_handle_login();
    init_callback();
    init_checks();
    init_web2();
  }
});

// ../../node_modules/@auth/core/lib/actions/session.js
async function session(options, sessionStore, cookies, isUpdate, newSession) {
  const { adapter, jwt: jwt2, events, callbacks, logger: logger2, session: { strategy: sessionStrategy, maxAge: sessionMaxAge } } = options;
  const response = {
    body: null,
    headers: { "Content-Type": "application/json" },
    cookies
  };
  const sessionToken = sessionStore.value;
  if (!sessionToken)
    return response;
  if (sessionStrategy === "jwt") {
    try {
      const salt = options.cookies.sessionToken.name;
      const payload = await jwt2.decode({ ...jwt2, token: sessionToken, salt });
      if (!payload)
        throw new Error("Invalid JWT");
      const token = await callbacks.jwt({
        token: payload,
        ...isUpdate && { trigger: "update" },
        session: newSession
      });
      const newExpires = fromDate(sessionMaxAge);
      if (token !== null) {
        const session2 = {
          user: { name: token.name, email: token.email, image: token.picture },
          expires: newExpires.toISOString()
        };
        const newSession2 = await callbacks.session({ session: session2, token });
        response.body = newSession2;
        const newToken = await jwt2.encode({ ...jwt2, token, salt });
        const sessionCookies = sessionStore.chunk(newToken, {
          expires: newExpires
        });
        response.cookies?.push(...sessionCookies);
        await events.session?.({ session: newSession2, token });
      } else {
        response.cookies?.push(...sessionStore.clean());
      }
    } catch (e2) {
      logger2.error(new JWTSessionError(e2));
      response.cookies?.push(...sessionStore.clean());
    }
    return response;
  }
  try {
    const { getSessionAndUser, deleteSession, updateSession } = adapter;
    let userAndSession = await getSessionAndUser(sessionToken);
    if (userAndSession && userAndSession.session.expires.valueOf() < Date.now()) {
      await deleteSession(sessionToken);
      userAndSession = null;
    }
    if (userAndSession) {
      const { user, session: session2 } = userAndSession;
      const sessionUpdateAge = options.session.updateAge;
      const sessionIsDueToBeUpdatedDate = session2.expires.valueOf() - sessionMaxAge * 1e3 + sessionUpdateAge * 1e3;
      const newExpires = fromDate(sessionMaxAge);
      if (sessionIsDueToBeUpdatedDate <= Date.now()) {
        await updateSession({
          sessionToken,
          expires: newExpires
        });
      }
      const sessionPayload = await callbacks.session({
        // By default, only exposes a limited subset of information to the client
        // as needed for presentation purposes (e.g. "you are logged in as...").
        session: {
          // @ts-expect-error missing `id`.
          user: { name: user.name, email: user.email, image: user.image },
          expires: session2.expires.toISOString()
        },
        user,
        newSession,
        ...isUpdate ? { trigger: "update" } : {}
      });
      response.body = sessionPayload;
      response.cookies?.push({
        name: options.cookies.sessionToken.name,
        value: sessionToken,
        options: {
          ...options.cookies.sessionToken.options,
          expires: newExpires
        }
      });
      await events.session?.({ session: sessionPayload });
    } else if (sessionToken) {
      response.cookies?.push(...sessionStore.clean());
    }
  } catch (e2) {
    logger2.error(new SessionTokenError(e2));
  }
  return response;
}
var init_session = __esm({
  "../../node_modules/@auth/core/lib/actions/session.js"() {
    init_errors();
    init_date();
  }
});

// ../../node_modules/@auth/core/lib/actions/signin/authorization-url.js
async function getAuthorizationUrl(query, options) {
  const { logger: logger2, provider } = options;
  let url = provider.authorization?.url;
  let as2;
  if (!url || url.host === "authjs.dev") {
    const issuer = new URL(provider.issuer);
    const discoveryResponse = await discoveryRequest(issuer);
    const as3 = await processDiscoveryResponse(issuer, discoveryResponse);
    if (!as3.authorization_endpoint) {
      throw new TypeError("Authorization server did not provide an authorization endpoint.");
    }
    url = new URL(as3.authorization_endpoint);
  }
  const authParams = url.searchParams;
  let redirect_uri = provider.callbackUrl;
  let data;
  if (!options.isOnRedirectProxy && provider.redirectProxyUrl) {
    redirect_uri = provider.redirectProxyUrl;
    data = { origin: provider.callbackUrl };
    logger2.debug("using redirect proxy", { redirect_uri, data });
  }
  const params = Object.assign({
    response_type: "code",
    // clientId can technically be undefined, should we check this in assert.ts or rely on the Authorization Server to do it?
    client_id: provider.clientId,
    redirect_uri,
    // @ts-expect-error TODO:
    ...provider.authorization?.params
  }, Object.fromEntries(provider.authorization?.url.searchParams ?? []), query);
  for (const k6 in params)
    authParams.set(k6, params[k6]);
  const cookies = [];
  const state2 = await state.create(options, data);
  if (state2) {
    authParams.set("state", state2.value);
    cookies.push(state2.cookie);
  }
  if (provider.checks?.includes("pkce")) {
    if (as2 && !as2.code_challenge_methods_supported?.includes("S256")) {
      if (provider.type === "oidc")
        provider.checks = ["nonce"];
    } else {
      const { value, cookie } = await pkce.create(options);
      authParams.set("code_challenge", value);
      authParams.set("code_challenge_method", "S256");
      cookies.push(cookie);
    }
  }
  const nonce2 = await nonce.create(options);
  if (nonce2) {
    authParams.set("nonce", nonce2.value);
    cookies.push(nonce2.cookie);
  }
  if (provider.type === "oidc" && !url.searchParams.has("scope")) {
    url.searchParams.set("scope", "openid profile email");
  }
  logger2.debug("authorization url is ready", { url, cookies, provider });
  return { redirect: url.toString(), cookies };
}
var init_authorization_url = __esm({
  "../../node_modules/@auth/core/lib/actions/signin/authorization-url.js"() {
    init_checks();
    init_build();
  }
});

// ../../node_modules/@auth/core/lib/actions/signin/send-token.js
async function sendToken(request, options) {
  const { body } = request;
  const { provider, url, callbacks, adapter } = options;
  const normalizer = provider.normalizeIdentifier ?? defaultNormalizer;
  const email = normalizer(body?.email);
  const defaultUser = { id: email, email, emailVerified: null };
  const user = await adapter.getUserByEmail(email) ?? defaultUser;
  const account = {
    providerAccountId: email,
    userId: user.id,
    type: "email",
    provider: provider.id
  };
  let authorized;
  try {
    const params = { user, account, email: { verificationRequest: true } };
    authorized = await callbacks.signIn(params);
  } catch (e2) {
    throw new AuthorizedCallbackError(e2);
  }
  if (!authorized)
    throw new AuthorizedCallbackError("AccessDenied");
  const { callbackUrl, theme } = options;
  const token = await provider.generateVerificationToken?.() ?? randomString(32);
  const ONE_DAY_IN_SECONDS = 86400;
  const expires = new Date(Date.now() + (provider.maxAge ?? ONE_DAY_IN_SECONDS) * 1e3);
  const secret = provider.secret ?? options.secret;
  const sendRequest = provider.sendVerificationRequest({
    identifier: email,
    token,
    expires,
    url: `${url}/callback/${provider.id}?${new URLSearchParams({
      callbackUrl,
      token,
      email
    })}`,
    provider,
    theme,
    request: toRequest(request)
  });
  const createToken = adapter.createVerificationToken?.({
    identifier: email,
    token: await createHash(`${token}${secret}`),
    expires
  });
  await Promise.all([sendRequest, createToken]);
  return {
    redirect: `${url}/verify-request?${new URLSearchParams({
      provider: provider.id,
      type: provider.type
    })}`
  };
}
function defaultNormalizer(email) {
  if (!email)
    throw new Error("Missing email from request body.");
  let [local, domain] = email.toLowerCase().trim().split("@");
  domain = domain.split(",")[0];
  return `${local}@${domain}`;
}
var init_send_token = __esm({
  "../../node_modules/@auth/core/lib/actions/signin/send-token.js"() {
    init_web2();
    init_errors();
  }
});

// ../../node_modules/@auth/core/lib/actions/signin/index.js
async function signIn(request, cookies, options) {
  const signInUrl = `${options.url}/signin`;
  if (!options.provider)
    return { redirect: signInUrl, cookies };
  switch (options.provider.type) {
    case "oauth":
    case "oidc": {
      const { redirect, cookies: authCookies } = await getAuthorizationUrl(request.query, options);
      if (authCookies)
        cookies.push(...authCookies);
      return { redirect, cookies };
    }
    case "email": {
      return await sendToken(request, options);
    }
    default:
      return { redirect: signInUrl, cookies };
  }
}
var init_signin2 = __esm({
  "../../node_modules/@auth/core/lib/actions/signin/index.js"() {
    init_authorization_url();
    init_send_token();
  }
});

// ../../node_modules/@auth/core/lib/actions/signout.js
async function signOut(cookies, sessionStore, options) {
  const { jwt: jwt2, events, callbackUrl: redirect, logger: logger2, session: session2 } = options;
  const sessionToken = sessionStore.value;
  if (!sessionToken)
    return { redirect, cookies };
  try {
    if (session2.strategy === "jwt") {
      const salt = options.cookies.sessionToken.name;
      const token = await jwt2.decode({ ...jwt2, token: sessionToken, salt });
      await events.signOut?.({ token });
    } else {
      const session3 = await options.adapter?.deleteSession(sessionToken);
      await events.signOut?.({ session: session3 });
    }
  } catch (e2) {
    logger2.error(new SignOutError(e2));
  }
  cookies.push(...sessionStore.clean());
  return { redirect, cookies };
}
var init_signout2 = __esm({
  "../../node_modules/@auth/core/lib/actions/signout.js"() {
    init_errors();
  }
});

// ../../node_modules/@auth/core/lib/actions/index.js
var init_actions = __esm({
  "../../node_modules/@auth/core/lib/actions/index.js"() {
    init_callback2();
    init_session();
    init_signin2();
    init_signout2();
  }
});

// ../../node_modules/@auth/core/lib/index.js
async function AuthInternal(request, authOptions) {
  const { action, providerId, error: error2, method } = request;
  const csrfDisabled = authOptions.skipCSRFCheck === skipCSRFCheck;
  const { options, cookies } = await init2({
    authOptions,
    action,
    providerId,
    url: request.url,
    callbackUrl: request.body?.callbackUrl ?? request.query?.callbackUrl,
    csrfToken: request.body?.csrfToken,
    cookies: request.cookies,
    isPost: method === "POST",
    csrfDisabled
  });
  const sessionStore = new SessionStore(options.cookies.sessionToken, request.cookies, options.logger);
  if (method === "GET") {
    const render3 = renderPage2({ ...options, query: request.query, cookies });
    switch (action) {
      case "callback":
        return await callback(request, options, sessionStore, cookies);
      case "csrf":
        return render3.csrf(csrfDisabled, options, cookies);
      case "error":
        return render3.error(error2);
      case "providers":
        return render3.providers(options.providers);
      case "session":
        return await session(options, sessionStore, cookies);
      case "signin":
        return render3.signin(error2);
      case "signout":
        return render3.signout();
      case "verify-request":
        return render3.verifyRequest();
      default:
    }
  } else {
    const { csrfTokenVerified } = options;
    switch (action) {
      case "callback":
        if (options.provider.type === "credentials")
          validateCSRF(action, csrfTokenVerified);
        return await callback(request, options, sessionStore, cookies);
      case "session":
        validateCSRF(action, csrfTokenVerified);
        return await session(options, sessionStore, cookies, true, request.body?.data);
      case "signin":
        validateCSRF(action, csrfTokenVerified);
        return await signIn(request, cookies, options);
      case "signout":
        validateCSRF(action, csrfTokenVerified);
        return await signOut(cookies, sessionStore, options);
      default:
    }
  }
  throw new UnknownAction(`Cannot handle action: ${action}`);
}
var skipCSRFCheck, raw2;
var init_lib = __esm({
  "../../node_modules/@auth/core/lib/index.js"() {
    init_errors();
    init_cookie();
    init_init();
    init_pages();
    init_actions();
    init_csrf_token();
    skipCSRFCheck = Symbol("skip-csrf-check");
    raw2 = Symbol("return-type-raw");
  }
});

// ../../node_modules/@auth/core/index.js
async function Auth(request, config2) {
  setLogger(config2.logger, config2.debug);
  const internalRequest = await toInternalRequest(request);
  if (internalRequest instanceof Error) {
    logger.error(internalRequest);
    return Response.json(`Error: This action with HTTP ${request.method} is not supported.`, { status: 400 });
  }
  const assertionResult = assertConfig(internalRequest, config2);
  if (Array.isArray(assertionResult)) {
    assertionResult.forEach(logger.warn);
  } else if (assertionResult instanceof Error) {
    logger.error(assertionResult);
    const htmlPages = ["signin", "signout", "error", "verify-request"];
    if (!htmlPages.includes(internalRequest.action) || internalRequest.method !== "GET") {
      return new Response(JSON.stringify({
        message: "There was a problem with the server configuration. Check the server logs for more information.",
        code: assertionResult.name
      }), { status: 500, headers: { "Content-Type": "application/json" } });
    }
    const { pages, theme } = config2;
    const authOnErrorPage = pages?.error && internalRequest.url.searchParams.get("callbackUrl")?.startsWith(pages.error);
    if (!pages?.error || authOnErrorPage) {
      if (authOnErrorPage) {
        logger.error(new ErrorPageLoop(`The error page ${pages?.error} should not require authentication`));
      }
      const render3 = renderPage2({ theme });
      const page10 = render3.error("Configuration");
      return toResponse(page10);
    }
    return Response.redirect(`${pages.error}?error=Configuration`);
  }
  const isRedirect = request.headers?.has("X-Auth-Return-Redirect");
  const isRaw = config2.raw === raw2;
  let response;
  try {
    const rawResponse = await AuthInternal(internalRequest, config2);
    if (isRaw)
      return rawResponse;
    response = await toResponse(rawResponse);
  } catch (e2) {
    const error2 = e2;
    logger.error(error2);
    const isAuthError = error2 instanceof AuthError;
    if (isAuthError && isRaw && !isRedirect)
      throw error2;
    if (request.method === "POST" && internalRequest.action === "session")
      return Response.json(null, { status: 400 });
    const type = isAuthError ? error2.type : "Configuration";
    const page10 = isAuthError && error2.kind || "error";
    const params = new URLSearchParams({ error: type });
    const path = config2.pages?.[page10] ?? `${internalRequest.url.pathname}/${page10.toLowerCase()}`;
    const url = `${internalRequest.url.origin}${path}?${params}`;
    if (isRedirect)
      return Response.json({ url });
    return Response.redirect(url);
  }
  const redirect = response.headers.get("Location");
  if (!isRedirect || !redirect)
    return response;
  return Response.json({ url: redirect }, { headers: response.headers });
}
var init_core = __esm({
  "../../node_modules/@auth/core/index.js"() {
    init_assert();
    init_errors();
    init_lib();
    init_pages();
    init_logger();
    init_web2();
  }
});

// ../../node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "../../node_modules/set-cookie-parser/lib/set-cookie.js"(exports2, module) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: true,
      map: false,
      silent: false
    };
    function isNonEmptyString(str) {
      return typeof str === "string" && !!str.trim();
    }
    function parseString2(setCookieValue, options) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString);
      var nameValuePairStr = parts.shift();
      var parsed = parseNameValuePair(nameValuePairStr);
      var name = parsed.name;
      var value = parsed.value;
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      try {
        value = options.decodeValues ? decodeURIComponent(value) : value;
      } catch (e2) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e2
        );
      }
      var cookie = {
        name,
        value
      };
      parts.forEach(function(part) {
        var sides = part.split("=");
        var key = sides.shift().trimLeft().toLowerCase();
        var value2 = sides.join("=");
        if (key === "expires") {
          cookie.expires = new Date(value2);
        } else if (key === "max-age") {
          cookie.maxAge = parseInt(value2, 10);
        } else if (key === "secure") {
          cookie.secure = true;
        } else if (key === "httponly") {
          cookie.httpOnly = true;
        } else if (key === "samesite") {
          cookie.sameSite = value2;
        } else {
          cookie[key] = value2;
        }
      });
      return cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "";
      var value = "";
      var nameValueArr = nameValuePairStr.split("=");
      if (nameValueArr.length > 1) {
        name = nameValueArr.shift();
        value = nameValueArr.join("=");
      } else {
        value = nameValuePairStr;
      }
      return { name, value };
    }
    function parse7(input, options) {
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      if (!input) {
        if (!options.map) {
          return [];
        } else {
          return {};
        }
      }
      if (input.headers) {
        if (typeof input.headers.getSetCookie === "function") {
          input = input.headers.getSetCookie();
        } else if (input.headers["set-cookie"]) {
          input = input.headers["set-cookie"];
        } else {
          var sch = input.headers[Object.keys(input.headers).find(function(key) {
            return key.toLowerCase() === "set-cookie";
          })];
          if (!sch && input.headers.cookie && !options.silent) {
            console.warn(
              "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
            );
          }
          input = sch;
        }
      }
      if (!Array.isArray(input)) {
        input = [input];
      }
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      if (!options.map) {
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString2(str, options);
        });
      } else {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString2(str, options);
          cookies2[cookie.name] = cookie;
          return cookies2;
        }, cookies);
      }
    }
    function splitCookiesString(cookiesString) {
      if (Array.isArray(cookiesString)) {
        return cookiesString;
      }
      if (typeof cookiesString !== "string") {
        return [];
      }
      var cookiesStrings = [];
      var pos = 0;
      var start;
      var ch;
      var lastComma;
      var nextStart;
      var cookiesSeparatorFound;
      function skipWhitespace() {
        while (pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos))) {
          pos += 1;
        }
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        ch = cookiesString.charAt(pos);
        return ch !== "=" && ch !== ";" && ch !== ",";
      }
      while (pos < cookiesString.length) {
        start = pos;
        cookiesSeparatorFound = false;
        while (skipWhitespace()) {
          ch = cookiesString.charAt(pos);
          if (ch === ",") {
            lastComma = pos;
            pos += 1;
            skipWhitespace();
            nextStart = pos;
            while (pos < cookiesString.length && notSpecialChar()) {
              pos += 1;
            }
            if (pos < cookiesString.length && cookiesString.charAt(pos) === "=") {
              cookiesSeparatorFound = true;
              pos = nextStart;
              cookiesStrings.push(cookiesString.substring(start, lastComma));
              start = pos;
            } else {
              pos = lastComma + 1;
            }
          } else {
            pos += 1;
          }
        }
        if (!cookiesSeparatorFound || pos >= cookiesString.length) {
          cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
        }
      }
      return cookiesStrings;
    }
    module.exports = parse7;
    module.exports.parse = parse7;
    module.exports.parseString = parseString2;
    module.exports.splitCookiesString = splitCookiesString;
  }
});

// ../../node_modules/@auth/core/providers/google.js
function Google(options) {
  return {
    id: "google",
    name: "Google",
    type: "oidc",
    issuer: "https://accounts.google.com",
    style: { logo: "/google.svg", bg: "#fff", text: "#000" },
    options
  };
}
var init_google = __esm({
  "../../node_modules/@auth/core/providers/google.js"() {
  }
});

// dist/$server_build/chunks/pages/__DFZWMVpB.mjs
var DFZWMVpB_exports = {};
__export(DFZWMVpB_exports, {
  _: () => ____auth_,
  a: () => authConfig,
  g: () => getSession
});
function AstroAuthHandler(prefix, options = authConfig) {
  return async ({ cookies, request }) => {
    const url = new URL(request.url);
    const action = url.pathname.slice(prefix.length + 1).split("/")[0];
    if (!actions2.includes(action) || !url.pathname.startsWith(prefix + "/"))
      return;
    const res = await Auth(request, options);
    if (["callback", "signin", "signout"].includes(action)) {
      res.headers.getSetCookie().forEach((cookie) => {
        const { name, value, ...options2 } = (0, import_set_cookie_parser.parseString)(cookie);
        cookies.set(name, value, options2);
      });
      res.headers.delete("Set-Cookie");
    }
    return res;
  };
}
function AstroAuth(options = authConfig) {
  const { AUTH_SECRET, AUTH_TRUST_HOST, VERCEL, NODE_ENV } = Object.assign({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true, "SSR": true, "SITE": void 0, "ASSETS_PREFIX": void 0 }, { _: process.env._, NODE: process.env.NODE, NODE_ENV: "production" });
  options.secret ??= AUTH_SECRET;
  options.trustHost ??= !!(AUTH_TRUST_HOST ?? VERCEL ?? NODE_ENV !== "production");
  const { prefix = "/api/auth", ...authOptions } = options;
  const handler = AstroAuthHandler(prefix, authOptions);
  return {
    async GET(context) {
      return await handler(context);
    },
    async POST(context) {
      return await handler(context);
    }
  };
}
async function getSession(req, options = authConfig) {
  options.secret ??= Object.assign({ "BASE_URL": "/", "MODE": "production", "DEV": false, "PROD": true, "SSR": true, "SITE": void 0, "ASSETS_PREFIX": void 0 }, { _: process.env._, NODE: process.env.NODE, NODE_ENV: "production" }).AUTH_SECRET;
  options.trustHost ??= true;
  const url = new URL(`${options.prefix}/session`, req.url);
  const response = await Auth(new Request(url, { headers: req.headers }), options);
  const { status = 200 } = response;
  const data = await response.json();
  if (!data || !Object.keys(data).length)
    return null;
  if (status === 200)
    return data;
  throw new Error(data.message);
}
var import_set_cookie_parser, authConfig, actions2, GET2, POST, ____auth_;
var init_DFZWMVpB = __esm({
  "dist/$server_build/chunks/pages/__DFZWMVpB.mjs"() {
    "use strict";
    init_core();
    import_set_cookie_parser = __toESM(require_set_cookie(), 1);
    init_google();
    authConfig = {
      secret: "972c431bb42d1d5b50a26e8358ae0b70be594c044f95a9678666c9f4ee8ac59d",
      providers: [
        // @ts-ignore
        Google({
          clientId: "505450551021-vu1amcbd0ls2gokvssqqh5k1gdq3s55q.apps.googleusercontent.com",
          clientSecret: process.env.GSECRET
        })
      ],
      trustHost: true
    };
    actions2 = [
      "providers",
      "session",
      "csrf",
      "signin",
      "signout",
      "callback",
      "verify-request",
      "error"
    ];
    ({ GET: GET2, POST } = AstroAuth());
    ____auth_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      GET: GET2,
      POST
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/$server_build/chunks/_.._CkoFtIu1.mjs
var CkoFtIu1_exports = {};
__export(CkoFtIu1_exports, {
  page: () => page2,
  renderers: () => renderers
});
var page2;
var init_CkoFtIu1 = __esm({
  "dist/$server_build/chunks/_.._CkoFtIu1.mjs"() {
    "use strict";
    init_renderers();
    page2 = () => Promise.resolve().then(() => (init_DFZWMVpB(), DFZWMVpB_exports)).then((n3) => n3._);
  }
});

// ../../node_modules/@lucia-auth/adapter-prisma/dist/prisma.js
var prismaAdapter, transformPrismaSession;
var init_prisma = __esm({
  "../../node_modules/@lucia-auth/adapter-prisma/dist/prisma.js"() {
    prismaAdapter = (client2, modelNames) => {
      const getModels = () => {
        if (!modelNames) {
          return {
            User: client2["user"],
            Session: client2["session"] ?? null,
            Key: client2["key"]
          };
        }
        return {
          User: client2[modelNames.user],
          Session: modelNames.session ? client2[modelNames.session] : null,
          Key: client2[modelNames.key]
        };
      };
      const { User, Session, Key } = getModels();
      return (LuciaError2) => {
        return {
          getUser: async (userId) => {
            return await User.findUnique({
              where: {
                id: userId
              }
            });
          },
          setUser: async (user, key) => {
            if (!key) {
              await User.create({
                data: user
              });
              return;
            }
            try {
              await client2.$transaction([
                User.create({
                  data: user
                }),
                Key.create({
                  data: key
                })
              ]);
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2002" && error2.message?.includes("`id`"))
                throw new LuciaError2("AUTH_DUPLICATE_KEY_ID");
              throw error2;
            }
          },
          deleteUser: async (userId) => {
            try {
              await User.delete({
                where: {
                  id: userId
                }
              });
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2025") {
                return;
              }
              throw e2;
            }
          },
          updateUser: async (userId, partialUser) => {
            await User.update({
              data: partialUser,
              where: {
                id: userId
              }
            });
          },
          getSession: async (sessionId) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            const result = await Session.findUnique({
              where: {
                id: sessionId
              }
            });
            if (!result)
              return null;
            return transformPrismaSession(result);
          },
          getSessionsByUserId: async (userId) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            const sessions = await Session.findMany({
              where: {
                user_id: userId
              }
            });
            return sessions.map((session2) => transformPrismaSession(session2));
          },
          setSession: async (session2) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            try {
              await Session.create({
                data: session2
              });
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2003") {
                throw new LuciaError2("AUTH_INVALID_USER_ID");
              }
              throw error2;
            }
          },
          deleteSession: async (sessionId) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            try {
              await Session.delete({
                where: {
                  id: sessionId
                }
              });
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2025") {
                return;
              }
              throw e2;
            }
          },
          deleteSessionsByUserId: async (userId) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            await Session.deleteMany({
              where: {
                user_id: userId
              }
            });
          },
          updateSession: async (userId, partialSession) => {
            if (!Session) {
              throw new Error("Session table not defined");
            }
            await Session.update({
              data: partialSession,
              where: {
                id: userId
              }
            });
          },
          getKey: async (keyId) => {
            return await Key.findUnique({
              where: {
                id: keyId
              }
            });
          },
          getKeysByUserId: async (userId) => {
            return await Key.findMany({
              where: {
                user_id: userId
              }
            });
          },
          setKey: async (key) => {
            try {
              await Key.create({
                data: key
              });
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2003") {
                throw new LuciaError2("AUTH_INVALID_USER_ID");
              }
              if (error2.code === "P2002" && error2.message?.includes("`id`")) {
                throw new LuciaError2("AUTH_DUPLICATE_KEY_ID");
              }
              throw error2;
            }
          },
          deleteKey: async (keyId) => {
            try {
              await Key.delete({
                where: {
                  id: keyId
                }
              });
            } catch (e2) {
              const error2 = e2;
              if (error2.code === "P2025") {
                return;
              }
              throw e2;
            }
          },
          deleteKeysByUserId: async (userId) => {
            await Key.deleteMany({
              where: {
                user_id: userId
              }
            });
          },
          updateKey: async (keyId, partialKey) => {
            await Key.update({
              data: partialKey,
              where: {
                id: keyId
              }
            });
          }
        };
      };
    };
    transformPrismaSession = (sessionData) => {
      const { active_expires, idle_expires: idleExpires, ...data } = sessionData;
      return {
        ...data,
        active_expires: Number(active_expires),
        idle_expires: Number(idleExpires)
      };
    };
  }
});

// ../../node_modules/@lucia-auth/adapter-prisma/dist/index.js
var init_dist3 = __esm({
  "../../node_modules/@lucia-auth/adapter-prisma/dist/index.js"() {
    init_prisma();
  }
});

// ../../node_modules/@prisma/client/runtime/edge.js
var require_edge = __commonJS({
  "../../node_modules/@prisma/client/runtime/edge.js"(exports2, module) {
    "use strict";
    var sa = Object.create;
    var ir2 = Object.defineProperty;
    var aa = Object.getOwnPropertyDescriptor;
    var ua = Object.getOwnPropertyNames;
    var la2 = Object.getPrototypeOf;
    var ca3 = Object.prototype.hasOwnProperty;
    var be3 = (e2, t2) => () => (e2 && (t2 = e2(e2 = 0)), t2);
    var Ie3 = (e2, t2) => () => (t2 || e2((t2 = { exports: {} }).exports, t2), t2.exports);
    var vt3 = (e2, t2) => {
      for (var r4 in t2)
        ir2(e2, r4, { get: t2[r4], enumerable: true });
    };
    var zn2 = (e2, t2, r4, n3) => {
      if (t2 && typeof t2 == "object" || typeof t2 == "function")
        for (let i3 of ua(t2))
          !ca3.call(e2, i3) && i3 !== r4 && ir2(e2, i3, { get: () => t2[i3], enumerable: !(n3 = aa(t2, i3)) || n3.enumerable });
      return e2;
    };
    var Ve2 = (e2, t2, r4) => (r4 = e2 != null ? sa(la2(e2)) : {}, zn2(t2 || !e2 || !e2.__esModule ? ir2(r4, "default", { value: e2, enumerable: true }) : r4, e2));
    var Wr = (e2) => zn2(ir2({}, "__esModule", { value: true }), e2);
    var y3;
    var c4 = be3(() => {
      "use strict";
      y3 = { nextTick: (e2, ...t2) => {
        setTimeout(() => {
          e2(...t2);
        }, 0);
      }, env: {}, version: "", cwd: () => "/", stderr: {}, argv: ["/bin/node"] };
    });
    var Yn2;
    var b5;
    var p6 = be3(() => {
      "use strict";
      b5 = (Yn2 = globalThis.performance) != null ? Yn2 : (() => {
        let e2 = Date.now();
        return { now: () => Date.now() - e2 };
      })();
    });
    var E2;
    var f4 = be3(() => {
      "use strict";
      E2 = () => {
      };
      E2.prototype = E2;
    });
    var m4 = be3(() => {
      "use strict";
    });
    var hi = Ie3((nt2) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      var ri = (e2, t2) => () => (t2 || e2((t2 = { exports: {} }).exports, t2), t2.exports), pa = ri((e2) => {
        "use strict";
        e2.byteLength = u4, e2.toByteArray = g4, e2.fromByteArray = S5;
        var t2 = [], r4 = [], n3 = typeof Uint8Array < "u" ? Uint8Array : Array, i3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        for (o5 = 0, s3 = i3.length; o5 < s3; ++o5)
          t2[o5] = i3[o5], r4[i3.charCodeAt(o5)] = o5;
        var o5, s3;
        r4[45] = 62, r4[95] = 63;
        function a3(A4) {
          var R5 = A4.length;
          if (R5 % 4 > 0)
            throw new Error("Invalid string. Length must be a multiple of 4");
          var D4 = A4.indexOf("=");
          D4 === -1 && (D4 = R5);
          var M4 = D4 === R5 ? 0 : 4 - D4 % 4;
          return [D4, M4];
        }
        function u4(A4) {
          var R5 = a3(A4), D4 = R5[0], M4 = R5[1];
          return (D4 + M4) * 3 / 4 - M4;
        }
        function l3(A4, R5, D4) {
          return (R5 + D4) * 3 / 4 - D4;
        }
        function g4(A4) {
          var R5, D4 = a3(A4), M4 = D4[0], B2 = D4[1], I4 = new n3(l3(A4, M4, B2)), L5 = 0, ee2 = B2 > 0 ? M4 - 4 : M4, F3;
          for (F3 = 0; F3 < ee2; F3 += 4)
            R5 = r4[A4.charCodeAt(F3)] << 18 | r4[A4.charCodeAt(F3 + 1)] << 12 | r4[A4.charCodeAt(F3 + 2)] << 6 | r4[A4.charCodeAt(F3 + 3)], I4[L5++] = R5 >> 16 & 255, I4[L5++] = R5 >> 8 & 255, I4[L5++] = R5 & 255;
          return B2 === 2 && (R5 = r4[A4.charCodeAt(F3)] << 2 | r4[A4.charCodeAt(F3 + 1)] >> 4, I4[L5++] = R5 & 255), B2 === 1 && (R5 = r4[A4.charCodeAt(F3)] << 10 | r4[A4.charCodeAt(F3 + 1)] << 4 | r4[A4.charCodeAt(F3 + 2)] >> 2, I4[L5++] = R5 >> 8 & 255, I4[L5++] = R5 & 255), I4;
        }
        function h2(A4) {
          return t2[A4 >> 18 & 63] + t2[A4 >> 12 & 63] + t2[A4 >> 6 & 63] + t2[A4 & 63];
        }
        function v4(A4, R5, D4) {
          for (var M4, B2 = [], I4 = R5; I4 < D4; I4 += 3)
            M4 = (A4[I4] << 16 & 16711680) + (A4[I4 + 1] << 8 & 65280) + (A4[I4 + 2] & 255), B2.push(h2(M4));
          return B2.join("");
        }
        function S5(A4) {
          for (var R5, D4 = A4.length, M4 = D4 % 3, B2 = [], I4 = 16383, L5 = 0, ee2 = D4 - M4; L5 < ee2; L5 += I4)
            B2.push(v4(A4, L5, L5 + I4 > ee2 ? ee2 : L5 + I4));
          return M4 === 1 ? (R5 = A4[D4 - 1], B2.push(t2[R5 >> 2] + t2[R5 << 4 & 63] + "==")) : M4 === 2 && (R5 = (A4[D4 - 2] << 8) + A4[D4 - 1], B2.push(t2[R5 >> 10] + t2[R5 >> 4 & 63] + t2[R5 << 2 & 63] + "=")), B2.join("");
        }
      }), fa = ri((e2) => {
        e2.read = function(t2, r4, n3, i3, o5) {
          var s3, a3, u4 = o5 * 8 - i3 - 1, l3 = (1 << u4) - 1, g4 = l3 >> 1, h2 = -7, v4 = n3 ? o5 - 1 : 0, S5 = n3 ? -1 : 1, A4 = t2[r4 + v4];
          for (v4 += S5, s3 = A4 & (1 << -h2) - 1, A4 >>= -h2, h2 += u4; h2 > 0; s3 = s3 * 256 + t2[r4 + v4], v4 += S5, h2 -= 8)
            ;
          for (a3 = s3 & (1 << -h2) - 1, s3 >>= -h2, h2 += i3; h2 > 0; a3 = a3 * 256 + t2[r4 + v4], v4 += S5, h2 -= 8)
            ;
          if (s3 === 0)
            s3 = 1 - g4;
          else {
            if (s3 === l3)
              return a3 ? NaN : (A4 ? -1 : 1) * (1 / 0);
            a3 = a3 + Math.pow(2, i3), s3 = s3 - g4;
          }
          return (A4 ? -1 : 1) * a3 * Math.pow(2, s3 - i3);
        }, e2.write = function(t2, r4, n3, i3, o5, s3) {
          var a3, u4, l3, g4 = s3 * 8 - o5 - 1, h2 = (1 << g4) - 1, v4 = h2 >> 1, S5 = o5 === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, A4 = i3 ? 0 : s3 - 1, R5 = i3 ? 1 : -1, D4 = r4 < 0 || r4 === 0 && 1 / r4 < 0 ? 1 : 0;
          for (r4 = Math.abs(r4), isNaN(r4) || r4 === 1 / 0 ? (u4 = isNaN(r4) ? 1 : 0, a3 = h2) : (a3 = Math.floor(Math.log(r4) / Math.LN2), r4 * (l3 = Math.pow(2, -a3)) < 1 && (a3--, l3 *= 2), a3 + v4 >= 1 ? r4 += S5 / l3 : r4 += S5 * Math.pow(2, 1 - v4), r4 * l3 >= 2 && (a3++, l3 /= 2), a3 + v4 >= h2 ? (u4 = 0, a3 = h2) : a3 + v4 >= 1 ? (u4 = (r4 * l3 - 1) * Math.pow(2, o5), a3 = a3 + v4) : (u4 = r4 * Math.pow(2, v4 - 1) * Math.pow(2, o5), a3 = 0)); o5 >= 8; t2[n3 + A4] = u4 & 255, A4 += R5, u4 /= 256, o5 -= 8)
            ;
          for (a3 = a3 << o5 | u4, g4 += o5; g4 > 0; t2[n3 + A4] = a3 & 255, A4 += R5, a3 /= 256, g4 -= 8)
            ;
          t2[n3 + A4 - R5] |= D4 * 128;
        };
      }), Kr = pa(), tt3 = fa(), Zn2 = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
      nt2.Buffer = T4;
      nt2.SlowBuffer = wa2;
      nt2.INSPECT_MAX_BYTES = 50;
      var or2 = 2147483647;
      nt2.kMaxLength = or2;
      T4.TYPED_ARRAY_SUPPORT = ma();
      !T4.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
      function ma() {
        try {
          let e2 = new Uint8Array(1), t2 = { foo: function() {
            return 42;
          } };
          return Object.setPrototypeOf(t2, Uint8Array.prototype), Object.setPrototypeOf(e2, t2), e2.foo() === 42;
        } catch (e2) {
          return false;
        }
      }
      Object.defineProperty(T4.prototype, "parent", { enumerable: true, get: function() {
        if (T4.isBuffer(this))
          return this.buffer;
      } });
      Object.defineProperty(T4.prototype, "offset", { enumerable: true, get: function() {
        if (T4.isBuffer(this))
          return this.byteOffset;
      } });
      function xe2(e2) {
        if (e2 > or2)
          throw new RangeError('The value "' + e2 + '" is invalid for option "size"');
        let t2 = new Uint8Array(e2);
        return Object.setPrototypeOf(t2, T4.prototype), t2;
      }
      function T4(e2, t2, r4) {
        if (typeof e2 == "number") {
          if (typeof t2 == "string")
            throw new TypeError('The "string" argument must be of type string. Received type number');
          return Zr2(e2);
        }
        return ni2(e2, t2, r4);
      }
      T4.poolSize = 8192;
      function ni2(e2, t2, r4) {
        if (typeof e2 == "string")
          return ga2(e2, t2);
        if (ArrayBuffer.isView(e2))
          return ha(e2);
        if (e2 == null)
          throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e2);
        if (me3(e2, ArrayBuffer) || e2 && me3(e2.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (me3(e2, SharedArrayBuffer) || e2 && me3(e2.buffer, SharedArrayBuffer)))
          return oi(e2, t2, r4);
        if (typeof e2 == "number")
          throw new TypeError('The "value" argument must not be of type number. Received type number');
        let n3 = e2.valueOf && e2.valueOf();
        if (n3 != null && n3 !== e2)
          return T4.from(n3, t2, r4);
        let i3 = ya(e2);
        if (i3)
          return i3;
        if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof e2[Symbol.toPrimitive] == "function")
          return T4.from(e2[Symbol.toPrimitive]("string"), t2, r4);
        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e2);
      }
      T4.from = function(e2, t2, r4) {
        return ni2(e2, t2, r4);
      };
      Object.setPrototypeOf(T4.prototype, Uint8Array.prototype);
      Object.setPrototypeOf(T4, Uint8Array);
      function ii(e2) {
        if (typeof e2 != "number")
          throw new TypeError('"size" argument must be of type number');
        if (e2 < 0)
          throw new RangeError('The value "' + e2 + '" is invalid for option "size"');
      }
      function da2(e2, t2, r4) {
        return ii(e2), e2 <= 0 ? xe2(e2) : t2 !== void 0 ? typeof r4 == "string" ? xe2(e2).fill(t2, r4) : xe2(e2).fill(t2) : xe2(e2);
      }
      T4.alloc = function(e2, t2, r4) {
        return da2(e2, t2, r4);
      };
      function Zr2(e2) {
        return ii(e2), xe2(e2 < 0 ? 0 : Xr(e2) | 0);
      }
      T4.allocUnsafe = function(e2) {
        return Zr2(e2);
      };
      T4.allocUnsafeSlow = function(e2) {
        return Zr2(e2);
      };
      function ga2(e2, t2) {
        if ((typeof t2 != "string" || t2 === "") && (t2 = "utf8"), !T4.isEncoding(t2))
          throw new TypeError("Unknown encoding: " + t2);
        let r4 = si(e2, t2) | 0, n3 = xe2(r4), i3 = n3.write(e2, t2);
        return i3 !== r4 && (n3 = n3.slice(0, i3)), n3;
      }
      function zr(e2) {
        let t2 = e2.length < 0 ? 0 : Xr(e2.length) | 0, r4 = xe2(t2);
        for (let n3 = 0; n3 < t2; n3 += 1)
          r4[n3] = e2[n3] & 255;
        return r4;
      }
      function ha(e2) {
        if (me3(e2, Uint8Array)) {
          let t2 = new Uint8Array(e2);
          return oi(t2.buffer, t2.byteOffset, t2.byteLength);
        }
        return zr(e2);
      }
      function oi(e2, t2, r4) {
        if (t2 < 0 || e2.byteLength < t2)
          throw new RangeError('"offset" is outside of buffer bounds');
        if (e2.byteLength < t2 + (r4 || 0))
          throw new RangeError('"length" is outside of buffer bounds');
        let n3;
        return t2 === void 0 && r4 === void 0 ? n3 = new Uint8Array(e2) : r4 === void 0 ? n3 = new Uint8Array(e2, t2) : n3 = new Uint8Array(e2, t2, r4), Object.setPrototypeOf(n3, T4.prototype), n3;
      }
      function ya(e2) {
        if (T4.isBuffer(e2)) {
          let t2 = Xr(e2.length) | 0, r4 = xe2(t2);
          return r4.length === 0 || e2.copy(r4, 0, 0, t2), r4;
        }
        if (e2.length !== void 0)
          return typeof e2.length != "number" || tn2(e2.length) ? xe2(0) : zr(e2);
        if (e2.type === "Buffer" && Array.isArray(e2.data))
          return zr(e2.data);
      }
      function Xr(e2) {
        if (e2 >= or2)
          throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + or2.toString(16) + " bytes");
        return e2 | 0;
      }
      function wa2(e2) {
        return +e2 != e2 && (e2 = 0), T4.alloc(+e2);
      }
      T4.isBuffer = function(e2) {
        return e2 != null && e2._isBuffer === true && e2 !== T4.prototype;
      };
      T4.compare = function(e2, t2) {
        if (me3(e2, Uint8Array) && (e2 = T4.from(e2, e2.offset, e2.byteLength)), me3(t2, Uint8Array) && (t2 = T4.from(t2, t2.offset, t2.byteLength)), !T4.isBuffer(e2) || !T4.isBuffer(t2))
          throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
        if (e2 === t2)
          return 0;
        let r4 = e2.length, n3 = t2.length;
        for (let i3 = 0, o5 = Math.min(r4, n3); i3 < o5; ++i3)
          if (e2[i3] !== t2[i3]) {
            r4 = e2[i3], n3 = t2[i3];
            break;
          }
        return r4 < n3 ? -1 : n3 < r4 ? 1 : 0;
      };
      T4.isEncoding = function(e2) {
        switch (String(e2).toLowerCase()) {
          case "hex":
          case "utf8":
          case "utf-8":
          case "ascii":
          case "latin1":
          case "binary":
          case "base64":
          case "ucs2":
          case "ucs-2":
          case "utf16le":
          case "utf-16le":
            return true;
          default:
            return false;
        }
      };
      T4.concat = function(e2, t2) {
        if (!Array.isArray(e2))
          throw new TypeError('"list" argument must be an Array of Buffers');
        if (e2.length === 0)
          return T4.alloc(0);
        let r4;
        if (t2 === void 0)
          for (t2 = 0, r4 = 0; r4 < e2.length; ++r4)
            t2 += e2[r4].length;
        let n3 = T4.allocUnsafe(t2), i3 = 0;
        for (r4 = 0; r4 < e2.length; ++r4) {
          let o5 = e2[r4];
          if (me3(o5, Uint8Array))
            i3 + o5.length > n3.length ? (T4.isBuffer(o5) || (o5 = T4.from(o5)), o5.copy(n3, i3)) : Uint8Array.prototype.set.call(n3, o5, i3);
          else if (T4.isBuffer(o5))
            o5.copy(n3, i3);
          else
            throw new TypeError('"list" argument must be an Array of Buffers');
          i3 += o5.length;
        }
        return n3;
      };
      function si(e2, t2) {
        if (T4.isBuffer(e2))
          return e2.length;
        if (ArrayBuffer.isView(e2) || me3(e2, ArrayBuffer))
          return e2.byteLength;
        if (typeof e2 != "string")
          throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e2);
        let r4 = e2.length, n3 = arguments.length > 2 && arguments[2] === true;
        if (!n3 && r4 === 0)
          return 0;
        let i3 = false;
        for (; ; )
          switch (t2) {
            case "ascii":
            case "latin1":
            case "binary":
              return r4;
            case "utf8":
            case "utf-8":
              return Yr(e2).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return r4 * 2;
            case "hex":
              return r4 >>> 1;
            case "base64":
              return gi2(e2).length;
            default:
              if (i3)
                return n3 ? -1 : Yr(e2).length;
              t2 = ("" + t2).toLowerCase(), i3 = true;
          }
      }
      T4.byteLength = si;
      function Ea(e2, t2, r4) {
        let n3 = false;
        if ((t2 === void 0 || t2 < 0) && (t2 = 0), t2 > this.length || ((r4 === void 0 || r4 > this.length) && (r4 = this.length), r4 <= 0) || (r4 >>>= 0, t2 >>>= 0, r4 <= t2))
          return "";
        for (e2 || (e2 = "utf8"); ; )
          switch (e2) {
            case "hex":
              return Ia2(this, t2, r4);
            case "utf8":
            case "utf-8":
              return ui(this, t2, r4);
            case "ascii":
              return Ra(this, t2, r4);
            case "latin1":
            case "binary":
              return Sa2(this, t2, r4);
            case "base64":
              return Ca(this, t2, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return ka(this, t2, r4);
            default:
              if (n3)
                throw new TypeError("Unknown encoding: " + e2);
              e2 = (e2 + "").toLowerCase(), n3 = true;
          }
      }
      T4.prototype._isBuffer = true;
      function je2(e2, t2, r4) {
        let n3 = e2[t2];
        e2[t2] = e2[r4], e2[r4] = n3;
      }
      T4.prototype.swap16 = function() {
        let e2 = this.length;
        if (e2 % 2 !== 0)
          throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (let t2 = 0; t2 < e2; t2 += 2)
          je2(this, t2, t2 + 1);
        return this;
      };
      T4.prototype.swap32 = function() {
        let e2 = this.length;
        if (e2 % 4 !== 0)
          throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (let t2 = 0; t2 < e2; t2 += 4)
          je2(this, t2, t2 + 3), je2(this, t2 + 1, t2 + 2);
        return this;
      };
      T4.prototype.swap64 = function() {
        let e2 = this.length;
        if (e2 % 8 !== 0)
          throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (let t2 = 0; t2 < e2; t2 += 8)
          je2(this, t2, t2 + 7), je2(this, t2 + 1, t2 + 6), je2(this, t2 + 2, t2 + 5), je2(this, t2 + 3, t2 + 4);
        return this;
      };
      T4.prototype.toString = function() {
        let e2 = this.length;
        return e2 === 0 ? "" : arguments.length === 0 ? ui(this, 0, e2) : Ea.apply(this, arguments);
      };
      T4.prototype.toLocaleString = T4.prototype.toString;
      T4.prototype.equals = function(e2) {
        if (!T4.isBuffer(e2))
          throw new TypeError("Argument must be a Buffer");
        return this === e2 ? true : T4.compare(this, e2) === 0;
      };
      T4.prototype.inspect = function() {
        let e2 = "", t2 = nt2.INSPECT_MAX_BYTES;
        return e2 = this.toString("hex", 0, t2).replace(/(.{2})/g, "$1 ").trim(), this.length > t2 && (e2 += " ... "), "<Buffer " + e2 + ">";
      };
      Zn2 && (T4.prototype[Zn2] = T4.prototype.inspect);
      T4.prototype.compare = function(e2, t2, r4, n3, i3) {
        if (me3(e2, Uint8Array) && (e2 = T4.from(e2, e2.offset, e2.byteLength)), !T4.isBuffer(e2))
          throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e2);
        if (t2 === void 0 && (t2 = 0), r4 === void 0 && (r4 = e2 ? e2.length : 0), n3 === void 0 && (n3 = 0), i3 === void 0 && (i3 = this.length), t2 < 0 || r4 > e2.length || n3 < 0 || i3 > this.length)
          throw new RangeError("out of range index");
        if (n3 >= i3 && t2 >= r4)
          return 0;
        if (n3 >= i3)
          return -1;
        if (t2 >= r4)
          return 1;
        if (t2 >>>= 0, r4 >>>= 0, n3 >>>= 0, i3 >>>= 0, this === e2)
          return 0;
        let o5 = i3 - n3, s3 = r4 - t2, a3 = Math.min(o5, s3), u4 = this.slice(n3, i3), l3 = e2.slice(t2, r4);
        for (let g4 = 0; g4 < a3; ++g4)
          if (u4[g4] !== l3[g4]) {
            o5 = u4[g4], s3 = l3[g4];
            break;
          }
        return o5 < s3 ? -1 : s3 < o5 ? 1 : 0;
      };
      function ai(e2, t2, r4, n3, i3) {
        if (e2.length === 0)
          return -1;
        if (typeof r4 == "string" ? (n3 = r4, r4 = 0) : r4 > 2147483647 ? r4 = 2147483647 : r4 < -2147483648 && (r4 = -2147483648), r4 = +r4, tn2(r4) && (r4 = i3 ? 0 : e2.length - 1), r4 < 0 && (r4 = e2.length + r4), r4 >= e2.length) {
          if (i3)
            return -1;
          r4 = e2.length - 1;
        } else if (r4 < 0)
          if (i3)
            r4 = 0;
          else
            return -1;
        if (typeof t2 == "string" && (t2 = T4.from(t2, n3)), T4.isBuffer(t2))
          return t2.length === 0 ? -1 : Xn(e2, t2, r4, n3, i3);
        if (typeof t2 == "number")
          return t2 = t2 & 255, typeof Uint8Array.prototype.indexOf == "function" ? i3 ? Uint8Array.prototype.indexOf.call(e2, t2, r4) : Uint8Array.prototype.lastIndexOf.call(e2, t2, r4) : Xn(e2, [t2], r4, n3, i3);
        throw new TypeError("val must be string, number or Buffer");
      }
      function Xn(e2, t2, r4, n3, i3) {
        let o5 = 1, s3 = e2.length, a3 = t2.length;
        if (n3 !== void 0 && (n3 = String(n3).toLowerCase(), n3 === "ucs2" || n3 === "ucs-2" || n3 === "utf16le" || n3 === "utf-16le")) {
          if (e2.length < 2 || t2.length < 2)
            return -1;
          o5 = 2, s3 /= 2, a3 /= 2, r4 /= 2;
        }
        function u4(g4, h2) {
          return o5 === 1 ? g4[h2] : g4.readUInt16BE(h2 * o5);
        }
        let l3;
        if (i3) {
          let g4 = -1;
          for (l3 = r4; l3 < s3; l3++)
            if (u4(e2, l3) === u4(t2, g4 === -1 ? 0 : l3 - g4)) {
              if (g4 === -1 && (g4 = l3), l3 - g4 + 1 === a3)
                return g4 * o5;
            } else
              g4 !== -1 && (l3 -= l3 - g4), g4 = -1;
        } else
          for (r4 + a3 > s3 && (r4 = s3 - a3), l3 = r4; l3 >= 0; l3--) {
            let g4 = true;
            for (let h2 = 0; h2 < a3; h2++)
              if (u4(e2, l3 + h2) !== u4(t2, h2)) {
                g4 = false;
                break;
              }
            if (g4)
              return l3;
          }
        return -1;
      }
      T4.prototype.includes = function(e2, t2, r4) {
        return this.indexOf(e2, t2, r4) !== -1;
      };
      T4.prototype.indexOf = function(e2, t2, r4) {
        return ai(this, e2, t2, r4, true);
      };
      T4.prototype.lastIndexOf = function(e2, t2, r4) {
        return ai(this, e2, t2, r4, false);
      };
      function ba(e2, t2, r4, n3) {
        r4 = Number(r4) || 0;
        let i3 = e2.length - r4;
        n3 ? (n3 = Number(n3), n3 > i3 && (n3 = i3)) : n3 = i3;
        let o5 = t2.length;
        n3 > o5 / 2 && (n3 = o5 / 2);
        let s3;
        for (s3 = 0; s3 < n3; ++s3) {
          let a3 = parseInt(t2.substr(s3 * 2, 2), 16);
          if (tn2(a3))
            return s3;
          e2[r4 + s3] = a3;
        }
        return s3;
      }
      function xa2(e2, t2, r4, n3) {
        return sr(Yr(t2, e2.length - r4), e2, r4, n3);
      }
      function Pa(e2, t2, r4, n3) {
        return sr(Na(t2), e2, r4, n3);
      }
      function va2(e2, t2, r4, n3) {
        return sr(gi2(t2), e2, r4, n3);
      }
      function Ta(e2, t2, r4, n3) {
        return sr(_a3(t2, e2.length - r4), e2, r4, n3);
      }
      T4.prototype.write = function(e2, t2, r4, n3) {
        if (t2 === void 0)
          n3 = "utf8", r4 = this.length, t2 = 0;
        else if (r4 === void 0 && typeof t2 == "string")
          n3 = t2, r4 = this.length, t2 = 0;
        else if (isFinite(t2))
          t2 = t2 >>> 0, isFinite(r4) ? (r4 = r4 >>> 0, n3 === void 0 && (n3 = "utf8")) : (n3 = r4, r4 = void 0);
        else
          throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
        let i3 = this.length - t2;
        if ((r4 === void 0 || r4 > i3) && (r4 = i3), e2.length > 0 && (r4 < 0 || t2 < 0) || t2 > this.length)
          throw new RangeError("Attempt to write outside buffer bounds");
        n3 || (n3 = "utf8");
        let o5 = false;
        for (; ; )
          switch (n3) {
            case "hex":
              return ba(this, e2, t2, r4);
            case "utf8":
            case "utf-8":
              return xa2(this, e2, t2, r4);
            case "ascii":
            case "latin1":
            case "binary":
              return Pa(this, e2, t2, r4);
            case "base64":
              return va2(this, e2, t2, r4);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
              return Ta(this, e2, t2, r4);
            default:
              if (o5)
                throw new TypeError("Unknown encoding: " + n3);
              n3 = ("" + n3).toLowerCase(), o5 = true;
          }
      };
      T4.prototype.toJSON = function() {
        return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
      };
      function Ca(e2, t2, r4) {
        return t2 === 0 && r4 === e2.length ? Kr.fromByteArray(e2) : Kr.fromByteArray(e2.slice(t2, r4));
      }
      function ui(e2, t2, r4) {
        r4 = Math.min(e2.length, r4);
        let n3 = [], i3 = t2;
        for (; i3 < r4; ) {
          let o5 = e2[i3], s3 = null, a3 = o5 > 239 ? 4 : o5 > 223 ? 3 : o5 > 191 ? 2 : 1;
          if (i3 + a3 <= r4) {
            let u4, l3, g4, h2;
            switch (a3) {
              case 1:
                o5 < 128 && (s3 = o5);
                break;
              case 2:
                u4 = e2[i3 + 1], (u4 & 192) === 128 && (h2 = (o5 & 31) << 6 | u4 & 63, h2 > 127 && (s3 = h2));
                break;
              case 3:
                u4 = e2[i3 + 1], l3 = e2[i3 + 2], (u4 & 192) === 128 && (l3 & 192) === 128 && (h2 = (o5 & 15) << 12 | (u4 & 63) << 6 | l3 & 63, h2 > 2047 && (h2 < 55296 || h2 > 57343) && (s3 = h2));
                break;
              case 4:
                u4 = e2[i3 + 1], l3 = e2[i3 + 2], g4 = e2[i3 + 3], (u4 & 192) === 128 && (l3 & 192) === 128 && (g4 & 192) === 128 && (h2 = (o5 & 15) << 18 | (u4 & 63) << 12 | (l3 & 63) << 6 | g4 & 63, h2 > 65535 && h2 < 1114112 && (s3 = h2));
            }
          }
          s3 === null ? (s3 = 65533, a3 = 1) : s3 > 65535 && (s3 -= 65536, n3.push(s3 >>> 10 & 1023 | 55296), s3 = 56320 | s3 & 1023), n3.push(s3), i3 += a3;
        }
        return Aa(n3);
      }
      var ei = 4096;
      function Aa(e2) {
        let t2 = e2.length;
        if (t2 <= ei)
          return String.fromCharCode.apply(String, e2);
        let r4 = "", n3 = 0;
        for (; n3 < t2; )
          r4 += String.fromCharCode.apply(String, e2.slice(n3, n3 += ei));
        return r4;
      }
      function Ra(e2, t2, r4) {
        let n3 = "";
        r4 = Math.min(e2.length, r4);
        for (let i3 = t2; i3 < r4; ++i3)
          n3 += String.fromCharCode(e2[i3] & 127);
        return n3;
      }
      function Sa2(e2, t2, r4) {
        let n3 = "";
        r4 = Math.min(e2.length, r4);
        for (let i3 = t2; i3 < r4; ++i3)
          n3 += String.fromCharCode(e2[i3]);
        return n3;
      }
      function Ia2(e2, t2, r4) {
        let n3 = e2.length;
        (!t2 || t2 < 0) && (t2 = 0), (!r4 || r4 < 0 || r4 > n3) && (r4 = n3);
        let i3 = "";
        for (let o5 = t2; o5 < r4; ++o5)
          i3 += La2[e2[o5]];
        return i3;
      }
      function ka(e2, t2, r4) {
        let n3 = e2.slice(t2, r4), i3 = "";
        for (let o5 = 0; o5 < n3.length - 1; o5 += 2)
          i3 += String.fromCharCode(n3[o5] + n3[o5 + 1] * 256);
        return i3;
      }
      T4.prototype.slice = function(e2, t2) {
        let r4 = this.length;
        e2 = ~~e2, t2 = t2 === void 0 ? r4 : ~~t2, e2 < 0 ? (e2 += r4, e2 < 0 && (e2 = 0)) : e2 > r4 && (e2 = r4), t2 < 0 ? (t2 += r4, t2 < 0 && (t2 = 0)) : t2 > r4 && (t2 = r4), t2 < e2 && (t2 = e2);
        let n3 = this.subarray(e2, t2);
        return Object.setPrototypeOf(n3, T4.prototype), n3;
      };
      function W2(e2, t2, r4) {
        if (e2 % 1 !== 0 || e2 < 0)
          throw new RangeError("offset is not uint");
        if (e2 + t2 > r4)
          throw new RangeError("Trying to access beyond buffer length");
      }
      T4.prototype.readUintLE = T4.prototype.readUIntLE = function(e2, t2, r4) {
        e2 = e2 >>> 0, t2 = t2 >>> 0, r4 || W2(e2, t2, this.length);
        let n3 = this[e2], i3 = 1, o5 = 0;
        for (; ++o5 < t2 && (i3 *= 256); )
          n3 += this[e2 + o5] * i3;
        return n3;
      };
      T4.prototype.readUintBE = T4.prototype.readUIntBE = function(e2, t2, r4) {
        e2 = e2 >>> 0, t2 = t2 >>> 0, r4 || W2(e2, t2, this.length);
        let n3 = this[e2 + --t2], i3 = 1;
        for (; t2 > 0 && (i3 *= 256); )
          n3 += this[e2 + --t2] * i3;
        return n3;
      };
      T4.prototype.readUint8 = T4.prototype.readUInt8 = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 1, this.length), this[e2];
      };
      T4.prototype.readUint16LE = T4.prototype.readUInt16LE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 2, this.length), this[e2] | this[e2 + 1] << 8;
      };
      T4.prototype.readUint16BE = T4.prototype.readUInt16BE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 2, this.length), this[e2] << 8 | this[e2 + 1];
      };
      T4.prototype.readUint32LE = T4.prototype.readUInt32LE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), (this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16) + this[e2 + 3] * 16777216;
      };
      T4.prototype.readUint32BE = T4.prototype.readUInt32BE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), this[e2] * 16777216 + (this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3]);
      };
      T4.prototype.readBigUInt64LE = ke3(function(e2) {
        e2 = e2 >>> 0, rt3(e2, "offset");
        let t2 = this[e2], r4 = this[e2 + 7];
        (t2 === void 0 || r4 === void 0) && Tt2(e2, this.length - 8);
        let n3 = t2 + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 24, i3 = this[++e2] + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + r4 * 2 ** 24;
        return BigInt(n3) + (BigInt(i3) << BigInt(32));
      });
      T4.prototype.readBigUInt64BE = ke3(function(e2) {
        e2 = e2 >>> 0, rt3(e2, "offset");
        let t2 = this[e2], r4 = this[e2 + 7];
        (t2 === void 0 || r4 === void 0) && Tt2(e2, this.length - 8);
        let n3 = t2 * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + this[++e2], i3 = this[++e2] * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + r4;
        return (BigInt(n3) << BigInt(32)) + BigInt(i3);
      });
      T4.prototype.readIntLE = function(e2, t2, r4) {
        e2 = e2 >>> 0, t2 = t2 >>> 0, r4 || W2(e2, t2, this.length);
        let n3 = this[e2], i3 = 1, o5 = 0;
        for (; ++o5 < t2 && (i3 *= 256); )
          n3 += this[e2 + o5] * i3;
        return i3 *= 128, n3 >= i3 && (n3 -= Math.pow(2, 8 * t2)), n3;
      };
      T4.prototype.readIntBE = function(e2, t2, r4) {
        e2 = e2 >>> 0, t2 = t2 >>> 0, r4 || W2(e2, t2, this.length);
        let n3 = t2, i3 = 1, o5 = this[e2 + --n3];
        for (; n3 > 0 && (i3 *= 256); )
          o5 += this[e2 + --n3] * i3;
        return i3 *= 128, o5 >= i3 && (o5 -= Math.pow(2, 8 * t2)), o5;
      };
      T4.prototype.readInt8 = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 1, this.length), this[e2] & 128 ? (255 - this[e2] + 1) * -1 : this[e2];
      };
      T4.prototype.readInt16LE = function(e2, t2) {
        e2 = e2 >>> 0, t2 || W2(e2, 2, this.length);
        let r4 = this[e2] | this[e2 + 1] << 8;
        return r4 & 32768 ? r4 | 4294901760 : r4;
      };
      T4.prototype.readInt16BE = function(e2, t2) {
        e2 = e2 >>> 0, t2 || W2(e2, 2, this.length);
        let r4 = this[e2 + 1] | this[e2] << 8;
        return r4 & 32768 ? r4 | 4294901760 : r4;
      };
      T4.prototype.readInt32LE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), this[e2] | this[e2 + 1] << 8 | this[e2 + 2] << 16 | this[e2 + 3] << 24;
      };
      T4.prototype.readInt32BE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), this[e2] << 24 | this[e2 + 1] << 16 | this[e2 + 2] << 8 | this[e2 + 3];
      };
      T4.prototype.readBigInt64LE = ke3(function(e2) {
        e2 = e2 >>> 0, rt3(e2, "offset");
        let t2 = this[e2], r4 = this[e2 + 7];
        (t2 === void 0 || r4 === void 0) && Tt2(e2, this.length - 8);
        let n3 = this[e2 + 4] + this[e2 + 5] * 2 ** 8 + this[e2 + 6] * 2 ** 16 + (r4 << 24);
        return (BigInt(n3) << BigInt(32)) + BigInt(t2 + this[++e2] * 2 ** 8 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 24);
      });
      T4.prototype.readBigInt64BE = ke3(function(e2) {
        e2 = e2 >>> 0, rt3(e2, "offset");
        let t2 = this[e2], r4 = this[e2 + 7];
        (t2 === void 0 || r4 === void 0) && Tt2(e2, this.length - 8);
        let n3 = (t2 << 24) + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + this[++e2];
        return (BigInt(n3) << BigInt(32)) + BigInt(this[++e2] * 2 ** 24 + this[++e2] * 2 ** 16 + this[++e2] * 2 ** 8 + r4);
      });
      T4.prototype.readFloatLE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), tt3.read(this, e2, true, 23, 4);
      };
      T4.prototype.readFloatBE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 4, this.length), tt3.read(this, e2, false, 23, 4);
      };
      T4.prototype.readDoubleLE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 8, this.length), tt3.read(this, e2, true, 52, 8);
      };
      T4.prototype.readDoubleBE = function(e2, t2) {
        return e2 = e2 >>> 0, t2 || W2(e2, 8, this.length), tt3.read(this, e2, false, 52, 8);
      };
      function oe2(e2, t2, r4, n3, i3, o5) {
        if (!T4.isBuffer(e2))
          throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t2 > i3 || t2 < o5)
          throw new RangeError('"value" argument is out of bounds');
        if (r4 + n3 > e2.length)
          throw new RangeError("Index out of range");
      }
      T4.prototype.writeUintLE = T4.prototype.writeUIntLE = function(e2, t2, r4, n3) {
        if (e2 = +e2, t2 = t2 >>> 0, r4 = r4 >>> 0, !n3) {
          let s3 = Math.pow(2, 8 * r4) - 1;
          oe2(this, e2, t2, r4, s3, 0);
        }
        let i3 = 1, o5 = 0;
        for (this[t2] = e2 & 255; ++o5 < r4 && (i3 *= 256); )
          this[t2 + o5] = e2 / i3 & 255;
        return t2 + r4;
      };
      T4.prototype.writeUintBE = T4.prototype.writeUIntBE = function(e2, t2, r4, n3) {
        if (e2 = +e2, t2 = t2 >>> 0, r4 = r4 >>> 0, !n3) {
          let s3 = Math.pow(2, 8 * r4) - 1;
          oe2(this, e2, t2, r4, s3, 0);
        }
        let i3 = r4 - 1, o5 = 1;
        for (this[t2 + i3] = e2 & 255; --i3 >= 0 && (o5 *= 256); )
          this[t2 + i3] = e2 / o5 & 255;
        return t2 + r4;
      };
      T4.prototype.writeUint8 = T4.prototype.writeUInt8 = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 1, 255, 0), this[t2] = e2 & 255, t2 + 1;
      };
      T4.prototype.writeUint16LE = T4.prototype.writeUInt16LE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 2, 65535, 0), this[t2] = e2 & 255, this[t2 + 1] = e2 >>> 8, t2 + 2;
      };
      T4.prototype.writeUint16BE = T4.prototype.writeUInt16BE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 2, 65535, 0), this[t2] = e2 >>> 8, this[t2 + 1] = e2 & 255, t2 + 2;
      };
      T4.prototype.writeUint32LE = T4.prototype.writeUInt32LE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 4, 4294967295, 0), this[t2 + 3] = e2 >>> 24, this[t2 + 2] = e2 >>> 16, this[t2 + 1] = e2 >>> 8, this[t2] = e2 & 255, t2 + 4;
      };
      T4.prototype.writeUint32BE = T4.prototype.writeUInt32BE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 4, 4294967295, 0), this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = e2 & 255, t2 + 4;
      };
      function li2(e2, t2, r4, n3, i3) {
        di(t2, n3, i3, e2, r4, 7);
        let o5 = Number(t2 & BigInt(4294967295));
        e2[r4++] = o5, o5 = o5 >> 8, e2[r4++] = o5, o5 = o5 >> 8, e2[r4++] = o5, o5 = o5 >> 8, e2[r4++] = o5;
        let s3 = Number(t2 >> BigInt(32) & BigInt(4294967295));
        return e2[r4++] = s3, s3 = s3 >> 8, e2[r4++] = s3, s3 = s3 >> 8, e2[r4++] = s3, s3 = s3 >> 8, e2[r4++] = s3, r4;
      }
      function ci2(e2, t2, r4, n3, i3) {
        di(t2, n3, i3, e2, r4, 7);
        let o5 = Number(t2 & BigInt(4294967295));
        e2[r4 + 7] = o5, o5 = o5 >> 8, e2[r4 + 6] = o5, o5 = o5 >> 8, e2[r4 + 5] = o5, o5 = o5 >> 8, e2[r4 + 4] = o5;
        let s3 = Number(t2 >> BigInt(32) & BigInt(4294967295));
        return e2[r4 + 3] = s3, s3 = s3 >> 8, e2[r4 + 2] = s3, s3 = s3 >> 8, e2[r4 + 1] = s3, s3 = s3 >> 8, e2[r4] = s3, r4 + 8;
      }
      T4.prototype.writeBigUInt64LE = ke3(function(e2, t2 = 0) {
        return li2(this, e2, t2, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      T4.prototype.writeBigUInt64BE = ke3(function(e2, t2 = 0) {
        return ci2(this, e2, t2, BigInt(0), BigInt("0xffffffffffffffff"));
      });
      T4.prototype.writeIntLE = function(e2, t2, r4, n3) {
        if (e2 = +e2, t2 = t2 >>> 0, !n3) {
          let a3 = Math.pow(2, 8 * r4 - 1);
          oe2(this, e2, t2, r4, a3 - 1, -a3);
        }
        let i3 = 0, o5 = 1, s3 = 0;
        for (this[t2] = e2 & 255; ++i3 < r4 && (o5 *= 256); )
          e2 < 0 && s3 === 0 && this[t2 + i3 - 1] !== 0 && (s3 = 1), this[t2 + i3] = (e2 / o5 >> 0) - s3 & 255;
        return t2 + r4;
      };
      T4.prototype.writeIntBE = function(e2, t2, r4, n3) {
        if (e2 = +e2, t2 = t2 >>> 0, !n3) {
          let a3 = Math.pow(2, 8 * r4 - 1);
          oe2(this, e2, t2, r4, a3 - 1, -a3);
        }
        let i3 = r4 - 1, o5 = 1, s3 = 0;
        for (this[t2 + i3] = e2 & 255; --i3 >= 0 && (o5 *= 256); )
          e2 < 0 && s3 === 0 && this[t2 + i3 + 1] !== 0 && (s3 = 1), this[t2 + i3] = (e2 / o5 >> 0) - s3 & 255;
        return t2 + r4;
      };
      T4.prototype.writeInt8 = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 1, 127, -128), e2 < 0 && (e2 = 255 + e2 + 1), this[t2] = e2 & 255, t2 + 1;
      };
      T4.prototype.writeInt16LE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 2, 32767, -32768), this[t2] = e2 & 255, this[t2 + 1] = e2 >>> 8, t2 + 2;
      };
      T4.prototype.writeInt16BE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 2, 32767, -32768), this[t2] = e2 >>> 8, this[t2 + 1] = e2 & 255, t2 + 2;
      };
      T4.prototype.writeInt32LE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 4, 2147483647, -2147483648), this[t2] = e2 & 255, this[t2 + 1] = e2 >>> 8, this[t2 + 2] = e2 >>> 16, this[t2 + 3] = e2 >>> 24, t2 + 4;
      };
      T4.prototype.writeInt32BE = function(e2, t2, r4) {
        return e2 = +e2, t2 = t2 >>> 0, r4 || oe2(this, e2, t2, 4, 2147483647, -2147483648), e2 < 0 && (e2 = 4294967295 + e2 + 1), this[t2] = e2 >>> 24, this[t2 + 1] = e2 >>> 16, this[t2 + 2] = e2 >>> 8, this[t2 + 3] = e2 & 255, t2 + 4;
      };
      T4.prototype.writeBigInt64LE = ke3(function(e2, t2 = 0) {
        return li2(this, e2, t2, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      T4.prototype.writeBigInt64BE = ke3(function(e2, t2 = 0) {
        return ci2(this, e2, t2, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
      });
      function pi2(e2, t2, r4, n3, i3, o5) {
        if (r4 + n3 > e2.length)
          throw new RangeError("Index out of range");
        if (r4 < 0)
          throw new RangeError("Index out of range");
      }
      function fi(e2, t2, r4, n3, i3) {
        return t2 = +t2, r4 = r4 >>> 0, i3 || pi2(e2, t2, r4, 4, 34028234663852886e22, -34028234663852886e22), tt3.write(e2, t2, r4, n3, 23, 4), r4 + 4;
      }
      T4.prototype.writeFloatLE = function(e2, t2, r4) {
        return fi(this, e2, t2, true, r4);
      };
      T4.prototype.writeFloatBE = function(e2, t2, r4) {
        return fi(this, e2, t2, false, r4);
      };
      function mi2(e2, t2, r4, n3, i3) {
        return t2 = +t2, r4 = r4 >>> 0, i3 || pi2(e2, t2, r4, 8, 17976931348623157e292, -17976931348623157e292), tt3.write(e2, t2, r4, n3, 52, 8), r4 + 8;
      }
      T4.prototype.writeDoubleLE = function(e2, t2, r4) {
        return mi2(this, e2, t2, true, r4);
      };
      T4.prototype.writeDoubleBE = function(e2, t2, r4) {
        return mi2(this, e2, t2, false, r4);
      };
      T4.prototype.copy = function(e2, t2, r4, n3) {
        if (!T4.isBuffer(e2))
          throw new TypeError("argument should be a Buffer");
        if (r4 || (r4 = 0), !n3 && n3 !== 0 && (n3 = this.length), t2 >= e2.length && (t2 = e2.length), t2 || (t2 = 0), n3 > 0 && n3 < r4 && (n3 = r4), n3 === r4 || e2.length === 0 || this.length === 0)
          return 0;
        if (t2 < 0)
          throw new RangeError("targetStart out of bounds");
        if (r4 < 0 || r4 >= this.length)
          throw new RangeError("Index out of range");
        if (n3 < 0)
          throw new RangeError("sourceEnd out of bounds");
        n3 > this.length && (n3 = this.length), e2.length - t2 < n3 - r4 && (n3 = e2.length - t2 + r4);
        let i3 = n3 - r4;
        return this === e2 && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(t2, r4, n3) : Uint8Array.prototype.set.call(e2, this.subarray(r4, n3), t2), i3;
      };
      T4.prototype.fill = function(e2, t2, r4, n3) {
        if (typeof e2 == "string") {
          if (typeof t2 == "string" ? (n3 = t2, t2 = 0, r4 = this.length) : typeof r4 == "string" && (n3 = r4, r4 = this.length), n3 !== void 0 && typeof n3 != "string")
            throw new TypeError("encoding must be a string");
          if (typeof n3 == "string" && !T4.isEncoding(n3))
            throw new TypeError("Unknown encoding: " + n3);
          if (e2.length === 1) {
            let o5 = e2.charCodeAt(0);
            (n3 === "utf8" && o5 < 128 || n3 === "latin1") && (e2 = o5);
          }
        } else
          typeof e2 == "number" ? e2 = e2 & 255 : typeof e2 == "boolean" && (e2 = Number(e2));
        if (t2 < 0 || this.length < t2 || this.length < r4)
          throw new RangeError("Out of range index");
        if (r4 <= t2)
          return this;
        t2 = t2 >>> 0, r4 = r4 === void 0 ? this.length : r4 >>> 0, e2 || (e2 = 0);
        let i3;
        if (typeof e2 == "number")
          for (i3 = t2; i3 < r4; ++i3)
            this[i3] = e2;
        else {
          let o5 = T4.isBuffer(e2) ? e2 : T4.from(e2, n3), s3 = o5.length;
          if (s3 === 0)
            throw new TypeError('The value "' + e2 + '" is invalid for argument "value"');
          for (i3 = 0; i3 < r4 - t2; ++i3)
            this[i3 + t2] = o5[i3 % s3];
        }
        return this;
      };
      var et3 = {};
      function en2(e2, t2, r4) {
        et3[e2] = class extends r4 {
          constructor() {
            super(), Object.defineProperty(this, "message", { value: t2.apply(this, arguments), writable: true, configurable: true }), this.name = `${this.name} [${e2}]`, this.stack, delete this.name;
          }
          get code() {
            return e2;
          }
          set code(n3) {
            Object.defineProperty(this, "code", { configurable: true, enumerable: true, value: n3, writable: true });
          }
          toString() {
            return `${this.name} [${e2}]: ${this.message}`;
          }
        };
      }
      en2("ERR_BUFFER_OUT_OF_BOUNDS", function(e2) {
        return e2 ? `${e2} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds";
      }, RangeError);
      en2("ERR_INVALID_ARG_TYPE", function(e2, t2) {
        return `The "${e2}" argument must be of type number. Received type ${typeof t2}`;
      }, TypeError);
      en2("ERR_OUT_OF_RANGE", function(e2, t2, r4) {
        let n3 = `The value of "${e2}" is out of range.`, i3 = r4;
        return Number.isInteger(r4) && Math.abs(r4) > 2 ** 32 ? i3 = ti2(String(r4)) : typeof r4 == "bigint" && (i3 = String(r4), (r4 > BigInt(2) ** BigInt(32) || r4 < -(BigInt(2) ** BigInt(32))) && (i3 = ti2(i3)), i3 += "n"), n3 += ` It must be ${t2}. Received ${i3}`, n3;
      }, RangeError);
      function ti2(e2) {
        let t2 = "", r4 = e2.length, n3 = e2[0] === "-" ? 1 : 0;
        for (; r4 >= n3 + 4; r4 -= 3)
          t2 = `_${e2.slice(r4 - 3, r4)}${t2}`;
        return `${e2.slice(0, r4)}${t2}`;
      }
      function Da2(e2, t2, r4) {
        rt3(t2, "offset"), (e2[t2] === void 0 || e2[t2 + r4] === void 0) && Tt2(t2, e2.length - (r4 + 1));
      }
      function di(e2, t2, r4, n3, i3, o5) {
        if (e2 > r4 || e2 < t2) {
          let s3 = typeof t2 == "bigint" ? "n" : "", a3;
          throw o5 > 3 ? t2 === 0 || t2 === BigInt(0) ? a3 = `>= 0${s3} and < 2${s3} ** ${(o5 + 1) * 8}${s3}` : a3 = `>= -(2${s3} ** ${(o5 + 1) * 8 - 1}${s3}) and < 2 ** ${(o5 + 1) * 8 - 1}${s3}` : a3 = `>= ${t2}${s3} and <= ${r4}${s3}`, new et3.ERR_OUT_OF_RANGE("value", a3, e2);
        }
        Da2(n3, i3, o5);
      }
      function rt3(e2, t2) {
        if (typeof e2 != "number")
          throw new et3.ERR_INVALID_ARG_TYPE(t2, "number", e2);
      }
      function Tt2(e2, t2, r4) {
        throw Math.floor(e2) !== e2 ? (rt3(e2, r4), new et3.ERR_OUT_OF_RANGE(r4 || "offset", "an integer", e2)) : t2 < 0 ? new et3.ERR_BUFFER_OUT_OF_BOUNDS() : new et3.ERR_OUT_OF_RANGE(r4 || "offset", `>= ${r4 ? 1 : 0} and <= ${t2}`, e2);
      }
      var Ma = /[^+/0-9A-Za-z-_]/g;
      function Oa(e2) {
        if (e2 = e2.split("=")[0], e2 = e2.trim().replace(Ma, ""), e2.length < 2)
          return "";
        for (; e2.length % 4 !== 0; )
          e2 = e2 + "=";
        return e2;
      }
      function Yr(e2, t2) {
        t2 = t2 || 1 / 0;
        let r4, n3 = e2.length, i3 = null, o5 = [];
        for (let s3 = 0; s3 < n3; ++s3) {
          if (r4 = e2.charCodeAt(s3), r4 > 55295 && r4 < 57344) {
            if (!i3) {
              if (r4 > 56319) {
                (t2 -= 3) > -1 && o5.push(239, 191, 189);
                continue;
              } else if (s3 + 1 === n3) {
                (t2 -= 3) > -1 && o5.push(239, 191, 189);
                continue;
              }
              i3 = r4;
              continue;
            }
            if (r4 < 56320) {
              (t2 -= 3) > -1 && o5.push(239, 191, 189), i3 = r4;
              continue;
            }
            r4 = (i3 - 55296 << 10 | r4 - 56320) + 65536;
          } else
            i3 && (t2 -= 3) > -1 && o5.push(239, 191, 189);
          if (i3 = null, r4 < 128) {
            if ((t2 -= 1) < 0)
              break;
            o5.push(r4);
          } else if (r4 < 2048) {
            if ((t2 -= 2) < 0)
              break;
            o5.push(r4 >> 6 | 192, r4 & 63 | 128);
          } else if (r4 < 65536) {
            if ((t2 -= 3) < 0)
              break;
            o5.push(r4 >> 12 | 224, r4 >> 6 & 63 | 128, r4 & 63 | 128);
          } else if (r4 < 1114112) {
            if ((t2 -= 4) < 0)
              break;
            o5.push(r4 >> 18 | 240, r4 >> 12 & 63 | 128, r4 >> 6 & 63 | 128, r4 & 63 | 128);
          } else
            throw new Error("Invalid code point");
        }
        return o5;
      }
      function Na(e2) {
        let t2 = [];
        for (let r4 = 0; r4 < e2.length; ++r4)
          t2.push(e2.charCodeAt(r4) & 255);
        return t2;
      }
      function _a3(e2, t2) {
        let r4, n3, i3, o5 = [];
        for (let s3 = 0; s3 < e2.length && !((t2 -= 2) < 0); ++s3)
          r4 = e2.charCodeAt(s3), n3 = r4 >> 8, i3 = r4 % 256, o5.push(i3), o5.push(n3);
        return o5;
      }
      function gi2(e2) {
        return Kr.toByteArray(Oa(e2));
      }
      function sr(e2, t2, r4, n3) {
        let i3;
        for (i3 = 0; i3 < n3 && !(i3 + r4 >= t2.length || i3 >= e2.length); ++i3)
          t2[i3 + r4] = e2[i3];
        return i3;
      }
      function me3(e2, t2) {
        return e2 instanceof t2 || e2 != null && e2.constructor != null && e2.constructor.name != null && e2.constructor.name === t2.name;
      }
      function tn2(e2) {
        return e2 !== e2;
      }
      var La2 = function() {
        let e2 = "0123456789abcdef", t2 = new Array(256);
        for (let r4 = 0; r4 < 16; ++r4) {
          let n3 = r4 * 16;
          for (let i3 = 0; i3 < 16; ++i3)
            t2[n3 + i3] = e2[r4] + e2[i3];
        }
        return t2;
      }();
      function ke3(e2) {
        return typeof BigInt > "u" ? Fa : e2;
      }
      function Fa() {
        throw new Error("BigInt not supported");
      }
    });
    var w7;
    var d5 = be3(() => {
      "use strict";
      w7 = Ve2(hi());
    });
    function Ba2() {
      return false;
    }
    var $a;
    var qa;
    var bi;
    var xi = be3(() => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      $a = {}, qa = { existsSync: Ba2, promises: $a }, bi = qa;
    });
    var Oi = Ie3((of, Mi) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      Mi.exports = (lr(), Wr(sn2)).format;
    });
    var sn2 = {};
    vt3(sn2, { default: () => ja, deprecate: () => _i, format: () => Li, inspect: () => cr, promisify: () => Ni });
    function Ni(e2) {
      return (...t2) => new Promise((r4, n3) => {
        e2(...t2, (i3, o5) => {
          i3 ? n3(i3) : r4(o5);
        });
      });
    }
    function _i(e2, t2) {
      return (...r4) => (console.warn(t2), e2(...r4));
    }
    function cr(e2) {
      return JSON.stringify(e2, (t2, r4) => typeof r4 == "function" ? r4.toString() : typeof r4 == "bigint" ? `${r4}n` : r4 instanceof Error ? { ...r4, message: r4.message, stack: r4.stack } : r4);
    }
    var Li;
    var Va;
    var ja;
    var lr = be3(() => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      Li = Oi(), Va = { promisify: Ni, deprecate: _i, inspect: cr, format: Li }, ja = Va;
    });
    function Wa(...e2) {
      return e2.join("/");
    }
    function Ka(...e2) {
      return e2.join("/");
    }
    var ji;
    var za;
    var Ya;
    var At;
    var Ji2 = be3(() => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      ji = "/", za = { sep: ji }, Ya = { resolve: Wa, posix: za, join: Ka, sep: ji }, At = Ya;
    });
    var fr;
    var Gi = be3(() => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      fr = class {
        constructor() {
          this.events = {};
        }
        on(t2, r4) {
          return this.events[t2] || (this.events[t2] = []), this.events[t2].push(r4), this;
        }
        emit(t2, ...r4) {
          return this.events[t2] ? (this.events[t2].forEach((n3) => {
            n3(...r4);
          }), true) : false;
        }
      };
    });
    var Wi = Ie3((cm, Hi) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      Hi.exports = (e2, t2 = 1, r4) => {
        if (r4 = { indent: " ", includeEmptyLines: false, ...r4 }, typeof e2 != "string")
          throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e2}\``);
        if (typeof t2 != "number")
          throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t2}\``);
        if (typeof r4.indent != "string")
          throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r4.indent}\``);
        if (t2 === 0)
          return e2;
        let n3 = r4.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm;
        return e2.replace(n3, r4.indent.repeat(t2));
      };
    });
    var Yi = Ie3((Pm, zi) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      zi.exports = ({ onlyFirst: e2 = false } = {}) => {
        let t2 = ["[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)", "(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))"].join("|");
        return new RegExp(t2, e2 ? void 0 : "g");
      };
    });
    var Xi = Ie3((Sm, Zi2) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      var nu2 = Yi();
      Zi2.exports = (e2) => typeof e2 == "string" ? e2.replace(nu2(), "") : e2;
    });
    var no2 = Ie3((Th, au2) => {
      au2.exports = { name: "@prisma/engines-version", version: "5.10.0-34.5a9203d0590c951969e85a7d07215503f4672eb9", main: "index.js", types: "index.d.ts", license: "Apache-2.0", author: "Tim Suchanek <suchanek@prisma.io>", prisma: { enginesVersion: "5a9203d0590c951969e85a7d07215503f4672eb9" }, repository: { type: "git", url: "https://github.com/prisma/engines-wrapper.git", directory: "packages/engines-version" }, devDependencies: { "@types/node": "18.19.15", typescript: "4.9.5" }, files: ["index.js", "index.d.ts"], scripts: { build: "tsc -d" } };
    });
    var io2 = Ie3(() => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
    });
    var Un = Ie3((H22, ds2) => {
      "use strict";
      d5();
      c4();
      p6();
      f4();
      m4();
      ds2.exports = /* @__PURE__ */ function() {
        function e2(t2, r4, n3, i3, o5) {
          return t2 < r4 || n3 < r4 ? t2 > n3 ? n3 + 1 : t2 + 1 : i3 === o5 ? r4 : r4 + 1;
        }
        return function(t2, r4) {
          if (t2 === r4)
            return 0;
          if (t2.length > r4.length) {
            var n3 = t2;
            t2 = r4, r4 = n3;
          }
          for (var i3 = t2.length, o5 = r4.length; i3 > 0 && t2.charCodeAt(i3 - 1) === r4.charCodeAt(o5 - 1); )
            i3--, o5--;
          for (var s3 = 0; s3 < i3 && t2.charCodeAt(s3) === r4.charCodeAt(s3); )
            s3++;
          if (i3 -= s3, o5 -= s3, i3 === 0 || o5 < 3)
            return o5;
          var a3 = 0, u4, l3, g4, h2, v4, S5, A4, R5, D4, M4, B2, I4, L5 = [];
          for (u4 = 0; u4 < i3; u4++)
            L5.push(u4 + 1), L5.push(t2.charCodeAt(s3 + u4));
          for (var ee2 = L5.length - 1; a3 < o5 - 3; )
            for (D4 = r4.charCodeAt(s3 + (l3 = a3)), M4 = r4.charCodeAt(s3 + (g4 = a3 + 1)), B2 = r4.charCodeAt(s3 + (h2 = a3 + 2)), I4 = r4.charCodeAt(s3 + (v4 = a3 + 3)), S5 = a3 += 4, u4 = 0; u4 < ee2; u4 += 2)
              A4 = L5[u4], R5 = L5[u4 + 1], l3 = e2(A4, l3, g4, D4, R5), g4 = e2(l3, g4, h2, M4, R5), h2 = e2(g4, h2, v4, B2, R5), S5 = e2(h2, v4, S5, I4, R5), L5[u4] = S5, v4 = h2, h2 = g4, g4 = l3, l3 = A4;
          for (; a3 < o5; )
            for (D4 = r4.charCodeAt(s3 + (l3 = a3)), S5 = ++a3, u4 = 0; u4 < ee2; u4 += 2)
              A4 = L5[u4], L5[u4] = S5 = e2(A4, l3, S5, D4, L5[u4 + 1]), l3 = A4;
          return S5;
        };
      }();
    });
    var Bc = {};
    vt3(Bc, { Debug: () => an2, Decimal: () => ye3, Extensions: () => rn2, MetricsClient: () => at2, NotFoundError: () => Pe2, PrismaClientInitializationError: () => G2, PrismaClientKnownRequestError: () => K2, PrismaClientRustPanicError: () => ve2, PrismaClientUnknownRequestError: () => se2, PrismaClientValidationError: () => Z2, Public: () => nn2, Sql: () => ae2, defineDmmfProperty: () => ro2, detectRuntime: () => _r2, empty: () => so2, getPrismaClient: () => na, join: () => oo2, makeStrictEnum: () => ia, objectEnumValues: () => dr, raw: () => yn2, sqltag: () => wn2, warnEnvConflicts: () => void 0, warnOnce: () => It2 });
    module.exports = Wr(Bc);
    d5();
    c4();
    p6();
    f4();
    m4();
    var rn2 = {};
    vt3(rn2, { defineExtension: () => yi, getExtensionContext: () => wi });
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function yi(e2) {
      return typeof e2 == "function" ? e2 : (t2) => t2.$extends(e2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function wi(e2) {
      return e2;
    }
    var nn2 = {};
    vt3(nn2, { validator: () => Ei });
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function Ei(...e2) {
      return (t2) => t2;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var on2;
    var Pi;
    var vi;
    var Ti;
    var Ci2 = true;
    typeof y3 != "undefined" && ({ FORCE_COLOR: on2, NODE_DISABLE_COLORS: Pi, NO_COLOR: vi, TERM: Ti } = y3.env || {}, Ci2 = y3.stdout && y3.stdout.isTTY);
    var Ua = { enabled: !Pi && vi == null && Ti !== "dumb" && (on2 != null && on2 !== "0" || Ci2) };
    function V3(e2, t2) {
      let r4 = new RegExp(`\\x1b\\[${t2}m`, "g"), n3 = `\x1B[${e2}m`, i3 = `\x1B[${t2}m`;
      return function(o5) {
        return !Ua.enabled || o5 == null ? o5 : n3 + (~("" + o5).indexOf(i3) ? o5.replace(r4, i3 + n3) : o5) + i3;
      };
    }
    var _p = V3(0, 0);
    var ar = V3(1, 22);
    var ur = V3(2, 22);
    var Lp = V3(3, 23);
    var Ai = V3(4, 24);
    var Fp = V3(7, 27);
    var Bp = V3(8, 28);
    var $p = V3(9, 29);
    var qp = V3(30, 39);
    var it2 = V3(31, 39);
    var Ri = V3(32, 39);
    var Si = V3(33, 39);
    var Ii = V3(34, 39);
    var Up = V3(35, 39);
    var ki = V3(36, 39);
    var Vp = V3(37, 39);
    var Di = V3(90, 39);
    var jp = V3(90, 39);
    var Jp = V3(40, 49);
    var Qp = V3(41, 49);
    var Gp = V3(42, 49);
    var Hp = V3(43, 49);
    var Wp = V3(44, 49);
    var Kp = V3(45, 49);
    var zp = V3(46, 49);
    var Yp = V3(47, 49);
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ja = 100;
    var Fi2 = ["green", "yellow", "blue", "magenta", "cyan", "red"];
    var pr2 = [];
    var Bi = Date.now();
    var Qa2 = 0;
    var $i;
    var qi;
    (qi = globalThis.DEBUG) != null || (globalThis.DEBUG = ($i = y3.env.DEBUG) != null ? $i : "");
    var Ui;
    (Ui = globalThis.DEBUG_COLORS) != null || (globalThis.DEBUG_COLORS = y3.env.DEBUG_COLORS ? y3.env.DEBUG_COLORS === "true" : true);
    var Ct = { enable(e2) {
      typeof e2 == "string" && (globalThis.DEBUG = e2);
    }, disable() {
      let e2 = globalThis.DEBUG;
      return globalThis.DEBUG = "", e2;
    }, enabled(e2) {
      let t2 = globalThis.DEBUG.split(",").map((i3) => i3.replace(/[.+?^${}()|[\]\\]/g, "\\$&")), r4 = t2.some((i3) => i3 === "" || i3[0] === "-" ? false : e2.match(RegExp(i3.split("*").join(".*") + "$"))), n3 = t2.some((i3) => i3 === "" || i3[0] !== "-" ? false : e2.match(RegExp(i3.slice(1).split("*").join(".*") + "$")));
      return r4 && !n3;
    }, log: (...e2) => {
      var o5;
      let [t2, r4, ...n3] = e2, i3;
      typeof __require == "function" && typeof y3 != "undefined" && typeof y3.stderr != "undefined" && typeof y3.stderr.write == "function" ? i3 = (...s3) => {
        let a3 = (lr(), Wr(sn2));
        y3.stderr.write(a3.format(...s3) + `
`);
      } : i3 = (o5 = console.warn) != null ? o5 : console.log, i3(`${t2} ${r4}`, ...n3);
    }, formatters: {} };
    function Ga(e2) {
      let t2 = { color: Fi2[Qa2++ % Fi2.length], enabled: Ct.enabled(e2), namespace: e2, log: Ct.log, extend: () => {
      } }, r4 = (...n3) => {
        let { enabled: i3, namespace: o5, color: s3, log: a3 } = t2;
        if (n3.length !== 0 && pr2.push([o5, ...n3]), pr2.length > Ja && pr2.shift(), Ct.enabled(o5) || i3) {
          let u4 = n3.map((g4) => typeof g4 == "string" ? g4 : Ha(g4)), l3 = `+${Date.now() - Bi}ms`;
          Bi = Date.now(), a3(o5, ...u4, l3);
        }
      };
      return new Proxy(r4, { get: (n3, i3) => t2[i3], set: (n3, i3, o5) => t2[i3] = o5 });
    }
    var an2 = new Proxy(Ga, { get: (e2, t2) => Ct[t2], set: (e2, t2, r4) => Ct[t2] = r4 });
    function Ha(e2, t2 = 2) {
      let r4 = /* @__PURE__ */ new Set();
      return JSON.stringify(e2, (n3, i3) => {
        if (typeof i3 == "object" && i3 !== null) {
          if (r4.has(i3))
            return "[Circular *]";
          r4.add(i3);
        } else if (typeof i3 == "bigint")
          return i3.toString();
        return i3;
      }, t2);
    }
    function Vi() {
      pr2.length = 0;
    }
    var ne2 = an2;
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Qi = "library";
    function Rt(e2) {
      let t2 = Za();
      return t2 || ((e2 == null ? void 0 : e2.config.engineType) === "library" ? "library" : (e2 == null ? void 0 : e2.config.engineType) === "binary" ? "binary" : Qi);
    }
    function Za() {
      let e2 = y3.env.PRISMA_CLIENT_ENGINE_TYPE;
      return e2 === "library" ? "library" : e2 === "binary" ? "binary" : void 0;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var De2;
    ((t2) => {
      let e2;
      ((I4) => (I4.findUnique = "findUnique", I4.findUniqueOrThrow = "findUniqueOrThrow", I4.findFirst = "findFirst", I4.findFirstOrThrow = "findFirstOrThrow", I4.findMany = "findMany", I4.create = "create", I4.createMany = "createMany", I4.update = "update", I4.updateMany = "updateMany", I4.upsert = "upsert", I4.delete = "delete", I4.deleteMany = "deleteMany", I4.groupBy = "groupBy", I4.count = "count", I4.aggregate = "aggregate", I4.findRaw = "findRaw", I4.aggregateRaw = "aggregateRaw"))(e2 = t2.ModelAction || (t2.ModelAction = {}));
    })(De2 || (De2 = {}));
    var ot2 = {};
    vt3(ot2, { error: () => tu2, info: () => eu, log: () => Xa2, query: () => ru2, should: () => Ki2, tags: () => St2, warn: () => un2 });
    d5();
    c4();
    p6();
    f4();
    m4();
    var St2 = { error: it2("prisma:error"), warn: Si("prisma:warn"), info: ki("prisma:info"), query: Ii("prisma:query") };
    var Ki2 = { warn: () => !y3.env.PRISMA_DISABLE_WARNINGS };
    function Xa2(...e2) {
      console.log(...e2);
    }
    function un2(e2, ...t2) {
      Ki2.warn() && console.warn(`${St2.warn} ${e2}`, ...t2);
    }
    function eu(e2, ...t2) {
      console.info(`${St2.info} ${e2}`, ...t2);
    }
    function tu2(e2, ...t2) {
      console.error(`${St2.error} ${e2}`, ...t2);
    }
    function ru2(e2, ...t2) {
      console.log(`${St2.query} ${e2}`, ...t2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Je2(e2, t2) {
      throw new Error(t2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function ln2(e2, t2) {
      return Object.prototype.hasOwnProperty.call(e2, t2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var cn2 = (e2, t2) => e2.reduce((r4, n3) => (r4[t2(n3)] = n3, r4), {});
    d5();
    c4();
    p6();
    f4();
    m4();
    function st3(e2, t2) {
      let r4 = {};
      for (let n3 of Object.keys(e2))
        r4[n3] = t2(e2[n3], n3);
      return r4;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function pn2(e2, t2) {
      if (e2.length === 0)
        return;
      let r4 = e2[0];
      for (let n3 = 1; n3 < e2.length; n3++)
        t2(r4, e2[n3]) < 0 && (r4 = e2[n3]);
      return r4;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function N5(e2, t2) {
      Object.defineProperty(e2, "name", { value: t2, configurable: true });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var eo2 = /* @__PURE__ */ new Set();
    var It2 = (e2, t2, ...r4) => {
      eo2.has(e2) || (eo2.add(e2), un2(t2, ...r4));
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var K2 = class extends Error {
      constructor(t2, { code: r4, clientVersion: n3, meta: i3, batchRequestIdx: o5 }) {
        super(t2), this.name = "PrismaClientKnownRequestError", this.code = r4, this.clientVersion = n3, this.meta = i3, Object.defineProperty(this, "batchRequestIdx", { value: o5, enumerable: false, writable: true });
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientKnownRequestError";
      }
    };
    N5(K2, "PrismaClientKnownRequestError");
    var Pe2 = class extends K2 {
      constructor(t2, r4) {
        super(t2, { code: "P2025", clientVersion: r4 }), this.name = "NotFoundError";
      }
    };
    N5(Pe2, "NotFoundError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var G2 = class e2 extends Error {
      constructor(t2, r4, n3) {
        super(t2), this.name = "PrismaClientInitializationError", this.clientVersion = r4, this.errorCode = n3, Error.captureStackTrace(e2);
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientInitializationError";
      }
    };
    N5(G2, "PrismaClientInitializationError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var ve2 = class extends Error {
      constructor(t2, r4) {
        super(t2), this.name = "PrismaClientRustPanicError", this.clientVersion = r4;
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientRustPanicError";
      }
    };
    N5(ve2, "PrismaClientRustPanicError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var se2 = class extends Error {
      constructor(t2, { clientVersion: r4, batchRequestIdx: n3 }) {
        super(t2), this.name = "PrismaClientUnknownRequestError", this.clientVersion = r4, Object.defineProperty(this, "batchRequestIdx", { value: n3, writable: true, enumerable: false });
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientUnknownRequestError";
      }
    };
    N5(se2, "PrismaClientUnknownRequestError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Z2 = class extends Error {
      constructor(r4, { clientVersion: n3 }) {
        super(r4);
        this.name = "PrismaClientValidationError";
        this.clientVersion = n3;
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientValidationError";
      }
    };
    N5(Z2, "PrismaClientValidationError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var at2 = class {
      constructor(t2) {
        this._engine = t2;
      }
      prometheus(t2) {
        return this._engine.metrics({ format: "prometheus", ...t2 });
      }
      json(t2) {
        return this._engine.metrics({ format: "json", ...t2 });
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function kt3(e2) {
      let t2;
      return { get() {
        return t2 || (t2 = { value: e2() }), t2.value;
      } };
    }
    function ro2(e2, t2) {
      let r4 = kt3(() => iu(t2));
      Object.defineProperty(e2, "dmmf", { get: () => r4.get() });
    }
    function iu(e2) {
      return { datamodel: { models: fn2(e2.models), enums: fn2(e2.enums), types: fn2(e2.types) } };
    }
    function fn2(e2) {
      return Object.entries(e2).map(([t2, r4]) => ({ name: t2, ...r4 }));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var mr2 = Symbol();
    var mn2 = /* @__PURE__ */ new WeakMap();
    var Te2 = class {
      constructor(t2) {
        t2 === mr2 ? mn2.set(this, `Prisma.${this._getName()}`) : mn2.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`);
      }
      _getName() {
        return this.constructor.name;
      }
      toString() {
        return mn2.get(this);
      }
    };
    var Dt = class extends Te2 {
      _getNamespace() {
        return "NullTypes";
      }
    };
    var Mt2 = class extends Dt {
    };
    dn2(Mt2, "DbNull");
    var Ot2 = class extends Dt {
    };
    dn2(Ot2, "JsonNull");
    var Nt2 = class extends Dt {
    };
    dn2(Nt2, "AnyNull");
    var dr = { classes: { DbNull: Mt2, JsonNull: Ot2, AnyNull: Nt2 }, instances: { DbNull: new Mt2(mr2), JsonNull: new Ot2(mr2), AnyNull: new Nt2(mr2) } };
    function dn2(e2, t2) {
      Object.defineProperty(e2, "name", { value: t2, configurable: true });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function _t3(e2) {
      return { ok: false, error: e2, map() {
        return _t3(e2);
      }, flatMap() {
        return _t3(e2);
      } };
    }
    var gn2 = class {
      constructor() {
        this.registeredErrors = [];
      }
      consumeError(t2) {
        return this.registeredErrors[t2];
      }
      registerNewError(t2) {
        let r4 = 0;
        for (; this.registeredErrors[r4] !== void 0; )
          r4++;
        return this.registeredErrors[r4] = { error: t2 }, r4;
      }
    };
    var hn2 = (e2) => {
      let t2 = new gn2(), r4 = Qe3(t2, e2.startTransaction.bind(e2)), n3 = { errorRegistry: t2, queryRaw: Qe3(t2, e2.queryRaw.bind(e2)), executeRaw: Qe3(t2, e2.executeRaw.bind(e2)), provider: e2.provider, startTransaction: async (...i3) => (await r4(...i3)).map((s3) => ou(t2, s3)) };
      return e2.getConnectionInfo && (n3.getConnectionInfo = su(t2, e2.getConnectionInfo.bind(e2))), n3;
    };
    var ou = (e2, t2) => ({ provider: t2.provider, options: t2.options, queryRaw: Qe3(e2, t2.queryRaw.bind(t2)), executeRaw: Qe3(e2, t2.executeRaw.bind(t2)), commit: Qe3(e2, t2.commit.bind(t2)), rollback: Qe3(e2, t2.rollback.bind(t2)) });
    function Qe3(e2, t2) {
      return async (...r4) => {
        try {
          return await t2(...r4);
        } catch (n3) {
          let i3 = e2.registerNewError(n3);
          return _t3({ kind: "GenericJs", id: i3 });
        }
      };
    }
    function su(e2, t2) {
      return (...r4) => {
        try {
          return t2(...r4);
        } catch (n3) {
          let i3 = e2.registerNewError(n3);
          return _t3({ kind: "GenericJs", id: i3 });
        }
      };
    }
    var ra = Ve2(no2());
    var rD = Ve2(io2());
    Gi();
    xi();
    Ji2();
    d5();
    c4();
    p6();
    f4();
    m4();
    var ae2 = class e2 {
      constructor(t2, r4) {
        if (t2.length - 1 !== r4.length)
          throw t2.length === 0 ? new TypeError("Expected at least 1 string") : new TypeError(`Expected ${t2.length} strings to have ${t2.length - 1} values`);
        let n3 = r4.reduce((s3, a3) => s3 + (a3 instanceof e2 ? a3.values.length : 1), 0);
        this.values = new Array(n3), this.strings = new Array(n3 + 1), this.strings[0] = t2[0];
        let i3 = 0, o5 = 0;
        for (; i3 < r4.length; ) {
          let s3 = r4[i3++], a3 = t2[i3];
          if (s3 instanceof e2) {
            this.strings[o5] += s3.strings[0];
            let u4 = 0;
            for (; u4 < s3.values.length; )
              this.values[o5++] = s3.values[u4++], this.strings[o5] = s3.strings[u4];
            this.strings[o5] += a3;
          } else
            this.values[o5++] = s3, this.strings[o5] = a3;
        }
      }
      get text() {
        let t2 = this.strings.length, r4 = 1, n3 = this.strings[0];
        for (; r4 < t2; )
          n3 += `$${r4}${this.strings[r4++]}`;
        return n3;
      }
      get sql() {
        let t2 = this.strings.length, r4 = 1, n3 = this.strings[0];
        for (; r4 < t2; )
          n3 += `?${this.strings[r4++]}`;
        return n3;
      }
      get statement() {
        let t2 = this.strings.length, r4 = 1, n3 = this.strings[0];
        for (; r4 < t2; )
          n3 += `:${r4}${this.strings[r4++]}`;
        return n3;
      }
      inspect() {
        return { text: this.text, sql: this.sql, values: this.values };
      }
    };
    function oo2(e2, t2 = ",", r4 = "", n3 = "") {
      if (e2.length === 0)
        throw new TypeError("Expected `join([])` to be called with an array of multiple elements, but got an empty array");
      return new ae2([r4, ...Array(e2.length - 1).fill(t2), n3], e2);
    }
    function yn2(e2) {
      return new ae2([e2], []);
    }
    var so2 = yn2("");
    function wn2(e2, ...t2) {
      return new ae2(e2, t2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function Lt(e2) {
      return { getKeys() {
        return Object.keys(e2);
      }, getPropertyValue(t2) {
        return e2[t2];
      } };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function ie3(e2, t2) {
      return { getKeys() {
        return [e2];
      }, getPropertyValue() {
        return t2();
      } };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var de3 = class {
      constructor() {
        this._map = /* @__PURE__ */ new Map();
      }
      get(t2) {
        var r4;
        return (r4 = this._map.get(t2)) == null ? void 0 : r4.value;
      }
      set(t2, r4) {
        this._map.set(t2, { value: r4 });
      }
      getOrCreate(t2, r4) {
        let n3 = this._map.get(t2);
        if (n3)
          return n3.value;
        let i3 = r4();
        return this.set(t2, i3), i3;
      }
    };
    function Ge2(e2) {
      let t2 = new de3();
      return { getKeys() {
        return e2.getKeys();
      }, getPropertyValue(r4) {
        return t2.getOrCreate(r4, () => e2.getPropertyValue(r4));
      }, getPropertyDescriptor(r4) {
        var n3;
        return (n3 = e2.getPropertyDescriptor) == null ? void 0 : n3.call(e2, r4);
      } };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    lr();
    d5();
    c4();
    p6();
    f4();
    m4();
    var gr2 = { enumerable: true, configurable: true, writable: true };
    function hr2(e2) {
      let t2 = new Set(e2);
      return { getOwnPropertyDescriptor: () => gr2, has: (r4, n3) => t2.has(n3), set: (r4, n3, i3) => t2.add(n3) && Reflect.set(r4, n3, i3), ownKeys: () => [...t2] };
    }
    var ao2 = Symbol.for("nodejs.util.inspect.custom");
    function ge2(e2, t2) {
      let r4 = uu(t2), n3 = /* @__PURE__ */ new Set(), i3 = new Proxy(e2, { get(o5, s3) {
        if (n3.has(s3))
          return o5[s3];
        let a3 = r4.get(s3);
        return a3 ? a3.getPropertyValue(s3) : o5[s3];
      }, has(o5, s3) {
        var u4, l3;
        if (n3.has(s3))
          return true;
        let a3 = r4.get(s3);
        return a3 ? (l3 = (u4 = a3.has) == null ? void 0 : u4.call(a3, s3)) != null ? l3 : true : Reflect.has(o5, s3);
      }, ownKeys(o5) {
        let s3 = uo2(Reflect.ownKeys(o5), r4), a3 = uo2(Array.from(r4.keys()), r4);
        return [.../* @__PURE__ */ new Set([...s3, ...a3, ...n3])];
      }, set(o5, s3, a3) {
        var l3, g4;
        let u4 = r4.get(s3);
        return ((g4 = (l3 = u4 == null ? void 0 : u4.getPropertyDescriptor) == null ? void 0 : l3.call(u4, s3)) == null ? void 0 : g4.writable) === false ? false : (n3.add(s3), Reflect.set(o5, s3, a3));
      }, getOwnPropertyDescriptor(o5, s3) {
        let a3 = Reflect.getOwnPropertyDescriptor(o5, s3);
        if (a3 && !a3.configurable)
          return a3;
        let u4 = r4.get(s3);
        return u4 ? u4.getPropertyDescriptor ? { ...gr2, ...u4 == null ? void 0 : u4.getPropertyDescriptor(s3) } : gr2 : a3;
      }, defineProperty(o5, s3, a3) {
        return n3.add(s3), Reflect.defineProperty(o5, s3, a3);
      } });
      return i3[ao2] = function(o5, s3, a3 = cr) {
        let u4 = { ...this };
        return delete u4[ao2], a3(u4, s3);
      }, i3;
    }
    function uu(e2) {
      let t2 = /* @__PURE__ */ new Map();
      for (let r4 of e2) {
        let n3 = r4.getKeys();
        for (let i3 of n3)
          t2.set(i3, r4);
      }
      return t2;
    }
    function uo2(e2, t2) {
      return e2.filter((r4) => {
        var i3, o5;
        let n3 = t2.get(r4);
        return (o5 = (i3 = n3 == null ? void 0 : n3.has) == null ? void 0 : i3.call(n3, r4)) != null ? o5 : true;
      });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Ft(e2) {
      return { getKeys() {
        return e2;
      }, has() {
        return false;
      }, getPropertyValue() {
      } };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function yr2(e2, t2) {
      return { batch: e2, transaction: (t2 == null ? void 0 : t2.kind) === "batch" ? { isolationLevel: t2.options.isolationLevel } : void 0 };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var ut2 = class {
      constructor(t2 = 0, r4) {
        this.context = r4;
        this.lines = [];
        this.currentLine = "";
        this.currentIndent = 0;
        this.currentIndent = t2;
      }
      write(t2) {
        return typeof t2 == "string" ? this.currentLine += t2 : t2.write(this), this;
      }
      writeJoined(t2, r4) {
        let n3 = r4.length - 1;
        for (let i3 = 0; i3 < r4.length; i3++)
          this.write(r4[i3]), i3 !== n3 && this.write(t2);
        return this;
      }
      writeLine(t2) {
        return this.write(t2).newLine();
      }
      newLine() {
        this.lines.push(this.indentedCurrentLine()), this.currentLine = "", this.marginSymbol = void 0;
        let t2 = this.afterNextNewLineCallback;
        return this.afterNextNewLineCallback = void 0, t2 == null || t2(), this;
      }
      withIndent(t2) {
        return this.indent(), t2(this), this.unindent(), this;
      }
      afterNextNewline(t2) {
        return this.afterNextNewLineCallback = t2, this;
      }
      indent() {
        return this.currentIndent++, this;
      }
      unindent() {
        return this.currentIndent > 0 && this.currentIndent--, this;
      }
      addMarginSymbol(t2) {
        return this.marginSymbol = t2, this;
      }
      toString() {
        return this.lines.concat(this.indentedCurrentLine()).join(`
`);
      }
      getCurrentLineLength() {
        return this.currentLine.length;
      }
      indentedCurrentLine() {
        let t2 = this.currentLine.padStart(this.currentLine.length + 2 * this.currentIndent);
        return this.marginSymbol ? this.marginSymbol + t2.slice(1) : t2;
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function lo2(e2) {
      return e2.substring(0, 1).toLowerCase() + e2.substring(1);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function lt2(e2) {
      return e2 instanceof Date || Object.prototype.toString.call(e2) === "[object Date]";
    }
    function wr2(e2) {
      return e2.toString() !== "Invalid Date";
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var ct3 = 9e15;
    var _e2 = 1e9;
    var En2 = "0123456789abcdef";
    var br2 = "2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058";
    var xr2 = "3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789";
    var bn2 = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -ct3, maxE: ct3, crypto: false };
    var mo2;
    var Ce3;
    var _6 = true;
    var vr2 = "[DecimalError] ";
    var Ne2 = vr2 + "Invalid argument: ";
    var go = vr2 + "Precision limit exceeded";
    var ho2 = vr2 + "crypto unavailable";
    var yo = "[object Decimal]";
    var re2 = Math.floor;
    var H3 = Math.pow;
    var lu2 = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i;
    var cu2 = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i;
    var pu2 = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i;
    var wo = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;
    var pe3 = 1e7;
    var O6 = 7;
    var fu = 9007199254740991;
    var mu2 = br2.length - 1;
    var xn2 = xr2.length - 1;
    var C5 = { toStringTag: yo };
    C5.absoluteValue = C5.abs = function() {
      var e2 = new this.constructor(this);
      return e2.s < 0 && (e2.s = 1), k6(e2);
    };
    C5.ceil = function() {
      return k6(new this.constructor(this), this.e + 1, 2);
    };
    C5.clampedTo = C5.clamp = function(e2, t2) {
      var r4, n3 = this, i3 = n3.constructor;
      if (e2 = new i3(e2), t2 = new i3(t2), !e2.s || !t2.s)
        return new i3(NaN);
      if (e2.gt(t2))
        throw Error(Ne2 + t2);
      return r4 = n3.cmp(e2), r4 < 0 ? e2 : n3.cmp(t2) > 0 ? t2 : new i3(n3);
    };
    C5.comparedTo = C5.cmp = function(e2) {
      var t2, r4, n3, i3, o5 = this, s3 = o5.d, a3 = (e2 = new o5.constructor(e2)).d, u4 = o5.s, l3 = e2.s;
      if (!s3 || !a3)
        return !u4 || !l3 ? NaN : u4 !== l3 ? u4 : s3 === a3 ? 0 : !s3 ^ u4 < 0 ? 1 : -1;
      if (!s3[0] || !a3[0])
        return s3[0] ? u4 : a3[0] ? -l3 : 0;
      if (u4 !== l3)
        return u4;
      if (o5.e !== e2.e)
        return o5.e > e2.e ^ u4 < 0 ? 1 : -1;
      for (n3 = s3.length, i3 = a3.length, t2 = 0, r4 = n3 < i3 ? n3 : i3; t2 < r4; ++t2)
        if (s3[t2] !== a3[t2])
          return s3[t2] > a3[t2] ^ u4 < 0 ? 1 : -1;
      return n3 === i3 ? 0 : n3 > i3 ^ u4 < 0 ? 1 : -1;
    };
    C5.cosine = C5.cos = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return r4.d ? r4.d[0] ? (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + Math.max(r4.e, r4.sd()) + O6, n3.rounding = 1, r4 = du(n3, vo(n3, r4)), n3.precision = e2, n3.rounding = t2, k6(Ce3 == 2 || Ce3 == 3 ? r4.neg() : r4, e2, t2, true)) : new n3(1) : new n3(NaN);
    };
    C5.cubeRoot = C5.cbrt = function() {
      var e2, t2, r4, n3, i3, o5, s3, a3, u4, l3, g4 = this, h2 = g4.constructor;
      if (!g4.isFinite() || g4.isZero())
        return new h2(g4);
      for (_6 = false, o5 = g4.s * H3(g4.s * g4, 1 / 3), !o5 || Math.abs(o5) == 1 / 0 ? (r4 = X2(g4.d), e2 = g4.e, (o5 = (e2 - r4.length + 1) % 3) && (r4 += o5 == 1 || o5 == -2 ? "0" : "00"), o5 = H3(r4, 1 / 3), e2 = re2((e2 + 1) / 3) - (e2 % 3 == (e2 < 0 ? -1 : 2)), o5 == 1 / 0 ? r4 = "5e" + e2 : (r4 = o5.toExponential(), r4 = r4.slice(0, r4.indexOf("e") + 1) + e2), n3 = new h2(r4), n3.s = g4.s) : n3 = new h2(o5.toString()), s3 = (e2 = h2.precision) + 3; ; )
        if (a3 = n3, u4 = a3.times(a3).times(a3), l3 = u4.plus(g4), n3 = q3(l3.plus(g4).times(a3), l3.plus(u4), s3 + 2, 1), X2(a3.d).slice(0, s3) === (r4 = X2(n3.d)).slice(0, s3))
          if (r4 = r4.slice(s3 - 3, s3 + 1), r4 == "9999" || !i3 && r4 == "4999") {
            if (!i3 && (k6(a3, e2 + 1, 0), a3.times(a3).times(a3).eq(g4))) {
              n3 = a3;
              break;
            }
            s3 += 4, i3 = 1;
          } else {
            (!+r4 || !+r4.slice(1) && r4.charAt(0) == "5") && (k6(n3, e2 + 1, 1), t2 = !n3.times(n3).times(n3).eq(g4));
            break;
          }
      return _6 = true, k6(n3, e2, h2.rounding, t2);
    };
    C5.decimalPlaces = C5.dp = function() {
      var e2, t2 = this.d, r4 = NaN;
      if (t2) {
        if (e2 = t2.length - 1, r4 = (e2 - re2(this.e / O6)) * O6, e2 = t2[e2], e2)
          for (; e2 % 10 == 0; e2 /= 10)
            r4--;
        r4 < 0 && (r4 = 0);
      }
      return r4;
    };
    C5.dividedBy = C5.div = function(e2) {
      return q3(this, new this.constructor(e2));
    };
    C5.dividedToIntegerBy = C5.divToInt = function(e2) {
      var t2 = this, r4 = t2.constructor;
      return k6(q3(t2, new r4(e2), 0, 1, 1), r4.precision, r4.rounding);
    };
    C5.equals = C5.eq = function(e2) {
      return this.cmp(e2) === 0;
    };
    C5.floor = function() {
      return k6(new this.constructor(this), this.e + 1, 3);
    };
    C5.greaterThan = C5.gt = function(e2) {
      return this.cmp(e2) > 0;
    };
    C5.greaterThanOrEqualTo = C5.gte = function(e2) {
      var t2 = this.cmp(e2);
      return t2 == 1 || t2 === 0;
    };
    C5.hyperbolicCosine = C5.cosh = function() {
      var e2, t2, r4, n3, i3, o5 = this, s3 = o5.constructor, a3 = new s3(1);
      if (!o5.isFinite())
        return new s3(o5.s ? 1 / 0 : NaN);
      if (o5.isZero())
        return a3;
      r4 = s3.precision, n3 = s3.rounding, s3.precision = r4 + Math.max(o5.e, o5.sd()) + 4, s3.rounding = 1, i3 = o5.d.length, i3 < 32 ? (e2 = Math.ceil(i3 / 3), t2 = (1 / Cr(4, e2)).toString()) : (e2 = 16, t2 = "2.3283064365386962890625e-10"), o5 = pt2(s3, 1, o5.times(t2), new s3(1), true);
      for (var u4, l3 = e2, g4 = new s3(8); l3--; )
        u4 = o5.times(o5), o5 = a3.minus(u4.times(g4.minus(u4.times(g4))));
      return k6(o5, s3.precision = r4, s3.rounding = n3, true);
    };
    C5.hyperbolicSine = C5.sinh = function() {
      var e2, t2, r4, n3, i3 = this, o5 = i3.constructor;
      if (!i3.isFinite() || i3.isZero())
        return new o5(i3);
      if (t2 = o5.precision, r4 = o5.rounding, o5.precision = t2 + Math.max(i3.e, i3.sd()) + 4, o5.rounding = 1, n3 = i3.d.length, n3 < 3)
        i3 = pt2(o5, 2, i3, i3, true);
      else {
        e2 = 1.4 * Math.sqrt(n3), e2 = e2 > 16 ? 16 : e2 | 0, i3 = i3.times(1 / Cr(5, e2)), i3 = pt2(o5, 2, i3, i3, true);
        for (var s3, a3 = new o5(5), u4 = new o5(16), l3 = new o5(20); e2--; )
          s3 = i3.times(i3), i3 = i3.times(a3.plus(s3.times(u4.times(s3).plus(l3))));
      }
      return o5.precision = t2, o5.rounding = r4, k6(i3, t2, r4, true);
    };
    C5.hyperbolicTangent = C5.tanh = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return r4.isFinite() ? r4.isZero() ? new n3(r4) : (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + 7, n3.rounding = 1, q3(r4.sinh(), r4.cosh(), n3.precision = e2, n3.rounding = t2)) : new n3(r4.s);
    };
    C5.inverseCosine = C5.acos = function() {
      var e2, t2 = this, r4 = t2.constructor, n3 = t2.abs().cmp(1), i3 = r4.precision, o5 = r4.rounding;
      return n3 !== -1 ? n3 === 0 ? t2.isNeg() ? ce3(r4, i3, o5) : new r4(0) : new r4(NaN) : t2.isZero() ? ce3(r4, i3 + 4, o5).times(0.5) : (r4.precision = i3 + 6, r4.rounding = 1, t2 = t2.asin(), e2 = ce3(r4, i3 + 4, o5).times(0.5), r4.precision = i3, r4.rounding = o5, e2.minus(t2));
    };
    C5.inverseHyperbolicCosine = C5.acosh = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return r4.lte(1) ? new n3(r4.eq(1) ? 0 : NaN) : r4.isFinite() ? (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + Math.max(Math.abs(r4.e), r4.sd()) + 4, n3.rounding = 1, _6 = false, r4 = r4.times(r4).minus(1).sqrt().plus(r4), _6 = true, n3.precision = e2, n3.rounding = t2, r4.ln()) : new n3(r4);
    };
    C5.inverseHyperbolicSine = C5.asinh = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return !r4.isFinite() || r4.isZero() ? new n3(r4) : (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + 2 * Math.max(Math.abs(r4.e), r4.sd()) + 6, n3.rounding = 1, _6 = false, r4 = r4.times(r4).plus(1).sqrt().plus(r4), _6 = true, n3.precision = e2, n3.rounding = t2, r4.ln());
    };
    C5.inverseHyperbolicTangent = C5.atanh = function() {
      var e2, t2, r4, n3, i3 = this, o5 = i3.constructor;
      return i3.isFinite() ? i3.e >= 0 ? new o5(i3.abs().eq(1) ? i3.s / 0 : i3.isZero() ? i3 : NaN) : (e2 = o5.precision, t2 = o5.rounding, n3 = i3.sd(), Math.max(n3, e2) < 2 * -i3.e - 1 ? k6(new o5(i3), e2, t2, true) : (o5.precision = r4 = n3 - i3.e, i3 = q3(i3.plus(1), new o5(1).minus(i3), r4 + e2, 1), o5.precision = e2 + 4, o5.rounding = 1, i3 = i3.ln(), o5.precision = e2, o5.rounding = t2, i3.times(0.5))) : new o5(NaN);
    };
    C5.inverseSine = C5.asin = function() {
      var e2, t2, r4, n3, i3 = this, o5 = i3.constructor;
      return i3.isZero() ? new o5(i3) : (t2 = i3.abs().cmp(1), r4 = o5.precision, n3 = o5.rounding, t2 !== -1 ? t2 === 0 ? (e2 = ce3(o5, r4 + 4, n3).times(0.5), e2.s = i3.s, e2) : new o5(NaN) : (o5.precision = r4 + 6, o5.rounding = 1, i3 = i3.div(new o5(1).minus(i3.times(i3)).sqrt().plus(1)).atan(), o5.precision = r4, o5.rounding = n3, i3.times(2)));
    };
    C5.inverseTangent = C5.atan = function() {
      var e2, t2, r4, n3, i3, o5, s3, a3, u4, l3 = this, g4 = l3.constructor, h2 = g4.precision, v4 = g4.rounding;
      if (l3.isFinite()) {
        if (l3.isZero())
          return new g4(l3);
        if (l3.abs().eq(1) && h2 + 4 <= xn2)
          return s3 = ce3(g4, h2 + 4, v4).times(0.25), s3.s = l3.s, s3;
      } else {
        if (!l3.s)
          return new g4(NaN);
        if (h2 + 4 <= xn2)
          return s3 = ce3(g4, h2 + 4, v4).times(0.5), s3.s = l3.s, s3;
      }
      for (g4.precision = a3 = h2 + 10, g4.rounding = 1, r4 = Math.min(28, a3 / O6 + 2 | 0), e2 = r4; e2; --e2)
        l3 = l3.div(l3.times(l3).plus(1).sqrt().plus(1));
      for (_6 = false, t2 = Math.ceil(a3 / O6), n3 = 1, u4 = l3.times(l3), s3 = new g4(l3), i3 = l3; e2 !== -1; )
        if (i3 = i3.times(u4), o5 = s3.minus(i3.div(n3 += 2)), i3 = i3.times(u4), s3 = o5.plus(i3.div(n3 += 2)), s3.d[t2] !== void 0)
          for (e2 = t2; s3.d[e2] === o5.d[e2] && e2--; )
            ;
      return r4 && (s3 = s3.times(2 << r4 - 1)), _6 = true, k6(s3, g4.precision = h2, g4.rounding = v4, true);
    };
    C5.isFinite = function() {
      return !!this.d;
    };
    C5.isInteger = C5.isInt = function() {
      return !!this.d && re2(this.e / O6) > this.d.length - 2;
    };
    C5.isNaN = function() {
      return !this.s;
    };
    C5.isNegative = C5.isNeg = function() {
      return this.s < 0;
    };
    C5.isPositive = C5.isPos = function() {
      return this.s > 0;
    };
    C5.isZero = function() {
      return !!this.d && this.d[0] === 0;
    };
    C5.lessThan = C5.lt = function(e2) {
      return this.cmp(e2) < 0;
    };
    C5.lessThanOrEqualTo = C5.lte = function(e2) {
      return this.cmp(e2) < 1;
    };
    C5.logarithm = C5.log = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3, u4, l3 = this, g4 = l3.constructor, h2 = g4.precision, v4 = g4.rounding, S5 = 5;
      if (e2 == null)
        e2 = new g4(10), t2 = true;
      else {
        if (e2 = new g4(e2), r4 = e2.d, e2.s < 0 || !r4 || !r4[0] || e2.eq(1))
          return new g4(NaN);
        t2 = e2.eq(10);
      }
      if (r4 = l3.d, l3.s < 0 || !r4 || !r4[0] || l3.eq(1))
        return new g4(r4 && !r4[0] ? -1 / 0 : l3.s != 1 ? NaN : r4 ? 0 : 1 / 0);
      if (t2)
        if (r4.length > 1)
          o5 = true;
        else {
          for (i3 = r4[0]; i3 % 10 === 0; )
            i3 /= 10;
          o5 = i3 !== 1;
        }
      if (_6 = false, a3 = h2 + S5, s3 = Oe2(l3, a3), n3 = t2 ? Pr2(g4, a3 + 10) : Oe2(e2, a3), u4 = q3(s3, n3, a3, 1), Bt(u4.d, i3 = h2, v4))
        do
          if (a3 += 10, s3 = Oe2(l3, a3), n3 = t2 ? Pr2(g4, a3 + 10) : Oe2(e2, a3), u4 = q3(s3, n3, a3, 1), !o5) {
            +X2(u4.d).slice(i3 + 1, i3 + 15) + 1 == 1e14 && (u4 = k6(u4, h2 + 1, 0));
            break;
          }
        while (Bt(u4.d, i3 += 10, v4));
      return _6 = true, k6(u4, h2, v4);
    };
    C5.minus = C5.sub = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3, u4, l3, g4, h2, v4, S5 = this, A4 = S5.constructor;
      if (e2 = new A4(e2), !S5.d || !e2.d)
        return !S5.s || !e2.s ? e2 = new A4(NaN) : S5.d ? e2.s = -e2.s : e2 = new A4(e2.d || S5.s !== e2.s ? S5 : NaN), e2;
      if (S5.s != e2.s)
        return e2.s = -e2.s, S5.plus(e2);
      if (l3 = S5.d, v4 = e2.d, a3 = A4.precision, u4 = A4.rounding, !l3[0] || !v4[0]) {
        if (v4[0])
          e2.s = -e2.s;
        else if (l3[0])
          e2 = new A4(S5);
        else
          return new A4(u4 === 3 ? -0 : 0);
        return _6 ? k6(e2, a3, u4) : e2;
      }
      if (r4 = re2(e2.e / O6), g4 = re2(S5.e / O6), l3 = l3.slice(), o5 = g4 - r4, o5) {
        for (h2 = o5 < 0, h2 ? (t2 = l3, o5 = -o5, s3 = v4.length) : (t2 = v4, r4 = g4, s3 = l3.length), n3 = Math.max(Math.ceil(a3 / O6), s3) + 2, o5 > n3 && (o5 = n3, t2.length = 1), t2.reverse(), n3 = o5; n3--; )
          t2.push(0);
        t2.reverse();
      } else {
        for (n3 = l3.length, s3 = v4.length, h2 = n3 < s3, h2 && (s3 = n3), n3 = 0; n3 < s3; n3++)
          if (l3[n3] != v4[n3]) {
            h2 = l3[n3] < v4[n3];
            break;
          }
        o5 = 0;
      }
      for (h2 && (t2 = l3, l3 = v4, v4 = t2, e2.s = -e2.s), s3 = l3.length, n3 = v4.length - s3; n3 > 0; --n3)
        l3[s3++] = 0;
      for (n3 = v4.length; n3 > o5; ) {
        if (l3[--n3] < v4[n3]) {
          for (i3 = n3; i3 && l3[--i3] === 0; )
            l3[i3] = pe3 - 1;
          --l3[i3], l3[n3] += pe3;
        }
        l3[n3] -= v4[n3];
      }
      for (; l3[--s3] === 0; )
        l3.pop();
      for (; l3[0] === 0; l3.shift())
        --r4;
      return l3[0] ? (e2.d = l3, e2.e = Tr2(l3, r4), _6 ? k6(e2, a3, u4) : e2) : new A4(u4 === 3 ? -0 : 0);
    };
    C5.modulo = C5.mod = function(e2) {
      var t2, r4 = this, n3 = r4.constructor;
      return e2 = new n3(e2), !r4.d || !e2.s || e2.d && !e2.d[0] ? new n3(NaN) : !e2.d || r4.d && !r4.d[0] ? k6(new n3(r4), n3.precision, n3.rounding) : (_6 = false, n3.modulo == 9 ? (t2 = q3(r4, e2.abs(), 0, 3, 1), t2.s *= e2.s) : t2 = q3(r4, e2, 0, n3.modulo, 1), t2 = t2.times(e2), _6 = true, r4.minus(t2));
    };
    C5.naturalExponential = C5.exp = function() {
      return Pn(this);
    };
    C5.naturalLogarithm = C5.ln = function() {
      return Oe2(this);
    };
    C5.negated = C5.neg = function() {
      var e2 = new this.constructor(this);
      return e2.s = -e2.s, k6(e2);
    };
    C5.plus = C5.add = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3, u4, l3, g4, h2 = this, v4 = h2.constructor;
      if (e2 = new v4(e2), !h2.d || !e2.d)
        return !h2.s || !e2.s ? e2 = new v4(NaN) : h2.d || (e2 = new v4(e2.d || h2.s === e2.s ? h2 : NaN)), e2;
      if (h2.s != e2.s)
        return e2.s = -e2.s, h2.minus(e2);
      if (l3 = h2.d, g4 = e2.d, a3 = v4.precision, u4 = v4.rounding, !l3[0] || !g4[0])
        return g4[0] || (e2 = new v4(h2)), _6 ? k6(e2, a3, u4) : e2;
      if (o5 = re2(h2.e / O6), n3 = re2(e2.e / O6), l3 = l3.slice(), i3 = o5 - n3, i3) {
        for (i3 < 0 ? (r4 = l3, i3 = -i3, s3 = g4.length) : (r4 = g4, n3 = o5, s3 = l3.length), o5 = Math.ceil(a3 / O6), s3 = o5 > s3 ? o5 + 1 : s3 + 1, i3 > s3 && (i3 = s3, r4.length = 1), r4.reverse(); i3--; )
          r4.push(0);
        r4.reverse();
      }
      for (s3 = l3.length, i3 = g4.length, s3 - i3 < 0 && (i3 = s3, r4 = g4, g4 = l3, l3 = r4), t2 = 0; i3; )
        t2 = (l3[--i3] = l3[i3] + g4[i3] + t2) / pe3 | 0, l3[i3] %= pe3;
      for (t2 && (l3.unshift(t2), ++n3), s3 = l3.length; l3[--s3] == 0; )
        l3.pop();
      return e2.d = l3, e2.e = Tr2(l3, n3), _6 ? k6(e2, a3, u4) : e2;
    };
    C5.precision = C5.sd = function(e2) {
      var t2, r4 = this;
      if (e2 !== void 0 && e2 !== !!e2 && e2 !== 1 && e2 !== 0)
        throw Error(Ne2 + e2);
      return r4.d ? (t2 = Eo2(r4.d), e2 && r4.e + 1 > t2 && (t2 = r4.e + 1)) : t2 = NaN, t2;
    };
    C5.round = function() {
      var e2 = this, t2 = e2.constructor;
      return k6(new t2(e2), e2.e + 1, t2.rounding);
    };
    C5.sine = C5.sin = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return r4.isFinite() ? r4.isZero() ? new n3(r4) : (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + Math.max(r4.e, r4.sd()) + O6, n3.rounding = 1, r4 = hu2(n3, vo(n3, r4)), n3.precision = e2, n3.rounding = t2, k6(Ce3 > 2 ? r4.neg() : r4, e2, t2, true)) : new n3(NaN);
    };
    C5.squareRoot = C5.sqrt = function() {
      var e2, t2, r4, n3, i3, o5, s3 = this, a3 = s3.d, u4 = s3.e, l3 = s3.s, g4 = s3.constructor;
      if (l3 !== 1 || !a3 || !a3[0])
        return new g4(!l3 || l3 < 0 && (!a3 || a3[0]) ? NaN : a3 ? s3 : 1 / 0);
      for (_6 = false, l3 = Math.sqrt(+s3), l3 == 0 || l3 == 1 / 0 ? (t2 = X2(a3), (t2.length + u4) % 2 == 0 && (t2 += "0"), l3 = Math.sqrt(t2), u4 = re2((u4 + 1) / 2) - (u4 < 0 || u4 % 2), l3 == 1 / 0 ? t2 = "5e" + u4 : (t2 = l3.toExponential(), t2 = t2.slice(0, t2.indexOf("e") + 1) + u4), n3 = new g4(t2)) : n3 = new g4(l3.toString()), r4 = (u4 = g4.precision) + 3; ; )
        if (o5 = n3, n3 = o5.plus(q3(s3, o5, r4 + 2, 1)).times(0.5), X2(o5.d).slice(0, r4) === (t2 = X2(n3.d)).slice(0, r4))
          if (t2 = t2.slice(r4 - 3, r4 + 1), t2 == "9999" || !i3 && t2 == "4999") {
            if (!i3 && (k6(o5, u4 + 1, 0), o5.times(o5).eq(s3))) {
              n3 = o5;
              break;
            }
            r4 += 4, i3 = 1;
          } else {
            (!+t2 || !+t2.slice(1) && t2.charAt(0) == "5") && (k6(n3, u4 + 1, 1), e2 = !n3.times(n3).eq(s3));
            break;
          }
      return _6 = true, k6(n3, u4, g4.rounding, e2);
    };
    C5.tangent = C5.tan = function() {
      var e2, t2, r4 = this, n3 = r4.constructor;
      return r4.isFinite() ? r4.isZero() ? new n3(r4) : (e2 = n3.precision, t2 = n3.rounding, n3.precision = e2 + 10, n3.rounding = 1, r4 = r4.sin(), r4.s = 1, r4 = q3(r4, new n3(1).minus(r4.times(r4)).sqrt(), e2 + 10, 0), n3.precision = e2, n3.rounding = t2, k6(Ce3 == 2 || Ce3 == 4 ? r4.neg() : r4, e2, t2, true)) : new n3(NaN);
    };
    C5.times = C5.mul = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3, u4, l3, g4 = this, h2 = g4.constructor, v4 = g4.d, S5 = (e2 = new h2(e2)).d;
      if (e2.s *= g4.s, !v4 || !v4[0] || !S5 || !S5[0])
        return new h2(!e2.s || v4 && !v4[0] && !S5 || S5 && !S5[0] && !v4 ? NaN : !v4 || !S5 ? e2.s / 0 : e2.s * 0);
      for (r4 = re2(g4.e / O6) + re2(e2.e / O6), u4 = v4.length, l3 = S5.length, u4 < l3 && (o5 = v4, v4 = S5, S5 = o5, s3 = u4, u4 = l3, l3 = s3), o5 = [], s3 = u4 + l3, n3 = s3; n3--; )
        o5.push(0);
      for (n3 = l3; --n3 >= 0; ) {
        for (t2 = 0, i3 = u4 + n3; i3 > n3; )
          a3 = o5[i3] + S5[n3] * v4[i3 - n3 - 1] + t2, o5[i3--] = a3 % pe3 | 0, t2 = a3 / pe3 | 0;
        o5[i3] = (o5[i3] + t2) % pe3 | 0;
      }
      for (; !o5[--s3]; )
        o5.pop();
      return t2 ? ++r4 : o5.shift(), e2.d = o5, e2.e = Tr2(o5, r4), _6 ? k6(e2, h2.precision, h2.rounding) : e2;
    };
    C5.toBinary = function(e2, t2) {
      return Tn2(this, 2, e2, t2);
    };
    C5.toDecimalPlaces = C5.toDP = function(e2, t2) {
      var r4 = this, n3 = r4.constructor;
      return r4 = new n3(r4), e2 === void 0 ? r4 : (ue3(e2, 0, _e2), t2 === void 0 ? t2 = n3.rounding : ue3(t2, 0, 8), k6(r4, e2 + r4.e + 1, t2));
    };
    C5.toExponential = function(e2, t2) {
      var r4, n3 = this, i3 = n3.constructor;
      return e2 === void 0 ? r4 = he2(n3, true) : (ue3(e2, 0, _e2), t2 === void 0 ? t2 = i3.rounding : ue3(t2, 0, 8), n3 = k6(new i3(n3), e2 + 1, t2), r4 = he2(n3, true, e2 + 1)), n3.isNeg() && !n3.isZero() ? "-" + r4 : r4;
    };
    C5.toFixed = function(e2, t2) {
      var r4, n3, i3 = this, o5 = i3.constructor;
      return e2 === void 0 ? r4 = he2(i3) : (ue3(e2, 0, _e2), t2 === void 0 ? t2 = o5.rounding : ue3(t2, 0, 8), n3 = k6(new o5(i3), e2 + i3.e + 1, t2), r4 = he2(n3, false, e2 + n3.e + 1)), i3.isNeg() && !i3.isZero() ? "-" + r4 : r4;
    };
    C5.toFraction = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3, u4, l3, g4, h2, v4, S5 = this, A4 = S5.d, R5 = S5.constructor;
      if (!A4)
        return new R5(S5);
      if (l3 = r4 = new R5(1), n3 = u4 = new R5(0), t2 = new R5(n3), o5 = t2.e = Eo2(A4) - S5.e - 1, s3 = o5 % O6, t2.d[0] = H3(10, s3 < 0 ? O6 + s3 : s3), e2 == null)
        e2 = o5 > 0 ? t2 : l3;
      else {
        if (a3 = new R5(e2), !a3.isInt() || a3.lt(l3))
          throw Error(Ne2 + a3);
        e2 = a3.gt(t2) ? o5 > 0 ? t2 : l3 : a3;
      }
      for (_6 = false, a3 = new R5(X2(A4)), g4 = R5.precision, R5.precision = o5 = A4.length * O6 * 2; h2 = q3(a3, t2, 0, 1, 1), i3 = r4.plus(h2.times(n3)), i3.cmp(e2) != 1; )
        r4 = n3, n3 = i3, i3 = l3, l3 = u4.plus(h2.times(i3)), u4 = i3, i3 = t2, t2 = a3.minus(h2.times(i3)), a3 = i3;
      return i3 = q3(e2.minus(r4), n3, 0, 1, 1), u4 = u4.plus(i3.times(l3)), r4 = r4.plus(i3.times(n3)), u4.s = l3.s = S5.s, v4 = q3(l3, n3, o5, 1).minus(S5).abs().cmp(q3(u4, r4, o5, 1).minus(S5).abs()) < 1 ? [l3, n3] : [u4, r4], R5.precision = g4, _6 = true, v4;
    };
    C5.toHexadecimal = C5.toHex = function(e2, t2) {
      return Tn2(this, 16, e2, t2);
    };
    C5.toNearest = function(e2, t2) {
      var r4 = this, n3 = r4.constructor;
      if (r4 = new n3(r4), e2 == null) {
        if (!r4.d)
          return r4;
        e2 = new n3(1), t2 = n3.rounding;
      } else {
        if (e2 = new n3(e2), t2 === void 0 ? t2 = n3.rounding : ue3(t2, 0, 8), !r4.d)
          return e2.s ? r4 : e2;
        if (!e2.d)
          return e2.s && (e2.s = r4.s), e2;
      }
      return e2.d[0] ? (_6 = false, r4 = q3(r4, e2, 0, t2, 1).times(e2), _6 = true, k6(r4)) : (e2.s = r4.s, r4 = e2), r4;
    };
    C5.toNumber = function() {
      return +this;
    };
    C5.toOctal = function(e2, t2) {
      return Tn2(this, 8, e2, t2);
    };
    C5.toPower = C5.pow = function(e2) {
      var t2, r4, n3, i3, o5, s3, a3 = this, u4 = a3.constructor, l3 = +(e2 = new u4(e2));
      if (!a3.d || !e2.d || !a3.d[0] || !e2.d[0])
        return new u4(H3(+a3, l3));
      if (a3 = new u4(a3), a3.eq(1))
        return a3;
      if (n3 = u4.precision, o5 = u4.rounding, e2.eq(1))
        return k6(a3, n3, o5);
      if (t2 = re2(e2.e / O6), t2 >= e2.d.length - 1 && (r4 = l3 < 0 ? -l3 : l3) <= fu)
        return i3 = bo(u4, a3, r4, n3), e2.s < 0 ? new u4(1).div(i3) : k6(i3, n3, o5);
      if (s3 = a3.s, s3 < 0) {
        if (t2 < e2.d.length - 1)
          return new u4(NaN);
        if (e2.d[t2] & 1 || (s3 = 1), a3.e == 0 && a3.d[0] == 1 && a3.d.length == 1)
          return a3.s = s3, a3;
      }
      return r4 = H3(+a3, l3), t2 = r4 == 0 || !isFinite(r4) ? re2(l3 * (Math.log("0." + X2(a3.d)) / Math.LN10 + a3.e + 1)) : new u4(r4 + "").e, t2 > u4.maxE + 1 || t2 < u4.minE - 1 ? new u4(t2 > 0 ? s3 / 0 : 0) : (_6 = false, u4.rounding = a3.s = 1, r4 = Math.min(12, (t2 + "").length), i3 = Pn(e2.times(Oe2(a3, n3 + r4)), n3), i3.d && (i3 = k6(i3, n3 + 5, 1), Bt(i3.d, n3, o5) && (t2 = n3 + 10, i3 = k6(Pn(e2.times(Oe2(a3, t2 + r4)), t2), t2 + 5, 1), +X2(i3.d).slice(n3 + 1, n3 + 15) + 1 == 1e14 && (i3 = k6(i3, n3 + 1, 0)))), i3.s = s3, _6 = true, u4.rounding = o5, k6(i3, n3, o5));
    };
    C5.toPrecision = function(e2, t2) {
      var r4, n3 = this, i3 = n3.constructor;
      return e2 === void 0 ? r4 = he2(n3, n3.e <= i3.toExpNeg || n3.e >= i3.toExpPos) : (ue3(e2, 1, _e2), t2 === void 0 ? t2 = i3.rounding : ue3(t2, 0, 8), n3 = k6(new i3(n3), e2, t2), r4 = he2(n3, e2 <= n3.e || n3.e <= i3.toExpNeg, e2)), n3.isNeg() && !n3.isZero() ? "-" + r4 : r4;
    };
    C5.toSignificantDigits = C5.toSD = function(e2, t2) {
      var r4 = this, n3 = r4.constructor;
      return e2 === void 0 ? (e2 = n3.precision, t2 = n3.rounding) : (ue3(e2, 1, _e2), t2 === void 0 ? t2 = n3.rounding : ue3(t2, 0, 8)), k6(new n3(r4), e2, t2);
    };
    C5.toString = function() {
      var e2 = this, t2 = e2.constructor, r4 = he2(e2, e2.e <= t2.toExpNeg || e2.e >= t2.toExpPos);
      return e2.isNeg() && !e2.isZero() ? "-" + r4 : r4;
    };
    C5.truncated = C5.trunc = function() {
      return k6(new this.constructor(this), this.e + 1, 1);
    };
    C5.valueOf = C5.toJSON = function() {
      var e2 = this, t2 = e2.constructor, r4 = he2(e2, e2.e <= t2.toExpNeg || e2.e >= t2.toExpPos);
      return e2.isNeg() ? "-" + r4 : r4;
    };
    function X2(e2) {
      var t2, r4, n3, i3 = e2.length - 1, o5 = "", s3 = e2[0];
      if (i3 > 0) {
        for (o5 += s3, t2 = 1; t2 < i3; t2++)
          n3 = e2[t2] + "", r4 = O6 - n3.length, r4 && (o5 += Me2(r4)), o5 += n3;
        s3 = e2[t2], n3 = s3 + "", r4 = O6 - n3.length, r4 && (o5 += Me2(r4));
      } else if (s3 === 0)
        return "0";
      for (; s3 % 10 === 0; )
        s3 /= 10;
      return o5 + s3;
    }
    function ue3(e2, t2, r4) {
      if (e2 !== ~~e2 || e2 < t2 || e2 > r4)
        throw Error(Ne2 + e2);
    }
    function Bt(e2, t2, r4, n3) {
      var i3, o5, s3, a3;
      for (o5 = e2[0]; o5 >= 10; o5 /= 10)
        --t2;
      return --t2 < 0 ? (t2 += O6, i3 = 0) : (i3 = Math.ceil((t2 + 1) / O6), t2 %= O6), o5 = H3(10, O6 - t2), a3 = e2[i3] % o5 | 0, n3 == null ? t2 < 3 ? (t2 == 0 ? a3 = a3 / 100 | 0 : t2 == 1 && (a3 = a3 / 10 | 0), s3 = r4 < 4 && a3 == 99999 || r4 > 3 && a3 == 49999 || a3 == 5e4 || a3 == 0) : s3 = (r4 < 4 && a3 + 1 == o5 || r4 > 3 && a3 + 1 == o5 / 2) && (e2[i3 + 1] / o5 / 100 | 0) == H3(10, t2 - 2) - 1 || (a3 == o5 / 2 || a3 == 0) && (e2[i3 + 1] / o5 / 100 | 0) == 0 : t2 < 4 ? (t2 == 0 ? a3 = a3 / 1e3 | 0 : t2 == 1 ? a3 = a3 / 100 | 0 : t2 == 2 && (a3 = a3 / 10 | 0), s3 = (n3 || r4 < 4) && a3 == 9999 || !n3 && r4 > 3 && a3 == 4999) : s3 = ((n3 || r4 < 4) && a3 + 1 == o5 || !n3 && r4 > 3 && a3 + 1 == o5 / 2) && (e2[i3 + 1] / o5 / 1e3 | 0) == H3(10, t2 - 3) - 1, s3;
    }
    function Er2(e2, t2, r4) {
      for (var n3, i3 = [0], o5, s3 = 0, a3 = e2.length; s3 < a3; ) {
        for (o5 = i3.length; o5--; )
          i3[o5] *= t2;
        for (i3[0] += En2.indexOf(e2.charAt(s3++)), n3 = 0; n3 < i3.length; n3++)
          i3[n3] > r4 - 1 && (i3[n3 + 1] === void 0 && (i3[n3 + 1] = 0), i3[n3 + 1] += i3[n3] / r4 | 0, i3[n3] %= r4);
      }
      return i3.reverse();
    }
    function du(e2, t2) {
      var r4, n3, i3;
      if (t2.isZero())
        return t2;
      n3 = t2.d.length, n3 < 32 ? (r4 = Math.ceil(n3 / 3), i3 = (1 / Cr(4, r4)).toString()) : (r4 = 16, i3 = "2.3283064365386962890625e-10"), e2.precision += r4, t2 = pt2(e2, 1, t2.times(i3), new e2(1));
      for (var o5 = r4; o5--; ) {
        var s3 = t2.times(t2);
        t2 = s3.times(s3).minus(s3).times(8).plus(1);
      }
      return e2.precision -= r4, t2;
    }
    var q3 = /* @__PURE__ */ function() {
      function e2(n3, i3, o5) {
        var s3, a3 = 0, u4 = n3.length;
        for (n3 = n3.slice(); u4--; )
          s3 = n3[u4] * i3 + a3, n3[u4] = s3 % o5 | 0, a3 = s3 / o5 | 0;
        return a3 && n3.unshift(a3), n3;
      }
      function t2(n3, i3, o5, s3) {
        var a3, u4;
        if (o5 != s3)
          u4 = o5 > s3 ? 1 : -1;
        else
          for (a3 = u4 = 0; a3 < o5; a3++)
            if (n3[a3] != i3[a3]) {
              u4 = n3[a3] > i3[a3] ? 1 : -1;
              break;
            }
        return u4;
      }
      function r4(n3, i3, o5, s3) {
        for (var a3 = 0; o5--; )
          n3[o5] -= a3, a3 = n3[o5] < i3[o5] ? 1 : 0, n3[o5] = a3 * s3 + n3[o5] - i3[o5];
        for (; !n3[0] && n3.length > 1; )
          n3.shift();
      }
      return function(n3, i3, o5, s3, a3, u4) {
        var l3, g4, h2, v4, S5, A4, R5, D4, M4, B2, I4, L5, ee2, F3, Ze2, $e2, fe2, qe2, Q2, Se2, Ue2 = n3.constructor, Xe2 = n3.s == i3.s ? 1 : -1, te2 = n3.d, U3 = i3.d;
        if (!te2 || !te2[0] || !U3 || !U3[0])
          return new Ue2(!n3.s || !i3.s || (te2 ? U3 && te2[0] == U3[0] : !U3) ? NaN : te2 && te2[0] == 0 || !U3 ? Xe2 * 0 : Xe2 / 0);
        for (u4 ? (S5 = 1, g4 = n3.e - i3.e) : (u4 = pe3, S5 = O6, g4 = re2(n3.e / S5) - re2(i3.e / S5)), Q2 = U3.length, fe2 = te2.length, M4 = new Ue2(Xe2), B2 = M4.d = [], h2 = 0; U3[h2] == (te2[h2] || 0); h2++)
          ;
        if (U3[h2] > (te2[h2] || 0) && g4--, o5 == null ? (F3 = o5 = Ue2.precision, s3 = Ue2.rounding) : a3 ? F3 = o5 + (n3.e - i3.e) + 1 : F3 = o5, F3 < 0)
          B2.push(1), A4 = true;
        else {
          if (F3 = F3 / S5 + 2 | 0, h2 = 0, Q2 == 1) {
            for (v4 = 0, U3 = U3[0], F3++; (h2 < fe2 || v4) && F3--; h2++)
              Ze2 = v4 * u4 + (te2[h2] || 0), B2[h2] = Ze2 / U3 | 0, v4 = Ze2 % U3 | 0;
            A4 = v4 || h2 < fe2;
          } else {
            for (v4 = u4 / (U3[0] + 1) | 0, v4 > 1 && (U3 = e2(U3, v4, u4), te2 = e2(te2, v4, u4), Q2 = U3.length, fe2 = te2.length), $e2 = Q2, I4 = te2.slice(0, Q2), L5 = I4.length; L5 < Q2; )
              I4[L5++] = 0;
            Se2 = U3.slice(), Se2.unshift(0), qe2 = U3[0], U3[1] >= u4 / 2 && ++qe2;
            do
              v4 = 0, l3 = t2(U3, I4, Q2, L5), l3 < 0 ? (ee2 = I4[0], Q2 != L5 && (ee2 = ee2 * u4 + (I4[1] || 0)), v4 = ee2 / qe2 | 0, v4 > 1 ? (v4 >= u4 && (v4 = u4 - 1), R5 = e2(U3, v4, u4), D4 = R5.length, L5 = I4.length, l3 = t2(R5, I4, D4, L5), l3 == 1 && (v4--, r4(R5, Q2 < D4 ? Se2 : U3, D4, u4))) : (v4 == 0 && (l3 = v4 = 1), R5 = U3.slice()), D4 = R5.length, D4 < L5 && R5.unshift(0), r4(I4, R5, L5, u4), l3 == -1 && (L5 = I4.length, l3 = t2(U3, I4, Q2, L5), l3 < 1 && (v4++, r4(I4, Q2 < L5 ? Se2 : U3, L5, u4))), L5 = I4.length) : l3 === 0 && (v4++, I4 = [0]), B2[h2++] = v4, l3 && I4[0] ? I4[L5++] = te2[$e2] || 0 : (I4 = [te2[$e2]], L5 = 1);
            while (($e2++ < fe2 || I4[0] !== void 0) && F3--);
            A4 = I4[0] !== void 0;
          }
          B2[0] || B2.shift();
        }
        if (S5 == 1)
          M4.e = g4, mo2 = A4;
        else {
          for (h2 = 1, v4 = B2[0]; v4 >= 10; v4 /= 10)
            h2++;
          M4.e = h2 + g4 * S5 - 1, k6(M4, a3 ? o5 + M4.e + 1 : o5, s3, A4);
        }
        return M4;
      };
    }();
    function k6(e2, t2, r4, n3) {
      var i3, o5, s3, a3, u4, l3, g4, h2, v4, S5 = e2.constructor;
      e:
        if (t2 != null) {
          if (h2 = e2.d, !h2)
            return e2;
          for (i3 = 1, a3 = h2[0]; a3 >= 10; a3 /= 10)
            i3++;
          if (o5 = t2 - i3, o5 < 0)
            o5 += O6, s3 = t2, g4 = h2[v4 = 0], u4 = g4 / H3(10, i3 - s3 - 1) % 10 | 0;
          else if (v4 = Math.ceil((o5 + 1) / O6), a3 = h2.length, v4 >= a3)
            if (n3) {
              for (; a3++ <= v4; )
                h2.push(0);
              g4 = u4 = 0, i3 = 1, o5 %= O6, s3 = o5 - O6 + 1;
            } else
              break e;
          else {
            for (g4 = a3 = h2[v4], i3 = 1; a3 >= 10; a3 /= 10)
              i3++;
            o5 %= O6, s3 = o5 - O6 + i3, u4 = s3 < 0 ? 0 : g4 / H3(10, i3 - s3 - 1) % 10 | 0;
          }
          if (n3 = n3 || t2 < 0 || h2[v4 + 1] !== void 0 || (s3 < 0 ? g4 : g4 % H3(10, i3 - s3 - 1)), l3 = r4 < 4 ? (u4 || n3) && (r4 == 0 || r4 == (e2.s < 0 ? 3 : 2)) : u4 > 5 || u4 == 5 && (r4 == 4 || n3 || r4 == 6 && (o5 > 0 ? s3 > 0 ? g4 / H3(10, i3 - s3) : 0 : h2[v4 - 1]) % 10 & 1 || r4 == (e2.s < 0 ? 8 : 7)), t2 < 1 || !h2[0])
            return h2.length = 0, l3 ? (t2 -= e2.e + 1, h2[0] = H3(10, (O6 - t2 % O6) % O6), e2.e = -t2 || 0) : h2[0] = e2.e = 0, e2;
          if (o5 == 0 ? (h2.length = v4, a3 = 1, v4--) : (h2.length = v4 + 1, a3 = H3(10, O6 - o5), h2[v4] = s3 > 0 ? (g4 / H3(10, i3 - s3) % H3(10, s3) | 0) * a3 : 0), l3)
            for (; ; )
              if (v4 == 0) {
                for (o5 = 1, s3 = h2[0]; s3 >= 10; s3 /= 10)
                  o5++;
                for (s3 = h2[0] += a3, a3 = 1; s3 >= 10; s3 /= 10)
                  a3++;
                o5 != a3 && (e2.e++, h2[0] == pe3 && (h2[0] = 1));
                break;
              } else {
                if (h2[v4] += a3, h2[v4] != pe3)
                  break;
                h2[v4--] = 0, a3 = 1;
              }
          for (o5 = h2.length; h2[--o5] === 0; )
            h2.pop();
        }
      return _6 && (e2.e > S5.maxE ? (e2.d = null, e2.e = NaN) : e2.e < S5.minE && (e2.e = 0, e2.d = [0])), e2;
    }
    function he2(e2, t2, r4) {
      if (!e2.isFinite())
        return Po2(e2);
      var n3, i3 = e2.e, o5 = X2(e2.d), s3 = o5.length;
      return t2 ? (r4 && (n3 = r4 - s3) > 0 ? o5 = o5.charAt(0) + "." + o5.slice(1) + Me2(n3) : s3 > 1 && (o5 = o5.charAt(0) + "." + o5.slice(1)), o5 = o5 + (e2.e < 0 ? "e" : "e+") + e2.e) : i3 < 0 ? (o5 = "0." + Me2(-i3 - 1) + o5, r4 && (n3 = r4 - s3) > 0 && (o5 += Me2(n3))) : i3 >= s3 ? (o5 += Me2(i3 + 1 - s3), r4 && (n3 = r4 - i3 - 1) > 0 && (o5 = o5 + "." + Me2(n3))) : ((n3 = i3 + 1) < s3 && (o5 = o5.slice(0, n3) + "." + o5.slice(n3)), r4 && (n3 = r4 - s3) > 0 && (i3 + 1 === s3 && (o5 += "."), o5 += Me2(n3))), o5;
    }
    function Tr2(e2, t2) {
      var r4 = e2[0];
      for (t2 *= O6; r4 >= 10; r4 /= 10)
        t2++;
      return t2;
    }
    function Pr2(e2, t2, r4) {
      if (t2 > mu2)
        throw _6 = true, r4 && (e2.precision = r4), Error(go);
      return k6(new e2(br2), t2, 1, true);
    }
    function ce3(e2, t2, r4) {
      if (t2 > xn2)
        throw Error(go);
      return k6(new e2(xr2), t2, r4, true);
    }
    function Eo2(e2) {
      var t2 = e2.length - 1, r4 = t2 * O6 + 1;
      if (t2 = e2[t2], t2) {
        for (; t2 % 10 == 0; t2 /= 10)
          r4--;
        for (t2 = e2[0]; t2 >= 10; t2 /= 10)
          r4++;
      }
      return r4;
    }
    function Me2(e2) {
      for (var t2 = ""; e2--; )
        t2 += "0";
      return t2;
    }
    function bo(e2, t2, r4, n3) {
      var i3, o5 = new e2(1), s3 = Math.ceil(n3 / O6 + 4);
      for (_6 = false; ; ) {
        if (r4 % 2 && (o5 = o5.times(t2), po2(o5.d, s3) && (i3 = true)), r4 = re2(r4 / 2), r4 === 0) {
          r4 = o5.d.length - 1, i3 && o5.d[r4] === 0 && ++o5.d[r4];
          break;
        }
        t2 = t2.times(t2), po2(t2.d, s3);
      }
      return _6 = true, o5;
    }
    function co2(e2) {
      return e2.d[e2.d.length - 1] & 1;
    }
    function xo(e2, t2, r4) {
      for (var n3, i3 = new e2(t2[0]), o5 = 0; ++o5 < t2.length; )
        if (n3 = new e2(t2[o5]), n3.s)
          i3[r4](n3) && (i3 = n3);
        else {
          i3 = n3;
          break;
        }
      return i3;
    }
    function Pn(e2, t2) {
      var r4, n3, i3, o5, s3, a3, u4, l3 = 0, g4 = 0, h2 = 0, v4 = e2.constructor, S5 = v4.rounding, A4 = v4.precision;
      if (!e2.d || !e2.d[0] || e2.e > 17)
        return new v4(e2.d ? e2.d[0] ? e2.s < 0 ? 0 : 1 / 0 : 1 : e2.s ? e2.s < 0 ? 0 : e2 : NaN);
      for (t2 == null ? (_6 = false, u4 = A4) : u4 = t2, a3 = new v4(0.03125); e2.e > -2; )
        e2 = e2.times(a3), h2 += 5;
      for (n3 = Math.log(H3(2, h2)) / Math.LN10 * 2 + 5 | 0, u4 += n3, r4 = o5 = s3 = new v4(1), v4.precision = u4; ; ) {
        if (o5 = k6(o5.times(e2), u4, 1), r4 = r4.times(++g4), a3 = s3.plus(q3(o5, r4, u4, 1)), X2(a3.d).slice(0, u4) === X2(s3.d).slice(0, u4)) {
          for (i3 = h2; i3--; )
            s3 = k6(s3.times(s3), u4, 1);
          if (t2 == null)
            if (l3 < 3 && Bt(s3.d, u4 - n3, S5, l3))
              v4.precision = u4 += 10, r4 = o5 = a3 = new v4(1), g4 = 0, l3++;
            else
              return k6(s3, v4.precision = A4, S5, _6 = true);
          else
            return v4.precision = A4, s3;
        }
        s3 = a3;
      }
    }
    function Oe2(e2, t2) {
      var r4, n3, i3, o5, s3, a3, u4, l3, g4, h2, v4, S5 = 1, A4 = 10, R5 = e2, D4 = R5.d, M4 = R5.constructor, B2 = M4.rounding, I4 = M4.precision;
      if (R5.s < 0 || !D4 || !D4[0] || !R5.e && D4[0] == 1 && D4.length == 1)
        return new M4(D4 && !D4[0] ? -1 / 0 : R5.s != 1 ? NaN : D4 ? 0 : R5);
      if (t2 == null ? (_6 = false, g4 = I4) : g4 = t2, M4.precision = g4 += A4, r4 = X2(D4), n3 = r4.charAt(0), Math.abs(o5 = R5.e) < 15e14) {
        for (; n3 < 7 && n3 != 1 || n3 == 1 && r4.charAt(1) > 3; )
          R5 = R5.times(e2), r4 = X2(R5.d), n3 = r4.charAt(0), S5++;
        o5 = R5.e, n3 > 1 ? (R5 = new M4("0." + r4), o5++) : R5 = new M4(n3 + "." + r4.slice(1));
      } else
        return l3 = Pr2(M4, g4 + 2, I4).times(o5 + ""), R5 = Oe2(new M4(n3 + "." + r4.slice(1)), g4 - A4).plus(l3), M4.precision = I4, t2 == null ? k6(R5, I4, B2, _6 = true) : R5;
      for (h2 = R5, u4 = s3 = R5 = q3(R5.minus(1), R5.plus(1), g4, 1), v4 = k6(R5.times(R5), g4, 1), i3 = 3; ; ) {
        if (s3 = k6(s3.times(v4), g4, 1), l3 = u4.plus(q3(s3, new M4(i3), g4, 1)), X2(l3.d).slice(0, g4) === X2(u4.d).slice(0, g4))
          if (u4 = u4.times(2), o5 !== 0 && (u4 = u4.plus(Pr2(M4, g4 + 2, I4).times(o5 + ""))), u4 = q3(u4, new M4(S5), g4, 1), t2 == null)
            if (Bt(u4.d, g4 - A4, B2, a3))
              M4.precision = g4 += A4, l3 = s3 = R5 = q3(h2.minus(1), h2.plus(1), g4, 1), v4 = k6(R5.times(R5), g4, 1), i3 = a3 = 1;
            else
              return k6(u4, M4.precision = I4, B2, _6 = true);
          else
            return M4.precision = I4, u4;
        u4 = l3, i3 += 2;
      }
    }
    function Po2(e2) {
      return String(e2.s * e2.s / 0);
    }
    function vn2(e2, t2) {
      var r4, n3, i3;
      for ((r4 = t2.indexOf(".")) > -1 && (t2 = t2.replace(".", "")), (n3 = t2.search(/e/i)) > 0 ? (r4 < 0 && (r4 = n3), r4 += +t2.slice(n3 + 1), t2 = t2.substring(0, n3)) : r4 < 0 && (r4 = t2.length), n3 = 0; t2.charCodeAt(n3) === 48; n3++)
        ;
      for (i3 = t2.length; t2.charCodeAt(i3 - 1) === 48; --i3)
        ;
      if (t2 = t2.slice(n3, i3), t2) {
        if (i3 -= n3, e2.e = r4 = r4 - n3 - 1, e2.d = [], n3 = (r4 + 1) % O6, r4 < 0 && (n3 += O6), n3 < i3) {
          for (n3 && e2.d.push(+t2.slice(0, n3)), i3 -= O6; n3 < i3; )
            e2.d.push(+t2.slice(n3, n3 += O6));
          t2 = t2.slice(n3), n3 = O6 - t2.length;
        } else
          n3 -= i3;
        for (; n3--; )
          t2 += "0";
        e2.d.push(+t2), _6 && (e2.e > e2.constructor.maxE ? (e2.d = null, e2.e = NaN) : e2.e < e2.constructor.minE && (e2.e = 0, e2.d = [0]));
      } else
        e2.e = 0, e2.d = [0];
      return e2;
    }
    function gu2(e2, t2) {
      var r4, n3, i3, o5, s3, a3, u4, l3, g4;
      if (t2.indexOf("_") > -1) {
        if (t2 = t2.replace(/(\d)_(?=\d)/g, "$1"), wo.test(t2))
          return vn2(e2, t2);
      } else if (t2 === "Infinity" || t2 === "NaN")
        return +t2 || (e2.s = NaN), e2.e = NaN, e2.d = null, e2;
      if (cu2.test(t2))
        r4 = 16, t2 = t2.toLowerCase();
      else if (lu2.test(t2))
        r4 = 2;
      else if (pu2.test(t2))
        r4 = 8;
      else
        throw Error(Ne2 + t2);
      for (o5 = t2.search(/p/i), o5 > 0 ? (u4 = +t2.slice(o5 + 1), t2 = t2.substring(2, o5)) : t2 = t2.slice(2), o5 = t2.indexOf("."), s3 = o5 >= 0, n3 = e2.constructor, s3 && (t2 = t2.replace(".", ""), a3 = t2.length, o5 = a3 - o5, i3 = bo(n3, new n3(r4), o5, o5 * 2)), l3 = Er2(t2, r4, pe3), g4 = l3.length - 1, o5 = g4; l3[o5] === 0; --o5)
        l3.pop();
      return o5 < 0 ? new n3(e2.s * 0) : (e2.e = Tr2(l3, g4), e2.d = l3, _6 = false, s3 && (e2 = q3(e2, i3, a3 * 4)), u4 && (e2 = e2.times(Math.abs(u4) < 54 ? H3(2, u4) : He3.pow(2, u4))), _6 = true, e2);
    }
    function hu2(e2, t2) {
      var r4, n3 = t2.d.length;
      if (n3 < 3)
        return t2.isZero() ? t2 : pt2(e2, 2, t2, t2);
      r4 = 1.4 * Math.sqrt(n3), r4 = r4 > 16 ? 16 : r4 | 0, t2 = t2.times(1 / Cr(5, r4)), t2 = pt2(e2, 2, t2, t2);
      for (var i3, o5 = new e2(5), s3 = new e2(16), a3 = new e2(20); r4--; )
        i3 = t2.times(t2), t2 = t2.times(o5.plus(i3.times(s3.times(i3).minus(a3))));
      return t2;
    }
    function pt2(e2, t2, r4, n3, i3) {
      var o5, s3, a3, u4, l3 = 1, g4 = e2.precision, h2 = Math.ceil(g4 / O6);
      for (_6 = false, u4 = r4.times(r4), a3 = new e2(n3); ; ) {
        if (s3 = q3(a3.times(u4), new e2(t2++ * t2++), g4, 1), a3 = i3 ? n3.plus(s3) : n3.minus(s3), n3 = q3(s3.times(u4), new e2(t2++ * t2++), g4, 1), s3 = a3.plus(n3), s3.d[h2] !== void 0) {
          for (o5 = h2; s3.d[o5] === a3.d[o5] && o5--; )
            ;
          if (o5 == -1)
            break;
        }
        o5 = a3, a3 = n3, n3 = s3, s3 = o5, l3++;
      }
      return _6 = true, s3.d.length = h2 + 1, s3;
    }
    function Cr(e2, t2) {
      for (var r4 = e2; --t2; )
        r4 *= e2;
      return r4;
    }
    function vo(e2, t2) {
      var r4, n3 = t2.s < 0, i3 = ce3(e2, e2.precision, 1), o5 = i3.times(0.5);
      if (t2 = t2.abs(), t2.lte(o5))
        return Ce3 = n3 ? 4 : 1, t2;
      if (r4 = t2.divToInt(i3), r4.isZero())
        Ce3 = n3 ? 3 : 2;
      else {
        if (t2 = t2.minus(r4.times(i3)), t2.lte(o5))
          return Ce3 = co2(r4) ? n3 ? 2 : 3 : n3 ? 4 : 1, t2;
        Ce3 = co2(r4) ? n3 ? 1 : 4 : n3 ? 3 : 2;
      }
      return t2.minus(i3).abs();
    }
    function Tn2(e2, t2, r4, n3) {
      var i3, o5, s3, a3, u4, l3, g4, h2, v4, S5 = e2.constructor, A4 = r4 !== void 0;
      if (A4 ? (ue3(r4, 1, _e2), n3 === void 0 ? n3 = S5.rounding : ue3(n3, 0, 8)) : (r4 = S5.precision, n3 = S5.rounding), !e2.isFinite())
        g4 = Po2(e2);
      else {
        for (g4 = he2(e2), s3 = g4.indexOf("."), A4 ? (i3 = 2, t2 == 16 ? r4 = r4 * 4 - 3 : t2 == 8 && (r4 = r4 * 3 - 2)) : i3 = t2, s3 >= 0 && (g4 = g4.replace(".", ""), v4 = new S5(1), v4.e = g4.length - s3, v4.d = Er2(he2(v4), 10, i3), v4.e = v4.d.length), h2 = Er2(g4, 10, i3), o5 = u4 = h2.length; h2[--u4] == 0; )
          h2.pop();
        if (!h2[0])
          g4 = A4 ? "0p+0" : "0";
        else {
          if (s3 < 0 ? o5-- : (e2 = new S5(e2), e2.d = h2, e2.e = o5, e2 = q3(e2, v4, r4, n3, 0, i3), h2 = e2.d, o5 = e2.e, l3 = mo2), s3 = h2[r4], a3 = i3 / 2, l3 = l3 || h2[r4 + 1] !== void 0, l3 = n3 < 4 ? (s3 !== void 0 || l3) && (n3 === 0 || n3 === (e2.s < 0 ? 3 : 2)) : s3 > a3 || s3 === a3 && (n3 === 4 || l3 || n3 === 6 && h2[r4 - 1] & 1 || n3 === (e2.s < 0 ? 8 : 7)), h2.length = r4, l3)
            for (; ++h2[--r4] > i3 - 1; )
              h2[r4] = 0, r4 || (++o5, h2.unshift(1));
          for (u4 = h2.length; !h2[u4 - 1]; --u4)
            ;
          for (s3 = 0, g4 = ""; s3 < u4; s3++)
            g4 += En2.charAt(h2[s3]);
          if (A4) {
            if (u4 > 1)
              if (t2 == 16 || t2 == 8) {
                for (s3 = t2 == 16 ? 4 : 3, --u4; u4 % s3; u4++)
                  g4 += "0";
                for (h2 = Er2(g4, i3, t2), u4 = h2.length; !h2[u4 - 1]; --u4)
                  ;
                for (s3 = 1, g4 = "1."; s3 < u4; s3++)
                  g4 += En2.charAt(h2[s3]);
              } else
                g4 = g4.charAt(0) + "." + g4.slice(1);
            g4 = g4 + (o5 < 0 ? "p" : "p+") + o5;
          } else if (o5 < 0) {
            for (; ++o5; )
              g4 = "0" + g4;
            g4 = "0." + g4;
          } else if (++o5 > u4)
            for (o5 -= u4; o5--; )
              g4 += "0";
          else
            o5 < u4 && (g4 = g4.slice(0, o5) + "." + g4.slice(o5));
        }
        g4 = (t2 == 16 ? "0x" : t2 == 2 ? "0b" : t2 == 8 ? "0o" : "") + g4;
      }
      return e2.s < 0 ? "-" + g4 : g4;
    }
    function po2(e2, t2) {
      if (e2.length > t2)
        return e2.length = t2, true;
    }
    function yu2(e2) {
      return new this(e2).abs();
    }
    function wu2(e2) {
      return new this(e2).acos();
    }
    function Eu2(e2) {
      return new this(e2).acosh();
    }
    function bu2(e2, t2) {
      return new this(e2).plus(t2);
    }
    function xu2(e2) {
      return new this(e2).asin();
    }
    function Pu2(e2) {
      return new this(e2).asinh();
    }
    function vu2(e2) {
      return new this(e2).atan();
    }
    function Tu2(e2) {
      return new this(e2).atanh();
    }
    function Cu2(e2, t2) {
      e2 = new this(e2), t2 = new this(t2);
      var r4, n3 = this.precision, i3 = this.rounding, o5 = n3 + 4;
      return !e2.s || !t2.s ? r4 = new this(NaN) : !e2.d && !t2.d ? (r4 = ce3(this, o5, 1).times(t2.s > 0 ? 0.25 : 0.75), r4.s = e2.s) : !t2.d || e2.isZero() ? (r4 = t2.s < 0 ? ce3(this, n3, i3) : new this(0), r4.s = e2.s) : !e2.d || t2.isZero() ? (r4 = ce3(this, o5, 1).times(0.5), r4.s = e2.s) : t2.s < 0 ? (this.precision = o5, this.rounding = 1, r4 = this.atan(q3(e2, t2, o5, 1)), t2 = ce3(this, o5, 1), this.precision = n3, this.rounding = i3, r4 = e2.s < 0 ? r4.minus(t2) : r4.plus(t2)) : r4 = this.atan(q3(e2, t2, o5, 1)), r4;
    }
    function Au2(e2) {
      return new this(e2).cbrt();
    }
    function Ru2(e2) {
      return k6(e2 = new this(e2), e2.e + 1, 2);
    }
    function Su2(e2, t2, r4) {
      return new this(e2).clamp(t2, r4);
    }
    function Iu2(e2) {
      if (!e2 || typeof e2 != "object")
        throw Error(vr2 + "Object expected");
      var t2, r4, n3, i3 = e2.defaults === true, o5 = ["precision", 1, _e2, "rounding", 0, 8, "toExpNeg", -ct3, 0, "toExpPos", 0, ct3, "maxE", 0, ct3, "minE", -ct3, 0, "modulo", 0, 9];
      for (t2 = 0; t2 < o5.length; t2 += 3)
        if (r4 = o5[t2], i3 && (this[r4] = bn2[r4]), (n3 = e2[r4]) !== void 0)
          if (re2(n3) === n3 && n3 >= o5[t2 + 1] && n3 <= o5[t2 + 2])
            this[r4] = n3;
          else
            throw Error(Ne2 + r4 + ": " + n3);
      if (r4 = "crypto", i3 && (this[r4] = bn2[r4]), (n3 = e2[r4]) !== void 0)
        if (n3 === true || n3 === false || n3 === 0 || n3 === 1)
          if (n3)
            if (typeof crypto != "undefined" && crypto && (crypto.getRandomValues || crypto.randomBytes))
              this[r4] = true;
            else
              throw Error(ho2);
          else
            this[r4] = false;
        else
          throw Error(Ne2 + r4 + ": " + n3);
      return this;
    }
    function ku2(e2) {
      return new this(e2).cos();
    }
    function Du2(e2) {
      return new this(e2).cosh();
    }
    function To2(e2) {
      var t2, r4, n3;
      function i3(o5) {
        var s3, a3, u4, l3 = this;
        if (!(l3 instanceof i3))
          return new i3(o5);
        if (l3.constructor = i3, fo2(o5)) {
          l3.s = o5.s, _6 ? !o5.d || o5.e > i3.maxE ? (l3.e = NaN, l3.d = null) : o5.e < i3.minE ? (l3.e = 0, l3.d = [0]) : (l3.e = o5.e, l3.d = o5.d.slice()) : (l3.e = o5.e, l3.d = o5.d ? o5.d.slice() : o5.d);
          return;
        }
        if (u4 = typeof o5, u4 === "number") {
          if (o5 === 0) {
            l3.s = 1 / o5 < 0 ? -1 : 1, l3.e = 0, l3.d = [0];
            return;
          }
          if (o5 < 0 ? (o5 = -o5, l3.s = -1) : l3.s = 1, o5 === ~~o5 && o5 < 1e7) {
            for (s3 = 0, a3 = o5; a3 >= 10; a3 /= 10)
              s3++;
            _6 ? s3 > i3.maxE ? (l3.e = NaN, l3.d = null) : s3 < i3.minE ? (l3.e = 0, l3.d = [0]) : (l3.e = s3, l3.d = [o5]) : (l3.e = s3, l3.d = [o5]);
            return;
          } else if (o5 * 0 !== 0) {
            o5 || (l3.s = NaN), l3.e = NaN, l3.d = null;
            return;
          }
          return vn2(l3, o5.toString());
        } else if (u4 !== "string")
          throw Error(Ne2 + o5);
        return (a3 = o5.charCodeAt(0)) === 45 ? (o5 = o5.slice(1), l3.s = -1) : (a3 === 43 && (o5 = o5.slice(1)), l3.s = 1), wo.test(o5) ? vn2(l3, o5) : gu2(l3, o5);
      }
      if (i3.prototype = C5, i3.ROUND_UP = 0, i3.ROUND_DOWN = 1, i3.ROUND_CEIL = 2, i3.ROUND_FLOOR = 3, i3.ROUND_HALF_UP = 4, i3.ROUND_HALF_DOWN = 5, i3.ROUND_HALF_EVEN = 6, i3.ROUND_HALF_CEIL = 7, i3.ROUND_HALF_FLOOR = 8, i3.EUCLID = 9, i3.config = i3.set = Iu2, i3.clone = To2, i3.isDecimal = fo2, i3.abs = yu2, i3.acos = wu2, i3.acosh = Eu2, i3.add = bu2, i3.asin = xu2, i3.asinh = Pu2, i3.atan = vu2, i3.atanh = Tu2, i3.atan2 = Cu2, i3.cbrt = Au2, i3.ceil = Ru2, i3.clamp = Su2, i3.cos = ku2, i3.cosh = Du2, i3.div = Mu2, i3.exp = Ou2, i3.floor = Nu2, i3.hypot = _u2, i3.ln = Lu2, i3.log = Fu2, i3.log10 = $u2, i3.log2 = Bu, i3.max = qu, i3.min = Uu, i3.mod = Vu2, i3.mul = ju2, i3.pow = Ju2, i3.random = Qu2, i3.round = Gu2, i3.sign = Hu2, i3.sin = Wu2, i3.sinh = Ku, i3.sqrt = zu, i3.sub = Yu2, i3.sum = Zu2, i3.tan = Xu2, i3.tanh = el2, i3.trunc = tl2, e2 === void 0 && (e2 = {}), e2 && e2.defaults !== true)
        for (n3 = ["precision", "rounding", "toExpNeg", "toExpPos", "maxE", "minE", "modulo", "crypto"], t2 = 0; t2 < n3.length; )
          e2.hasOwnProperty(r4 = n3[t2++]) || (e2[r4] = this[r4]);
      return i3.config(e2), i3;
    }
    function Mu2(e2, t2) {
      return new this(e2).div(t2);
    }
    function Ou2(e2) {
      return new this(e2).exp();
    }
    function Nu2(e2) {
      return k6(e2 = new this(e2), e2.e + 1, 3);
    }
    function _u2() {
      var e2, t2, r4 = new this(0);
      for (_6 = false, e2 = 0; e2 < arguments.length; )
        if (t2 = new this(arguments[e2++]), t2.d)
          r4.d && (r4 = r4.plus(t2.times(t2)));
        else {
          if (t2.s)
            return _6 = true, new this(1 / 0);
          r4 = t2;
        }
      return _6 = true, r4.sqrt();
    }
    function fo2(e2) {
      return e2 instanceof He3 || e2 && e2.toStringTag === yo || false;
    }
    function Lu2(e2) {
      return new this(e2).ln();
    }
    function Fu2(e2, t2) {
      return new this(e2).log(t2);
    }
    function Bu(e2) {
      return new this(e2).log(2);
    }
    function $u2(e2) {
      return new this(e2).log(10);
    }
    function qu() {
      return xo(this, arguments, "lt");
    }
    function Uu() {
      return xo(this, arguments, "gt");
    }
    function Vu2(e2, t2) {
      return new this(e2).mod(t2);
    }
    function ju2(e2, t2) {
      return new this(e2).mul(t2);
    }
    function Ju2(e2, t2) {
      return new this(e2).pow(t2);
    }
    function Qu2(e2) {
      var t2, r4, n3, i3, o5 = 0, s3 = new this(1), a3 = [];
      if (e2 === void 0 ? e2 = this.precision : ue3(e2, 1, _e2), n3 = Math.ceil(e2 / O6), this.crypto)
        if (crypto.getRandomValues)
          for (t2 = crypto.getRandomValues(new Uint32Array(n3)); o5 < n3; )
            i3 = t2[o5], i3 >= 429e7 ? t2[o5] = crypto.getRandomValues(new Uint32Array(1))[0] : a3[o5++] = i3 % 1e7;
        else if (crypto.randomBytes) {
          for (t2 = crypto.randomBytes(n3 *= 4); o5 < n3; )
            i3 = t2[o5] + (t2[o5 + 1] << 8) + (t2[o5 + 2] << 16) + ((t2[o5 + 3] & 127) << 24), i3 >= 214e7 ? crypto.randomBytes(4).copy(t2, o5) : (a3.push(i3 % 1e7), o5 += 4);
          o5 = n3 / 4;
        } else
          throw Error(ho2);
      else
        for (; o5 < n3; )
          a3[o5++] = Math.random() * 1e7 | 0;
      for (n3 = a3[--o5], e2 %= O6, n3 && e2 && (i3 = H3(10, O6 - e2), a3[o5] = (n3 / i3 | 0) * i3); a3[o5] === 0; o5--)
        a3.pop();
      if (o5 < 0)
        r4 = 0, a3 = [0];
      else {
        for (r4 = -1; a3[0] === 0; r4 -= O6)
          a3.shift();
        for (n3 = 1, i3 = a3[0]; i3 >= 10; i3 /= 10)
          n3++;
        n3 < O6 && (r4 -= O6 - n3);
      }
      return s3.e = r4, s3.d = a3, s3;
    }
    function Gu2(e2) {
      return k6(e2 = new this(e2), e2.e + 1, this.rounding);
    }
    function Hu2(e2) {
      return e2 = new this(e2), e2.d ? e2.d[0] ? e2.s : 0 * e2.s : e2.s || NaN;
    }
    function Wu2(e2) {
      return new this(e2).sin();
    }
    function Ku(e2) {
      return new this(e2).sinh();
    }
    function zu(e2) {
      return new this(e2).sqrt();
    }
    function Yu2(e2, t2) {
      return new this(e2).sub(t2);
    }
    function Zu2() {
      var e2 = 0, t2 = arguments, r4 = new this(t2[e2]);
      for (_6 = false; r4.s && ++e2 < t2.length; )
        r4 = r4.plus(t2[e2]);
      return _6 = true, k6(r4, this.precision, this.rounding);
    }
    function Xu2(e2) {
      return new this(e2).tan();
    }
    function el2(e2) {
      return new this(e2).tanh();
    }
    function tl2(e2) {
      return k6(e2 = new this(e2), e2.e + 1, 1);
    }
    C5[Symbol.for("nodejs.util.inspect.custom")] = C5.toString;
    C5[Symbol.toStringTag] = "Decimal";
    var He3 = C5.constructor = To2(bn2);
    br2 = new He3(br2);
    xr2 = new He3(xr2);
    var ye3 = He3;
    function ft2(e2) {
      return He3.isDecimal(e2) ? true : e2 !== null && typeof e2 == "object" && typeof e2.s == "number" && typeof e2.e == "number" && typeof e2.toFixed == "function" && Array.isArray(e2.d);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var $t = class {
      constructor(t2, r4, n3, i3, o5) {
        this.modelName = t2, this.name = r4, this.typeName = n3, this.isList = i3, this.isEnum = o5;
      }
      _toGraphQLInputType() {
        let t2 = this.isList ? "List" : "", r4 = this.isEnum ? "Enum" : "";
        return `${t2}${r4}${this.typeName}FieldRefInput<${this.modelName}>`;
      }
    };
    function mt3(e2) {
      return e2 instanceof $t;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ar2 = class {
      constructor(t2) {
        this.value = t2;
      }
      write(t2) {
        t2.write(this.value);
      }
      markAsError() {
        this.value.markAsError();
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Rr = (e2) => e2;
    var Sr2 = { bold: Rr, red: Rr, green: Rr, dim: Rr, enabled: false };
    var Co2 = { bold: ar, red: it2, green: Ri, dim: ur, enabled: true };
    var dt3 = { write(e2) {
      e2.writeLine(",");
    } };
    d5();
    c4();
    p6();
    f4();
    m4();
    var we2 = class {
      constructor(t2) {
        this.contents = t2;
        this.isUnderlined = false;
        this.color = (t3) => t3;
      }
      underline() {
        return this.isUnderlined = true, this;
      }
      setColor(t2) {
        return this.color = t2, this;
      }
      write(t2) {
        let r4 = t2.getCurrentLineLength();
        t2.write(this.color(this.contents)), this.isUnderlined && t2.afterNextNewline(() => {
          t2.write(" ".repeat(r4)).writeLine(this.color("~".repeat(this.contents.length)));
        });
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Le3 = class {
      constructor() {
        this.hasError = false;
      }
      markAsError() {
        return this.hasError = true, this;
      }
    };
    var gt3 = class extends Le3 {
      constructor() {
        super(...arguments);
        this.items = [];
      }
      addItem(r4) {
        return this.items.push(new Ar2(r4)), this;
      }
      getField(r4) {
        return this.items[r4];
      }
      getPrintWidth() {
        return this.items.length === 0 ? 2 : Math.max(...this.items.map((n3) => n3.value.getPrintWidth())) + 2;
      }
      write(r4) {
        if (this.items.length === 0) {
          this.writeEmpty(r4);
          return;
        }
        this.writeWithItems(r4);
      }
      writeEmpty(r4) {
        let n3 = new we2("[]");
        this.hasError && n3.setColor(r4.context.colors.red).underline(), r4.write(n3);
      }
      writeWithItems(r4) {
        let { colors: n3 } = r4.context;
        r4.writeLine("[").withIndent(() => r4.writeJoined(dt3, this.items).newLine()).write("]"), this.hasError && r4.afterNextNewline(() => {
          r4.writeLine(n3.red("~".repeat(this.getPrintWidth())));
        });
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ao2 = ": ";
    var Ir = class {
      constructor(t2, r4) {
        this.name = t2;
        this.value = r4;
        this.hasError = false;
      }
      markAsError() {
        this.hasError = true;
      }
      getPrintWidth() {
        return this.name.length + this.value.getPrintWidth() + Ao2.length;
      }
      write(t2) {
        let r4 = new we2(this.name);
        this.hasError && r4.underline().setColor(t2.context.colors.red), t2.write(r4).write(Ao2).write(this.value);
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var z5 = class e2 extends Le3 {
      constructor() {
        super(...arguments);
        this.fields = {};
        this.suggestions = [];
      }
      addField(r4) {
        this.fields[r4.name] = r4;
      }
      addSuggestion(r4) {
        this.suggestions.push(r4);
      }
      getField(r4) {
        return this.fields[r4];
      }
      getDeepField(r4) {
        let [n3, ...i3] = r4, o5 = this.getField(n3);
        if (!o5)
          return;
        let s3 = o5;
        for (let a3 of i3) {
          let u4;
          if (s3.value instanceof e2 ? u4 = s3.value.getField(a3) : s3.value instanceof gt3 && (u4 = s3.value.getField(Number(a3))), !u4)
            return;
          s3 = u4;
        }
        return s3;
      }
      getDeepFieldValue(r4) {
        var n3;
        return r4.length === 0 ? this : (n3 = this.getDeepField(r4)) == null ? void 0 : n3.value;
      }
      hasField(r4) {
        return !!this.getField(r4);
      }
      removeAllFields() {
        this.fields = {};
      }
      removeField(r4) {
        delete this.fields[r4];
      }
      getFields() {
        return this.fields;
      }
      isEmpty() {
        return Object.keys(this.fields).length === 0;
      }
      getFieldValue(r4) {
        var n3;
        return (n3 = this.getField(r4)) == null ? void 0 : n3.value;
      }
      getDeepSubSelectionValue(r4) {
        let n3 = this;
        for (let i3 of r4) {
          if (!(n3 instanceof e2))
            return;
          let o5 = n3.getSubSelectionValue(i3);
          if (!o5)
            return;
          n3 = o5;
        }
        return n3;
      }
      getDeepSelectionParent(r4) {
        let n3 = this.getSelectionParent();
        if (!n3)
          return;
        let i3 = n3;
        for (let o5 of r4) {
          let s3 = i3.value.getFieldValue(o5);
          if (!s3 || !(s3 instanceof e2))
            return;
          let a3 = s3.getSelectionParent();
          if (!a3)
            return;
          i3 = a3;
        }
        return i3;
      }
      getSelectionParent() {
        let r4 = this.getField("select");
        if ((r4 == null ? void 0 : r4.value) instanceof e2)
          return { kind: "select", value: r4.value };
        let n3 = this.getField("include");
        if ((n3 == null ? void 0 : n3.value) instanceof e2)
          return { kind: "include", value: n3.value };
      }
      getSubSelectionValue(r4) {
        var n3;
        return (n3 = this.getSelectionParent()) == null ? void 0 : n3.value.fields[r4].value;
      }
      getPrintWidth() {
        let r4 = Object.values(this.fields);
        return r4.length == 0 ? 2 : Math.max(...r4.map((i3) => i3.getPrintWidth())) + 2;
      }
      write(r4) {
        let n3 = Object.values(this.fields);
        if (n3.length === 0 && this.suggestions.length === 0) {
          this.writeEmpty(r4);
          return;
        }
        this.writeWithContents(r4, n3);
      }
      writeEmpty(r4) {
        let n3 = new we2("{}");
        this.hasError && n3.setColor(r4.context.colors.red).underline(), r4.write(n3);
      }
      writeWithContents(r4, n3) {
        r4.writeLine("{").withIndent(() => {
          r4.writeJoined(dt3, [...n3, ...this.suggestions]).newLine();
        }), r4.write("}"), this.hasError && r4.afterNextNewline(() => {
          r4.writeLine(r4.context.colors.red("~".repeat(this.getPrintWidth())));
        });
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Y2 = class extends Le3 {
      constructor(r4) {
        super();
        this.text = r4;
      }
      getPrintWidth() {
        return this.text.length;
      }
      write(r4) {
        let n3 = new we2(this.text);
        this.hasError && n3.underline().setColor(r4.context.colors.red), r4.write(n3);
      }
    };
    var Cn = class {
      constructor(t2) {
        this.errorMessages = [];
        this.arguments = t2;
      }
      write(t2) {
        t2.write(this.arguments);
      }
      addErrorMessage(t2) {
        this.errorMessages.push(t2);
      }
      renderAllMessages(t2) {
        return this.errorMessages.map((r4) => r4(t2)).join(`
`);
      }
    };
    function kr2(e2) {
      return new Cn(Ro2(e2));
    }
    function Ro2(e2) {
      let t2 = new z5();
      for (let [r4, n3] of Object.entries(e2)) {
        let i3 = new Ir(r4, So2(n3));
        t2.addField(i3);
      }
      return t2;
    }
    function So2(e2) {
      if (typeof e2 == "string")
        return new Y2(JSON.stringify(e2));
      if (typeof e2 == "number" || typeof e2 == "boolean")
        return new Y2(String(e2));
      if (typeof e2 == "bigint")
        return new Y2(`${e2}n`);
      if (e2 === null)
        return new Y2("null");
      if (e2 === void 0)
        return new Y2("undefined");
      if (ft2(e2))
        return new Y2(`new Prisma.Decimal("${e2.toFixed()}")`);
      if (e2 instanceof Uint8Array)
        return w7.Buffer.isBuffer(e2) ? new Y2(`Buffer.alloc(${e2.byteLength})`) : new Y2(`new Uint8Array(${e2.byteLength})`);
      if (e2 instanceof Date) {
        let t2 = wr2(e2) ? e2.toISOString() : "Invalid Date";
        return new Y2(`new Date("${t2}")`);
      }
      return e2 instanceof Te2 ? new Y2(`Prisma.${e2._getName()}`) : mt3(e2) ? new Y2(`prisma.${lo2(e2.modelName)}.$fields.${e2.name}`) : Array.isArray(e2) ? nl2(e2) : typeof e2 == "object" ? Ro2(e2) : new Y2(Object.prototype.toString.call(e2));
    }
    function nl2(e2) {
      let t2 = new gt3();
      for (let r4 of e2)
        t2.addItem(So2(r4));
      return t2;
    }
    function Io2(e2) {
      if (e2 === void 0)
        return "";
      let t2 = kr2(e2);
      return new ut2(0, { colors: Sr2 }).write(t2).toString();
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var il2 = "P2037";
    function qt({ error: e2, user_facing_error: t2 }, r4, n3) {
      return t2.error_code ? new K2(ol2(t2, n3), { code: t2.error_code, clientVersion: r4, meta: t2.meta, batchRequestIdx: t2.batch_request_idx }) : new se2(e2, { clientVersion: r4, batchRequestIdx: t2.batch_request_idx });
    }
    function ol2(e2, t2) {
      let r4 = e2.message;
      return (t2 === "postgresql" || t2 === "postgres" || t2 === "mysql") && e2.error_code === il2 && (r4 += `
Prisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`), r4;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var An = class {
      getLocation() {
        return null;
      }
    };
    function Fe3(e2) {
      return typeof $EnabledCallSite == "function" && e2 !== "minimal" ? new $EnabledCallSite() : new An();
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var ko2 = { _avg: true, _count: true, _sum: true, _min: true, _max: true };
    function ht(e2 = {}) {
      let t2 = al2(e2);
      return Object.entries(t2).reduce((n3, [i3, o5]) => (ko2[i3] !== void 0 ? n3.select[i3] = { select: o5 } : n3[i3] = o5, n3), { select: {} });
    }
    function al2(e2 = {}) {
      return typeof e2._count == "boolean" ? { ...e2, _count: { _all: e2._count } } : e2;
    }
    function Dr(e2 = {}) {
      return (t2) => (typeof e2._count == "boolean" && (t2._count = t2._count._all), t2);
    }
    function Do2(e2, t2) {
      let r4 = Dr(e2);
      return t2({ action: "aggregate", unpacker: r4, argsMapper: ht })(e2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function ul2(e2 = {}) {
      let { select: t2, ...r4 } = e2;
      return typeof t2 == "object" ? ht({ ...r4, _count: t2 }) : ht({ ...r4, _count: { _all: true } });
    }
    function ll(e2 = {}) {
      return typeof e2.select == "object" ? (t2) => Dr(e2)(t2)._count : (t2) => Dr(e2)(t2)._count._all;
    }
    function Mo2(e2, t2) {
      return t2({ action: "count", unpacker: ll(e2), argsMapper: ul2 })(e2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function cl2(e2 = {}) {
      let t2 = ht(e2);
      if (Array.isArray(t2.by))
        for (let r4 of t2.by)
          typeof r4 == "string" && (t2.select[r4] = true);
      else
        typeof t2.by == "string" && (t2.select[t2.by] = true);
      return t2;
    }
    function pl2(e2 = {}) {
      return (t2) => (typeof (e2 == null ? void 0 : e2._count) == "boolean" && t2.forEach((r4) => {
        r4._count = r4._count._all;
      }), t2);
    }
    function Oo2(e2, t2) {
      return t2({ action: "groupBy", unpacker: pl2(e2), argsMapper: cl2 })(e2);
    }
    function No2(e2, t2, r4) {
      if (t2 === "aggregate")
        return (n3) => Do2(n3, r4);
      if (t2 === "count")
        return (n3) => Mo2(n3, r4);
      if (t2 === "groupBy")
        return (n3) => Oo2(n3, r4);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function _o(e2, t2) {
      let r4 = t2.fields.filter((i3) => !i3.relationName), n3 = cn2(r4, (i3) => i3.name);
      return new Proxy({}, { get(i3, o5) {
        if (o5 in i3 || typeof o5 == "symbol")
          return i3[o5];
        let s3 = n3[o5];
        if (s3)
          return new $t(e2, o5, s3.type, s3.isList, s3.kind === "enum");
      }, ...hr2(Object.keys(n3)) });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Lo2 = (e2) => Array.isArray(e2) ? e2 : e2.split(".");
    var Rn = (e2, t2) => Lo2(t2).reduce((r4, n3) => r4 && r4[n3], e2);
    var Fo2 = (e2, t2, r4) => Lo2(t2).reduceRight((n3, i3, o5, s3) => Object.assign({}, Rn(e2, s3.slice(0, o5)), { [i3]: n3 }), r4);
    function fl3(e2, t2) {
      return e2 === void 0 || t2 === void 0 ? [] : [...t2, "select", e2];
    }
    function ml2(e2, t2, r4) {
      return t2 === void 0 ? e2 != null ? e2 : {} : Fo2(t2, r4, e2 || true);
    }
    function Sn2(e2, t2, r4, n3, i3, o5) {
      let a3 = e2._runtimeDataModel.models[t2].fields.reduce((u4, l3) => ({ ...u4, [l3.name]: l3 }), {});
      return (u4) => {
        let l3 = Fe3(e2._errorFormat), g4 = fl3(n3, i3), h2 = ml2(u4, o5, g4), v4 = r4({ dataPath: g4, callsite: l3 })(h2), S5 = dl2(e2, t2);
        return new Proxy(v4, { get(A4, R5) {
          if (!S5.includes(R5))
            return A4[R5];
          let M4 = [a3[R5].type, r4, R5], B2 = [g4, h2];
          return Sn2(e2, ...M4, ...B2);
        }, ...hr2([...S5, ...Object.getOwnPropertyNames(v4)]) });
      };
    }
    function dl2(e2, t2) {
      return e2._runtimeDataModel.models[t2].fields.filter((r4) => r4.kind === "object").map((r4) => r4.name);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var gl2 = Ve2(Wi());
    var hl2 = { red: it2, gray: Di, dim: ur, bold: ar, underline: Ai, highlightSource: (e2) => e2.highlight() };
    var yl2 = { red: (e2) => e2, gray: (e2) => e2, dim: (e2) => e2, bold: (e2) => e2, underline: (e2) => e2, highlightSource: (e2) => e2 };
    function wl2({ message: e2, originalMethod: t2, isPanic: r4, callArguments: n3 }) {
      return { functionName: `prisma.${t2}()`, message: e2, isPanic: r4 != null ? r4 : false, callArguments: n3 };
    }
    function El2({ functionName: e2, location: t2, message: r4, isPanic: n3, contextLines: i3, callArguments: o5 }, s3) {
      let a3 = [""], u4 = t2 ? " in" : ":";
      if (n3 ? (a3.push(s3.red(`Oops, an unknown error occurred! This is ${s3.bold("on us")}, you did nothing wrong.`)), a3.push(s3.red(`It occurred in the ${s3.bold(`\`${e2}\``)} invocation${u4}`))) : a3.push(s3.red(`Invalid ${s3.bold(`\`${e2}\``)} invocation${u4}`)), t2 && a3.push(s3.underline(bl2(t2))), i3) {
        a3.push("");
        let l3 = [i3.toString()];
        o5 && (l3.push(o5), l3.push(s3.dim(")"))), a3.push(l3.join("")), o5 && a3.push("");
      } else
        a3.push(""), o5 && a3.push(o5), a3.push("");
      return a3.push(r4), a3.join(`
`);
    }
    function bl2(e2) {
      let t2 = [e2.fileName];
      return e2.lineNumber && t2.push(String(e2.lineNumber)), e2.columnNumber && t2.push(String(e2.columnNumber)), t2.join(":");
    }
    function yt3(e2) {
      let t2 = e2.showColors ? hl2 : yl2, r4;
      return typeof $getTemplateParameters != "undefined" ? r4 = $getTemplateParameters(e2, t2) : r4 = wl2(e2), El2(r4, t2);
    }
    function Bo2(e2, t2, r4, n3) {
      return e2 === De2.ModelAction.findFirstOrThrow || e2 === De2.ModelAction.findUniqueOrThrow ? xl2(t2, r4, n3) : n3;
    }
    function xl2(e2, t2, r4) {
      return async (n3) => {
        if ("rejectOnNotFound" in n3.args) {
          let o5 = yt3({ originalMethod: n3.clientMethod, callsite: n3.callsite, message: "'rejectOnNotFound' option is not supported" });
          throw new Z2(o5, { clientVersion: t2 });
        }
        return await r4(n3).catch((o5) => {
          throw o5 instanceof K2 && o5.code === "P2025" ? new Pe2(`No ${e2} found`, t2) : o5;
        });
      };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Ee2(e2) {
      return e2.replace(/^./, (t2) => t2.toLowerCase());
    }
    var Pl2 = ["findUnique", "findUniqueOrThrow", "findFirst", "findFirstOrThrow", "create", "update", "upsert", "delete"];
    var vl2 = ["aggregate", "count", "groupBy"];
    function In2(e2, t2) {
      var i3;
      let r4 = (i3 = e2._extensions.getAllModelExtensions(t2)) != null ? i3 : {}, n3 = [Tl2(e2, t2), Al2(e2, t2), Lt(r4), ie3("name", () => t2), ie3("$name", () => t2), ie3("$parent", () => e2._appliedParent)];
      return ge2({}, n3);
    }
    function Tl2(e2, t2) {
      let r4 = Ee2(t2), n3 = Object.keys(De2.ModelAction).concat("count");
      return { getKeys() {
        return n3;
      }, getPropertyValue(i3) {
        let o5 = i3, s3 = (u4) => e2._request(u4);
        s3 = Bo2(o5, t2, e2._clientVersion, s3);
        let a3 = (u4) => (l3) => {
          let g4 = Fe3(e2._errorFormat);
          return e2._createPrismaPromise((h2) => {
            let v4 = { args: l3, dataPath: [], action: o5, model: t2, clientMethod: `${r4}.${i3}`, jsModelName: r4, transaction: h2, callsite: g4 };
            return s3({ ...v4, ...u4 });
          });
        };
        return Pl2.includes(o5) ? Sn2(e2, t2, a3) : Cl2(i3) ? No2(e2, i3, a3) : a3({});
      } };
    }
    function Cl2(e2) {
      return vl2.includes(e2);
    }
    function Al2(e2, t2) {
      return Ge2(ie3("fields", () => {
        let r4 = e2._runtimeDataModel.models[t2];
        return _o(t2, r4);
      }));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function $o2(e2) {
      return e2.replace(/^./, (t2) => t2.toUpperCase());
    }
    var kn = Symbol();
    function Ut(e2) {
      let t2 = [Rl2(e2), ie3(kn, () => e2), ie3("$parent", () => e2._appliedParent)], r4 = e2._extensions.getAllClientExtensions();
      return r4 && t2.push(Lt(r4)), ge2(e2, t2);
    }
    function Rl2(e2) {
      let t2 = Object.keys(e2._runtimeDataModel.models), r4 = t2.map(Ee2), n3 = [...new Set(t2.concat(r4))];
      return Ge2({ getKeys() {
        return n3;
      }, getPropertyValue(i3) {
        let o5 = $o2(i3);
        if (e2._runtimeDataModel.models[o5] !== void 0)
          return In2(e2, o5);
        if (e2._runtimeDataModel.models[i3] !== void 0)
          return In2(e2, i3);
      }, getPropertyDescriptor(i3) {
        if (!r4.includes(i3))
          return { enumerable: false };
      } });
    }
    function qo2(e2) {
      return e2[kn] ? e2[kn] : e2;
    }
    function Uo2(e2) {
      var r4;
      if (typeof e2 == "function")
        return e2(this);
      if ((r4 = e2.client) != null && r4.__AccelerateEngine) {
        let n3 = e2.client.__AccelerateEngine;
        this._originalClient._engine = new n3(this._originalClient._accelerateEngineConfig);
      }
      let t2 = Object.create(this._originalClient, { _extensions: { value: this._extensions.append(e2) }, _appliedParent: { value: this, configurable: true }, $use: { value: void 0 }, $on: { value: void 0 } });
      return Ut(t2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function Vo2({ result: e2, modelName: t2, select: r4, extensions: n3 }) {
      let i3 = n3.getAllComputedFields(t2);
      if (!i3)
        return e2;
      let o5 = [], s3 = [];
      for (let a3 of Object.values(i3)) {
        if (r4) {
          if (!r4[a3.name])
            continue;
          let u4 = a3.needs.filter((l3) => !r4[l3]);
          u4.length > 0 && s3.push(Ft(u4));
        }
        Sl2(e2, a3.needs) && o5.push(Il2(a3, ge2(e2, o5)));
      }
      return o5.length > 0 || s3.length > 0 ? ge2(e2, [...o5, ...s3]) : e2;
    }
    function Sl2(e2, t2) {
      return t2.every((r4) => ln2(e2, r4));
    }
    function Il2(e2, t2) {
      return Ge2(ie3(e2.name, () => e2.compute(t2)));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Mr2({ visitor: e2, result: t2, args: r4, runtimeDataModel: n3, modelName: i3 }) {
      var s3;
      if (Array.isArray(t2)) {
        for (let a3 = 0; a3 < t2.length; a3++)
          t2[a3] = Mr2({ result: t2[a3], args: r4, modelName: i3, runtimeDataModel: n3, visitor: e2 });
        return t2;
      }
      let o5 = (s3 = e2(t2, i3, r4)) != null ? s3 : t2;
      return r4.include && jo2({ includeOrSelect: r4.include, result: o5, parentModelName: i3, runtimeDataModel: n3, visitor: e2 }), r4.select && jo2({ includeOrSelect: r4.select, result: o5, parentModelName: i3, runtimeDataModel: n3, visitor: e2 }), o5;
    }
    function jo2({ includeOrSelect: e2, result: t2, parentModelName: r4, runtimeDataModel: n3, visitor: i3 }) {
      for (let [o5, s3] of Object.entries(e2)) {
        if (!s3 || t2[o5] == null)
          continue;
        let u4 = n3.models[r4].fields.find((g4) => g4.name === o5);
        if (!u4 || u4.kind !== "object" || !u4.relationName)
          continue;
        let l3 = typeof s3 == "object" ? s3 : {};
        t2[o5] = Mr2({ visitor: i3, result: t2[o5], args: l3, modelName: u4.type, runtimeDataModel: n3 });
      }
    }
    function Jo2({ result: e2, modelName: t2, args: r4, extensions: n3, runtimeDataModel: i3 }) {
      return n3.isEmpty() || e2 == null || typeof e2 != "object" || !i3.models[t2] ? e2 : Mr2({ result: e2, args: r4 != null ? r4 : {}, modelName: t2, runtimeDataModel: i3, visitor: (s3, a3, u4) => Vo2({ result: s3, modelName: Ee2(a3), select: u4.select, extensions: n3 }) });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function Qo2(e2) {
      if (e2 instanceof ae2)
        return kl2(e2);
      if (Array.isArray(e2)) {
        let r4 = [e2[0]];
        for (let n3 = 1; n3 < e2.length; n3++)
          r4[n3] = Vt(e2[n3]);
        return r4;
      }
      let t2 = {};
      for (let r4 in e2)
        t2[r4] = Vt(e2[r4]);
      return t2;
    }
    function kl2(e2) {
      return new ae2(e2.strings, e2.values);
    }
    function Vt(e2) {
      if (typeof e2 != "object" || e2 == null || e2 instanceof Te2 || mt3(e2))
        return e2;
      if (ft2(e2))
        return new ye3(e2.toFixed());
      if (lt2(e2))
        return /* @__PURE__ */ new Date(+e2);
      if (ArrayBuffer.isView(e2))
        return e2.slice(0);
      if (Array.isArray(e2)) {
        let t2 = e2.length, r4;
        for (r4 = Array(t2); t2--; )
          r4[t2] = Vt(e2[t2]);
        return r4;
      }
      if (typeof e2 == "object") {
        let t2 = {};
        for (let r4 in e2)
          r4 === "__proto__" ? Object.defineProperty(t2, r4, { value: Vt(e2[r4]), configurable: true, enumerable: true, writable: true }) : t2[r4] = Vt(e2[r4]);
        return t2;
      }
      Je2(e2, "Unknown value");
    }
    function Ho2(e2, t2, r4, n3 = 0) {
      return e2._createPrismaPromise((i3) => {
        var s3, a3;
        let o5 = t2.customDataProxyFetch;
        return "transaction" in t2 && i3 !== void 0 && (((s3 = t2.transaction) == null ? void 0 : s3.kind) === "batch" && t2.transaction.lock.then(), t2.transaction = i3), n3 === r4.length ? e2._executeRequest(t2) : r4[n3]({ model: t2.model, operation: t2.model ? t2.action : t2.clientMethod, args: Qo2((a3 = t2.args) != null ? a3 : {}), __internalParams: t2, query: (u4, l3 = t2) => {
          let g4 = l3.customDataProxyFetch;
          return l3.customDataProxyFetch = Yo2(o5, g4), l3.args = u4, Ho2(e2, l3, r4, n3 + 1);
        } });
      });
    }
    function Wo2(e2, t2) {
      let { jsModelName: r4, action: n3, clientMethod: i3 } = t2, o5 = r4 ? n3 : i3;
      if (e2._extensions.isEmpty())
        return e2._executeRequest(t2);
      let s3 = e2._extensions.getAllQueryCallbacks(r4 != null ? r4 : "$none", o5);
      return Ho2(e2, t2, s3);
    }
    function Ko2(e2) {
      return (t2) => {
        let r4 = { requests: t2 }, n3 = t2[0].extensions.getAllBatchQueryCallbacks();
        return n3.length ? zo2(r4, n3, 0, e2) : e2(r4);
      };
    }
    function zo2(e2, t2, r4, n3) {
      if (r4 === t2.length)
        return n3(e2);
      let i3 = e2.customDataProxyFetch, o5 = e2.requests[0].transaction;
      return t2[r4]({ args: { queries: e2.requests.map((s3) => ({ model: s3.modelName, operation: s3.action, args: s3.args })), transaction: o5 ? { isolationLevel: o5.kind === "batch" ? o5.isolationLevel : void 0 } : void 0 }, __internalParams: e2, query(s3, a3 = e2) {
        let u4 = a3.customDataProxyFetch;
        return a3.customDataProxyFetch = Yo2(i3, u4), zo2(a3, t2, r4 + 1, n3);
      } });
    }
    var Go2 = (e2) => e2;
    function Yo2(e2 = Go2, t2 = Go2) {
      return (r4) => e2(t2(r4));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function Xo2(e2, t2, r4) {
      let n3 = Ee2(r4);
      return !t2.result || !(t2.result.$allModels || t2.result[n3]) ? e2 : Dl2({ ...e2, ...Zo2(t2.name, e2, t2.result.$allModels), ...Zo2(t2.name, e2, t2.result[n3]) });
    }
    function Dl2(e2) {
      let t2 = new de3(), r4 = (n3, i3) => t2.getOrCreate(n3, () => i3.has(n3) ? [n3] : (i3.add(n3), e2[n3] ? e2[n3].needs.flatMap((o5) => r4(o5, i3)) : [n3]));
      return st3(e2, (n3) => ({ ...n3, needs: r4(n3.name, /* @__PURE__ */ new Set()) }));
    }
    function Zo2(e2, t2, r4) {
      return r4 ? st3(r4, ({ needs: n3, compute: i3 }, o5) => ({ name: o5, needs: n3 ? Object.keys(n3).filter((s3) => n3[s3]) : [], compute: Ml2(t2, o5, i3) })) : {};
    }
    function Ml2(e2, t2, r4) {
      var i3;
      let n3 = (i3 = e2 == null ? void 0 : e2[t2]) == null ? void 0 : i3.compute;
      return n3 ? (o5) => r4({ ...o5, [t2]: n3(o5) }) : r4;
    }
    function es2(e2, t2) {
      if (!t2)
        return e2;
      let r4 = { ...e2 };
      for (let n3 of Object.values(t2))
        if (e2[n3.name])
          for (let i3 of n3.needs)
            r4[i3] = true;
      return r4;
    }
    var Or2 = class {
      constructor(t2, r4) {
        this.extension = t2;
        this.previous = r4;
        this.computedFieldsCache = new de3();
        this.modelExtensionsCache = new de3();
        this.queryCallbacksCache = new de3();
        this.clientExtensions = kt3(() => {
          var t3, r5;
          return this.extension.client ? { ...(r5 = this.previous) == null ? void 0 : r5.getAllClientExtensions(), ...this.extension.client } : (t3 = this.previous) == null ? void 0 : t3.getAllClientExtensions();
        });
        this.batchCallbacks = kt3(() => {
          var n3, i3, o5;
          let t3 = (i3 = (n3 = this.previous) == null ? void 0 : n3.getAllBatchQueryCallbacks()) != null ? i3 : [], r5 = (o5 = this.extension.query) == null ? void 0 : o5.$__internalBatch;
          return r5 ? t3.concat(r5) : t3;
        });
      }
      getAllComputedFields(t2) {
        return this.computedFieldsCache.getOrCreate(t2, () => {
          var r4;
          return Xo2((r4 = this.previous) == null ? void 0 : r4.getAllComputedFields(t2), this.extension, t2);
        });
      }
      getAllClientExtensions() {
        return this.clientExtensions.get();
      }
      getAllModelExtensions(t2) {
        return this.modelExtensionsCache.getOrCreate(t2, () => {
          var n3, i3;
          let r4 = Ee2(t2);
          return !this.extension.model || !(this.extension.model[r4] || this.extension.model.$allModels) ? (n3 = this.previous) == null ? void 0 : n3.getAllModelExtensions(t2) : { ...(i3 = this.previous) == null ? void 0 : i3.getAllModelExtensions(t2), ...this.extension.model.$allModels, ...this.extension.model[r4] };
        });
      }
      getAllQueryCallbacks(t2, r4) {
        return this.queryCallbacksCache.getOrCreate(`${t2}:${r4}`, () => {
          var s3, a3;
          let n3 = (a3 = (s3 = this.previous) == null ? void 0 : s3.getAllQueryCallbacks(t2, r4)) != null ? a3 : [], i3 = [], o5 = this.extension.query;
          return !o5 || !(o5[t2] || o5.$allModels || o5[r4] || o5.$allOperations) ? n3 : (o5[t2] !== void 0 && (o5[t2][r4] !== void 0 && i3.push(o5[t2][r4]), o5[t2].$allOperations !== void 0 && i3.push(o5[t2].$allOperations)), t2 !== "$none" && o5.$allModels !== void 0 && (o5.$allModels[r4] !== void 0 && i3.push(o5.$allModels[r4]), o5.$allModels.$allOperations !== void 0 && i3.push(o5.$allModels.$allOperations)), o5[r4] !== void 0 && i3.push(o5[r4]), o5.$allOperations !== void 0 && i3.push(o5.$allOperations), n3.concat(i3));
        });
      }
      getAllBatchQueryCallbacks() {
        return this.batchCallbacks.get();
      }
    };
    var Nr2 = class e2 {
      constructor(t2) {
        this.head = t2;
      }
      static empty() {
        return new e2();
      }
      static single(t2) {
        return new e2(new Or2(t2));
      }
      isEmpty() {
        return this.head === void 0;
      }
      append(t2) {
        return new e2(new Or2(t2, this.head));
      }
      getAllComputedFields(t2) {
        var r4;
        return (r4 = this.head) == null ? void 0 : r4.getAllComputedFields(t2);
      }
      getAllClientExtensions() {
        var t2;
        return (t2 = this.head) == null ? void 0 : t2.getAllClientExtensions();
      }
      getAllModelExtensions(t2) {
        var r4;
        return (r4 = this.head) == null ? void 0 : r4.getAllModelExtensions(t2);
      }
      getAllQueryCallbacks(t2, r4) {
        var n3, i3;
        return (i3 = (n3 = this.head) == null ? void 0 : n3.getAllQueryCallbacks(t2, r4)) != null ? i3 : [];
      }
      getAllBatchQueryCallbacks() {
        var t2, r4;
        return (r4 = (t2 = this.head) == null ? void 0 : t2.getAllBatchQueryCallbacks()) != null ? r4 : [];
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var ts2 = ne2("prisma:client");
    var rs2 = { Vercel: "vercel", "Netlify CI": "netlify" };
    function ns2({ postinstall: e2, ciName: t2, clientVersion: r4 }) {
      if (ts2("checkPlatformCaching:postinstall", e2), ts2("checkPlatformCaching:ciName", t2), e2 === true && t2 && t2 in rs2) {
        let n3 = `Prisma has detected that this project was built on ${t2}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.

Learn how: https://pris.ly/d/${rs2[t2]}-build`;
        throw console.error(n3), new G2(n3, r4);
      }
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function is2(e2, t2) {
      return e2 ? e2.datasources ? e2.datasources : e2.datasourceUrl ? { [t2[0]]: { url: e2.datasourceUrl } } : {} : {};
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ol2 = "Cloudflare-Workers";
    var Nl = "node";
    function _r2() {
      var e2, t2, r4;
      return typeof Netlify == "object" ? "netlify" : typeof EdgeRuntime == "string" ? "edge-light" : ((e2 = globalThis.navigator) == null ? void 0 : e2.userAgent) === Ol2 ? "workerd" : globalThis.Deno ? "deno" : globalThis.__lagon__ ? "lagon" : ((r4 = (t2 = globalThis.process) == null ? void 0 : t2.release) == null ? void 0 : r4.name) === Nl ? "node" : globalThis.Bun ? "bun" : globalThis.fastly ? "fastly" : "unknown";
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function wt3({ inlineDatasources: e2, overrideDatasources: t2, env: r4, clientVersion: n3 }) {
      var u4, l3;
      let i3, o5 = Object.keys(e2)[0], s3 = (u4 = e2[o5]) == null ? void 0 : u4.url, a3 = (l3 = t2[o5]) == null ? void 0 : l3.url;
      if (o5 === void 0 ? i3 = void 0 : a3 ? i3 = a3 : s3 != null && s3.value ? i3 = s3.value : s3 != null && s3.fromEnvVar && (i3 = r4[s3.fromEnvVar]), (s3 == null ? void 0 : s3.fromEnvVar) !== void 0 && i3 === void 0)
        throw _r2() === "workerd" ? new G2(`error: Environment variable not found: ${s3.fromEnvVar}.

In Cloudflare module Workers, environment variables are available only in the Worker's \`env\` parameter of \`fetch\`.
To solve this, provide the connection string directly: https://pris.ly/d/cloudflare-datasource-url`, n3) : new G2(`error: Environment variable not found: ${s3.fromEnvVar}.`, n3);
      if (i3 === void 0)
        throw new G2("error: Missing URL environment variable, value, or override.", n3);
      return i3;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Lr = class extends Error {
      constructor(t2, r4) {
        super(t2), this.clientVersion = r4.clientVersion, this.cause = r4.cause;
      }
      get [Symbol.toStringTag]() {
        return this.name;
      }
    };
    var le2 = class extends Lr {
      constructor(t2, r4) {
        var n3;
        super(t2, r4), this.isRetryable = (n3 = r4.isRetryable) != null ? n3 : true;
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    function $4(e2, t2) {
      return { ...e2, isRetryable: t2 };
    }
    var Et3 = class extends le2 {
      constructor(r4) {
        super("This request must be retried", $4(r4, true));
        this.name = "ForcedRetryError";
        this.code = "P5001";
      }
    };
    N5(Et3, "ForcedRetryError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var We2 = class extends le2 {
      constructor(r4, n3) {
        super(r4, $4(n3, false));
        this.name = "InvalidDatasourceError";
        this.code = "P6001";
      }
    };
    N5(We2, "InvalidDatasourceError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ke2 = class extends le2 {
      constructor(r4, n3) {
        super(r4, $4(n3, false));
        this.name = "NotImplementedYetError";
        this.code = "P5004";
      }
    };
    N5(Ke2, "NotImplementedYetError");
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var j5 = class extends le2 {
      constructor(t2, r4) {
        super(t2, r4), this.response = r4.response;
        let n3 = this.response.headers.get("prisma-request-id");
        if (n3) {
          let i3 = `(The request id was: ${n3})`;
          this.message = this.message + " " + i3;
        }
      }
    };
    var ze3 = class extends j5 {
      constructor(r4) {
        super("Schema needs to be uploaded", $4(r4, true));
        this.name = "SchemaMissingError";
        this.code = "P5005";
      }
    };
    N5(ze3, "SchemaMissingError");
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Dn = "This request could not be understood by the server";
    var jt = class extends j5 {
      constructor(r4, n3, i3) {
        super(n3 || Dn, $4(r4, false));
        this.name = "BadRequestError";
        this.code = "P5000";
        i3 && (this.code = i3);
      }
    };
    N5(jt, "BadRequestError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Jt = class extends j5 {
      constructor(r4, n3) {
        super("Engine not started: healthcheck timeout", $4(r4, true));
        this.name = "HealthcheckTimeoutError";
        this.code = "P5013";
        this.logs = n3;
      }
    };
    N5(Jt, "HealthcheckTimeoutError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Qt = class extends j5 {
      constructor(r4, n3, i3) {
        super(n3, $4(r4, true));
        this.name = "EngineStartupError";
        this.code = "P5014";
        this.logs = i3;
      }
    };
    N5(Qt, "EngineStartupError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Gt = class extends j5 {
      constructor(r4) {
        super("Engine version is not supported", $4(r4, false));
        this.name = "EngineVersionNotSupportedError";
        this.code = "P5012";
      }
    };
    N5(Gt, "EngineVersionNotSupportedError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Mn = "Request timed out";
    var Ht = class extends j5 {
      constructor(r4, n3 = Mn) {
        super(n3, $4(r4, false));
        this.name = "GatewayTimeoutError";
        this.code = "P5009";
      }
    };
    N5(Ht, "GatewayTimeoutError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var _l2 = "Interactive transaction error";
    var Wt = class extends j5 {
      constructor(r4, n3 = _l2) {
        super(n3, $4(r4, false));
        this.name = "InteractiveTransactionError";
        this.code = "P5015";
      }
    };
    N5(Wt, "InteractiveTransactionError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ll2 = "Request parameters are invalid";
    var Kt = class extends j5 {
      constructor(r4, n3 = Ll2) {
        super(n3, $4(r4, false));
        this.name = "InvalidRequestError";
        this.code = "P5011";
      }
    };
    N5(Kt, "InvalidRequestError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var On = "Requested resource does not exist";
    var zt = class extends j5 {
      constructor(r4, n3 = On) {
        super(n3, $4(r4, false));
        this.name = "NotFoundError";
        this.code = "P5003";
      }
    };
    N5(zt, "NotFoundError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Nn = "Unknown server error";
    var bt3 = class extends j5 {
      constructor(r4, n3, i3) {
        super(n3 || Nn, $4(r4, true));
        this.name = "ServerError";
        this.code = "P5006";
        this.logs = i3;
      }
    };
    N5(bt3, "ServerError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var _n2 = "Unauthorized, check your connection string";
    var Yt = class extends j5 {
      constructor(r4, n3 = _n2) {
        super(n3, $4(r4, false));
        this.name = "UnauthorizedError";
        this.code = "P5007";
      }
    };
    N5(Yt, "UnauthorizedError");
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ln = "Usage exceeded, retry again later";
    var Zt = class extends j5 {
      constructor(r4, n3 = Ln) {
        super(n3, $4(r4, true));
        this.name = "UsageExceededError";
        this.code = "P5008";
      }
    };
    N5(Zt, "UsageExceededError");
    async function Fl2(e2) {
      let t2;
      try {
        t2 = await e2.text();
      } catch (r4) {
        return { type: "EmptyError" };
      }
      try {
        let r4 = JSON.parse(t2);
        if (typeof r4 == "string")
          switch (r4) {
            case "InternalDataProxyError":
              return { type: "DataProxyError", body: r4 };
            default:
              return { type: "UnknownTextError", body: r4 };
          }
        if (typeof r4 == "object" && r4 !== null) {
          if ("is_panic" in r4 && "message" in r4 && "error_code" in r4)
            return { type: "QueryEngineError", body: r4 };
          if ("EngineNotStarted" in r4 || "InteractiveTransactionMisrouted" in r4 || "InvalidRequestError" in r4) {
            let n3 = Object.values(r4)[0].reason;
            return typeof n3 == "string" && !["SchemaMissing", "EngineVersionNotSupported"].includes(n3) ? { type: "UnknownJsonError", body: r4 } : { type: "DataProxyError", body: r4 };
          }
        }
        return { type: "UnknownJsonError", body: r4 };
      } catch (r4) {
        return t2 === "" ? { type: "EmptyError" } : { type: "UnknownTextError", body: t2 };
      }
    }
    async function Xt(e2, t2) {
      if (e2.ok)
        return;
      let r4 = { clientVersion: t2, response: e2 }, n3 = await Fl2(e2);
      if (n3.type === "QueryEngineError")
        throw new K2(n3.body.message, { code: n3.body.error_code, clientVersion: t2 });
      if (n3.type === "DataProxyError") {
        if (n3.body === "InternalDataProxyError")
          throw new bt3(r4, "Internal Data Proxy error");
        if ("EngineNotStarted" in n3.body) {
          if (n3.body.EngineNotStarted.reason === "SchemaMissing")
            return new ze3(r4);
          if (n3.body.EngineNotStarted.reason === "EngineVersionNotSupported")
            throw new Gt(r4);
          if ("EngineStartupError" in n3.body.EngineNotStarted.reason) {
            let { msg: i3, logs: o5 } = n3.body.EngineNotStarted.reason.EngineStartupError;
            throw new Qt(r4, i3, o5);
          }
          if ("KnownEngineStartupError" in n3.body.EngineNotStarted.reason) {
            let { msg: i3, error_code: o5 } = n3.body.EngineNotStarted.reason.KnownEngineStartupError;
            throw new G2(i3, t2, o5);
          }
          if ("HealthcheckTimeout" in n3.body.EngineNotStarted.reason) {
            let { logs: i3 } = n3.body.EngineNotStarted.reason.HealthcheckTimeout;
            throw new Jt(r4, i3);
          }
        }
        if ("InteractiveTransactionMisrouted" in n3.body) {
          let i3 = { IDParseError: "Could not parse interactive transaction ID", NoQueryEngineFoundError: "Could not find Query Engine for the specified host and transaction ID", TransactionStartError: "Could not start interactive transaction" };
          throw new Wt(r4, i3[n3.body.InteractiveTransactionMisrouted.reason]);
        }
        if ("InvalidRequestError" in n3.body)
          throw new Kt(r4, n3.body.InvalidRequestError.reason);
      }
      if (e2.status === 401 || e2.status === 403)
        throw new Yt(r4, xt3(_n2, n3));
      if (e2.status === 404)
        return new zt(r4, xt3(On, n3));
      if (e2.status === 429)
        throw new Zt(r4, xt3(Ln, n3));
      if (e2.status === 504)
        throw new Ht(r4, xt3(Mn, n3));
      if (e2.status >= 500)
        throw new bt3(r4, xt3(Nn, n3));
      if (e2.status >= 400)
        throw new jt(r4, xt3(Dn, n3));
    }
    function xt3(e2, t2) {
      return t2.type === "EmptyError" ? e2 : `${e2}: ${JSON.stringify(t2)}`;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function os3(e2) {
      let t2 = Math.pow(2, e2) * 50, r4 = Math.ceil(Math.random() * t2) - Math.ceil(t2 / 2), n3 = t2 + r4;
      return new Promise((i3) => setTimeout(() => i3(n3), n3));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ae3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    function ss(e2) {
      let t2 = new TextEncoder().encode(e2), r4 = "", n3 = t2.byteLength, i3 = n3 % 3, o5 = n3 - i3, s3, a3, u4, l3, g4;
      for (let h2 = 0; h2 < o5; h2 = h2 + 3)
        g4 = t2[h2] << 16 | t2[h2 + 1] << 8 | t2[h2 + 2], s3 = (g4 & 16515072) >> 18, a3 = (g4 & 258048) >> 12, u4 = (g4 & 4032) >> 6, l3 = g4 & 63, r4 += Ae3[s3] + Ae3[a3] + Ae3[u4] + Ae3[l3];
      return i3 == 1 ? (g4 = t2[o5], s3 = (g4 & 252) >> 2, a3 = (g4 & 3) << 4, r4 += Ae3[s3] + Ae3[a3] + "==") : i3 == 2 && (g4 = t2[o5] << 8 | t2[o5 + 1], s3 = (g4 & 64512) >> 10, a3 = (g4 & 1008) >> 4, u4 = (g4 & 15) << 2, r4 += Ae3[s3] + Ae3[a3] + Ae3[u4] + "="), r4;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function as2(e2) {
      var r4;
      if (!!((r4 = e2.generator) != null && r4.previewFeatures.some((n3) => n3.toLowerCase().includes("metrics"))))
        throw new G2("The `metrics` preview feature is not yet available with Accelerate.\nPlease remove `metrics` from the `previewFeatures` in your schema.\n\nMore information about Accelerate: https://pris.ly/d/accelerate", e2.clientVersion);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Bl(e2) {
      return e2[0] * 1e3 + e2[1] / 1e6;
    }
    function us2(e2) {
      return new Date(Bl(e2));
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var ls2 = { "@prisma/debug": "workspace:*", "@prisma/engines-version": "5.10.0-34.5a9203d0590c951969e85a7d07215503f4672eb9", "@prisma/fetch-engine": "workspace:*", "@prisma/get-platform": "workspace:*" };
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var er = class extends le2 {
      constructor(r4, n3) {
        super(`Cannot fetch data from service:
${r4}`, $4(n3, true));
        this.name = "RequestError";
        this.code = "P5010";
      }
    };
    N5(er, "RequestError");
    async function Ye2(e2, t2, r4 = (n3) => n3) {
      var i3;
      let n3 = t2.clientVersion;
      try {
        return typeof fetch == "function" ? await r4(fetch)(e2, t2) : await r4(Fn)(e2, t2);
      } catch (o5) {
        let s3 = (i3 = o5.message) != null ? i3 : "Unknown error";
        throw new er(s3, { clientVersion: n3 });
      }
    }
    function ql(e2) {
      return { ...e2.headers, "Content-Type": "application/json" };
    }
    function Ul(e2) {
      return { method: e2.method, headers: ql(e2) };
    }
    function Vl(e2, t2) {
      return { text: () => Promise.resolve(w7.Buffer.concat(e2).toString()), json: () => Promise.resolve().then(() => JSON.parse(w7.Buffer.concat(e2).toString())), ok: t2.statusCode >= 200 && t2.statusCode <= 299, status: t2.statusCode, url: t2.url, headers: new Bn2(t2.headers) };
    }
    async function Fn(e2, t2 = {}) {
      let r4 = jl("https"), n3 = Ul(t2), i3 = [], { origin: o5 } = new URL(e2);
      return new Promise((s3, a3) => {
        var l3;
        let u4 = r4.request(e2, n3, (g4) => {
          let { statusCode: h2, headers: { location: v4 } } = g4;
          h2 >= 301 && h2 <= 399 && v4 && (v4.startsWith("http") === false ? s3(Fn(`${o5}${v4}`, t2)) : s3(Fn(v4, t2))), g4.on("data", (S5) => i3.push(S5)), g4.on("end", () => s3(Vl(i3, g4))), g4.on("error", a3);
        });
        u4.on("error", a3), u4.end((l3 = t2.body) != null ? l3 : "");
      });
    }
    var jl = typeof __require != "undefined" ? __require : () => {
    };
    var Bn2 = class {
      constructor(t2 = {}) {
        this.headers = /* @__PURE__ */ new Map();
        for (let [r4, n3] of Object.entries(t2))
          if (typeof n3 == "string")
            this.headers.set(r4, n3);
          else if (Array.isArray(n3))
            for (let i3 of n3)
              this.headers.set(r4, i3);
      }
      append(t2, r4) {
        this.headers.set(t2, r4);
      }
      delete(t2) {
        this.headers.delete(t2);
      }
      get(t2) {
        var r4;
        return (r4 = this.headers.get(t2)) != null ? r4 : null;
      }
      has(t2) {
        return this.headers.has(t2);
      }
      set(t2, r4) {
        this.headers.set(t2, r4);
      }
      forEach(t2, r4) {
        for (let [n3, i3] of this.headers)
          t2.call(r4, i3, n3, this);
      }
    };
    var Jl = /^[1-9][0-9]*\.[0-9]+\.[0-9]+$/;
    var cs2 = ne2("prisma:client:dataproxyEngine");
    async function Ql(e2, t2) {
      var s3, a3, u4;
      let r4 = ls2["@prisma/engines-version"], n3 = (s3 = t2.clientVersion) != null ? s3 : "unknown";
      if (y3.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION)
        return y3.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION;
      if (e2.includes("accelerate") && n3 !== "0.0.0" && n3 !== "in-memory")
        return n3;
      let [i3, o5] = (a3 = n3 == null ? void 0 : n3.split("-")) != null ? a3 : [];
      if (o5 === void 0 && Jl.test(i3))
        return i3;
      if (o5 !== void 0 || n3 === "0.0.0" || n3 === "in-memory") {
        if (e2.startsWith("localhost") || e2.startsWith("127.0.0.1"))
          return "0.0.0";
        let [l3] = (u4 = r4.split("-")) != null ? u4 : [], [g4, h2, v4] = l3.split("."), S5 = Gl(`<=${g4}.${h2}.${v4}`), A4 = await Ye2(S5, { clientVersion: n3 });
        if (!A4.ok)
          throw new Error(`Failed to fetch stable Prisma version, unpkg.com status ${A4.status} ${A4.statusText}, response body: ${await A4.text() || "<empty body>"}`);
        let R5 = await A4.text();
        cs2("length of body fetched from unpkg.com", R5.length);
        let D4;
        try {
          D4 = JSON.parse(R5);
        } catch (M4) {
          throw console.error("JSON.parse error: body fetched from unpkg.com: ", R5), M4;
        }
        return D4.version;
      }
      throw new Ke2("Only `major.minor.patch` versions are supported by Accelerate.", { clientVersion: n3 });
    }
    async function ps2(e2, t2) {
      let r4 = await Ql(e2, t2);
      return cs2("version", r4), r4;
    }
    function Gl(e2) {
      return encodeURI(`https://unpkg.com/prisma@${e2}/package.json`);
    }
    var fs = 3;
    var $n2 = ne2("prisma:client:dataproxyEngine");
    var qn = class {
      constructor({ apiKey: t2, tracingHelper: r4, logLevel: n3, logQueries: i3, engineHash: o5 }) {
        this.apiKey = t2, this.tracingHelper = r4, this.logLevel = n3, this.logQueries = i3, this.engineHash = o5;
      }
      build({ traceparent: t2, interactiveTransaction: r4 } = {}) {
        let n3 = { Authorization: `Bearer ${this.apiKey}`, "Prisma-Engine-Hash": this.engineHash };
        this.tracingHelper.isEnabled() && (n3.traceparent = t2 != null ? t2 : this.tracingHelper.getTraceParent()), r4 && (n3["X-transaction-id"] = r4.id);
        let i3 = this.buildCaptureSettings();
        return i3.length > 0 && (n3["X-capture-telemetry"] = i3.join(", ")), n3;
      }
      buildCaptureSettings() {
        let t2 = [];
        return this.tracingHelper.isEnabled() && t2.push("tracing"), this.logLevel && t2.push(this.logLevel), this.logQueries && t2.push("query"), t2;
      }
    };
    var tr2 = class {
      constructor(t2) {
        this.name = "DataProxyEngine";
        as2(t2), this.config = t2, this.env = { ...t2.env, ...typeof y3 != "undefined" ? y3.env : {} }, this.inlineSchema = ss(t2.inlineSchema), this.inlineDatasources = t2.inlineDatasources, this.inlineSchemaHash = t2.inlineSchemaHash, this.clientVersion = t2.clientVersion, this.engineHash = t2.engineVersion, this.logEmitter = t2.logEmitter, this.tracingHelper = t2.tracingHelper;
      }
      apiKey() {
        return this.headerBuilder.apiKey;
      }
      version() {
        return this.engineHash;
      }
      async start() {
        this.startPromise !== void 0 && await this.startPromise, this.startPromise = (async () => {
          let [t2, r4] = this.extractHostAndApiKey();
          this.host = t2, this.headerBuilder = new qn({ apiKey: r4, tracingHelper: this.tracingHelper, logLevel: this.config.logLevel, logQueries: this.config.logQueries, engineHash: this.engineHash }), this.remoteClientVersion = await ps2(t2, this.config), $n2("host", this.host);
        })(), await this.startPromise;
      }
      async stop() {
      }
      propagateResponseExtensions(t2) {
        var r4, n3;
        (r4 = t2 == null ? void 0 : t2.logs) != null && r4.length && t2.logs.forEach((i3) => {
          switch (i3.level) {
            case "debug":
            case "error":
            case "trace":
            case "warn":
            case "info":
              break;
            case "query": {
              let o5 = typeof i3.attributes.query == "string" ? i3.attributes.query : "";
              if (!this.tracingHelper.isEnabled()) {
                let [s3] = o5.split("/* traceparent");
                o5 = s3;
              }
              this.logEmitter.emit("query", { query: o5, timestamp: us2(i3.timestamp), duration: Number(i3.attributes.duration_ms), params: i3.attributes.params, target: i3.attributes.target });
            }
          }
        }), (n3 = t2 == null ? void 0 : t2.traces) != null && n3.length && this.tracingHelper.createEngineSpan({ span: true, spans: t2.traces });
      }
      onBeforeExit() {
        throw new Error('"beforeExit" hook is not applicable to the remote query engine');
      }
      async url(t2) {
        return await this.start(), `https://${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${t2}`;
      }
      async uploadSchema() {
        let t2 = { name: "schemaUpload", internal: true };
        return this.tracingHelper.runInChildSpan(t2, async () => {
          let r4 = await Ye2(await this.url("schema"), { method: "PUT", headers: this.headerBuilder.build(), body: this.inlineSchema, clientVersion: this.clientVersion });
          r4.ok || $n2("schema response status", r4.status);
          let n3 = await Xt(r4, this.clientVersion);
          if (n3)
            throw this.logEmitter.emit("warn", { message: `Error while uploading schema: ${n3.message}`, timestamp: /* @__PURE__ */ new Date(), target: "" }), n3;
          this.logEmitter.emit("info", { message: `Schema (re)uploaded (hash: ${this.inlineSchemaHash})`, timestamp: /* @__PURE__ */ new Date(), target: "" });
        });
      }
      request(t2, { traceparent: r4, interactiveTransaction: n3, customDataProxyFetch: i3 }) {
        return this.requestInternal({ body: t2, traceparent: r4, interactiveTransaction: n3, customDataProxyFetch: i3 });
      }
      async requestBatch(t2, { traceparent: r4, transaction: n3, customDataProxyFetch: i3 }) {
        let o5 = (n3 == null ? void 0 : n3.kind) === "itx" ? n3.options : void 0, s3 = yr2(t2, n3), { batchResult: a3, elapsed: u4 } = await this.requestInternal({ body: s3, customDataProxyFetch: i3, interactiveTransaction: o5, traceparent: r4 });
        return a3.map((l3) => "errors" in l3 && l3.errors.length > 0 ? qt(l3.errors[0], this.clientVersion, this.config.activeProvider) : { data: l3, elapsed: u4 });
      }
      requestInternal({ body: t2, traceparent: r4, customDataProxyFetch: n3, interactiveTransaction: i3 }) {
        return this.withRetry({ actionGerund: "querying", callback: async ({ logHttpCall: o5 }) => {
          let s3 = i3 ? `${i3.payload.endpoint}/graphql` : await this.url("graphql");
          o5(s3);
          let a3 = await Ye2(s3, { method: "POST", headers: this.headerBuilder.build({ traceparent: r4, interactiveTransaction: i3 }), body: JSON.stringify(t2), clientVersion: this.clientVersion }, n3);
          a3.ok || $n2("graphql response status", a3.status), await this.handleError(await Xt(a3, this.clientVersion));
          let u4 = await a3.json(), l3 = u4.extensions;
          if (l3 && this.propagateResponseExtensions(l3), u4.errors)
            throw u4.errors.length === 1 ? qt(u4.errors[0], this.config.clientVersion, this.config.activeProvider) : new se2(u4.errors, { clientVersion: this.config.clientVersion });
          return u4;
        } });
      }
      async transaction(t2, r4, n3) {
        let i3 = { start: "starting", commit: "committing", rollback: "rolling back" };
        return this.withRetry({ actionGerund: `${i3[t2]} transaction`, callback: async ({ logHttpCall: o5 }) => {
          if (t2 === "start") {
            let s3 = JSON.stringify({ max_wait: n3.maxWait, timeout: n3.timeout, isolation_level: n3.isolationLevel }), a3 = await this.url("transaction/start");
            o5(a3);
            let u4 = await Ye2(a3, { method: "POST", headers: this.headerBuilder.build({ traceparent: r4.traceparent }), body: s3, clientVersion: this.clientVersion });
            await this.handleError(await Xt(u4, this.clientVersion));
            let l3 = await u4.json(), g4 = l3.extensions;
            g4 && this.propagateResponseExtensions(g4);
            let h2 = l3.id, v4 = l3["data-proxy"].endpoint;
            return { id: h2, payload: { endpoint: v4 } };
          } else {
            let s3 = `${n3.payload.endpoint}/${t2}`;
            o5(s3);
            let a3 = await Ye2(s3, { method: "POST", headers: this.headerBuilder.build({ traceparent: r4.traceparent }), clientVersion: this.clientVersion });
            await this.handleError(await Xt(a3, this.clientVersion));
            let l3 = (await a3.json()).extensions;
            l3 && this.propagateResponseExtensions(l3);
            return;
          }
        } });
      }
      extractHostAndApiKey() {
        let t2 = { clientVersion: this.clientVersion }, r4 = Object.keys(this.inlineDatasources)[0], n3 = wt3({ inlineDatasources: this.inlineDatasources, overrideDatasources: this.config.overrideDatasources, clientVersion: this.clientVersion, env: this.env }), i3;
        try {
          i3 = new URL(n3);
        } catch (l3) {
          throw new We2(`Error validating datasource \`${r4}\`: the URL must start with the protocol \`prisma://\``, t2);
        }
        let { protocol: o5, host: s3, searchParams: a3 } = i3;
        if (o5 !== "prisma:")
          throw new We2(`Error validating datasource \`${r4}\`: the URL must start with the protocol \`prisma://\``, t2);
        let u4 = a3.get("api_key");
        if (u4 === null || u4.length < 1)
          throw new We2(`Error validating datasource \`${r4}\`: the URL must contain a valid API key`, t2);
        return [s3, u4];
      }
      metrics() {
        throw new Ke2("Metrics are not yet supported for Accelerate", { clientVersion: this.clientVersion });
      }
      async withRetry(t2) {
        var r4;
        for (let n3 = 0; ; n3++) {
          let i3 = (o5) => {
            this.logEmitter.emit("info", { message: `Calling ${o5} (n=${n3})`, timestamp: /* @__PURE__ */ new Date(), target: "" });
          };
          try {
            return await t2.callback({ logHttpCall: i3 });
          } catch (o5) {
            if (!(o5 instanceof le2) || !o5.isRetryable)
              throw o5;
            if (n3 >= fs)
              throw o5 instanceof Et3 ? o5.cause : o5;
            this.logEmitter.emit("warn", { message: `Attempt ${n3 + 1}/${fs} failed for ${t2.actionGerund}: ${(r4 = o5.message) != null ? r4 : "(unknown)"}`, timestamp: /* @__PURE__ */ new Date(), target: "" });
            let s3 = await os3(n3);
            this.logEmitter.emit("warn", { message: `Retrying after ${s3}ms`, timestamp: /* @__PURE__ */ new Date(), target: "" });
          }
        }
      }
      async handleError(t2) {
        if (t2 instanceof ze3)
          throw await this.uploadSchema(), new Et3({ clientVersion: this.clientVersion, cause: t2 });
        if (t2)
          throw t2;
      }
    };
    function ms({ copyEngine: e2 = true }, t2) {
      let r4;
      try {
        r4 = wt3({ inlineDatasources: t2.inlineDatasources, overrideDatasources: t2.overrideDatasources, env: { ...t2.env, ...y3.env }, clientVersion: t2.clientVersion });
      } catch (u4) {
      }
      e2 && (r4 != null && r4.startsWith("prisma://")) && It2("recommend--no-engine", "In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)");
      let n3 = Rt(t2.generator), i3 = !!(r4 != null && r4.startsWith("prisma://") || !e2), o5 = !!t2.adapter, s3 = n3 === "library", a3 = n3 === "binary";
      if (i3 && o5 || o5) {
        let u4;
        throw u4 = ["Prisma Client was configured to use the `adapter` option but it was imported via its `/edge` endpoint.", "Please either remove the `/edge` endpoint or remove the `adapter` from the Prisma Client constructor."], new Z2(u4.join(`
`), { clientVersion: t2.clientVersion });
      }
      if (i3)
        return new tr2(t2);
      throw new Z2("Invalid client engine type, please use `library` or `binary`", { clientVersion: t2.clientVersion });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Fr2({ generator: e2 }) {
      var t2;
      return (t2 = e2 == null ? void 0 : e2.previewFeatures) != null ? t2 : [];
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Es = Ve2(Un());
    d5();
    c4();
    p6();
    f4();
    m4();
    function ys(e2, t2) {
      let r4 = ws(e2), n3 = Hl(r4), i3 = Kl(n3);
      i3 ? Br(i3, t2) : t2.addErrorMessage(() => "Unknown error");
    }
    function ws(e2) {
      return e2.errors.flatMap((t2) => t2.kind === "Union" ? ws(t2) : [t2]);
    }
    function Hl(e2) {
      let t2 = /* @__PURE__ */ new Map(), r4 = [];
      for (let n3 of e2) {
        if (n3.kind !== "InvalidArgumentType") {
          r4.push(n3);
          continue;
        }
        let i3 = `${n3.selectionPath.join(".")}:${n3.argumentPath.join(".")}`, o5 = t2.get(i3);
        o5 ? t2.set(i3, { ...n3, argument: { ...n3.argument, typeNames: Wl2(o5.argument.typeNames, n3.argument.typeNames) } }) : t2.set(i3, n3);
      }
      return r4.push(...t2.values()), r4;
    }
    function Wl2(e2, t2) {
      return [...new Set(e2.concat(t2))];
    }
    function Kl(e2) {
      return pn2(e2, (t2, r4) => {
        let n3 = gs2(t2), i3 = gs2(r4);
        return n3 !== i3 ? n3 - i3 : hs(t2) - hs(r4);
      });
    }
    function gs2(e2) {
      let t2 = 0;
      return Array.isArray(e2.selectionPath) && (t2 += e2.selectionPath.length), Array.isArray(e2.argumentPath) && (t2 += e2.argumentPath.length), t2;
    }
    function hs(e2) {
      switch (e2.kind) {
        case "InvalidArgumentValue":
        case "ValueTooLarge":
          return 20;
        case "InvalidArgumentType":
          return 10;
        case "RequiredArgumentMissing":
          return -10;
        default:
          return 0;
      }
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Re2 = class {
      constructor(t2, r4) {
        this.name = t2;
        this.value = r4;
        this.isRequired = false;
      }
      makeRequired() {
        return this.isRequired = true, this;
      }
      write(t2) {
        let { colors: { green: r4 } } = t2.context;
        t2.addMarginSymbol(r4(this.isRequired ? "+" : "?")), t2.write(r4(this.name)), this.isRequired || t2.write(r4("?")), t2.write(r4(": ")), typeof this.value == "string" ? t2.write(r4(this.value)) : t2.write(this.value);
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var $r = class {
      constructor() {
        this.fields = [];
      }
      addField(t2, r4) {
        return this.fields.push({ write(n3) {
          let { green: i3, dim: o5 } = n3.context.colors;
          n3.write(i3(o5(`${t2}: ${r4}`))).addMarginSymbol(i3(o5("+")));
        } }), this;
      }
      write(t2) {
        let { colors: { green: r4 } } = t2.context;
        t2.writeLine(r4("{")).withIndent(() => {
          t2.writeJoined(dt3, this.fields).newLine();
        }).write(r4("}")).addMarginSymbol(r4("+"));
      }
    };
    function Br(e2, t2) {
      switch (e2.kind) {
        case "IncludeAndSelect":
          zl2(e2, t2);
          break;
        case "IncludeOnScalar":
          Yl(e2, t2);
          break;
        case "EmptySelection":
          Zl(e2, t2);
          break;
        case "UnknownSelectionField":
          Xl(e2, t2);
          break;
        case "UnknownArgument":
          ec2(e2, t2);
          break;
        case "UnknownInputField":
          tc(e2, t2);
          break;
        case "RequiredArgumentMissing":
          rc(e2, t2);
          break;
        case "InvalidArgumentType":
          nc(e2, t2);
          break;
        case "InvalidArgumentValue":
          ic(e2, t2);
          break;
        case "ValueTooLarge":
          oc(e2, t2);
          break;
        case "SomeFieldsMissing":
          sc(e2, t2);
          break;
        case "TooManyFieldsGiven":
          ac(e2, t2);
          break;
        case "Union":
          ys(e2, t2);
          break;
        default:
          throw new Error("not implemented: " + e2.kind);
      }
    }
    function zl2(e2, t2) {
      var n3, i3;
      let r4 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      r4 && r4 instanceof z5 && ((n3 = r4.getField("include")) == null || n3.markAsError(), (i3 = r4.getField("select")) == null || i3.markAsError()), t2.addErrorMessage((o5) => `Please ${o5.bold("either")} use ${o5.green("`include`")} or ${o5.green("`select`")}, but ${o5.red("not both")} at the same time.`);
    }
    function Yl(e2, t2) {
      var s3, a3;
      let [r4, n3] = qr(e2.selectionPath), i3 = e2.outputType, o5 = (s3 = t2.arguments.getDeepSelectionParent(r4)) == null ? void 0 : s3.value;
      if (o5 && ((a3 = o5.getField(n3)) == null || a3.markAsError(), i3))
        for (let u4 of i3.fields)
          u4.isRelation && o5.addSuggestion(new Re2(u4.name, "true"));
      t2.addErrorMessage((u4) => {
        let l3 = `Invalid scalar field ${u4.red(`\`${n3}\``)} for ${u4.bold("include")} statement`;
        return i3 ? l3 += ` on model ${u4.bold(i3.name)}. ${rr2(u4)}` : l3 += ".", l3 += `
Note that ${u4.bold("include")} statements only accept relation fields.`, l3;
      });
    }
    function Zl(e2, t2) {
      var o5, s3;
      let r4 = e2.outputType, n3 = (o5 = t2.arguments.getDeepSelectionParent(e2.selectionPath)) == null ? void 0 : o5.value, i3 = (s3 = n3 == null ? void 0 : n3.isEmpty()) != null ? s3 : false;
      n3 && (n3.removeAllFields(), Ps(n3, r4)), t2.addErrorMessage((a3) => i3 ? `The ${a3.red("`select`")} statement for type ${a3.bold(r4.name)} must not be empty. ${rr2(a3)}` : `The ${a3.red("`select`")} statement for type ${a3.bold(r4.name)} needs ${a3.bold("at least one truthy value")}.`);
    }
    function Xl(e2, t2) {
      var o5;
      let [r4, n3] = qr(e2.selectionPath), i3 = t2.arguments.getDeepSelectionParent(r4);
      i3 && ((o5 = i3.value.getField(n3)) == null || o5.markAsError(), Ps(i3.value, e2.outputType)), t2.addErrorMessage((s3) => {
        let a3 = [`Unknown field ${s3.red(`\`${n3}\``)}`];
        return i3 && a3.push(`for ${s3.bold(i3.kind)} statement`), a3.push(`on model ${s3.bold(`\`${e2.outputType.name}\``)}.`), a3.push(rr2(s3)), a3.join(" ");
      });
    }
    function ec2(e2, t2) {
      var i3;
      let r4 = e2.argumentPath[0], n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n3 instanceof z5 && ((i3 = n3.getField(r4)) == null || i3.markAsError(), uc(n3, e2.arguments)), t2.addErrorMessage((o5) => bs2(o5, r4, e2.arguments.map((s3) => s3.name)));
    }
    function tc(e2, t2) {
      var o5;
      let [r4, n3] = qr(e2.argumentPath), i3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (i3 instanceof z5) {
        (o5 = i3.getDeepField(e2.argumentPath)) == null || o5.markAsError();
        let s3 = i3.getDeepFieldValue(r4);
        s3 instanceof z5 && vs(s3, e2.inputType);
      }
      t2.addErrorMessage((s3) => bs2(s3, n3, e2.inputType.fields.map((a3) => a3.name)));
    }
    function bs2(e2, t2, r4) {
      let n3 = [`Unknown argument \`${e2.red(t2)}\`.`], i3 = cc(t2, r4);
      return i3 && n3.push(`Did you mean \`${e2.green(i3)}\`?`), r4.length > 0 && n3.push(rr2(e2)), n3.join(" ");
    }
    function rc(e2, t2) {
      let r4;
      t2.addErrorMessage((u4) => (r4 == null ? void 0 : r4.value) instanceof Y2 && r4.value.text === "null" ? `Argument \`${u4.green(o5)}\` must not be ${u4.red("null")}.` : `Argument \`${u4.green(o5)}\` is missing.`);
      let n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (!(n3 instanceof z5))
        return;
      let [i3, o5] = qr(e2.argumentPath), s3 = new $r(), a3 = n3.getDeepFieldValue(i3);
      if (a3 instanceof z5)
        if (r4 = a3.getField(o5), r4 && a3.removeField(o5), e2.inputTypes.length === 1 && e2.inputTypes[0].kind === "object") {
          for (let u4 of e2.inputTypes[0].fields)
            s3.addField(u4.name, u4.typeNames.join(" | "));
          a3.addSuggestion(new Re2(o5, s3).makeRequired());
        } else {
          let u4 = e2.inputTypes.map(xs2).join(" | ");
          a3.addSuggestion(new Re2(o5, u4).makeRequired());
        }
    }
    function xs2(e2) {
      return e2.kind === "list" ? `${xs2(e2.elementType)}[]` : e2.name;
    }
    function nc(e2, t2) {
      var i3;
      let r4 = e2.argument.name, n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n3 instanceof z5 && ((i3 = n3.getDeepFieldValue(e2.argumentPath)) == null || i3.markAsError()), t2.addErrorMessage((o5) => {
        let s3 = Ur("or", e2.argument.typeNames.map((a3) => o5.green(a3)));
        return `Argument \`${o5.bold(r4)}\`: Invalid value provided. Expected ${s3}, provided ${o5.red(e2.inferredType)}.`;
      });
    }
    function ic(e2, t2) {
      var i3;
      let r4 = e2.argument.name, n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      n3 instanceof z5 && ((i3 = n3.getDeepFieldValue(e2.argumentPath)) == null || i3.markAsError()), t2.addErrorMessage((o5) => {
        let s3 = [`Invalid value for argument \`${o5.bold(r4)}\``];
        if (e2.underlyingError && s3.push(`: ${e2.underlyingError}`), s3.push("."), e2.argument.typeNames.length > 0) {
          let a3 = Ur("or", e2.argument.typeNames.map((u4) => o5.green(u4)));
          s3.push(` Expected ${a3}.`);
        }
        return s3.join("");
      });
    }
    function oc(e2, t2) {
      let r4 = e2.argument.name, n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath), i3;
      if (n3 instanceof z5) {
        let o5 = n3.getDeepField(e2.argumentPath), s3 = o5 == null ? void 0 : o5.value;
        s3 == null || s3.markAsError(), s3 instanceof Y2 && (i3 = s3.text);
      }
      t2.addErrorMessage((o5) => {
        let s3 = ["Unable to fit value"];
        return i3 && s3.push(o5.red(i3)), s3.push(`into a 64-bit signed integer for field \`${o5.bold(r4)}\``), s3.join(" ");
      });
    }
    function sc(e2, t2) {
      let r4 = e2.argumentPath[e2.argumentPath.length - 1], n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath);
      if (n3 instanceof z5) {
        let i3 = n3.getDeepFieldValue(e2.argumentPath);
        i3 instanceof z5 && vs(i3, e2.inputType);
      }
      t2.addErrorMessage((i3) => {
        let o5 = [`Argument \`${i3.bold(r4)}\` of type ${i3.bold(e2.inputType.name)} needs`];
        return e2.constraints.minFieldCount === 1 ? e2.constraints.requiredFields ? o5.push(`${i3.green("at least one of")} ${Ur("or", e2.constraints.requiredFields.map((s3) => `\`${i3.bold(s3)}\``))} arguments.`) : o5.push(`${i3.green("at least one")} argument.`) : o5.push(`${i3.green(`at least ${e2.constraints.minFieldCount}`)} arguments.`), o5.push(rr2(i3)), o5.join(" ");
      });
    }
    function ac(e2, t2) {
      let r4 = e2.argumentPath[e2.argumentPath.length - 1], n3 = t2.arguments.getDeepSubSelectionValue(e2.selectionPath), i3 = [];
      if (n3 instanceof z5) {
        let o5 = n3.getDeepFieldValue(e2.argumentPath);
        o5 instanceof z5 && (o5.markAsError(), i3 = Object.keys(o5.getFields()));
      }
      t2.addErrorMessage((o5) => {
        let s3 = [`Argument \`${o5.bold(r4)}\` of type ${o5.bold(e2.inputType.name)} needs`];
        return e2.constraints.minFieldCount === 1 && e2.constraints.maxFieldCount == 1 ? s3.push(`${o5.green("exactly one")} argument,`) : e2.constraints.maxFieldCount == 1 ? s3.push(`${o5.green("at most one")} argument,`) : s3.push(`${o5.green(`at most ${e2.constraints.maxFieldCount}`)} arguments,`), s3.push(`but you provided ${Ur("and", i3.map((a3) => o5.red(a3)))}. Please choose`), e2.constraints.maxFieldCount === 1 ? s3.push("one.") : s3.push(`${e2.constraints.maxFieldCount}.`), s3.join(" ");
      });
    }
    function Ps(e2, t2) {
      for (let r4 of t2.fields)
        e2.hasField(r4.name) || e2.addSuggestion(new Re2(r4.name, "true"));
    }
    function uc(e2, t2) {
      for (let r4 of t2)
        e2.hasField(r4.name) || e2.addSuggestion(new Re2(r4.name, r4.typeNames.join(" | ")));
    }
    function vs(e2, t2) {
      if (t2.kind === "object")
        for (let r4 of t2.fields)
          e2.hasField(r4.name) || e2.addSuggestion(new Re2(r4.name, r4.typeNames.join(" | ")));
    }
    function qr(e2) {
      let t2 = [...e2], r4 = t2.pop();
      if (!r4)
        throw new Error("unexpected empty path");
      return [t2, r4];
    }
    function rr2({ green: e2, enabled: t2 }) {
      return "Available options are " + (t2 ? `listed in ${e2("green")}` : "marked with ?") + ".";
    }
    function Ur(e2, t2) {
      if (t2.length === 1)
        return t2[0];
      let r4 = [...t2], n3 = r4.pop();
      return `${r4.join(", ")} ${e2} ${n3}`;
    }
    var lc = 3;
    function cc(e2, t2) {
      let r4 = 1 / 0, n3;
      for (let i3 of t2) {
        let o5 = (0, Es.default)(e2, i3);
        o5 > lc || o5 < r4 && (r4 = o5, n3 = i3);
      }
      return n3;
    }
    function Vr2({ args: e2, errors: t2, errorFormat: r4, callsite: n3, originalMethod: i3, clientVersion: o5 }) {
      let s3 = kr2(e2);
      for (let h2 of t2)
        Br(h2, s3);
      let a3 = r4 === "pretty" ? Co2 : Sr2, u4 = s3.renderAllMessages(a3), l3 = new ut2(0, { colors: a3 }).write(s3).toString(), g4 = yt3({ message: u4, callsite: n3, originalMethod: i3, showColors: r4 === "pretty", callArguments: l3 });
      throw new Z2(g4, { clientVersion: o5 });
    }
    var pc = { findUnique: "findUnique", findUniqueOrThrow: "findUniqueOrThrow", findFirst: "findFirst", findFirstOrThrow: "findFirstOrThrow", findMany: "findMany", count: "aggregate", create: "createOne", createMany: "createMany", update: "updateOne", updateMany: "updateMany", upsert: "upsertOne", delete: "deleteOne", deleteMany: "deleteMany", executeRaw: "executeRaw", queryRaw: "queryRaw", aggregate: "aggregate", groupBy: "groupBy", runCommandRaw: "runCommandRaw", findRaw: "findRaw", aggregateRaw: "aggregateRaw" };
    function Ts({ modelName: e2, action: t2, args: r4, runtimeDataModel: n3, extensions: i3, callsite: o5, clientMethod: s3, errorFormat: a3, clientVersion: u4 }) {
      let l3 = new Vn2({ runtimeDataModel: n3, modelName: e2, action: t2, rootArgs: r4, callsite: o5, extensions: i3, selectionPath: [], argumentPath: [], originalMethod: s3, errorFormat: a3, clientVersion: u4 });
      return { modelName: e2, action: pc[t2], query: jn(r4, l3) };
    }
    function jn({ select: e2, include: t2, ...r4 } = {}, n3) {
      return { arguments: As(r4, n3), selection: fc(e2, t2, n3) };
    }
    function fc(e2, t2, r4) {
      return e2 && t2 && r4.throwValidationError({ kind: "IncludeAndSelect", selectionPath: r4.getSelectionPath() }), e2 ? gc(e2, r4) : mc(r4, t2);
    }
    function mc(e2, t2) {
      let r4 = {};
      return e2.model && !e2.isRawAction() && (r4.$composites = true, r4.$scalars = true), t2 && dc(r4, t2, e2), r4;
    }
    function dc(e2, t2, r4) {
      for (let [n3, i3] of Object.entries(t2)) {
        let o5 = r4.findField(n3);
        o5 && (o5 == null ? void 0 : o5.kind) !== "object" && r4.throwValidationError({ kind: "IncludeOnScalar", selectionPath: r4.getSelectionPath().concat(n3), outputType: r4.getOutputTypeDescription() }), i3 === true ? e2[n3] = true : typeof i3 == "object" && (e2[n3] = jn(i3, r4.nestSelection(n3)));
      }
    }
    function gc(e2, t2) {
      let r4 = {}, n3 = t2.getComputedFields(), i3 = es2(e2, n3);
      for (let [o5, s3] of Object.entries(i3)) {
        let a3 = t2.findField(o5);
        n3 != null && n3[o5] && !a3 || (s3 === true ? r4[o5] = true : typeof s3 == "object" && (r4[o5] = jn(s3, t2.nestSelection(o5))));
      }
      return r4;
    }
    function Cs(e2, t2) {
      if (e2 === null)
        return null;
      if (typeof e2 == "string" || typeof e2 == "number" || typeof e2 == "boolean")
        return e2;
      if (typeof e2 == "bigint")
        return { $type: "BigInt", value: String(e2) };
      if (lt2(e2)) {
        if (wr2(e2))
          return { $type: "DateTime", value: e2.toISOString() };
        t2.throwValidationError({ kind: "InvalidArgumentValue", selectionPath: t2.getSelectionPath(), argumentPath: t2.getArgumentPath(), argument: { name: t2.getArgumentName(), typeNames: ["Date"] }, underlyingError: "Provided Date object is invalid" });
      }
      if (mt3(e2))
        return { $type: "FieldRef", value: { _ref: e2.name, _container: e2.modelName } };
      if (Array.isArray(e2))
        return hc(e2, t2);
      if (ArrayBuffer.isView(e2))
        return { $type: "Bytes", value: w7.Buffer.from(e2).toString("base64") };
      if (yc(e2))
        return e2.values;
      if (ft2(e2))
        return { $type: "Decimal", value: e2.toFixed() };
      if (e2 instanceof Te2) {
        if (e2 !== dr.instances[e2._getName()])
          throw new Error("Invalid ObjectEnumValue");
        return { $type: "Enum", value: e2._getName() };
      }
      if (wc(e2))
        return e2.toJSON();
      if (typeof e2 == "object")
        return As(e2, t2);
      t2.throwValidationError({ kind: "InvalidArgumentValue", selectionPath: t2.getSelectionPath(), argumentPath: t2.getArgumentPath(), argument: { name: t2.getArgumentName(), typeNames: [] }, underlyingError: `We could not serialize ${Object.prototype.toString.call(e2)} value. Serialize the object to JSON or implement a ".toJSON()" method on it` });
    }
    function As(e2, t2) {
      if (e2.$type)
        return { $type: "Raw", value: e2 };
      let r4 = {};
      for (let n3 in e2) {
        let i3 = e2[n3];
        i3 !== void 0 && (r4[n3] = Cs(i3, t2.nestArgument(n3)));
      }
      return r4;
    }
    function hc(e2, t2) {
      let r4 = [];
      for (let n3 = 0; n3 < e2.length; n3++) {
        let i3 = t2.nestArgument(String(n3)), o5 = e2[n3];
        o5 === void 0 && t2.throwValidationError({ kind: "InvalidArgumentValue", selectionPath: i3.getSelectionPath(), argumentPath: i3.getArgumentPath(), argument: { name: `${t2.getArgumentName()}[${n3}]`, typeNames: [] }, underlyingError: "Can not use `undefined` value within array. Use `null` or filter out `undefined` values" }), r4.push(Cs(o5, i3));
      }
      return r4;
    }
    function yc(e2) {
      return typeof e2 == "object" && e2 !== null && e2.__prismaRawParameters__ === true;
    }
    function wc(e2) {
      return typeof e2 == "object" && e2 !== null && typeof e2.toJSON == "function";
    }
    var Vn2 = class e2 {
      constructor(t2) {
        this.params = t2;
        this.params.modelName && (this.model = this.params.runtimeDataModel.models[this.params.modelName]);
      }
      throwValidationError(t2) {
        var r4;
        Vr2({ errors: [t2], originalMethod: this.params.originalMethod, args: (r4 = this.params.rootArgs) != null ? r4 : {}, callsite: this.params.callsite, errorFormat: this.params.errorFormat, clientVersion: this.params.clientVersion });
      }
      getSelectionPath() {
        return this.params.selectionPath;
      }
      getArgumentPath() {
        return this.params.argumentPath;
      }
      getArgumentName() {
        return this.params.argumentPath[this.params.argumentPath.length - 1];
      }
      getOutputTypeDescription() {
        if (!(!this.params.modelName || !this.model))
          return { name: this.params.modelName, fields: this.model.fields.map((t2) => ({ name: t2.name, typeName: "boolean", isRelation: t2.kind === "object" })) };
      }
      isRawAction() {
        return ["executeRaw", "queryRaw", "runCommandRaw", "findRaw", "aggregateRaw"].includes(this.params.action);
      }
      getComputedFields() {
        if (this.params.modelName)
          return this.params.extensions.getAllComputedFields(this.params.modelName);
      }
      findField(t2) {
        var r4;
        return (r4 = this.model) == null ? void 0 : r4.fields.find((n3) => n3.name === t2);
      }
      nestSelection(t2) {
        let r4 = this.findField(t2), n3 = (r4 == null ? void 0 : r4.kind) === "object" ? r4.type : void 0;
        return new e2({ ...this.params, modelName: n3, selectionPath: this.params.selectionPath.concat(t2) });
      }
      nestArgument(t2) {
        return new e2({ ...this.params, argumentPath: this.params.argumentPath.concat(t2) });
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Rs = (e2) => ({ command: e2 });
    d5();
    c4();
    p6();
    f4();
    m4();
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ss = (e2) => e2.strings.reduce((t2, r4, n3) => `${t2}@P${n3}${r4}`);
    d5();
    c4();
    p6();
    f4();
    m4();
    function nr2(e2) {
      try {
        return Is(e2, "fast");
      } catch (t2) {
        return Is(e2, "slow");
      }
    }
    function Is(e2, t2) {
      return JSON.stringify(e2.map((r4) => Ec(r4, t2)));
    }
    function Ec(e2, t2) {
      return typeof e2 == "bigint" ? { prisma__type: "bigint", prisma__value: e2.toString() } : lt2(e2) ? { prisma__type: "date", prisma__value: e2.toJSON() } : ye3.isDecimal(e2) ? { prisma__type: "decimal", prisma__value: e2.toJSON() } : w7.Buffer.isBuffer(e2) ? { prisma__type: "bytes", prisma__value: e2.toString("base64") } : bc(e2) || ArrayBuffer.isView(e2) ? { prisma__type: "bytes", prisma__value: w7.Buffer.from(e2).toString("base64") } : typeof e2 == "object" && t2 === "slow" ? Ds(e2) : e2;
    }
    function bc(e2) {
      return e2 instanceof ArrayBuffer || e2 instanceof SharedArrayBuffer ? true : typeof e2 == "object" && e2 !== null ? e2[Symbol.toStringTag] === "ArrayBuffer" || e2[Symbol.toStringTag] === "SharedArrayBuffer" : false;
    }
    function Ds(e2) {
      if (typeof e2 != "object" || e2 === null)
        return e2;
      if (typeof e2.toJSON == "function")
        return e2.toJSON();
      if (Array.isArray(e2))
        return e2.map(ks);
      let t2 = {};
      for (let r4 of Object.keys(e2))
        t2[r4] = ks(e2[r4]);
      return t2;
    }
    function ks(e2) {
      return typeof e2 == "bigint" ? e2.toString() : Ds(e2);
    }
    var xc = /^(\s*alter\s)/i;
    var Ms = ne2("prisma:client");
    function Jn(e2, t2, r4, n3) {
      if (!(e2 !== "postgresql" && e2 !== "cockroachdb") && r4.length > 0 && xc.exec(t2))
        throw new Error(`Running ALTER using ${n3} is not supported
Using the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.

Example:
  await prisma.$executeRawUnsafe(\`ALTER USER prisma WITH PASSWORD '\${password}'\`)

More Information: https://pris.ly/d/execute-raw
`);
    }
    var Qn2 = ({ clientMethod: e2, activeProvider: t2 }) => (r4) => {
      let n3 = "", i3;
      if (Array.isArray(r4)) {
        let [o5, ...s3] = r4;
        n3 = o5, i3 = { values: nr2(s3 || []), __prismaRawParameters__: true };
      } else
        switch (t2) {
          case "sqlite":
          case "mysql": {
            n3 = r4.sql, i3 = { values: nr2(r4.values), __prismaRawParameters__: true };
            break;
          }
          case "cockroachdb":
          case "postgresql":
          case "postgres": {
            n3 = r4.text, i3 = { values: nr2(r4.values), __prismaRawParameters__: true };
            break;
          }
          case "sqlserver": {
            n3 = Ss(r4), i3 = { values: nr2(r4.values), __prismaRawParameters__: true };
            break;
          }
          default:
            throw new Error(`The ${t2} provider does not support ${e2}`);
        }
      return i3 != null && i3.values ? Ms(`prisma.${e2}(${n3}, ${i3.values})`) : Ms(`prisma.${e2}(${n3})`), { query: n3, parameters: i3 };
    };
    var Os = { requestArgsToMiddlewareArgs(e2) {
      return [e2.strings, ...e2.values];
    }, middlewareArgsToRequestArgs(e2) {
      let [t2, ...r4] = e2;
      return new ae2(t2, r4);
    } };
    var Ns = { requestArgsToMiddlewareArgs(e2) {
      return [e2];
    }, middlewareArgsToRequestArgs(e2) {
      return e2[0];
    } };
    d5();
    c4();
    p6();
    f4();
    m4();
    function Gn(e2) {
      return function(r4) {
        let n3, i3 = (o5 = e2) => {
          try {
            return o5 === void 0 || (o5 == null ? void 0 : o5.kind) === "itx" ? n3 != null ? n3 : n3 = _s(r4(o5)) : _s(r4(o5));
          } catch (s3) {
            return Promise.reject(s3);
          }
        };
        return { then(o5, s3) {
          return i3().then(o5, s3);
        }, catch(o5) {
          return i3().catch(o5);
        }, finally(o5) {
          return i3().finally(o5);
        }, requestTransaction(o5) {
          let s3 = i3(o5);
          return s3.requestTransaction ? s3.requestTransaction(o5) : s3;
        }, [Symbol.toStringTag]: "PrismaPromise" };
      };
    }
    function _s(e2) {
      return typeof e2.then == "function" ? e2 : Promise.resolve(e2);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Ls = { isEnabled() {
      return false;
    }, getTraceParent() {
      return "00-10-10-00";
    }, async createEngineSpan() {
    }, getActiveContext() {
    }, runInChildSpan(e2, t2) {
      return t2();
    } };
    var Hn = class {
      isEnabled() {
        return this.getGlobalTracingHelper().isEnabled();
      }
      getTraceParent(t2) {
        return this.getGlobalTracingHelper().getTraceParent(t2);
      }
      createEngineSpan(t2) {
        return this.getGlobalTracingHelper().createEngineSpan(t2);
      }
      getActiveContext() {
        return this.getGlobalTracingHelper().getActiveContext();
      }
      runInChildSpan(t2, r4) {
        return this.getGlobalTracingHelper().runInChildSpan(t2, r4);
      }
      getGlobalTracingHelper() {
        var t2, r4;
        return (r4 = (t2 = globalThis.PRISMA_INSTRUMENTATION) == null ? void 0 : t2.helper) != null ? r4 : Ls;
      }
    };
    function Fs(e2) {
      return e2.includes("tracing") ? new Hn() : Ls;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Bs(e2, t2 = () => {
    }) {
      let r4, n3 = new Promise((i3) => r4 = i3);
      return { then(i3) {
        return --e2 === 0 && r4(t2()), i3 == null ? void 0 : i3(n3);
      } };
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Pc = ["$connect", "$disconnect", "$on", "$transaction", "$use", "$extends"];
    var $s = Pc;
    d5();
    c4();
    p6();
    f4();
    m4();
    function qs(e2) {
      return typeof e2 == "string" ? e2 : e2.reduce((t2, r4) => {
        let n3 = typeof r4 == "string" ? r4 : r4.level;
        return n3 === "query" ? t2 : t2 && (r4 === "info" || t2 === "info") ? "info" : n3;
      }, void 0);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var jr2 = class {
      constructor() {
        this._middlewares = [];
      }
      use(t2) {
        this._middlewares.push(t2);
      }
      get(t2) {
        return this._middlewares[t2];
      }
      has(t2) {
        return !!this._middlewares[t2];
      }
      length() {
        return this._middlewares.length;
      }
    };
    d5();
    c4();
    p6();
    f4();
    m4();
    var Vs = Ve2(Xi());
    d5();
    c4();
    p6();
    f4();
    m4();
    function Jr2(e2) {
      return typeof e2.batchRequestIdx == "number";
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Qr(e2) {
      return e2 === null ? e2 : Array.isArray(e2) ? e2.map(Qr) : typeof e2 == "object" ? vc(e2) ? Tc(e2) : st3(e2, Qr) : e2;
    }
    function vc(e2) {
      return e2 !== null && typeof e2 == "object" && typeof e2.$type == "string";
    }
    function Tc({ $type: e2, value: t2 }) {
      switch (e2) {
        case "BigInt":
          return BigInt(t2);
        case "Bytes":
          return w7.Buffer.from(t2, "base64");
        case "DateTime":
          return new Date(t2);
        case "Decimal":
          return new ye3(t2);
        case "Json":
          return JSON.parse(t2);
        default:
          Je2(t2, "Unknown tagged value");
      }
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function Us(e2) {
      if (e2.action !== "findUnique" && e2.action !== "findUniqueOrThrow")
        return;
      let t2 = [];
      return e2.modelName && t2.push(e2.modelName), e2.query.arguments && t2.push(Wn(e2.query.arguments)), t2.push(Wn(e2.query.selection)), t2.join("");
    }
    function Wn(e2) {
      return `(${Object.keys(e2).sort().map((r4) => {
        let n3 = e2[r4];
        return typeof n3 == "object" && n3 !== null ? `(${r4} ${Wn(n3)})` : r4;
      }).join(" ")})`;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Cc = { aggregate: false, aggregateRaw: false, createMany: true, createOne: true, deleteMany: true, deleteOne: true, executeRaw: true, findFirst: false, findFirstOrThrow: false, findMany: false, findRaw: false, findUnique: false, findUniqueOrThrow: false, groupBy: false, queryRaw: false, runCommandRaw: true, updateMany: true, updateOne: true, upsertOne: true };
    function Kn(e2) {
      return Cc[e2];
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Gr = class {
      constructor(t2) {
        this.options = t2;
        this.tickActive = false;
        this.batches = {};
      }
      request(t2) {
        let r4 = this.options.batchBy(t2);
        return r4 ? (this.batches[r4] || (this.batches[r4] = [], this.tickActive || (this.tickActive = true, y3.nextTick(() => {
          this.dispatchBatches(), this.tickActive = false;
        }))), new Promise((n3, i3) => {
          this.batches[r4].push({ request: t2, resolve: n3, reject: i3 });
        })) : this.options.singleLoader(t2);
      }
      dispatchBatches() {
        for (let t2 in this.batches) {
          let r4 = this.batches[t2];
          delete this.batches[t2], r4.length === 1 ? this.options.singleLoader(r4[0].request).then((n3) => {
            n3 instanceof Error ? r4[0].reject(n3) : r4[0].resolve(n3);
          }).catch((n3) => {
            r4[0].reject(n3);
          }) : (r4.sort((n3, i3) => this.options.batchOrder(n3.request, i3.request)), this.options.batchLoader(r4.map((n3) => n3.request)).then((n3) => {
            if (n3 instanceof Error)
              for (let i3 = 0; i3 < r4.length; i3++)
                r4[i3].reject(n3);
            else
              for (let i3 = 0; i3 < r4.length; i3++) {
                let o5 = n3[i3];
                o5 instanceof Error ? r4[i3].reject(o5) : r4[i3].resolve(o5);
              }
          }).catch((n3) => {
            for (let i3 = 0; i3 < r4.length; i3++)
              r4[i3].reject(n3);
          }));
        }
      }
      get [Symbol.toStringTag]() {
        return "DataLoader";
      }
    };
    var Ac = ne2("prisma:client:request_handler");
    var Hr2 = class {
      constructor(t2, r4) {
        this.logEmitter = r4, this.client = t2, this.dataloader = new Gr({ batchLoader: Ko2(async ({ requests: n3, customDataProxyFetch: i3 }) => {
          let { transaction: o5, otelParentCtx: s3 } = n3[0], a3 = n3.map((h2) => h2.protocolQuery), u4 = this.client._tracingHelper.getTraceParent(s3), l3 = n3.some((h2) => Kn(h2.protocolQuery.action));
          return (await this.client._engine.requestBatch(a3, { traceparent: u4, transaction: Rc(o5), containsWrite: l3, customDataProxyFetch: i3 })).map((h2, v4) => {
            if (h2 instanceof Error)
              return h2;
            try {
              return this.mapQueryEngineResult(n3[v4], h2);
            } catch (S5) {
              return S5;
            }
          });
        }), singleLoader: async (n3) => {
          var s3;
          let i3 = ((s3 = n3.transaction) == null ? void 0 : s3.kind) === "itx" ? js(n3.transaction) : void 0, o5 = await this.client._engine.request(n3.protocolQuery, { traceparent: this.client._tracingHelper.getTraceParent(), interactiveTransaction: i3, isWrite: Kn(n3.protocolQuery.action), customDataProxyFetch: n3.customDataProxyFetch });
          return this.mapQueryEngineResult(n3, o5);
        }, batchBy: (n3) => {
          var i3;
          return (i3 = n3.transaction) != null && i3.id ? `transaction-${n3.transaction.id}` : Us(n3.protocolQuery);
        }, batchOrder(n3, i3) {
          var o5, s3;
          return ((o5 = n3.transaction) == null ? void 0 : o5.kind) === "batch" && ((s3 = i3.transaction) == null ? void 0 : s3.kind) === "batch" ? n3.transaction.index - i3.transaction.index : 0;
        } });
      }
      async request(t2) {
        try {
          return await this.dataloader.request(t2);
        } catch (r4) {
          let { clientMethod: n3, callsite: i3, transaction: o5, args: s3, modelName: a3 } = t2;
          this.handleAndLogRequestError({ error: r4, clientMethod: n3, callsite: i3, transaction: o5, args: s3, modelName: a3 });
        }
      }
      mapQueryEngineResult({ dataPath: t2, unpacker: r4 }, n3) {
        let i3 = n3 == null ? void 0 : n3.data, o5 = n3 == null ? void 0 : n3.elapsed, s3 = this.unpack(i3, t2, r4);
        return y3.env.PRISMA_CLIENT_GET_TIME ? { data: s3, elapsed: o5 } : s3;
      }
      handleAndLogRequestError(t2) {
        try {
          this.handleRequestError(t2);
        } catch (r4) {
          throw this.logEmitter && this.logEmitter.emit("error", { message: r4.message, target: t2.clientMethod, timestamp: /* @__PURE__ */ new Date() }), r4;
        }
      }
      handleRequestError({ error: t2, clientMethod: r4, callsite: n3, transaction: i3, args: o5, modelName: s3 }) {
        if (Ac(t2), Sc(t2, i3) || t2 instanceof Pe2)
          throw t2;
        if (t2 instanceof K2 && Ic(t2)) {
          let u4 = Js(t2.meta);
          Vr2({ args: o5, errors: [u4], callsite: n3, errorFormat: this.client._errorFormat, originalMethod: r4, clientVersion: this.client._clientVersion });
        }
        let a3 = t2.message;
        if (n3 && (a3 = yt3({ callsite: n3, originalMethod: r4, isPanic: t2.isPanic, showColors: this.client._errorFormat === "pretty", message: a3 })), a3 = this.sanitizeMessage(a3), t2.code) {
          let u4 = s3 ? { modelName: s3, ...t2.meta } : t2.meta;
          throw new K2(a3, { code: t2.code, clientVersion: this.client._clientVersion, meta: u4, batchRequestIdx: t2.batchRequestIdx });
        } else {
          if (t2.isPanic)
            throw new ve2(a3, this.client._clientVersion);
          if (t2 instanceof se2)
            throw new se2(a3, { clientVersion: this.client._clientVersion, batchRequestIdx: t2.batchRequestIdx });
          if (t2 instanceof G2)
            throw new G2(a3, this.client._clientVersion);
          if (t2 instanceof ve2)
            throw new ve2(a3, this.client._clientVersion);
        }
        throw t2.clientVersion = this.client._clientVersion, t2;
      }
      sanitizeMessage(t2) {
        return this.client._errorFormat && this.client._errorFormat !== "pretty" ? (0, Vs.default)(t2) : t2;
      }
      unpack(t2, r4, n3) {
        if (!t2 || (t2.data && (t2 = t2.data), !t2))
          return t2;
        let i3 = Object.values(t2)[0], o5 = r4.filter((a3) => a3 !== "select" && a3 !== "include"), s3 = Qr(Rn(i3, o5));
        return n3 ? n3(s3) : s3;
      }
      get [Symbol.toStringTag]() {
        return "RequestHandler";
      }
    };
    function Rc(e2) {
      if (e2) {
        if (e2.kind === "batch")
          return { kind: "batch", options: { isolationLevel: e2.isolationLevel } };
        if (e2.kind === "itx")
          return { kind: "itx", options: js(e2) };
        Je2(e2, "Unknown transaction kind");
      }
    }
    function js(e2) {
      return { id: e2.id, payload: e2.payload };
    }
    function Sc(e2, t2) {
      return Jr2(e2) && (t2 == null ? void 0 : t2.kind) === "batch" && e2.batchRequestIdx !== t2.index;
    }
    function Ic(e2) {
      return e2.code === "P2009" || e2.code === "P2012";
    }
    function Js(e2) {
      if (e2.kind === "Union")
        return { kind: "Union", errors: e2.errors.map(Js) };
      if (Array.isArray(e2.selectionPath)) {
        let [, ...t2] = e2.selectionPath;
        return { ...e2, selectionPath: t2 };
      }
      return e2;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Qs = "5.10.1";
    var Gs2 = Qs;
    d5();
    c4();
    p6();
    f4();
    m4();
    function Hs(e2) {
      return e2.map((t2) => {
        let r4 = {};
        for (let n3 of Object.keys(t2))
          r4[n3] = Ws(t2[n3]);
        return r4;
      });
    }
    function Ws({ prisma__type: e2, prisma__value: t2 }) {
      switch (e2) {
        case "bigint":
          return BigInt(t2);
        case "bytes":
          return w7.Buffer.from(t2, "base64");
        case "decimal":
          return new ye3(t2);
        case "datetime":
        case "date":
          return new Date(t2);
        case "time":
          return /* @__PURE__ */ new Date(`1970-01-01T${t2}Z`);
        case "array":
          return t2.map(Ws);
        default:
          return t2;
      }
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Zs = Ve2(Un());
    d5();
    c4();
    p6();
    f4();
    m4();
    var J2 = class extends Error {
      constructor(t2) {
        super(t2 + `
Read more at https://pris.ly/d/client-constructor`), this.name = "PrismaClientConstructorValidationError";
      }
      get [Symbol.toStringTag]() {
        return "PrismaClientConstructorValidationError";
      }
    };
    N5(J2, "PrismaClientConstructorValidationError");
    var Ks2 = ["datasources", "datasourceUrl", "errorFormat", "adapter", "log", "transactionOptions", "__internal"];
    var zs = ["pretty", "colorless", "minimal"];
    var Ys = ["info", "query", "warn", "error"];
    var Dc = { datasources: (e2, { datasourceNames: t2 }) => {
      if (e2) {
        if (typeof e2 != "object" || Array.isArray(e2))
          throw new J2(`Invalid value ${JSON.stringify(e2)} for "datasources" provided to PrismaClient constructor`);
        for (let [r4, n3] of Object.entries(e2)) {
          if (!t2.includes(r4)) {
            let i3 = Pt2(r4, t2) || ` Available datasources: ${t2.join(", ")}`;
            throw new J2(`Unknown datasource ${r4} provided to PrismaClient constructor.${i3}`);
          }
          if (typeof n3 != "object" || Array.isArray(n3))
            throw new J2(`Invalid value ${JSON.stringify(e2)} for datasource "${r4}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
          if (n3 && typeof n3 == "object")
            for (let [i3, o5] of Object.entries(n3)) {
              if (i3 !== "url")
                throw new J2(`Invalid value ${JSON.stringify(e2)} for datasource "${r4}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
              if (typeof o5 != "string")
                throw new J2(`Invalid value ${JSON.stringify(o5)} for datasource "${r4}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`);
            }
        }
      }
    }, adapter: (e2, t2) => {
      if (e2 === null)
        return;
      if (e2 === void 0)
        throw new J2('"adapter" property must not be undefined, use null to conditionally disable driver adapters.');
      if (!Fr2(t2).includes("driverAdapters"))
        throw new J2('"adapter" property can only be provided to PrismaClient constructor when "driverAdapters" preview feature is enabled.');
      if (Rt() === "binary")
        throw new J2('Cannot use a driver adapter with the "binary" Query Engine. Please use the "library" Query Engine.');
    }, datasourceUrl: (e2) => {
      if (typeof e2 != "undefined" && typeof e2 != "string")
        throw new J2(`Invalid value ${JSON.stringify(e2)} for "datasourceUrl" provided to PrismaClient constructor.
Expected string or undefined.`);
    }, errorFormat: (e2) => {
      if (e2) {
        if (typeof e2 != "string")
          throw new J2(`Invalid value ${JSON.stringify(e2)} for "errorFormat" provided to PrismaClient constructor.`);
        if (!zs.includes(e2)) {
          let t2 = Pt2(e2, zs);
          throw new J2(`Invalid errorFormat ${e2} provided to PrismaClient constructor.${t2}`);
        }
      }
    }, log: (e2) => {
      if (!e2)
        return;
      if (!Array.isArray(e2))
        throw new J2(`Invalid value ${JSON.stringify(e2)} for "log" provided to PrismaClient constructor.`);
      function t2(r4) {
        if (typeof r4 == "string" && !Ys.includes(r4)) {
          let n3 = Pt2(r4, Ys);
          throw new J2(`Invalid log level "${r4}" provided to PrismaClient constructor.${n3}`);
        }
      }
      for (let r4 of e2) {
        t2(r4);
        let n3 = { level: t2, emit: (i3) => {
          let o5 = ["stdout", "event"];
          if (!o5.includes(i3)) {
            let s3 = Pt2(i3, o5);
            throw new J2(`Invalid value ${JSON.stringify(i3)} for "emit" in logLevel provided to PrismaClient constructor.${s3}`);
          }
        } };
        if (r4 && typeof r4 == "object")
          for (let [i3, o5] of Object.entries(r4))
            if (n3[i3])
              n3[i3](o5);
            else
              throw new J2(`Invalid property ${i3} for "log" provided to PrismaClient constructor`);
      }
    }, transactionOptions: (e2) => {
      if (!e2)
        return;
      let t2 = e2.maxWait;
      if (t2 != null && t2 <= 0)
        throw new J2(`Invalid value ${t2} for maxWait in "transactionOptions" provided to PrismaClient constructor. maxWait needs to be greater than 0`);
      let r4 = e2.timeout;
      if (r4 != null && r4 <= 0)
        throw new J2(`Invalid value ${r4} for timeout in "transactionOptions" provided to PrismaClient constructor. timeout needs to be greater than 0`);
    }, __internal: (e2) => {
      if (!e2)
        return;
      let t2 = ["debug", "engine", "configOverride"];
      if (typeof e2 != "object")
        throw new J2(`Invalid value ${JSON.stringify(e2)} for "__internal" to PrismaClient constructor`);
      for (let [r4] of Object.entries(e2))
        if (!t2.includes(r4)) {
          let n3 = Pt2(r4, t2);
          throw new J2(`Invalid property ${JSON.stringify(r4)} for "__internal" provided to PrismaClient constructor.${n3}`);
        }
    } };
    function Xs(e2, t2) {
      for (let [r4, n3] of Object.entries(e2)) {
        if (!Ks2.includes(r4)) {
          let i3 = Pt2(r4, Ks2);
          throw new J2(`Unknown property ${r4} provided to PrismaClient constructor.${i3}`);
        }
        Dc[r4](n3, t2);
      }
      if (e2.datasourceUrl && e2.datasources)
        throw new J2('Can not use "datasourceUrl" and "datasources" options at the same time. Pick one of them');
    }
    function Pt2(e2, t2) {
      if (t2.length === 0 || typeof e2 != "string")
        return "";
      let r4 = Mc(e2, t2);
      return r4 ? ` Did you mean "${r4}"?` : "";
    }
    function Mc(e2, t2) {
      if (t2.length === 0)
        return null;
      let r4 = t2.map((i3) => ({ value: i3, distance: (0, Zs.default)(e2, i3) }));
      r4.sort((i3, o5) => i3.distance < o5.distance ? -1 : 1);
      let n3 = r4[0];
      return n3.distance < 3 ? n3.value : null;
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    function ea(e2) {
      return e2.length === 0 ? Promise.resolve([]) : new Promise((t2, r4) => {
        let n3 = new Array(e2.length), i3 = null, o5 = false, s3 = 0, a3 = () => {
          o5 || (s3++, s3 === e2.length && (o5 = true, i3 ? r4(i3) : t2(n3)));
        }, u4 = (l3) => {
          o5 || (o5 = true, r4(l3));
        };
        for (let l3 = 0; l3 < e2.length; l3++)
          e2[l3].then((g4) => {
            n3[l3] = g4, a3();
          }, (g4) => {
            if (!Jr2(g4)) {
              u4(g4);
              return;
            }
            g4.batchRequestIdx === l3 ? u4(g4) : (i3 || (i3 = g4), a3());
          });
      });
    }
    var Be2 = ne2("prisma:client");
    typeof globalThis == "object" && (globalThis.NODE_CLIENT = true);
    var Oc = { requestArgsToMiddlewareArgs: (e2) => e2, middlewareArgsToRequestArgs: (e2) => e2 };
    var Nc = Symbol.for("prisma.client.transaction.id");
    var _c = { id: 0, nextId() {
      return ++this.id;
    } };
    function na(e2) {
      class t2 {
        constructor(n3) {
          this._originalClient = this;
          this._middlewares = new jr2();
          this._createPrismaPromise = Gn();
          this.$extends = Uo2;
          var u4, l3, g4, h2, v4, S5, A4, R5, D4, M4, B2, I4, L5, ee2;
          e2 = (g4 = (l3 = (u4 = n3 == null ? void 0 : n3.__internal) == null ? void 0 : u4.configOverride) == null ? void 0 : l3.call(u4, e2)) != null ? g4 : e2, ns2(e2), n3 && Xs(n3, e2);
          let i3 = n3 != null && n3.adapter ? hn2(n3.adapter) : void 0, o5 = new fr().on("error", () => {
          });
          this._extensions = Nr2.empty(), this._previewFeatures = Fr2(e2), this._clientVersion = (h2 = e2.clientVersion) != null ? h2 : Gs2, this._activeProvider = e2.activeProvider, this._tracingHelper = Fs(this._previewFeatures);
          let s3 = { rootEnvPath: e2.relativeEnvPaths.rootEnvPath && At.resolve(e2.dirname, e2.relativeEnvPaths.rootEnvPath), schemaEnvPath: e2.relativeEnvPaths.schemaEnvPath && At.resolve(e2.dirname, e2.relativeEnvPaths.schemaEnvPath) }, a3 = (v4 = e2.injectableEdgeEnv) == null ? void 0 : v4.call(e2);
          try {
            let F3 = n3 != null ? n3 : {}, Ze2 = (S5 = F3.__internal) != null ? S5 : {}, $e2 = Ze2.debug === true;
            $e2 && ne2.enable("prisma:client");
            let fe2 = At.resolve(e2.dirname, e2.relativePath);
            bi.existsSync(fe2) || (fe2 = e2.dirname), Be2("dirname", e2.dirname), Be2("relativePath", e2.relativePath), Be2("cwd", fe2);
            let qe2 = Ze2.engine || {};
            if (F3.errorFormat ? this._errorFormat = F3.errorFormat : y3.env.NODE_ENV === "production" ? this._errorFormat = "minimal" : y3.env.NO_COLOR ? this._errorFormat = "colorless" : this._errorFormat = "colorless", this._runtimeDataModel = e2.runtimeDataModel, this._engineConfig = { cwd: fe2, dirname: e2.dirname, enableDebugLogs: $e2, allowTriggerPanic: qe2.allowTriggerPanic, datamodelPath: At.join(e2.dirname, (A4 = e2.filename) != null ? A4 : "schema.prisma"), prismaPath: (R5 = qe2.binaryPath) != null ? R5 : void 0, engineEndpoint: qe2.endpoint, generator: e2.generator, showColors: this._errorFormat === "pretty", logLevel: F3.log && qs(F3.log), logQueries: F3.log && !!(typeof F3.log == "string" ? F3.log === "query" : F3.log.find((Q2) => typeof Q2 == "string" ? Q2 === "query" : Q2.level === "query")), env: (D4 = a3 == null ? void 0 : a3.parsed) != null ? D4 : {}, flags: [], engineWasm: e2.engineWasm, clientVersion: e2.clientVersion, engineVersion: e2.engineVersion, previewFeatures: this._previewFeatures, activeProvider: e2.activeProvider, inlineSchema: e2.inlineSchema, overrideDatasources: is2(F3, e2.datasourceNames), inlineDatasources: e2.inlineDatasources, inlineSchemaHash: e2.inlineSchemaHash, tracingHelper: this._tracingHelper, transactionOptions: { maxWait: (B2 = (M4 = F3.transactionOptions) == null ? void 0 : M4.maxWait) != null ? B2 : 2e3, timeout: (L5 = (I4 = F3.transactionOptions) == null ? void 0 : I4.timeout) != null ? L5 : 5e3, isolationLevel: (ee2 = F3.transactionOptions) == null ? void 0 : ee2.isolationLevel }, logEmitter: o5, isBundled: e2.isBundled, adapter: i3 }, this._accelerateEngineConfig = { ...this._engineConfig, accelerateUtils: { resolveDatasourceUrl: wt3, getBatchRequestPayload: yr2, prismaGraphQLToJSError: qt, PrismaClientUnknownRequestError: se2, PrismaClientInitializationError: G2, PrismaClientKnownRequestError: K2, debug: ne2("prisma:client:accelerateEngine"), engineVersion: ra.version, clientVersion: e2.clientVersion } }, Be2("clientVersion", e2.clientVersion), this._engine = ms(e2, this._engineConfig), this._requestHandler = new Hr2(this, o5), F3.log)
              for (let Q2 of F3.log) {
                let Se2 = typeof Q2 == "string" ? Q2 : Q2.emit === "stdout" ? Q2.level : null;
                Se2 && this.$on(Se2, (Ue2) => {
                  var Xe2;
                  ot2.log(`${(Xe2 = ot2.tags[Se2]) != null ? Xe2 : ""}`, Ue2.message || Ue2.query);
                });
              }
            this._metrics = new at2(this._engine);
          } catch (F3) {
            throw F3.clientVersion = this._clientVersion, F3;
          }
          return this._appliedParent = Ut(this);
        }
        get [Symbol.toStringTag]() {
          return "PrismaClient";
        }
        $use(n3) {
          this._middlewares.use(n3);
        }
        $on(n3, i3) {
          n3 === "beforeExit" ? this._engine.onBeforeExit(i3) : n3 && this._engineConfig.logEmitter.on(n3, i3);
        }
        $connect() {
          try {
            return this._engine.start();
          } catch (n3) {
            throw n3.clientVersion = this._clientVersion, n3;
          }
        }
        async $disconnect() {
          try {
            await this._engine.stop();
          } catch (n3) {
            throw n3.clientVersion = this._clientVersion, n3;
          } finally {
            Vi();
          }
        }
        $executeRawInternal(n3, i3, o5, s3) {
          let a3 = this._activeProvider;
          return this._request({ action: "executeRaw", args: o5, transaction: n3, clientMethod: i3, argsMapper: Qn2({ clientMethod: i3, activeProvider: a3 }), callsite: Fe3(this._errorFormat), dataPath: [], middlewareArgsMapper: s3 });
        }
        $executeRaw(n3, ...i3) {
          return this._createPrismaPromise((o5) => {
            if (n3.raw !== void 0 || n3.sql !== void 0) {
              let [s3, a3] = ta2(n3, i3);
              return Jn(this._activeProvider, s3.text, s3.values, Array.isArray(n3) ? "prisma.$executeRaw`<SQL>`" : "prisma.$executeRaw(sql`<SQL>`)"), this.$executeRawInternal(o5, "$executeRaw", s3, a3);
            }
            throw new Z2("`$executeRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n", { clientVersion: this._clientVersion });
          });
        }
        $executeRawUnsafe(n3, ...i3) {
          return this._createPrismaPromise((o5) => (Jn(this._activeProvider, n3, i3, "prisma.$executeRawUnsafe(<SQL>, [...values])"), this.$executeRawInternal(o5, "$executeRawUnsafe", [n3, ...i3])));
        }
        $runCommandRaw(n3) {
          if (e2.activeProvider !== "mongodb")
            throw new Z2(`The ${e2.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`, { clientVersion: this._clientVersion });
          return this._createPrismaPromise((i3) => this._request({ args: n3, clientMethod: "$runCommandRaw", dataPath: [], action: "runCommandRaw", argsMapper: Rs, callsite: Fe3(this._errorFormat), transaction: i3 }));
        }
        async $queryRawInternal(n3, i3, o5, s3) {
          let a3 = this._activeProvider;
          return this._request({ action: "queryRaw", args: o5, transaction: n3, clientMethod: i3, argsMapper: Qn2({ clientMethod: i3, activeProvider: a3 }), callsite: Fe3(this._errorFormat), dataPath: [], middlewareArgsMapper: s3 }).then(Hs);
        }
        $queryRaw(n3, ...i3) {
          return this._createPrismaPromise((o5) => {
            if (n3.raw !== void 0 || n3.sql !== void 0)
              return this.$queryRawInternal(o5, "$queryRaw", ...ta2(n3, i3));
            throw new Z2("`$queryRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n", { clientVersion: this._clientVersion });
          });
        }
        $queryRawUnsafe(n3, ...i3) {
          return this._createPrismaPromise((o5) => this.$queryRawInternal(o5, "$queryRawUnsafe", [n3, ...i3]));
        }
        _transactionWithArray({ promises: n3, options: i3 }) {
          let o5 = _c.nextId(), s3 = Bs(n3.length), a3 = n3.map((u4, l3) => {
            var v4, S5, A4;
            if ((u4 == null ? void 0 : u4[Symbol.toStringTag]) !== "PrismaPromise")
              throw new Error("All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.");
            let g4 = (v4 = i3 == null ? void 0 : i3.isolationLevel) != null ? v4 : this._engineConfig.transactionOptions.isolationLevel, h2 = { kind: "batch", id: o5, index: l3, isolationLevel: g4, lock: s3 };
            return (A4 = (S5 = u4.requestTransaction) == null ? void 0 : S5.call(u4, h2)) != null ? A4 : u4;
          });
          return ea(a3);
        }
        async _transactionWithCallback({ callback: n3, options: i3 }) {
          var l3, g4, h2;
          let o5 = { traceparent: this._tracingHelper.getTraceParent() }, s3 = { maxWait: (l3 = i3 == null ? void 0 : i3.maxWait) != null ? l3 : this._engineConfig.transactionOptions.maxWait, timeout: (g4 = i3 == null ? void 0 : i3.timeout) != null ? g4 : this._engineConfig.transactionOptions.timeout, isolationLevel: (h2 = i3 == null ? void 0 : i3.isolationLevel) != null ? h2 : this._engineConfig.transactionOptions.isolationLevel }, a3 = await this._engine.transaction("start", o5, s3), u4;
          try {
            let v4 = { kind: "itx", ...a3 };
            u4 = await n3(this._createItxClient(v4)), await this._engine.transaction("commit", o5, a3);
          } catch (v4) {
            throw await this._engine.transaction("rollback", o5, a3).catch(() => {
            }), v4;
          }
          return u4;
        }
        _createItxClient(n3) {
          return Ut(ge2(qo2(this), [ie3("_appliedParent", () => this._appliedParent._createItxClient(n3)), ie3("_createPrismaPromise", () => Gn(n3)), ie3(Nc, () => n3.id), Ft($s)]));
        }
        $transaction(n3, i3) {
          let o5;
          typeof n3 == "function" ? o5 = () => this._transactionWithCallback({ callback: n3, options: i3 }) : o5 = () => this._transactionWithArray({ promises: n3, options: i3 });
          let s3 = { name: "transaction", attributes: { method: "$transaction" } };
          return this._tracingHelper.runInChildSpan(s3, o5);
        }
        _request(n3) {
          var l3;
          n3.otelParentCtx = this._tracingHelper.getActiveContext();
          let i3 = (l3 = n3.middlewareArgsMapper) != null ? l3 : Oc, o5 = { args: i3.requestArgsToMiddlewareArgs(n3.args), dataPath: n3.dataPath, runInTransaction: !!n3.transaction, action: n3.action, model: n3.model }, s3 = { middleware: { name: "middleware", middleware: true, attributes: { method: "$use" }, active: false }, operation: { name: "operation", attributes: { method: o5.action, model: o5.model, name: o5.model ? `${o5.model}.${o5.action}` : o5.action } } }, a3 = -1, u4 = async (g4) => {
            let h2 = this._middlewares.get(++a3);
            if (h2)
              return this._tracingHelper.runInChildSpan(s3.middleware, (M4) => h2(g4, (B2) => (M4 == null || M4.end(), u4(B2))));
            let { runInTransaction: v4, args: S5, ...A4 } = g4, R5 = { ...n3, ...A4 };
            S5 && (R5.args = i3.middlewareArgsToRequestArgs(S5)), n3.transaction !== void 0 && v4 === false && delete R5.transaction;
            let D4 = await Wo2(this, R5);
            return R5.model ? Jo2({ result: D4, modelName: R5.model, args: R5.args, extensions: this._extensions, runtimeDataModel: this._runtimeDataModel }) : D4;
          };
          return this._tracingHelper.runInChildSpan(s3.operation, () => u4(o5));
        }
        async _executeRequest({ args: n3, clientMethod: i3, dataPath: o5, callsite: s3, action: a3, model: u4, argsMapper: l3, transaction: g4, unpacker: h2, otelParentCtx: v4, customDataProxyFetch: S5 }) {
          try {
            n3 = l3 ? l3(n3) : n3;
            let A4 = { name: "serialize" }, R5 = this._tracingHelper.runInChildSpan(A4, () => Ts({ modelName: u4, runtimeDataModel: this._runtimeDataModel, action: a3, args: n3, clientMethod: i3, callsite: s3, extensions: this._extensions, errorFormat: this._errorFormat, clientVersion: this._clientVersion }));
            return ne2.enabled("prisma:client") && (Be2("Prisma Client call:"), Be2(`prisma.${i3}(${Io2(n3)})`), Be2("Generated request:"), Be2(JSON.stringify(R5, null, 2) + `
`)), (g4 == null ? void 0 : g4.kind) === "batch" && await g4.lock, this._requestHandler.request({ protocolQuery: R5, modelName: u4, action: a3, clientMethod: i3, dataPath: o5, callsite: s3, args: n3, extensions: this._extensions, transaction: g4, unpacker: h2, otelParentCtx: v4, otelChildCtx: this._tracingHelper.getActiveContext(), customDataProxyFetch: S5 });
          } catch (A4) {
            throw A4.clientVersion = this._clientVersion, A4;
          }
        }
        get $metrics() {
          if (!this._hasPreviewFlag("metrics"))
            throw new Z2("`metrics` preview feature must be enabled in order to access metrics API", { clientVersion: this._clientVersion });
          return this._metrics;
        }
        _hasPreviewFlag(n3) {
          var i3;
          return !!((i3 = this._engineConfig.previewFeatures) != null && i3.includes(n3));
        }
      }
      return t2;
    }
    function ta2(e2, t2) {
      return Lc(e2) ? [new ae2(e2, t2), Os] : [e2, Ns];
    }
    function Lc(e2) {
      return Array.isArray(e2) && Array.isArray(e2.raw);
    }
    d5();
    c4();
    p6();
    f4();
    m4();
    var Fc = /* @__PURE__ */ new Set(["toJSON", "$$typeof", "asymmetricMatch", Symbol.iterator, Symbol.toStringTag, Symbol.isConcatSpreadable, Symbol.toPrimitive]);
    function ia(e2) {
      return new Proxy(e2, { get(t2, r4) {
        if (r4 in t2)
          return t2[r4];
        if (!Fc.has(r4))
          throw new TypeError(`Invalid enum value: ${String(r4)}`);
      } });
    }
    d5();
    c4();
    p6();
    f4();
    m4();
  }
});

// ../../node_modules/.prisma/client/edge.js
var require_edge2 = __commonJS({
  "../../node_modules/.prisma/client/edge.js"(exports2) {
    Object.defineProperty(exports2, "__esModule", { value: true });
    var {
      PrismaClientKnownRequestError: PrismaClientKnownRequestError2,
      PrismaClientUnknownRequestError: PrismaClientUnknownRequestError2,
      PrismaClientRustPanicError: PrismaClientRustPanicError2,
      PrismaClientInitializationError: PrismaClientInitializationError2,
      PrismaClientValidationError: PrismaClientValidationError2,
      NotFoundError: NotFoundError2,
      getPrismaClient: getPrismaClient2,
      sqltag: sqltag2,
      empty: empty2,
      join: join2,
      raw: raw3,
      Decimal: Decimal2,
      Debug: Debug2,
      objectEnumValues: objectEnumValues2,
      makeStrictEnum: makeStrictEnum2,
      Extensions: Extensions2,
      warnOnce: warnOnce2,
      defineDmmfProperty: defineDmmfProperty2,
      Public: Public2,
      detectRuntime: detectRuntime2
    } = require_edge();
    var Prisma = {};
    exports2.Prisma = Prisma;
    exports2.$Enums = {};
    Prisma.prismaVersion = {
      client: "5.10.1",
      engine: "5a9203d0590c951969e85a7d07215503f4672eb9"
    };
    Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError2;
    Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError2;
    Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError2;
    Prisma.PrismaClientInitializationError = PrismaClientInitializationError2;
    Prisma.PrismaClientValidationError = PrismaClientValidationError2;
    Prisma.NotFoundError = NotFoundError2;
    Prisma.Decimal = Decimal2;
    Prisma.sql = sqltag2;
    Prisma.empty = empty2;
    Prisma.join = join2;
    Prisma.raw = raw3;
    Prisma.validator = Public2.validator;
    Prisma.getExtensionContext = Extensions2.getExtensionContext;
    Prisma.defineExtension = Extensions2.defineExtension;
    Prisma.DbNull = objectEnumValues2.instances.DbNull;
    Prisma.JsonNull = objectEnumValues2.instances.JsonNull;
    Prisma.AnyNull = objectEnumValues2.instances.AnyNull;
    Prisma.NullTypes = {
      DbNull: objectEnumValues2.classes.DbNull,
      JsonNull: objectEnumValues2.classes.JsonNull,
      AnyNull: objectEnumValues2.classes.AnyNull
    };
    exports2.Prisma.TransactionIsolationLevel = makeStrictEnum2({
      ReadUncommitted: "ReadUncommitted",
      ReadCommitted: "ReadCommitted",
      RepeatableRead: "RepeatableRead",
      Serializable: "Serializable"
    });
    exports2.Prisma.CompanyScalarFieldEnum = {
      id: "id",
      uid: "uid",
      title: "title",
      nid: "nid",
      cat: "cat"
    };
    exports2.Prisma.JokesScalarFieldEnum = {
      uid: "uid",
      cat: "cat",
      lang: "lang",
      id: "id",
      joke: "joke"
    };
    exports2.Prisma.NewsbgScalarFieldEnum = {
      title: "title",
      nid: "nid",
      id: "id",
      image: "image",
      date: "date",
      link: "link",
      cat: "cat",
      html: "html",
      trans: "trans",
      embed: "embed"
    };
    exports2.Prisma.TweetsScalarFieldEnum = {
      uid: "uid",
      cat: "cat"
    };
    exports2.Prisma.Auth_userScalarFieldEnum = {
      id: "id"
    };
    exports2.Prisma.User_keyScalarFieldEnum = {
      id: "id",
      user_id: "user_id",
      hashed_password: "hashed_password"
    };
    exports2.Prisma.User_sessionScalarFieldEnum = {
      id: "id",
      user_id: "user_id",
      active_expires: "active_expires",
      idle_expires: "idle_expires"
    };
    exports2.Prisma.UserScalarFieldEnum = {
      id: "id"
    };
    exports2.Prisma.SessionScalarFieldEnum = {
      id: "id",
      user_id: "user_id",
      active_expires: "active_expires",
      idle_expires: "idle_expires"
    };
    exports2.Prisma.KeyScalarFieldEnum = {
      id: "id",
      hashed_password: "hashed_password",
      user_id: "user_id"
    };
    exports2.Prisma.SortOrder = {
      asc: "asc",
      desc: "desc"
    };
    exports2.Prisma.NullableJsonNullValueInput = {
      DbNull: Prisma.DbNull,
      JsonNull: Prisma.JsonNull
    };
    exports2.Prisma.QueryMode = {
      default: "default",
      insensitive: "insensitive"
    };
    exports2.Prisma.NullsOrder = {
      first: "first",
      last: "last"
    };
    exports2.Prisma.JsonNullValueFilter = {
      DbNull: Prisma.DbNull,
      JsonNull: Prisma.JsonNull,
      AnyNull: Prisma.AnyNull
    };
    exports2.Prisma.ModelName = {
      company: "company",
      jokes: "jokes",
      newsbg: "newsbg",
      tweets: "tweets",
      auth_user: "auth_user",
      user_key: "user_key",
      user_session: "user_session",
      User: "User",
      Session: "Session",
      Key: "Key"
    };
    var config2 = {
      "generator": {
        "name": "client",
        "provider": {
          "fromEnvVar": null,
          "value": "prisma-client-js"
        },
        "output": {
          "value": "/home/runner/work/monext/monext/node_modules/@prisma/client",
          "fromEnvVar": null
        },
        "config": {
          "engineType": "library"
        },
        "binaryTargets": [
          {
            "fromEnvVar": null,
            "value": "debian-openssl-1.1.x",
            "native": true
          }
        ],
        "previewFeatures": []
      },
      "relativeEnvPaths": {
        "rootEnvPath": "../../../.env"
      },
      "relativePath": "../../../apps/blogging/prisma",
      "clientVersion": "5.10.1",
      "engineVersion": "5a9203d0590c951969e85a7d07215503f4672eb9",
      "datasourceNames": [
        "db"
      ],
      "activeProvider": "postgresql",
      "postinstall": true,
      "ciName": "GitHub Actions",
      "inlineDatasources": {
        "db": {
          "url": {
            "fromEnvVar": "DB_URL2",
            "value": null
          }
        }
      },
      "inlineSchema": 'generator client {\n  provider = "prisma-client-js"\n}\n\ndatasource db {\n  provider = "postgresql"\n  url      = env("DB_URL2")\n}\n\nmodel company {\n  id    Int?\n  uid   String  @id\n  title String?\n  nid   String?\n  cat   String?\n}\n\nmodel jokes {\n  uid  String  @id\n  cat  String?\n  lang String?\n  id   Int     @default(autoincrement())\n  joke String?\n\n  @@index([cat, uid], map: "jokes_cat")\n}\n\nmodel newsbg {\n  title String?\n  nid   String  @id\n  id    Int     @unique @default(autoincrement())\n  image String?\n  date  String?\n  link  String?\n  cat   String  @default("")\n  html  Json?\n  trans String?\n  embed String?\n}\n\nmodel tweets {\n  uid String  @id\n  cat String?\n\n  @@index([cat], map: "tweets_cat")\n}\n\nmodel auth_user {\n  id           String         @id\n  user_key     user_key[]\n  user_session user_session[]\n}\n\nmodel user_key {\n  id              String    @id\n  user_id         String\n  hashed_password String?\n  auth_user       auth_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\n\nmodel user_session {\n  id             String    @id\n  user_id        String\n  active_expires BigInt\n  idle_expires   BigInt\n  auth_user      auth_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n}\nmodel User {\n  id           String    @id @unique\n\n  auth_session Session[]\n  key          Key[]\n}\n\nmodel Session {\n  id             String @id @unique\n  user_id        String\n  active_expires BigInt\n  idle_expires   BigInt\n  user           User   @relation(references: [id], fields: [user_id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n\nmodel Key {\n  id              String  @id @unique\n  hashed_password String?\n  user_id         String\n  user            User    @relation(references: [id], fields: [user_id], onDelete: Cascade)\n\n  @@index([user_id])\n}\n',
      "inlineSchemaHash": "7cf6de09b1635efe2317300ca225ec02614541c8174f8ba5b032f1a9e5390486",
      "copyEngine": true
    };
    config2.dirname = "/";
    config2.runtimeDataModel = JSON.parse('{"models":{"company":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Int","isGenerated":false,"isUpdatedAt":false},{"name":"uid","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"title","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"nid","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cat","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"jokes":{"dbName":null,"fields":[{"name":"uid","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cat","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"lang","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"joke","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"newsbg":{"dbName":null,"fields":[{"name":"title","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"nid","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":true,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"Int","default":{"name":"autoincrement","args":[]},"isGenerated":false,"isUpdatedAt":false},{"name":"image","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"date","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"link","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cat","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":true,"type":"String","default":"","isGenerated":false,"isUpdatedAt":false},{"name":"html","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Json","isGenerated":false,"isUpdatedAt":false},{"name":"trans","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"embed","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"tweets":{"dbName":null,"fields":[{"name":"uid","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"cat","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"auth_user":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_key","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"user_key","relationName":"auth_userTouser_key","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"user_session","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"user_session","relationName":"auth_userTouser_session","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"user_key":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hashed_password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"auth_user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"auth_user","relationName":"auth_userTouser_key","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"NoAction","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"user_session":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"active_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"idle_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"auth_user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"auth_user","relationName":"auth_userTouser_session","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"NoAction","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"User":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"auth_session","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Session","relationName":"SessionToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false},{"name":"key","kind":"object","isList":true,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"Key","relationName":"KeyToUser","relationFromFields":[],"relationToFields":[],"isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"Session":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"active_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"idle_expires","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"BigInt","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"SessionToUser","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false},"Key":{"dbName":null,"fields":[{"name":"id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":true,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"hashed_password","kind":"scalar","isList":false,"isRequired":false,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user_id","kind":"scalar","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":true,"hasDefaultValue":false,"type":"String","isGenerated":false,"isUpdatedAt":false},{"name":"user","kind":"object","isList":false,"isRequired":true,"isUnique":false,"isId":false,"isReadOnly":false,"hasDefaultValue":false,"type":"User","relationName":"KeyToUser","relationFromFields":["user_id"],"relationToFields":["id"],"relationOnDelete":"Cascade","isGenerated":false,"isUpdatedAt":false}],"primaryKey":null,"uniqueFields":[],"uniqueIndexes":[],"isGenerated":false}},"enums":{},"types":{}}');
    defineDmmfProperty2(exports2.Prisma, config2.runtimeDataModel);
    config2.engineWasm = void 0;
    config2.injectableEdgeEnv = () => ({
      parsed: {
        DB_URL2: typeof globalThis !== "undefined" && globalThis["DB_URL2"] || typeof process !== "undefined" && process.env && process.env.DB_URL2 || void 0
      }
    });
    if (typeof globalThis !== "undefined" && globalThis["DEBUG"] || typeof process !== "undefined" && process.env && process.env.DEBUG || void 0) {
      Debug2.enable(typeof globalThis !== "undefined" && globalThis["DEBUG"] || typeof process !== "undefined" && process.env && process.env.DEBUG || void 0);
    }
    var PrismaClient2 = getPrismaClient2(config2);
    exports2.PrismaClient = PrismaClient2;
    Object.assign(exports2, Prisma);
  }
});

// ../../node_modules/@prisma/client/edge.js
var require_edge3 = __commonJS({
  "../../node_modules/@prisma/client/edge.js"(exports2, module) {
    module.exports = {
      // https://github.com/prisma/prisma/pull/12907
      ...require_edge2()
    };
  }
});

// ../../node_modules/@prisma/client/scripts/default-index.js
var require_default_index = __commonJS({
  "../../node_modules/@prisma/client/scripts/default-index.js"(exports2, module) {
    "use strict";
    var __defProp3 = Object.defineProperty;
    var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
    var __getOwnPropNames2 = Object.getOwnPropertyNames;
    var __hasOwnProp2 = Object.prototype.hasOwnProperty;
    var __export2 = (target, all) => {
      for (var name in all)
        __defProp3(target, name, { get: all[name], enumerable: true });
    };
    var __copyProps2 = (to2, from, except, desc) => {
      if (from && typeof from === "object" || typeof from === "function") {
        for (let key of __getOwnPropNames2(from))
          if (!__hasOwnProp2.call(to2, key) && key !== except)
            __defProp3(to2, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
      }
      return to2;
    };
    var __toCommonJS = (mod) => __copyProps2(__defProp3({}, "__esModule", { value: true }), mod);
    var default_index_exports = {};
    __export2(default_index_exports, {
      Prisma: () => Prisma,
      PrismaClient: () => PrismaClient2,
      default: () => default_index_default
    });
    module.exports = __toCommonJS(default_index_exports);
    var prisma = {
      enginesVersion: "5a9203d0590c951969e85a7d07215503f4672eb9"
    };
    var version = "5.10.1";
    var clientVersion = version;
    var PrismaClient2 = class {
      constructor() {
        throw new Error(
          `@prisma/client did not initialize yet. Please run "prisma generate" and try to import it again.
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`
        );
      }
    };
    function defineExtension(ext) {
      if (typeof ext === "function") {
        return ext;
      }
      return (client2) => client2.$extends(ext);
    }
    function getExtensionContext(that) {
      return that;
    }
    var Prisma = {
      defineExtension,
      getExtensionContext,
      prismaVersion: { client: clientVersion, engine: prisma.enginesVersion }
    };
    var default_index_default = { Prisma };
  }
});

// ../../node_modules/@prisma/extension-accelerate/dist/esm/semver.js
function compareSemVer(a3, b5) {
  const [major1 = 0, minor1 = 0, patch1 = 0] = a3.split(".").map(Number);
  const [major2 = 0, minor2 = 0, patch2 = 0] = b5.split(".").map(Number);
  const major = major2 - major1;
  const minor = minor2 - minor1;
  const patch = patch2 - patch1;
  return major || minor || patch;
}
var init_semver = __esm({
  "../../node_modules/@prisma/extension-accelerate/dist/esm/semver.js"() {
  }
});

// ../../node_modules/@prisma/extension-accelerate/dist/esm/user-agent.js
function getUserAgent() {
  const prismaVersion = import_default_index.default.Prisma.prismaVersion;
  const parts = [
    getRuntimeSegment(),
    `PrismaEngine/${prismaVersion.engine}`,
    `PrismaClient/${prismaVersion.client}`
  ];
  return parts.join(" ");
}
function getRuntimeSegment() {
  if (typeof navigator !== "undefined") {
    return navigator.userAgent;
  } else if (typeof process !== "undefined" && typeof process.versions !== "undefined") {
    return `Node/${process.versions.node} (${process.platform}; ${process.arch})`;
  } else if ("EdgeRuntime" in globalThis) {
    return `Vercel-Edge-Runtime`;
  } else {
    return `UnknownRuntime`;
  }
}
var import_default_index;
var init_user_agent = __esm({
  "../../node_modules/@prisma/extension-accelerate/dist/esm/user-agent.js"() {
    import_default_index = __toESM(require_default_index(), 1);
  }
});

// ../../node_modules/@prisma/extension-accelerate/dist/esm/extension.js
function makeWithCacheHeaders(fetcher) {
  const userAgent2 = getUserAgent();
  let machineHint = void 0;
  return async (params) => {
    const { args } = params;
    const { cacheStrategy, __accelerateInfo = false, ...rest } = args;
    let info2 = null;
    const { __internalParams, query } = params;
    __internalParams.customDataProxyFetch = () => {
      return async (url, options) => {
        const cacheControl = new Array();
        if (typeof cacheStrategy?.ttl === "number") {
          cacheControl.push(`max-age=${cacheStrategy.ttl}`);
        }
        if (typeof cacheStrategy?.swr === "number") {
          cacheControl.push(`stale-while-revalidate=${cacheStrategy.swr}`);
        }
        options.headers = {
          ...options.headers,
          "cache-control": cacheControl.length > 0 ? cacheControl.join(",") : `no-cache`,
          "user-agent": userAgent2
        };
        if (machineHint) {
          options.headers["accelerate-query-engine-jwt"] = machineHint;
        }
        const response = await fetcher(url, options);
        info2 = {
          cacheStatus: response.headers.get("accelerate-cache-status"),
          lastModified: new Date(response.headers.get("last-modified") ?? ""),
          region: response.headers.get("cf-ray")?.split("-")[1] ?? "unspecified",
          requestId: response.headers.get("cf-ray") ?? "unspecified",
          signature: response.headers.get("accelerate-signature") ?? "unspecified"
        };
        machineHint = response.headers.get("accelerate-query-engine-jwt") ?? void 0;
        return response;
      };
    };
    if (__accelerateInfo) {
      const data = await query(rest, __internalParams);
      return { data, info: info2 };
    } else {
      return query(rest, __internalParams);
    }
  };
}
function makeAccelerateExtension(fetcher) {
  const enableCtxParent = compareSemVer("5.1.0", import_default_index2.default.Prisma.prismaVersion.client) >= 0;
  return import_default_index2.default.Prisma.defineExtension((client2) => {
    const withCacheHeaders = makeWithCacheHeaders(fetcher);
    const xclient = client2.$extends({
      name: EXTENSION_NAME,
      query: {
        $allModels: {
          // also apply withCacheHeaders to mutations for machine hint benefit
          $allOperations: withCacheHeaders
        }
      }
    });
    return xclient.$extends({
      name: EXTENSION_NAME,
      model: {
        $allModels: {
          // TODO: these functions are repetitive. Is there a type we can use to generic this?
          // TODO: can we define these in a map that ensures query and model overrides stay in sync/
          aggregate(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.aggregate(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.aggregate({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          count(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.count(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.count({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          findFirst(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.findFirst(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.findFirst({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          findFirstOrThrow(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.findFirstOrThrow(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.findFirstOrThrow({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          findMany(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.findMany(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.findMany({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          findUnique(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.findUnique(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.findUnique({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          findUniqueOrThrow(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.findUniqueOrThrow(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.findUniqueOrThrow({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          },
          groupBy(args) {
            const ctx = import_default_index2.default.Prisma.getExtensionContext(this);
            const model = enableCtxParent ? ctx.$parent[ctx.$name] : xclient[ctx.name];
            const prismaPromise = model.groupBy(args);
            return Object.assign(prismaPromise, {
              withAccelerateInfo() {
                return model.groupBy({
                  ...args,
                  __accelerateInfo: true
                });
              }
            });
          }
        }
      }
    });
  });
}
var import_default_index2, EXTENSION_NAME;
var init_extension = __esm({
  "../../node_modules/@prisma/extension-accelerate/dist/esm/extension.js"() {
    import_default_index2 = __toESM(require_default_index(), 1);
    init_semver();
    init_user_agent();
    EXTENSION_NAME = "@prisma/extension-accelerate";
  }
});

// ../../node_modules/@prisma/extension-accelerate/dist/esm/entry.fetch.js
function withAccelerate() {
  return makeAccelerateExtension(globalThis.fetch);
}
var init_entry_fetch = __esm({
  "../../node_modules/@prisma/extension-accelerate/dist/esm/entry.fetch.js"() {
    init_extension();
  }
});

// ../../node_modules/lucia/dist/utils/cookie.js
var parseCookie2, serializeCookie, tryDecode;
var init_cookie2 = __esm({
  "../../node_modules/lucia/dist/utils/cookie.js"() {
    parseCookie2 = (str) => {
      const obj = {};
      let index = 0;
      while (index < str.length) {
        const eqIdx = str.indexOf("=", index);
        if (eqIdx === -1) {
          break;
        }
        let endIdx = str.indexOf(";", index);
        if (endIdx === -1) {
          endIdx = str.length;
        } else if (endIdx < eqIdx) {
          index = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        const key = str.slice(index, eqIdx).trim();
        if (!(key in obj)) {
          let val = str.slice(eqIdx + 1, endIdx).trim();
          if (val.charCodeAt(0) === 34) {
            val = val.slice(1, -1);
          }
          obj[key] = tryDecode(val);
        }
        index = endIdx + 1;
      }
      return obj;
    };
    serializeCookie = (name, val, options) => {
      const opt = options ?? {};
      const enc = opt.encode ?? encodeURIComponent;
      const value = enc(val);
      let str = name + "=" + value;
      if (null != opt.maxAge) {
        const maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge)) {
          throw new TypeError("option maxAge is invalid");
        }
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        const expires = opt.expires;
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly) {
        str += "; HttpOnly";
      }
      if (opt.secure) {
        str += "; Secure";
      }
      if (opt.priority) {
        const priority = typeof opt.priority === "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        const sameSite = typeof opt.sameSite === "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case true:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    };
    tryDecode = (str) => {
      try {
        return decodeURIComponent(str);
      } catch (e2) {
        return str;
      }
    };
  }
});

// ../../node_modules/lucia/dist/auth/cookie.js
var DEFAULT_SESSION_COOKIE_NAME, defaultSessionCookieAttributes, createSessionCookie, Cookie;
var init_cookie3 = __esm({
  "../../node_modules/lucia/dist/auth/cookie.js"() {
    init_cookie2();
    DEFAULT_SESSION_COOKIE_NAME = "auth_session";
    defaultSessionCookieAttributes = {
      sameSite: "lax",
      path: "/"
    };
    createSessionCookie = (session2, options) => {
      let expires;
      if (session2 === null) {
        expires = 0;
      } else if (options.cookie.expires !== false) {
        expires = session2.idlePeriodExpiresAt.getTime();
      } else {
        expires = Date.now() + 1e3 * 60 * 60 * 24 * 365;
      }
      return new Cookie(options.cookie.name ?? DEFAULT_SESSION_COOKIE_NAME, session2?.sessionId ?? "", {
        ...options.cookie.attributes ?? defaultSessionCookieAttributes,
        httpOnly: true,
        expires: new Date(expires),
        secure: options.env === "PROD"
      });
    };
    Cookie = class {
      constructor(name, value, options) {
        this.name = name;
        this.value = value;
        this.attributes = options;
      }
      name;
      value;
      attributes;
      serialize = () => {
        return serializeCookie(this.name, this.value, this.attributes);
      };
    };
  }
});

// ../../node_modules/lucia/dist/utils/log.js
var logError;
var init_log = __esm({
  "../../node_modules/lucia/dist/utils/log.js"() {
    logError = (message2) => {
      console.log("\x1B[31m%s\x1B[31m", `[LUCIA_ERROR] ${message2}`);
    };
  }
});

// ../../node_modules/lucia/dist/auth/error.js
var LuciaError;
var init_error2 = __esm({
  "../../node_modules/lucia/dist/auth/error.js"() {
    LuciaError = class extends Error {
      constructor(errorMsg, detail) {
        super(errorMsg);
        this.message = errorMsg;
        this.detail = detail ?? "";
      }
      detail;
      message;
    };
  }
});

// ../../node_modules/lucia/dist/scrypt/index.js
var scrypt, rotl, XorAndSalsa, pbkdf2, BlockMix, u32;
var init_scrypt = __esm({
  "../../node_modules/lucia/dist/scrypt/index.js"() {
    scrypt = async (password, salt, options) => {
      const { N: N5, r: r4, p: p6 } = options;
      const dkLen = options.dkLen ?? 32;
      const maxmem = 1024 ** 3 + 1024;
      const blockSize = 128 * r4;
      const blockSize32 = blockSize / 4;
      if (N5 <= 1 || (N5 & N5 - 1) !== 0 || N5 >= 2 ** (blockSize / 8) || N5 > 2 ** 32) {
        throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");
      }
      if (p6 < 0 || p6 > (2 ** 32 - 1) * 32 / blockSize) {
        throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");
      }
      if (dkLen < 0 || dkLen > (2 ** 32 - 1) * 32) {
        throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");
      }
      const memUsed = blockSize * (N5 + p6);
      if (memUsed > maxmem) {
        throw new Error(`Scrypt: parameters too large, ${memUsed} (128 * r * (N + p)) > ${maxmem} (maxmem)`);
      }
      const B2 = await pbkdf2(password, salt, { c: 1, dkLen: blockSize * p6 });
      const B32 = u32(B2);
      const V3 = u32(new Uint8Array(blockSize * N5));
      const tmp = u32(new Uint8Array(blockSize));
      for (let pi2 = 0; pi2 < p6; pi2++) {
        const Pi = blockSize32 * pi2;
        for (let i3 = 0; i3 < blockSize32; i3++)
          V3[i3] = B32[Pi + i3];
        for (let i3 = 0, pos = 0; i3 < N5 - 1; i3++) {
          BlockMix(V3, pos, V3, pos += blockSize32, r4);
          await new Promise((r5) => r5());
        }
        BlockMix(V3, (N5 - 1) * blockSize32, B32, Pi, r4);
        for (let i3 = 0; i3 < N5; i3++) {
          const j5 = B32[Pi + blockSize32 - 16] % N5;
          for (let k6 = 0; k6 < blockSize32; k6++) {
            tmp[k6] = B32[Pi + k6] ^ V3[j5 * blockSize32 + k6];
          }
          BlockMix(tmp, 0, B32, Pi, r4);
          await new Promise((r5) => r5());
        }
      }
      const res = await pbkdf2(password, B2, { c: 1, dkLen });
      B2.fill(0);
      V3.fill(0);
      tmp.fill(0);
      return res;
    };
    rotl = (a3, b5) => a3 << b5 | a3 >>> 32 - b5;
    XorAndSalsa = (prev, pi2, input, ii, out, oi) => {
      const y00 = prev[pi2++] ^ input[ii++], y01 = prev[pi2++] ^ input[ii++];
      const y02 = prev[pi2++] ^ input[ii++], y03 = prev[pi2++] ^ input[ii++];
      const y04 = prev[pi2++] ^ input[ii++], y05 = prev[pi2++] ^ input[ii++];
      const y06 = prev[pi2++] ^ input[ii++], y07 = prev[pi2++] ^ input[ii++];
      const y08 = prev[pi2++] ^ input[ii++], y09 = prev[pi2++] ^ input[ii++];
      const y10 = prev[pi2++] ^ input[ii++], y11 = prev[pi2++] ^ input[ii++];
      const y12 = prev[pi2++] ^ input[ii++], y13 = prev[pi2++] ^ input[ii++];
      const y14 = prev[pi2++] ^ input[ii++], y15 = prev[pi2++] ^ input[ii++];
      let x00 = y00, x01 = y01, x02 = y02, x03 = y03, x04 = y04, x05 = y05, x06 = y06, x07 = y07, x08 = y08, x09 = y09, x10 = y10, x11 = y11, x12 = y12, x13 = y13, x14 = y14, x15 = y15;
      for (let i3 = 0; i3 < 8; i3 += 2) {
        x04 ^= rotl(x00 + x12 | 0, 7);
        x08 ^= rotl(x04 + x00 | 0, 9);
        x12 ^= rotl(x08 + x04 | 0, 13);
        x00 ^= rotl(x12 + x08 | 0, 18);
        x09 ^= rotl(x05 + x01 | 0, 7);
        x13 ^= rotl(x09 + x05 | 0, 9);
        x01 ^= rotl(x13 + x09 | 0, 13);
        x05 ^= rotl(x01 + x13 | 0, 18);
        x14 ^= rotl(x10 + x06 | 0, 7);
        x02 ^= rotl(x14 + x10 | 0, 9);
        x06 ^= rotl(x02 + x14 | 0, 13);
        x10 ^= rotl(x06 + x02 | 0, 18);
        x03 ^= rotl(x15 + x11 | 0, 7);
        x07 ^= rotl(x03 + x15 | 0, 9);
        x11 ^= rotl(x07 + x03 | 0, 13);
        x15 ^= rotl(x11 + x07 | 0, 18);
        x01 ^= rotl(x00 + x03 | 0, 7);
        x02 ^= rotl(x01 + x00 | 0, 9);
        x03 ^= rotl(x02 + x01 | 0, 13);
        x00 ^= rotl(x03 + x02 | 0, 18);
        x06 ^= rotl(x05 + x04 | 0, 7);
        x07 ^= rotl(x06 + x05 | 0, 9);
        x04 ^= rotl(x07 + x06 | 0, 13);
        x05 ^= rotl(x04 + x07 | 0, 18);
        x11 ^= rotl(x10 + x09 | 0, 7);
        x08 ^= rotl(x11 + x10 | 0, 9);
        x09 ^= rotl(x08 + x11 | 0, 13);
        x10 ^= rotl(x09 + x08 | 0, 18);
        x12 ^= rotl(x15 + x14 | 0, 7);
        x13 ^= rotl(x12 + x15 | 0, 9);
        x14 ^= rotl(x13 + x12 | 0, 13);
        x15 ^= rotl(x14 + x13 | 0, 18);
      }
      out[oi++] = y00 + x00 | 0;
      out[oi++] = y01 + x01 | 0;
      out[oi++] = y02 + x02 | 0;
      out[oi++] = y03 + x03 | 0;
      out[oi++] = y04 + x04 | 0;
      out[oi++] = y05 + x05 | 0;
      out[oi++] = y06 + x06 | 0;
      out[oi++] = y07 + x07 | 0;
      out[oi++] = y08 + x08 | 0;
      out[oi++] = y09 + x09 | 0;
      out[oi++] = y10 + x10 | 0;
      out[oi++] = y11 + x11 | 0;
      out[oi++] = y12 + x12 | 0;
      out[oi++] = y13 + x13 | 0;
      out[oi++] = y14 + x14 | 0;
      out[oi++] = y15 + x15 | 0;
    };
    pbkdf2 = async (password, salt, options) => {
      const pwKey = await crypto.subtle.importKey("raw", password, "PBKDF2", false, ["deriveBits"]);
      const keyBuffer = await crypto.subtle.deriveBits({
        name: "PBKDF2",
        hash: "SHA-256",
        salt,
        iterations: options.c
      }, pwKey, options.dkLen * 8);
      return new Uint8Array(keyBuffer);
    };
    BlockMix = (input, ii, out, oi, r4) => {
      let head2 = oi + 0;
      let tail = oi + 16 * r4;
      for (let i3 = 0; i3 < 16; i3++)
        out[tail + i3] = input[ii + (2 * r4 - 1) * 16 + i3];
      for (let i3 = 0; i3 < r4; i3++, head2 += 16, ii += 16) {
        XorAndSalsa(out, tail, input, ii, out, head2);
        if (i3 > 0)
          tail += 16;
        XorAndSalsa(out, head2, input, ii += 16, out, tail);
      }
    };
    u32 = (arr) => {
      return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));
    };
  }
});

// ../../node_modules/lucia/dist/utils/crypto.js
var DEFAULT_ALPHABET, generateRandomString, generateScryptHash, hashWithScrypt, validateScryptHash, constantTimeEqual, convertUint8ArrayToHex;
var init_crypto = __esm({
  "../../node_modules/lucia/dist/utils/crypto.js"() {
    init_error2();
    init_scrypt();
    DEFAULT_ALPHABET = "abcdefghijklmnopqrstuvwxyz1234567890";
    generateRandomString = (length, alphabet = DEFAULT_ALPHABET) => {
      const randomUint32Values = new Uint32Array(length);
      crypto.getRandomValues(randomUint32Values);
      const u32Max = 4294967295;
      let result = "";
      for (let i3 = 0; i3 < randomUint32Values.length; i3++) {
        const rand = randomUint32Values[i3] / (u32Max + 1);
        result += alphabet[Math.floor(alphabet.length * rand)];
      }
      return result;
    };
    generateScryptHash = async (s3) => {
      const salt = generateRandomString(16);
      const key = await hashWithScrypt(s3.normalize("NFKC"), salt);
      return `s2:${salt}:${key}`;
    };
    hashWithScrypt = async (s3, salt, blockSize = 16) => {
      const keyUint8Array = await scrypt(new TextEncoder().encode(s3), new TextEncoder().encode(salt), {
        N: 16384,
        r: blockSize,
        p: 1,
        dkLen: 64
      });
      return convertUint8ArrayToHex(keyUint8Array);
    };
    validateScryptHash = async (s3, hash) => {
      if (hash.startsWith("$2a")) {
        throw new LuciaError("AUTH_OUTDATED_PASSWORD");
      }
      const arr = hash.split(":");
      if (arr.length === 2) {
        const [salt2, key2] = arr;
        const targetKey = await hashWithScrypt(s3.normalize("NFKC"), salt2, 8);
        const result = constantTimeEqual(targetKey, key2);
        return result;
      }
      if (arr.length !== 3)
        return false;
      const [version, salt, key] = arr;
      if (version === "s2") {
        const targetKey = await hashWithScrypt(s3.normalize("NFKC"), salt);
        const result = constantTimeEqual(targetKey, key);
        return result;
      }
      return false;
    };
    constantTimeEqual = (a3, b5) => {
      if (a3.length !== b5.length) {
        return false;
      }
      const aUint8Array = new TextEncoder().encode(a3);
      const bUint8Array = new TextEncoder().encode(b5);
      let c4 = 0;
      for (let i3 = 0; i3 < a3.length; i3++) {
        c4 |= aUint8Array[i3] ^ bUint8Array[i3];
      }
      return c4 === 0;
    };
    convertUint8ArrayToHex = (arr) => {
      return [...arr].map((x4) => x4.toString(16).padStart(2, "0")).join("");
    };
  }
});

// ../../node_modules/lucia/dist/utils/date.js
var isWithinExpiration;
var init_date2 = __esm({
  "../../node_modules/lucia/dist/utils/date.js"() {
    isWithinExpiration = (expiresInMs) => {
      const currentTime = Date.now();
      if (currentTime > expiresInMs)
        return false;
      return true;
    };
  }
});

// ../../node_modules/lucia/dist/auth/session.js
var isValidDatabaseSession;
var init_session2 = __esm({
  "../../node_modules/lucia/dist/auth/session.js"() {
    init_date2();
    isValidDatabaseSession = (databaseSession) => {
      return isWithinExpiration(databaseSession.idle_expires);
    };
  }
});

// ../../node_modules/lucia/dist/utils/debug.js
var DEBUG_GLOBAL, ESCAPE, DEFAULT_TEXT_FORMAT, DEFAULT_FG_BG, RED_CODE, LUCIA_COLOR_CODE, WHITE_CODE, GREEN_CODE, CYAN_CODE, YELLOW_CODE, PURPLE_CODE, BLUE_CODE, globalContext, format, bgFormat, fgFormat, bg, fg, bold2, dim2, isDebugModeEnabled, linebreak, createCategory, enableDebugMode, disableDebugMode, debug2, log2;
var init_debug = __esm({
  "../../node_modules/lucia/dist/utils/debug.js"() {
    DEBUG_GLOBAL = "__lucia_debug_mode";
    ESCAPE = "\x1B";
    DEFAULT_TEXT_FORMAT = "\x1B[0m";
    DEFAULT_FG_BG = `${ESCAPE}[0m`;
    RED_CODE = 9;
    LUCIA_COLOR_CODE = 63;
    WHITE_CODE = 231;
    GREEN_CODE = 34;
    CYAN_CODE = 6;
    YELLOW_CODE = 3;
    PURPLE_CODE = 5;
    BLUE_CODE = 4;
    globalContext = globalThis;
    globalContext[DEBUG_GLOBAL] = false;
    format = (text2, format2, removeFormat) => {
      return `${format2}${text2}${removeFormat ? removeFormat : DEFAULT_TEXT_FORMAT}`;
    };
    bgFormat = (text2, colorCode) => {
      return format(text2, `${ESCAPE}[48;5;${colorCode}m`, DEFAULT_FG_BG);
    };
    fgFormat = (text2, colorCode) => {
      return format(text2, `${ESCAPE}[38;5;${colorCode}m`, DEFAULT_FG_BG);
    };
    bg = {
      lucia: (text2) => bgFormat(text2, LUCIA_COLOR_CODE),
      red: (text2) => bgFormat(text2, RED_CODE),
      white: (text2) => bgFormat(text2, WHITE_CODE),
      green: (text2) => bgFormat(text2, GREEN_CODE),
      cyan: (text2) => bgFormat(text2, CYAN_CODE),
      yellow: (text2) => bgFormat(text2, YELLOW_CODE),
      purple: (text2) => bgFormat(text2, PURPLE_CODE),
      blue: (text2) => bgFormat(text2, BLUE_CODE)
    };
    fg = {
      lucia: (text2) => fgFormat(text2, LUCIA_COLOR_CODE),
      red: (text2) => fgFormat(text2, RED_CODE),
      white: (text2) => fgFormat(text2, WHITE_CODE),
      green: (text2) => fgFormat(text2, GREEN_CODE),
      cyan: (text2) => fgFormat(text2, CYAN_CODE),
      yellow: (text2) => fgFormat(text2, YELLOW_CODE),
      purple: (text2) => fgFormat(text2, PURPLE_CODE),
      blue: (text2) => fgFormat(text2, BLUE_CODE),
      default: (text2) => format(text2, DEFAULT_TEXT_FORMAT)
    };
    bold2 = (text2) => {
      return format(text2, `${ESCAPE}[1m`, `${ESCAPE}[22m`);
    };
    dim2 = (text2) => {
      return format(text2, `${ESCAPE}[2m`, `${ESCAPE}[22m`);
    };
    isDebugModeEnabled = () => {
      return Boolean(globalContext[DEBUG_GLOBAL]);
    };
    linebreak = () => console.log("");
    createCategory = (name, themeTextColor) => {
      const createLogger = (textColor = fg.default) => {
        return (text2, subtext) => {
          if (!isDebugModeEnabled())
            return;
          if (subtext) {
            return log2(themeTextColor(`[${name}]`), `${textColor(text2)}`, subtext);
          }
          log2(themeTextColor(`[${name}]`), `${textColor(text2)}`);
        };
      };
      return {
        info: createLogger(),
        notice: createLogger(fg.yellow),
        fail: createLogger(fg.red),
        success: createLogger(fg.green)
      };
    };
    enableDebugMode = () => {
      globalContext[DEBUG_GLOBAL] = true;
    };
    disableDebugMode = () => {
      globalContext[DEBUG_GLOBAL] = false;
    };
    debug2 = {
      init: (debugEnabled) => {
        if (debugEnabled) {
          enableDebugMode();
          linebreak();
          console.log(` ${bg.lucia(bold2(fg.white(" lucia ")))}  ${fg.lucia(bold2("Debug mode enabled"))}`);
        } else {
          disableDebugMode();
        }
      },
      request: {
        init: (method, href) => {
          if (!isDebugModeEnabled())
            return;
          linebreak();
          const getUrl = () => {
            try {
              const url = new URL(href);
              return url.origin + url.pathname;
            } catch {
              return href;
            }
          };
          log2(bg.cyan(bold2(fg.white(" request "))), fg.cyan(`${method.toUpperCase()} ${getUrl()}`));
        },
        ...createCategory("request", fg.cyan)
      },
      session: createCategory("session", fg.purple),
      key: createCategory("key", fg.blue)
    };
    log2 = (type, text2, subtext) => {
      if (!subtext) {
        return console.log(`${dim2((/* @__PURE__ */ new Date()).toLocaleTimeString())}  ${type} ${text2}`);
      }
      console.log(`${dim2((/* @__PURE__ */ new Date()).toLocaleTimeString())}  ${type} ${text2} ${dim2(subtext)}`);
    };
  }
});

// ../../node_modules/lucia/dist/utils/request.js
var createHeadersFromObject;
var init_request = __esm({
  "../../node_modules/lucia/dist/utils/request.js"() {
    createHeadersFromObject = (headersObject) => {
      const headers = new Headers();
      for (const [key, value] of Object.entries(headersObject)) {
        if (value === null || value === void 0)
          continue;
        if (typeof value === "string") {
          headers.set(key, value);
        } else {
          for (const item of value) {
            headers.append(key, item);
          }
        }
      }
      return headers;
    };
  }
});

// ../../node_modules/lucia/dist/utils/url.js
var isAllowedOrigin, getBaseDomain, safeParseUrl;
var init_url = __esm({
  "../../node_modules/lucia/dist/utils/url.js"() {
    isAllowedOrigin = (origin, host, allowedSubdomains) => {
      const originHost = new URL(origin).host;
      const baseDomain = getBaseDomain(host);
      if (host.length < 1 || origin.length < 1)
        return false;
      if (originHost === host)
        return true;
      if (allowedSubdomains === "*") {
        if (originHost.endsWith(`.${baseDomain}`))
          return true;
        return false;
      }
      for (const subdomain of allowedSubdomains) {
        const allowedHostPermutation = subdomain === null ? baseDomain : [subdomain, baseDomain].join(".");
        if (allowedHostPermutation === originHost)
          return true;
      }
      return false;
    };
    getBaseDomain = (host) => {
      if (host.startsWith("localhost:"))
        return host;
      return host.split(".").slice(-2).join(".");
    };
    safeParseUrl = (url) => {
      try {
        return new URL(url);
      } catch {
        return null;
      }
    };
  }
});

// ../../node_modules/lucia/dist/auth/request.js
var AuthRequest, transformRequestContext;
var init_request2 = __esm({
  "../../node_modules/lucia/dist/auth/request.js"() {
    init_debug();
    init_error2();
    init_request();
    init_url();
    AuthRequest = class {
      auth;
      requestContext;
      constructor(auth2, config2) {
        debug2.request.init(config2.requestContext.request.method, config2.requestContext.request.url ?? "(url unknown)");
        this.auth = auth2;
        this.requestContext = config2.requestContext;
        const csrfProtectionConfig = typeof config2.csrfProtection === "object" ? config2.csrfProtection : {};
        const csrfProtectionEnabled = config2.csrfProtection !== false;
        if (!csrfProtectionEnabled || this.isValidRequestOrigin(csrfProtectionConfig)) {
          this.storedSessionId = this.requestContext.sessionCookie ?? auth2.readSessionCookie(this.requestContext.request.headers.get("Cookie"));
        } else {
          this.storedSessionId = null;
        }
        this.bearerToken = auth2.readBearerToken(this.requestContext.request.headers.get("Authorization"));
      }
      validatePromise = null;
      validateBearerTokenPromise = null;
      storedSessionId;
      bearerToken;
      setSession = (session2) => {
        const sessionId = session2?.sessionId ?? null;
        if (this.storedSessionId === sessionId)
          return;
        this.validatePromise = null;
        this.setSessionCookie(session2);
      };
      maybeSetSession = (session2) => {
        try {
          this.setSession(session2);
        } catch {
        }
      };
      setSessionCookie = (session2) => {
        const sessionId = session2?.sessionId ?? null;
        if (this.storedSessionId === sessionId)
          return;
        this.storedSessionId = sessionId;
        this.requestContext.setCookie(this.auth.createSessionCookie(session2));
        if (session2) {
          debug2.request.notice("Session cookie stored", session2.sessionId);
        } else {
          debug2.request.notice("Session cookie deleted");
        }
      };
      validate = async () => {
        if (this.validatePromise) {
          debug2.request.info("Using cached result for session validation");
          return this.validatePromise;
        }
        this.validatePromise = new Promise(async (resolve, reject) => {
          if (!this.storedSessionId)
            return resolve(null);
          try {
            const session2 = await this.auth.validateSession(this.storedSessionId);
            if (session2.fresh) {
              this.maybeSetSession(session2);
            }
            return resolve(session2);
          } catch (e2) {
            if (e2 instanceof LuciaError && e2.message === "AUTH_INVALID_SESSION_ID") {
              this.maybeSetSession(null);
              return resolve(null);
            }
            return reject(e2);
          }
        });
        return await this.validatePromise;
      };
      validateBearerToken = async () => {
        if (this.validateBearerTokenPromise) {
          debug2.request.info("Using cached result for bearer token validation");
          return this.validatePromise;
        }
        this.validatePromise = new Promise(async (resolve, reject) => {
          if (!this.bearerToken)
            return resolve(null);
          try {
            const session2 = await this.auth.validateSession(this.bearerToken);
            return resolve(session2);
          } catch (e2) {
            if (e2 instanceof LuciaError) {
              return resolve(null);
            }
            return reject(e2);
          }
        });
        return await this.validatePromise;
      };
      invalidate() {
        this.validatePromise = null;
        this.validateBearerTokenPromise = null;
      }
      isValidRequestOrigin = (config2) => {
        const request = this.requestContext.request;
        const whitelist = ["GET", "HEAD", "OPTIONS", "TRACE"];
        if (whitelist.some((val) => val === request.method.toUpperCase())) {
          return true;
        }
        const requestOrigin = request.headers.get("Origin");
        if (!requestOrigin) {
          debug2.request.fail("No request origin available");
          return false;
        }
        let host = null;
        if (config2.host !== void 0) {
          host = config2.host ?? null;
        } else if (request.url !== null && request.url !== void 0) {
          host = safeParseUrl(request.url)?.host ?? null;
        } else {
          host = request.headers.get(config2.hostHeader ?? "Host");
        }
        debug2.request.info("Host", host ?? "(Host unknown)");
        if (host !== null && isAllowedOrigin(requestOrigin, host, config2.allowedSubDomains ?? [])) {
          debug2.request.info("Valid request origin", requestOrigin);
          return true;
        }
        debug2.request.info("Invalid request origin", requestOrigin);
        return false;
      };
    };
    transformRequestContext = ({ request, setCookie, sessionCookie }) => {
      return {
        request: {
          url: request.url,
          method: request.method,
          headers: "authorization" in request.headers ? createHeadersFromObject(request.headers) : request.headers
        },
        setCookie,
        sessionCookie: sessionCookie ?? request.storedSessionCookie
      };
    };
  }
});

// ../../node_modules/lucia/dist/middleware/index.js
var astro, lucia;
var init_middleware = __esm({
  "../../node_modules/lucia/dist/middleware/index.js"() {
    init_request();
    astro = () => {
      return ({ args, sessionCookieName }) => {
        const [context] = args;
        const requestContext = {
          request: context.request,
          sessionCookie: context.cookies.get(sessionCookieName)?.value || null,
          setCookie: (cookie) => {
            context.cookies.set(cookie.name, cookie.value, cookie.attributes);
          }
        };
        return requestContext;
      };
    };
    lucia = () => {
      return ({ args }) => args[0];
    };
  }
});

// ../../node_modules/lucia/dist/auth/adapter.js
var createAdapter;
var init_adapter = __esm({
  "../../node_modules/lucia/dist/auth/adapter.js"() {
    init_error2();
    createAdapter = (adapter) => {
      if (!("user" in adapter))
        return adapter(LuciaError);
      let userAdapter = adapter.user(LuciaError);
      let sessionAdapter = adapter.session(LuciaError);
      if ("getSessionAndUser" in userAdapter) {
        const { getSessionAndUser: _6, ...extractedUserAdapter } = userAdapter;
        userAdapter = extractedUserAdapter;
      }
      if ("getSessionAndUser" in sessionAdapter) {
        const { getSessionAndUser: _6, ...extractedSessionAdapter } = sessionAdapter;
        sessionAdapter = extractedSessionAdapter;
      }
      return {
        ...userAdapter,
        ...sessionAdapter
      };
    };
  }
});

// ../../node_modules/lucia/dist/auth/database.js
var createKeyId;
var init_database = __esm({
  "../../node_modules/lucia/dist/auth/database.js"() {
    createKeyId = (providerId, providerUserId) => {
      if (providerId.includes(":")) {
        throw new TypeError("Provider id must not include any colons (:)");
      }
      return `${providerId}:${providerUserId}`;
    };
  }
});

// ../../node_modules/lucia/dist/auth/index.js
var lucia2, validateConfiguration, Auth2;
var init_auth = __esm({
  "../../node_modules/lucia/dist/auth/index.js"() {
    init_cookie3();
    init_log();
    init_crypto();
    init_crypto();
    init_error2();
    init_cookie2();
    init_session2();
    init_request2();
    init_middleware();
    init_debug();
    init_date2();
    init_adapter();
    init_database();
    init_url();
    lucia2 = (config2) => {
      return new Auth2(config2);
    };
    validateConfiguration = (config2) => {
      const adapterProvided = config2.adapter;
      if (!adapterProvided) {
        logError('Adapter is not defined in configuration ("config.adapter")');
        process.exit(1);
      }
    };
    Auth2 = class {
      adapter;
      sessionCookieConfig;
      sessionExpiresIn;
      csrfProtection;
      env;
      passwordHash = {
        generate: generateScryptHash,
        validate: validateScryptHash
      };
      middleware = lucia();
      experimental;
      constructor(config2) {
        validateConfiguration(config2);
        this.adapter = createAdapter(config2.adapter);
        this.env = config2.env;
        this.sessionExpiresIn = {
          activePeriod: config2.sessionExpiresIn?.activePeriod ?? 1e3 * 60 * 60 * 24,
          idlePeriod: config2.sessionExpiresIn?.idlePeriod ?? 1e3 * 60 * 60 * 24 * 14
        };
        this.getUserAttributes = (databaseUser) => {
          const defaultTransform = () => {
            return {};
          };
          const transform = config2.getUserAttributes ?? defaultTransform;
          return transform(databaseUser);
        };
        this.getSessionAttributes = (databaseSession) => {
          const defaultTransform = () => {
            return {};
          };
          const transform = config2.getSessionAttributes ?? defaultTransform;
          return transform(databaseSession);
        };
        this.csrfProtection = config2.csrfProtection ?? true;
        this.sessionCookieConfig = config2.sessionCookie ?? {};
        if (config2.passwordHash) {
          this.passwordHash = config2.passwordHash;
        }
        if (config2.middleware) {
          this.middleware = config2.middleware;
        }
        this.experimental = {
          debugMode: config2.experimental?.debugMode ?? false
        };
        debug2.init(this.experimental.debugMode);
      }
      getUserAttributes;
      getSessionAttributes;
      transformDatabaseUser = (databaseUser) => {
        const attributes = this.getUserAttributes(databaseUser);
        return {
          ...attributes,
          userId: databaseUser.id
        };
      };
      transformDatabaseKey = (databaseKey) => {
        const [providerId, ...providerUserIdSegments] = databaseKey.id.split(":");
        const providerUserId = providerUserIdSegments.join(":");
        const userId = databaseKey.user_id;
        const isPasswordDefined = !!databaseKey.hashed_password;
        return {
          providerId,
          providerUserId,
          userId,
          passwordDefined: isPasswordDefined
        };
      };
      transformDatabaseSession = (databaseSession, context) => {
        const attributes = this.getSessionAttributes(databaseSession);
        const active = isWithinExpiration(databaseSession.active_expires);
        return {
          ...attributes,
          user: context.user,
          sessionId: databaseSession.id,
          activePeriodExpiresAt: new Date(Number(databaseSession.active_expires)),
          idlePeriodExpiresAt: new Date(Number(databaseSession.idle_expires)),
          state: active ? "active" : "idle",
          fresh: context.fresh
        };
      };
      getDatabaseUser = async (userId) => {
        const databaseUser = await this.adapter.getUser(userId);
        if (!databaseUser) {
          throw new LuciaError("AUTH_INVALID_USER_ID");
        }
        return databaseUser;
      };
      getDatabaseSession = async (sessionId) => {
        const databaseSession = await this.adapter.getSession(sessionId);
        if (!databaseSession) {
          debug2.session.fail("Session not found", sessionId);
          throw new LuciaError("AUTH_INVALID_SESSION_ID");
        }
        if (!isValidDatabaseSession(databaseSession)) {
          debug2.session.fail(`Session expired at ${new Date(Number(databaseSession.idle_expires))}`, sessionId);
          throw new LuciaError("AUTH_INVALID_SESSION_ID");
        }
        return databaseSession;
      };
      getDatabaseSessionAndUser = async (sessionId) => {
        if (this.adapter.getSessionAndUser) {
          const [databaseSession2, databaseUser2] = await this.adapter.getSessionAndUser(sessionId);
          if (!databaseSession2) {
            debug2.session.fail("Session not found", sessionId);
            throw new LuciaError("AUTH_INVALID_SESSION_ID");
          }
          if (!isValidDatabaseSession(databaseSession2)) {
            debug2.session.fail(`Session expired at ${new Date(Number(databaseSession2.idle_expires))}`, sessionId);
            throw new LuciaError("AUTH_INVALID_SESSION_ID");
          }
          return [databaseSession2, databaseUser2];
        }
        const databaseSession = await this.getDatabaseSession(sessionId);
        const databaseUser = await this.getDatabaseUser(databaseSession.user_id);
        return [databaseSession, databaseUser];
      };
      validateSessionIdArgument = (sessionId) => {
        if (!sessionId) {
          debug2.session.fail("Empty session id");
          throw new LuciaError("AUTH_INVALID_SESSION_ID");
        }
      };
      getNewSessionExpiration = (sessionExpiresIn) => {
        const activePeriodExpiresAt = new Date((/* @__PURE__ */ new Date()).getTime() + (sessionExpiresIn?.activePeriod ?? this.sessionExpiresIn.activePeriod));
        const idlePeriodExpiresAt = new Date(activePeriodExpiresAt.getTime() + (sessionExpiresIn?.idlePeriod ?? this.sessionExpiresIn.idlePeriod));
        return { activePeriodExpiresAt, idlePeriodExpiresAt };
      };
      getUser = async (userId) => {
        const databaseUser = await this.getDatabaseUser(userId);
        const user = this.transformDatabaseUser(databaseUser);
        return user;
      };
      createUser = async (options) => {
        const userId = options.userId ?? generateRandomString(15);
        const userAttributes = options.attributes ?? {};
        const databaseUser = {
          ...userAttributes,
          id: userId
        };
        if (options.key === null) {
          await this.adapter.setUser(databaseUser, null);
          return this.transformDatabaseUser(databaseUser);
        }
        const keyId = createKeyId(options.key.providerId, options.key.providerUserId);
        const password = options.key.password;
        const hashedPassword = password === null ? null : await this.passwordHash.generate(password);
        await this.adapter.setUser(databaseUser, {
          id: keyId,
          user_id: userId,
          hashed_password: hashedPassword
        });
        return this.transformDatabaseUser(databaseUser);
      };
      updateUserAttributes = async (userId, attributes) => {
        await this.adapter.updateUser(userId, attributes);
        return await this.getUser(userId);
      };
      deleteUser = async (userId) => {
        await this.adapter.deleteSessionsByUserId(userId);
        await this.adapter.deleteKeysByUserId(userId);
        await this.adapter.deleteUser(userId);
      };
      useKey = async (providerId, providerUserId, password) => {
        const keyId = createKeyId(providerId, providerUserId);
        const databaseKey = await this.adapter.getKey(keyId);
        if (!databaseKey) {
          debug2.key.fail("Key not found", keyId);
          throw new LuciaError("AUTH_INVALID_KEY_ID");
        }
        const hashedPassword = databaseKey.hashed_password;
        if (hashedPassword !== null) {
          debug2.key.info("Key includes password");
          if (!password) {
            debug2.key.fail("Key password not provided", keyId);
            throw new LuciaError("AUTH_INVALID_PASSWORD");
          }
          const validPassword = await this.passwordHash.validate(password, hashedPassword);
          if (!validPassword) {
            debug2.key.fail("Incorrect key password", password);
            throw new LuciaError("AUTH_INVALID_PASSWORD");
          }
          debug2.key.notice("Validated key password");
        } else {
          if (password !== null) {
            debug2.key.fail("Incorrect key password", password);
            throw new LuciaError("AUTH_INVALID_PASSWORD");
          }
          debug2.key.info("No password included in key");
        }
        debug2.key.success("Validated key", keyId);
        return this.transformDatabaseKey(databaseKey);
      };
      getSession = async (sessionId) => {
        this.validateSessionIdArgument(sessionId);
        const [databaseSession, databaseUser] = await this.getDatabaseSessionAndUser(sessionId);
        const user = this.transformDatabaseUser(databaseUser);
        return this.transformDatabaseSession(databaseSession, {
          user,
          fresh: false
        });
      };
      getAllUserSessions = async (userId) => {
        const [user, databaseSessions] = await Promise.all([
          this.getUser(userId),
          await this.adapter.getSessionsByUserId(userId)
        ]);
        const validStoredUserSessions = databaseSessions.filter((databaseSession) => {
          return isValidDatabaseSession(databaseSession);
        }).map((databaseSession) => {
          return this.transformDatabaseSession(databaseSession, {
            user,
            fresh: false
          });
        });
        return validStoredUserSessions;
      };
      validateSession = async (sessionId) => {
        this.validateSessionIdArgument(sessionId);
        const [databaseSession, databaseUser] = await this.getDatabaseSessionAndUser(sessionId);
        const user = this.transformDatabaseUser(databaseUser);
        const session2 = this.transformDatabaseSession(databaseSession, {
          user,
          fresh: false
        });
        if (session2.state === "active") {
          debug2.session.success("Validated session", session2.sessionId);
          return session2;
        }
        const { activePeriodExpiresAt, idlePeriodExpiresAt } = this.getNewSessionExpiration();
        await this.adapter.updateSession(session2.sessionId, {
          active_expires: activePeriodExpiresAt.getTime(),
          idle_expires: idlePeriodExpiresAt.getTime()
        });
        const renewedDatabaseSession = {
          ...session2,
          idlePeriodExpiresAt,
          activePeriodExpiresAt,
          fresh: true
        };
        return renewedDatabaseSession;
      };
      createSession = async (options) => {
        const { activePeriodExpiresAt, idlePeriodExpiresAt } = this.getNewSessionExpiration();
        const userId = options.userId;
        const sessionId = options?.sessionId ?? generateRandomString(40);
        const attributes = options.attributes;
        const databaseSession = {
          ...attributes,
          id: sessionId,
          user_id: userId,
          active_expires: activePeriodExpiresAt.getTime(),
          idle_expires: idlePeriodExpiresAt.getTime()
        };
        const [user] = await Promise.all([
          this.getUser(userId),
          this.adapter.setSession(databaseSession)
        ]);
        return this.transformDatabaseSession(databaseSession, {
          user,
          fresh: false
        });
      };
      updateSessionAttributes = async (sessionId, attributes) => {
        this.validateSessionIdArgument(sessionId);
        await this.adapter.updateSession(sessionId, attributes);
        return this.getSession(sessionId);
      };
      invalidateSession = async (sessionId) => {
        this.validateSessionIdArgument(sessionId);
        await this.adapter.deleteSession(sessionId);
        debug2.session.notice("Invalidated session", sessionId);
      };
      invalidateAllUserSessions = async (userId) => {
        await this.adapter.deleteSessionsByUserId(userId);
      };
      deleteDeadUserSessions = async (userId) => {
        const databaseSessions = await this.adapter.getSessionsByUserId(userId);
        const deadSessionIds = databaseSessions.filter((databaseSession) => {
          return !isValidDatabaseSession(databaseSession);
        }).map((databaseSession) => databaseSession.id);
        await Promise.all(deadSessionIds.map((deadSessionId) => {
          this.adapter.deleteSession(deadSessionId);
        }));
      };
      /**
       * @deprecated To be removed in next major release
       */
      validateRequestOrigin = (request) => {
        if (request.method === null) {
          debug2.request.fail("Request method unavailable");
          throw new LuciaError("AUTH_INVALID_REQUEST");
        }
        if (request.url === null) {
          debug2.request.fail("Request url unavailable");
          throw new LuciaError("AUTH_INVALID_REQUEST");
        }
        if (request.method.toUpperCase() !== "GET" && request.method.toUpperCase() !== "HEAD") {
          const requestOrigin = request.headers.origin;
          if (!requestOrigin) {
            debug2.request.fail("No request origin available");
            throw new LuciaError("AUTH_INVALID_REQUEST");
          }
          try {
            const url = safeParseUrl(request.url);
            const allowedSubDomains = typeof this.csrfProtection === "object" ? this.csrfProtection.allowedSubDomains ?? [] : [];
            if (url === null || !isAllowedOrigin(requestOrigin, url.origin, allowedSubDomains)) {
              throw new LuciaError("AUTH_INVALID_REQUEST");
            }
            debug2.request.info("Valid request origin", requestOrigin);
          } catch {
            debug2.request.fail("Invalid origin string", requestOrigin);
            throw new LuciaError("AUTH_INVALID_REQUEST");
          }
        } else {
          debug2.request.notice("Skipping CSRF check");
        }
      };
      readSessionCookie = (cookieHeader) => {
        if (!cookieHeader) {
          debug2.request.info("No session cookie found");
          return null;
        }
        const cookies = parseCookie2(cookieHeader);
        const sessionCookieName = this.sessionCookieConfig.name ?? DEFAULT_SESSION_COOKIE_NAME;
        const sessionId = cookies[sessionCookieName] ?? null;
        if (sessionId) {
          debug2.request.info("Found session cookie", sessionId);
        } else {
          debug2.request.info("No session cookie found");
        }
        return sessionId;
      };
      readBearerToken = (authorizationHeader) => {
        if (!authorizationHeader) {
          debug2.request.info("No token found in authorization header");
          return null;
        }
        const [authScheme, token] = authorizationHeader.split(" ");
        if (authScheme !== "Bearer") {
          debug2.request.fail("Invalid authorization header auth scheme", authScheme);
          return null;
        }
        return token ?? null;
      };
      handleRequest = (...args) => {
        const middleware = this.middleware;
        const sessionCookieName = this.sessionCookieConfig.name ?? DEFAULT_SESSION_COOKIE_NAME;
        return new AuthRequest(this, {
          csrfProtection: this.csrfProtection,
          requestContext: transformRequestContext(middleware({
            args,
            env: this.env,
            sessionCookieName
          }))
        });
      };
      createSessionCookie = (session2) => {
        return createSessionCookie(session2, {
          env: this.env,
          cookie: this.sessionCookieConfig
        });
      };
      createKey = async (options) => {
        const keyId = createKeyId(options.providerId, options.providerUserId);
        let hashedPassword = null;
        if (options.password !== null) {
          hashedPassword = await this.passwordHash.generate(options.password);
        }
        const userId = options.userId;
        await this.adapter.setKey({
          id: keyId,
          user_id: userId,
          hashed_password: hashedPassword
        });
        return {
          providerId: options.providerId,
          providerUserId: options.providerUserId,
          passwordDefined: !!options.password,
          userId
        };
      };
      deleteKey = async (providerId, providerUserId) => {
        const keyId = createKeyId(providerId, providerUserId);
        await this.adapter.deleteKey(keyId);
      };
      getKey = async (providerId, providerUserId) => {
        const keyId = createKeyId(providerId, providerUserId);
        const databaseKey = await this.adapter.getKey(keyId);
        if (!databaseKey) {
          throw new LuciaError("AUTH_INVALID_KEY_ID");
        }
        const key = this.transformDatabaseKey(databaseKey);
        return key;
      };
      getAllUserKeys = async (userId) => {
        const [databaseKeys] = await Promise.all([
          await this.adapter.getKeysByUserId(userId),
          this.getUser(userId)
        ]);
        return databaseKeys.map((databaseKey) => this.transformDatabaseKey(databaseKey));
      };
      updateKeyPassword = async (providerId, providerUserId, password) => {
        const keyId = createKeyId(providerId, providerUserId);
        const hashedPassword = password === null ? null : await this.passwordHash.generate(password);
        await this.adapter.updateKey(keyId, {
          hashed_password: hashedPassword
        });
        return await this.getKey(providerId, providerUserId);
      };
    };
  }
});

// ../../node_modules/lucia/dist/index.js
var init_dist4 = __esm({
  "../../node_modules/lucia/dist/index.js"() {
    init_auth();
    init_cookie3();
    init_error2();
    init_database();
  }
});

// dist/$server_build/chunks/pages/auth_Cs8lGpg0.mjs
var auth_Cs8lGpg0_exports = {};
__export(auth_Cs8lGpg0_exports, {
  POST: () => POST2
});
var import_edge, client, auth, POST2;
var init_auth_Cs8lGpg0 = __esm({
  "dist/$server_build/chunks/pages/auth_Cs8lGpg0.mjs"() {
    "use strict";
    init_dist3();
    import_edge = __toESM(require_edge3(), 1);
    init_entry_fetch();
    init_dist4();
    init_middleware();
    client = new import_edge.PrismaClient().$extends(withAccelerate());
    auth = lucia2({
      adapter: prismaAdapter(client, {
        user: "auth_user",
        key: "user_key",
        session: "user_session"
      }),
      getUserAttributes: (databaseUser) => {
        return {
          username: databaseUser.username
        };
      },
      middleware: astro(),
      env: "PROD"
    });
    POST2 = async ({ request }) => {
      const data = await request.formData();
      let errormsg = null;
      let payload = null;
      const action = data.get("action");
      const username = data.get("username");
      data.get("email");
      const password = data.get("password");
      switch (action) {
        case "signin":
          try {
            console.log(username, password);
            const key = await auth.useKey(
              "username",
              username,
              password
            );
            console.log(key);
            const session2 = await auth.createSession({
              userId: key.userId,
              attributes: {}
            });
            payload = session2;
          } catch (error2) {
            console.log(error2);
            errormsg = error2.message;
          }
          break;
        case "signup":
          try {
            const user = await auth.createUser({
              key: {
                providerId: "username",
                providerUserId: username.toLowerCase(),
                password
              },
              attributes: {}
            });
          } catch (error2) {
            console.log(error2);
            errormsg = error2.message;
          }
          break;
      }
      if (errormsg) {
        return new Response(
          JSON.stringify({
            message: errormsg,
            success: false
          }),
          { status: 400 }
        );
      }
      return new Response(
        JSON.stringify({
          message: "Success!",
          success: true,
          payload
        }),
        { status: 200 }
      );
    };
  }
});

// dist/$server_build/chunks/auth_niIWXyKg.mjs
var auth_niIWXyKg_exports = {};
__export(auth_niIWXyKg_exports, {
  page: () => page3,
  renderers: () => renderers
});
var page3;
var init_auth_niIWXyKg = __esm({
  "dist/$server_build/chunks/auth_niIWXyKg.mjs"() {
    "use strict";
    init_renderers();
    page3 = () => Promise.resolve().then(() => (init_auth_Cs8lGpg0(), auth_Cs8lGpg0_exports));
  }
});

// ../../node_modules/tiny-inflate/index.js
var require_tiny_inflate = __commonJS({
  "../../node_modules/tiny-inflate/index.js"(exports2, module) {
    var TINF_OK = 0;
    var TINF_DATA_ERROR = -3;
    function Tree() {
      this.table = new Uint16Array(16);
      this.trans = new Uint16Array(288);
    }
    function Data(source, dest) {
      this.source = source;
      this.sourceIndex = 0;
      this.tag = 0;
      this.bitcount = 0;
      this.dest = dest;
      this.destLen = 0;
      this.ltree = new Tree();
      this.dtree = new Tree();
    }
    var sltree = new Tree();
    var sdtree = new Tree();
    var length_bits = new Uint8Array(30);
    var length_base = new Uint16Array(30);
    var dist_bits = new Uint8Array(30);
    var dist_base = new Uint16Array(30);
    var clcidx = new Uint8Array([
      16,
      17,
      18,
      0,
      8,
      7,
      9,
      6,
      10,
      5,
      11,
      4,
      12,
      3,
      13,
      2,
      14,
      1,
      15
    ]);
    var code_tree = new Tree();
    var lengths = new Uint8Array(288 + 32);
    function tinf_build_bits_base(bits2, base, delta, first) {
      var i3, sum;
      for (i3 = 0; i3 < delta; ++i3)
        bits2[i3] = 0;
      for (i3 = 0; i3 < 30 - delta; ++i3)
        bits2[i3 + delta] = i3 / delta | 0;
      for (sum = first, i3 = 0; i3 < 30; ++i3) {
        base[i3] = sum;
        sum += 1 << bits2[i3];
      }
    }
    function tinf_build_fixed_trees(lt2, dt3) {
      var i3;
      for (i3 = 0; i3 < 7; ++i3)
        lt2.table[i3] = 0;
      lt2.table[7] = 24;
      lt2.table[8] = 152;
      lt2.table[9] = 112;
      for (i3 = 0; i3 < 24; ++i3)
        lt2.trans[i3] = 256 + i3;
      for (i3 = 0; i3 < 144; ++i3)
        lt2.trans[24 + i3] = i3;
      for (i3 = 0; i3 < 8; ++i3)
        lt2.trans[24 + 144 + i3] = 280 + i3;
      for (i3 = 0; i3 < 112; ++i3)
        lt2.trans[24 + 144 + 8 + i3] = 144 + i3;
      for (i3 = 0; i3 < 5; ++i3)
        dt3.table[i3] = 0;
      dt3.table[5] = 32;
      for (i3 = 0; i3 < 32; ++i3)
        dt3.trans[i3] = i3;
    }
    var offs = new Uint16Array(16);
    function tinf_build_tree(t2, lengths2, off, num) {
      var i3, sum;
      for (i3 = 0; i3 < 16; ++i3)
        t2.table[i3] = 0;
      for (i3 = 0; i3 < num; ++i3)
        t2.table[lengths2[off + i3]]++;
      t2.table[0] = 0;
      for (sum = 0, i3 = 0; i3 < 16; ++i3) {
        offs[i3] = sum;
        sum += t2.table[i3];
      }
      for (i3 = 0; i3 < num; ++i3) {
        if (lengths2[off + i3])
          t2.trans[offs[lengths2[off + i3]]++] = i3;
      }
    }
    function tinf_getbit(d5) {
      if (!d5.bitcount--) {
        d5.tag = d5.source[d5.sourceIndex++];
        d5.bitcount = 7;
      }
      var bit = d5.tag & 1;
      d5.tag >>>= 1;
      return bit;
    }
    function tinf_read_bits(d5, num, base) {
      if (!num)
        return base;
      while (d5.bitcount < 24) {
        d5.tag |= d5.source[d5.sourceIndex++] << d5.bitcount;
        d5.bitcount += 8;
      }
      var val = d5.tag & 65535 >>> 16 - num;
      d5.tag >>>= num;
      d5.bitcount -= num;
      return val + base;
    }
    function tinf_decode_symbol(d5, t2) {
      while (d5.bitcount < 24) {
        d5.tag |= d5.source[d5.sourceIndex++] << d5.bitcount;
        d5.bitcount += 8;
      }
      var sum = 0, cur = 0, len = 0;
      var tag = d5.tag;
      do {
        cur = 2 * cur + (tag & 1);
        tag >>>= 1;
        ++len;
        sum += t2.table[len];
        cur -= t2.table[len];
      } while (cur >= 0);
      d5.tag = tag;
      d5.bitcount -= len;
      return t2.trans[sum + cur];
    }
    function tinf_decode_trees(d5, lt2, dt3) {
      var hlit, hdist, hclen;
      var i3, num, length;
      hlit = tinf_read_bits(d5, 5, 257);
      hdist = tinf_read_bits(d5, 5, 1);
      hclen = tinf_read_bits(d5, 4, 4);
      for (i3 = 0; i3 < 19; ++i3)
        lengths[i3] = 0;
      for (i3 = 0; i3 < hclen; ++i3) {
        var clen = tinf_read_bits(d5, 3, 0);
        lengths[clcidx[i3]] = clen;
      }
      tinf_build_tree(code_tree, lengths, 0, 19);
      for (num = 0; num < hlit + hdist; ) {
        var sym = tinf_decode_symbol(d5, code_tree);
        switch (sym) {
          case 16:
            var prev = lengths[num - 1];
            for (length = tinf_read_bits(d5, 2, 3); length; --length) {
              lengths[num++] = prev;
            }
            break;
          case 17:
            for (length = tinf_read_bits(d5, 3, 3); length; --length) {
              lengths[num++] = 0;
            }
            break;
          case 18:
            for (length = tinf_read_bits(d5, 7, 11); length; --length) {
              lengths[num++] = 0;
            }
            break;
          default:
            lengths[num++] = sym;
            break;
        }
      }
      tinf_build_tree(lt2, lengths, 0, hlit);
      tinf_build_tree(dt3, lengths, hlit, hdist);
    }
    function tinf_inflate_block_data(d5, lt2, dt3) {
      while (1) {
        var sym = tinf_decode_symbol(d5, lt2);
        if (sym === 256) {
          return TINF_OK;
        }
        if (sym < 256) {
          d5.dest[d5.destLen++] = sym;
        } else {
          var length, dist, offs2;
          var i3;
          sym -= 257;
          length = tinf_read_bits(d5, length_bits[sym], length_base[sym]);
          dist = tinf_decode_symbol(d5, dt3);
          offs2 = d5.destLen - tinf_read_bits(d5, dist_bits[dist], dist_base[dist]);
          for (i3 = offs2; i3 < offs2 + length; ++i3) {
            d5.dest[d5.destLen++] = d5.dest[i3];
          }
        }
      }
    }
    function tinf_inflate_uncompressed_block(d5) {
      var length, invlength;
      var i3;
      while (d5.bitcount > 8) {
        d5.sourceIndex--;
        d5.bitcount -= 8;
      }
      length = d5.source[d5.sourceIndex + 1];
      length = 256 * length + d5.source[d5.sourceIndex];
      invlength = d5.source[d5.sourceIndex + 3];
      invlength = 256 * invlength + d5.source[d5.sourceIndex + 2];
      if (length !== (~invlength & 65535))
        return TINF_DATA_ERROR;
      d5.sourceIndex += 4;
      for (i3 = length; i3; --i3)
        d5.dest[d5.destLen++] = d5.source[d5.sourceIndex++];
      d5.bitcount = 0;
      return TINF_OK;
    }
    function tinf_uncompress(source, dest) {
      var d5 = new Data(source, dest);
      var bfinal, btype, res;
      do {
        bfinal = tinf_getbit(d5);
        btype = tinf_read_bits(d5, 2, 0);
        switch (btype) {
          case 0:
            res = tinf_inflate_uncompressed_block(d5);
            break;
          case 1:
            res = tinf_inflate_block_data(d5, sltree, sdtree);
            break;
          case 2:
            tinf_decode_trees(d5, d5.ltree, d5.dtree);
            res = tinf_inflate_block_data(d5, d5.ltree, d5.dtree);
            break;
          default:
            res = TINF_DATA_ERROR;
        }
        if (res !== TINF_OK)
          throw new Error("Data error");
      } while (!bfinal);
      if (d5.destLen < d5.dest.length) {
        if (typeof d5.dest.slice === "function")
          return d5.dest.slice(0, d5.destLen);
        else
          return d5.dest.subarray(0, d5.destLen);
      }
      return d5.dest;
    }
    tinf_build_fixed_trees(sltree, sdtree);
    tinf_build_bits_base(length_bits, length_base, 4, 3);
    tinf_build_bits_base(dist_bits, dist_base, 2, 1);
    length_bits[28] = 0;
    length_base[28] = 258;
    module.exports = tinf_uncompress;
  }
});

// ../../node_modules/unicode-trie/swap.js
var require_swap = __commonJS({
  "../../node_modules/unicode-trie/swap.js"(exports2, module) {
    var isBigEndian = new Uint8Array(new Uint32Array([305419896]).buffer)[0] === 18;
    var swap = (b5, n3, m4) => {
      let i3 = b5[n3];
      b5[n3] = b5[m4];
      b5[m4] = i3;
    };
    var swap32 = (array) => {
      const len = array.length;
      for (let i3 = 0; i3 < len; i3 += 4) {
        swap(array, i3, i3 + 3);
        swap(array, i3 + 1, i3 + 2);
      }
    };
    var swap32LE = (array) => {
      if (isBigEndian) {
        swap32(array);
      }
    };
    module.exports = {
      swap32LE
    };
  }
});

// ../../node_modules/unicode-trie/index.js
var require_unicode_trie = __commonJS({
  "../../node_modules/unicode-trie/index.js"(exports2, module) {
    var inflate = require_tiny_inflate();
    var { swap32LE } = require_swap();
    var SHIFT_1 = 6 + 5;
    var SHIFT_2 = 5;
    var SHIFT_1_2 = SHIFT_1 - SHIFT_2;
    var OMITTED_BMP_INDEX_1_LENGTH = 65536 >> SHIFT_1;
    var INDEX_2_BLOCK_LENGTH = 1 << SHIFT_1_2;
    var INDEX_2_MASK = INDEX_2_BLOCK_LENGTH - 1;
    var INDEX_SHIFT = 2;
    var DATA_BLOCK_LENGTH = 1 << SHIFT_2;
    var DATA_MASK = DATA_BLOCK_LENGTH - 1;
    var LSCP_INDEX_2_OFFSET = 65536 >> SHIFT_2;
    var LSCP_INDEX_2_LENGTH = 1024 >> SHIFT_2;
    var INDEX_2_BMP_LENGTH = LSCP_INDEX_2_OFFSET + LSCP_INDEX_2_LENGTH;
    var UTF8_2B_INDEX_2_OFFSET = INDEX_2_BMP_LENGTH;
    var UTF8_2B_INDEX_2_LENGTH = 2048 >> 6;
    var INDEX_1_OFFSET = UTF8_2B_INDEX_2_OFFSET + UTF8_2B_INDEX_2_LENGTH;
    var DATA_GRANULARITY = 1 << INDEX_SHIFT;
    var UnicodeTrie = class {
      constructor(data) {
        const isBuffer = typeof data.readUInt32BE === "function" && typeof data.slice === "function";
        if (isBuffer || data instanceof Uint8Array) {
          let uncompressedLength;
          if (isBuffer) {
            this.highStart = data.readUInt32LE(0);
            this.errorValue = data.readUInt32LE(4);
            uncompressedLength = data.readUInt32LE(8);
            data = data.slice(12);
          } else {
            const view = new DataView(data.buffer);
            this.highStart = view.getUint32(0, true);
            this.errorValue = view.getUint32(4, true);
            uncompressedLength = view.getUint32(8, true);
            data = data.subarray(12);
          }
          data = inflate(data, new Uint8Array(uncompressedLength));
          data = inflate(data, new Uint8Array(uncompressedLength));
          swap32LE(data);
          this.data = new Uint32Array(data.buffer);
        } else {
          ({ data: this.data, highStart: this.highStart, errorValue: this.errorValue } = data);
        }
      }
      get(codePoint) {
        let index;
        if (codePoint < 0 || codePoint > 1114111) {
          return this.errorValue;
        }
        if (codePoint < 55296 || codePoint > 56319 && codePoint <= 65535) {
          index = (this.data[codePoint >> SHIFT_2] << INDEX_SHIFT) + (codePoint & DATA_MASK);
          return this.data[index];
        }
        if (codePoint <= 65535) {
          index = (this.data[LSCP_INDEX_2_OFFSET + (codePoint - 55296 >> SHIFT_2)] << INDEX_SHIFT) + (codePoint & DATA_MASK);
          return this.data[index];
        }
        if (codePoint < this.highStart) {
          index = this.data[INDEX_1_OFFSET - OMITTED_BMP_INDEX_1_LENGTH + (codePoint >> SHIFT_1)];
          index = this.data[index + (codePoint >> SHIFT_2 & INDEX_2_MASK)];
          index = (index << INDEX_SHIFT) + (codePoint & DATA_MASK);
          return this.data[index];
        }
        return this.data[this.data.length - DATA_GRANULARITY];
      }
    };
    module.exports = UnicodeTrie;
  }
});

// ../../node_modules/linebreak/node_modules/base64-js/lib/b64.js
var require_b64 = __commonJS({
  "../../node_modules/linebreak/node_modules/base64-js/lib/b64.js"(exports2) {
    var lookup2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
    (function(exports3) {
      "use strict";
      var Arr = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
      var PLUS = "+".charCodeAt(0);
      var SLASH = "/".charCodeAt(0);
      var NUMBER = "0".charCodeAt(0);
      var LOWER = "a".charCodeAt(0);
      var UPPER = "A".charCodeAt(0);
      var PLUS_URL_SAFE = "-".charCodeAt(0);
      var SLASH_URL_SAFE = "_".charCodeAt(0);
      function decode5(elt) {
        var code = elt.charCodeAt(0);
        if (code === PLUS || code === PLUS_URL_SAFE)
          return 62;
        if (code === SLASH || code === SLASH_URL_SAFE)
          return 63;
        if (code < NUMBER)
          return -1;
        if (code < NUMBER + 10)
          return code - NUMBER + 26 + 26;
        if (code < UPPER + 26)
          return code - UPPER;
        if (code < LOWER + 26)
          return code - LOWER + 26;
      }
      function b64ToByteArray(b64) {
        var i3, j5, l3, tmp, placeHolders, arr;
        if (b64.length % 4 > 0) {
          throw new Error("Invalid string. Length must be a multiple of 4");
        }
        var len = b64.length;
        placeHolders = "=" === b64.charAt(len - 2) ? 2 : "=" === b64.charAt(len - 1) ? 1 : 0;
        arr = new Arr(b64.length * 3 / 4 - placeHolders);
        l3 = placeHolders > 0 ? b64.length - 4 : b64.length;
        var L5 = 0;
        function push(v4) {
          arr[L5++] = v4;
        }
        for (i3 = 0, j5 = 0; i3 < l3; i3 += 4, j5 += 3) {
          tmp = decode5(b64.charAt(i3)) << 18 | decode5(b64.charAt(i3 + 1)) << 12 | decode5(b64.charAt(i3 + 2)) << 6 | decode5(b64.charAt(i3 + 3));
          push((tmp & 16711680) >> 16);
          push((tmp & 65280) >> 8);
          push(tmp & 255);
        }
        if (placeHolders === 2) {
          tmp = decode5(b64.charAt(i3)) << 2 | decode5(b64.charAt(i3 + 1)) >> 4;
          push(tmp & 255);
        } else if (placeHolders === 1) {
          tmp = decode5(b64.charAt(i3)) << 10 | decode5(b64.charAt(i3 + 1)) << 4 | decode5(b64.charAt(i3 + 2)) >> 2;
          push(tmp >> 8 & 255);
          push(tmp & 255);
        }
        return arr;
      }
      function uint8ToBase64(uint8) {
        var i3, extraBytes = uint8.length % 3, output = "", temp, length;
        function encode4(num) {
          return lookup2.charAt(num);
        }
        function tripletToBase64(num) {
          return encode4(num >> 18 & 63) + encode4(num >> 12 & 63) + encode4(num >> 6 & 63) + encode4(num & 63);
        }
        for (i3 = 0, length = uint8.length - extraBytes; i3 < length; i3 += 3) {
          temp = (uint8[i3] << 16) + (uint8[i3 + 1] << 8) + uint8[i3 + 2];
          output += tripletToBase64(temp);
        }
        switch (extraBytes) {
          case 1:
            temp = uint8[uint8.length - 1];
            output += encode4(temp >> 2);
            output += encode4(temp << 4 & 63);
            output += "==";
            break;
          case 2:
            temp = (uint8[uint8.length - 2] << 8) + uint8[uint8.length - 1];
            output += encode4(temp >> 10);
            output += encode4(temp >> 4 & 63);
            output += encode4(temp << 2 & 63);
            output += "=";
            break;
        }
        return output;
      }
      exports3.toByteArray = b64ToByteArray;
      exports3.fromByteArray = uint8ToBase64;
    })(typeof exports2 === "undefined" ? exports2.base64js = {} : exports2);
  }
});

// ../../node_modules/linebreak/dist/module.mjs
var import_unicode_trie, import_base64_js, $557adaaeb0c7885f$exports, $1627905f8be2ef3f$export$fb4028874a74450, $1627905f8be2ef3f$export$1bb1140fe1358b00, $1627905f8be2ef3f$export$f3e416a182673355, $1627905f8be2ef3f$export$24aa617c849a894a, $1627905f8be2ef3f$export$a73c4d14459b698d, $1627905f8be2ef3f$export$9e5d732f3676a9ba, $1627905f8be2ef3f$export$1dff41d5c0caca01, $1627905f8be2ef3f$export$30a74a373318dec6, $1627905f8be2ef3f$export$d710c5f50fc7496a, $1627905f8be2ef3f$export$66498d28055820a9, $1627905f8be2ef3f$export$eb6c6d0b7c8826f2, $1627905f8be2ef3f$export$de92be486109a1df, $1627905f8be2ef3f$export$606cfc2a8896c91f, $1627905f8be2ef3f$export$e51d3c675bb0140d, $1627905f8be2ef3f$export$da51c6332ad11d7b, $1627905f8be2ef3f$export$bea437c40441867d, $1627905f8be2ef3f$export$c4c7eecbfed13dc9, $1627905f8be2ef3f$export$98e1f8a379849661, $32627af916ac1b00$export$98f50d781a474745, $32627af916ac1b00$export$12ee1f8f5315ca7e, $32627af916ac1b00$export$e4965ce242860454, $32627af916ac1b00$export$8f14048969dcd45e, $32627af916ac1b00$export$133eb141bf58aff4, $32627af916ac1b00$export$5bdb8ccbf5c57afc, $557adaaeb0c7885f$var$data, $557adaaeb0c7885f$var$classTrie, $557adaaeb0c7885f$var$mapClass, $557adaaeb0c7885f$var$mapFirst, $557adaaeb0c7885f$var$Break, $557adaaeb0c7885f$var$LineBreaker;
var init_module = __esm({
  "../../node_modules/linebreak/dist/module.mjs"() {
    import_unicode_trie = __toESM(require_unicode_trie(), 1);
    import_base64_js = __toESM(require_b64(), 1);
    $557adaaeb0c7885f$exports = {};
    $1627905f8be2ef3f$export$fb4028874a74450 = 5;
    $1627905f8be2ef3f$export$1bb1140fe1358b00 = 12;
    $1627905f8be2ef3f$export$f3e416a182673355 = 13;
    $1627905f8be2ef3f$export$24aa617c849a894a = 16;
    $1627905f8be2ef3f$export$a73c4d14459b698d = 17;
    $1627905f8be2ef3f$export$9e5d732f3676a9ba = 22;
    $1627905f8be2ef3f$export$1dff41d5c0caca01 = 28;
    $1627905f8be2ef3f$export$30a74a373318dec6 = 31;
    $1627905f8be2ef3f$export$d710c5f50fc7496a = 33;
    $1627905f8be2ef3f$export$66498d28055820a9 = 34;
    $1627905f8be2ef3f$export$eb6c6d0b7c8826f2 = 35;
    $1627905f8be2ef3f$export$de92be486109a1df = 36;
    $1627905f8be2ef3f$export$606cfc2a8896c91f = 37;
    $1627905f8be2ef3f$export$e51d3c675bb0140d = 38;
    $1627905f8be2ef3f$export$da51c6332ad11d7b = 39;
    $1627905f8be2ef3f$export$bea437c40441867d = 40;
    $1627905f8be2ef3f$export$c4c7eecbfed13dc9 = 41;
    $1627905f8be2ef3f$export$98e1f8a379849661 = 42;
    $32627af916ac1b00$export$98f50d781a474745 = 0;
    $32627af916ac1b00$export$12ee1f8f5315ca7e = 1;
    $32627af916ac1b00$export$e4965ce242860454 = 2;
    $32627af916ac1b00$export$8f14048969dcd45e = 3;
    $32627af916ac1b00$export$133eb141bf58aff4 = 4;
    $32627af916ac1b00$export$5bdb8ccbf5c57afc = [
      //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
      [
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$8f14048969dcd45e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ],
      [
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$e4965ce242860454,
        $32627af916ac1b00$export$133eb141bf58aff4,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$98f50d781a474745,
        $32627af916ac1b00$export$12ee1f8f5315ca7e,
        $32627af916ac1b00$export$98f50d781a474745
      ]
      // CB
    ];
    $557adaaeb0c7885f$var$data = import_base64_js.default.toByteArray("AAgOAAAAAAAQ4QAAAQ0P8vDtnQuMXUUZx+eyu7d7797d9m5bHoWltKVUlsjLWE0VJNigQoMVqkStEoNQQUl5GIo1KKmogEgqkKbBRki72lYabZMGKoGAjQRtJJDaCCIRiiigREBQS3z+xzOTnZ3O+3HOhd5NfpkzZx7fN9988zivu2M9hGwB28F94DnwEngd/Asc1EtIs9c/bIPDwCxwLDgezHcodyo4w5C+CCwBS8FnwSXgCnA1uFbI93XwbXAbWAfWgx+CzWAb+An4KfgFeAzsYWWfYuFz4CXwGvgb+Dfo6yNkEEwGh4CZYB44FpwI3g1OY+kfBItZOo2fB84Hy8DF4HJwNbiWpV8PVoO1LH4n2NRXyN+KcAd4kNVP9XsY4aPgcfAbsBfs6SniL4K/sPjfEf6HlanXCRkCw2BGvUh/keWfXS/CY+pFXs7x9XHmM94LTmWIeU2cgbxnS/k/B3kf86jDhU8L9V2E40vAFWAlWFUfb++NOL4F3C7JX4/4GiE+hvgWsF0oS7mXldspnN+F493gyXrh9xTav0cg3EvzgVfBG6wsmVSEkxBOBgdPGpd7JI6PnqRvJ68/xlbHof53gPeA94OzwLngk+ACsAwsByvASrAK3MB0Ws3CtQjvBJvAVrADPMDSHkb4CNijaccTwvnf4fiPEs8Lxy+D18A/QU8/xjgYBjPAbDAKTgYLwOngTHAO+EQ/8wuEF4EvsPiVCFf2+9tsFStzA8LVHuXXBsi6QyqzUYiPMR/7Mc7dAx7oL8bzw/3u/Bw8Bp4Az4AXwCtgHzsmDXP5fiF9iiVvly5d0sHngar16NKlS5cuXbp06fLmYlqHXrcd3ph4P0THUY3iXh49novju4S0tzfs5d+JPKewfAsRntZb3K9ZhOMlrO6lCC8An28U9+OuovcPcPxlVu5rCL/VmHh/iHIrzn3fIPu7SN8Axmg+8AOwEWwCm7tp3bRuWjetm5Y8bSu4B9zbKO6ZVsnORrVU3f4uXTqZ2H3sLoyx3eDXjfDndE9qyj6L838CfwVvgFpzYnof4oNgOhgBc8Fos9DrZIQLmtXPP1MmF6wGj4H+KXoWguvADkXaPil+YpuQy8Am8Ey7ODdtmJDF4HowBp4De6HDTNjhfHAHeBr0DBBy0kDxfPbcgSIusgrcWhtnJ8vL+TPix7UIOQtcBq4C28Cr4KRBnANbwSuDE+s50JgyNNFuXbp06XIgsXjIvPafjvXozKY+fVFz/z0LT1uCtKVSWbrOLWPnztG8e0Xfy7ol8XtZJi7WtG+5od2UFXQ/A12vUeS7jp27yVKHjdsU9lXB869TyNvAzt0lpP2oWbwLdjiO78bx/Sz+EMJHwK9Y/LcIfw+eZ3F67/Hl5vh9xX80J+rwX8SvRDhpgL17iPAQMHNArfPrqHPewLheI+AERV6efwV418B4nOZ/H+IfYHV8GOF5LJ3eAz0fx8sM9S0fUNud39O9CulfGZhY5huI3wzWgNvBelbHZoTbNPVpfYjKQpkHwUNgl0LWblbnk0LbbDxr0OMFpL3iqWdu9nWYPlVAWkXY39LnGdCkDbeqv1YNbfcMQ3t9oe8lzm6NH9N1ZB6Ln4BwfkJZJk7RyFnYKt6b/JDQXx9p5X+eFdqOjzM9P9MB/lUlFzr20aXIdzlY4dmn9F3YqtvoO76/2hp/D/xA5Zue88nNyL8GbFbs075X0tyUig3Qd2MCnf//HjnzpbsR3g9+1kHzzVjdnE71/qVBX9rGPUh/ysNWe1neFzvIDi5zAufV1sT0N0poR22wkFUfTOPfA4N2mbZ5fSrqOHSw+IbkSBbOGSzSRgf91/GTUWYBOB2cIZQ/G8cfBZ8CFwrnL8XxF8FKcA24jqXdiPA7Qr61OF7H4mMItwzuv2/YLth1ISt3Hzu3k4W7EH5JqPdRHD/O4k+z8A8IX5Lq3y7Z4nXE9xn6kX6vQ4bKfy+ok+hH+xf3hq9dnTTHhjKd2GmDuWA242iHMq4cC7A8kJ7i8o1+skSa7Jieo38HCWnoNjKFhdSFBxzpZ7QE6lI8N4S14aASZcryaV/WWHw66f6NHuCoxuQxmvM56GX9QMd8Q4D65ywGP+ZzRJuM+zQvx/MOS2VFeqQ4IXnH26zM9Xe6/E6D+4foAzzuajPZp8Qyw5ayZVDWuH0z0BtYRkeIDqH9KO9VbH1btd/lhNqCzvl8zeLnG0S/hnU6baHfpiuO6yy0rd+DHURo/zYF5H26j03rQsip2ndzz82u1z9N4VjWKWeb68Tedpt95HRVXp7H1R6p+/Wt4FPy/PpWwscOLRJ+PVWF/+W0iVyGzs18TIvXkOJ1Wxm66vSXz+vylenrZcj1ub439W+K8RNCGTJi2p/TJ1K23VaXr35tRpnzmjxequgfcfyk6B/TGBVlyedsNgpdd/h+W1U3P99QyFPNo1X3TwpM/WLTIWYfoBqXrv6iskHZ/RFr79R6hIyHBrH3f1nrUVnjP8SnZZ+rYtzr9Exld5MNbPNErusAPg+77u/eDOPftU9yj39TH7rezxd1LvsZQJlzkWlOirG/79zjMj/mtHUKu7vKy+3/LnXr9okyKedjX5/0He9iP/j63LwOQdarEVlfy8OO/Lqw023j6xcqmwxLiOd6heM2i9cV9LJy8jMJ23yQ+rpbfu7EQ/pXE8KYvUSqvVnb4XzZa6LrHMXHR+zcLvqWbm/Bn0/HzIs6fWPHoat8XfnDKmZGxRxeMbn2UqZ5Q94nmcZRbqqUXbZ8+lcjE+cPX11t814orvvAXNcG8vqj2vvk1MGn3anlj0bIT72v47bvE+Lc98T9b6r7AKn6j+8Duf7D0nnZx/j7Zjn0j9nbpSTndaLr9WNLivP+iN23xF7L+fqv6ZouFyb78jxVXvv5jJ9YUs9/sddO8h7KNg5jrhfaJGztT6G7KF+1d6yCmD5Kdb2fan60rSc552fZr3zeQ9DpnPp+Si5cx5Ktv2QfSzF/mMbWdOm46rFI4XstnU9xeqX4NKb7TKEdcr6pZOK3ID1k/LvFHkVczEuZLEDr499YqvqBym1aEHWgcvoYOtv0M91qQl5TfpO/in6rWx8OVpT1Wedkv3f5xom3T/xeR/6Gx6V86PWAOB4bBpqWdN+yTcVxjIyGRz/FrDGu6w/3d7kPm8StX8RyPu+uuvpNju/vTLJV37GpvoM0oZPnW87VLnL/5pDno1NoW1R6yedU6TyUv3u19a3KFnIbTLYz+ZCLP4T0tU1uivFgso0pnsJ/UtXvarNY28Xq5cvkBDrQP/E5ZaiuQwwfmTlsOiQRU1fMuqrDd/3ISSuwjOwXOfTyGUMpZIXq4GpLn3pUcdfzch2x7XO1u2uZHOPb1G6b3Xg9PH1IIWeEpJlPQtqos2EKW8b0u8rnuP1UeVLoXJb9be0uG9nnbchjU+XTszT5VeNBThPHnc5OKj1U9aj0GTHIVaGy1YhEWT4ixns00DT+XEzWn/7VAsIc63Cov3OdyhwjrnaqQqZvWKXdypRdlq+k8msZ031U+Rm4fA+3TtyeR9hwfW9G9yxDN0fZMN33F+9TE6md4hwoxumfaUzI9fN3PFT3xVV2msrQ3UsnChm6Nulk8TndpS28D3zX9tTIPsF/z7Am5OkTjm1tI1JZW74+4VgsZ0N3L1yXV3WeP5uR7TGHHdvC3JQlxybfpd22tDlk/2eofRK8TzrN/qnar/K/OUTth6I/+jAnEptNbPvFHP2gs40N3+dfMWtwqvVct7/wfd8gtQ7imifial9ZJ9/3IHLYU6eDj3+4PhsNhX+vwvcWLnu6kGfEMe8DuciPfUfGZB8X/7HJy/Gefe5n+VRGFd/wyP2ta7/LO4yh/sbLV/k9lev6kfO9Dt/5U67b1/6u/epqB1U9Me23jfHY9sscAg4tkbLl+e4/U36rJ9ddxfd6sg5vq5ice42Wpk/pb9FOJ36/W9tpv4kbC79nUbZceX8Zu6/qJ+P3WvhvA8v3reh7Jbn2d6rrNC7XNZTLma4Ba0JI9efX2uLzF5scG/w9UNU1ZxW+ymUfzELeTllXlQ1rUuhzjS5fp9c964iFBOqeSz63bU065nZKdU+mDEz3qHIjjifquw0pnb/raRtvrnsYcb46ihT3taoYz6brdNW9l6rWRnE/navdPn1XlR1km7hcz1WlH/elKuSOSvLLuE8U6m8uzwRdfcGl73VyTHuyMvzJ1Sa2cWDTP/Z63Kc94n2B1PYr24dz1JlyHLlcP+S4B6vD1c9EW4q2LWstCvUjeVy63k/LMYdUNd5D1xQfvVTzX1VjkMsUv88N8VH5fReVn/Fjn++/h6X6Q8a6b1/q3g/i/ewi0/Scs8zxXeV6mWIOUPlPzBgdFerW+bZrm2P18dnjuK6HunEp+rHvPMXbr+sHVb/lnL+pTP57jPw9Cvk3PW178JD9qChfzuvTf7Htl38L1QUf/VKu9SFjwWbTWPvFEvu7Uq76y7+31g6QlYPc669pbsm9Xur2LWI9Pu8ypfDXqm3A2z8s1FWGn4ntL9NfQu2oSlftX9uetvTtv7J8Ql4zxfXGZ3zk8PeQ9w59x2uMfqI8/q5eKh/l9cb2rwsu9rSNl06ZP2Pmxtz+rNMx93yno0n2/82rVH7rQ+y9P15H6FyRun9ViH81ATmffI7nJ5r8uXXW6enbP6b/B8/l5OifVHYLnb9S39s2zcc+Ph+rh8+eQgVPS72elzGWY/tUtbbabBpDiI7yN1q6/4th2y+ErAc5+9BVvu/7KamJbWNZeuqI/R4tRf+YyD1HmOZM1bMV3/14Sn10c0Xu+Sj1nOXb5jL73ncdy02uvlXZNde65dOHYl7Vs4KYuS6FzWLn2zJlpZqPXPVPOa5yzKOyn1VhT9lmMfdbfH7D11Wf2PXN5h9y+dD287+qxgSnaYmnIrRtIb8pJe6/Uv9OVer6Whn0zfGO/BEloZI9ojmfAlUflClDd178bTmVHVTpZXOkAlk/lb42UujmI89HH5V+cl7XtowY6vTxLVWok6UrGzoGTHN+bB+6ri05687VNpvfuvRfaP2uMlNQth1D5JjGelm/8yn+9p3p/7qk9gnfeddXZmq/Sm333PJT659Kv1zjNbZ9uv2Oi//67CV8/N1nj1DmviyXDNVeJkaeaX8UsyesYg8cu2+NvdaPfb+lLDu5tvt/");
    $557adaaeb0c7885f$var$classTrie = new import_unicode_trie.default($557adaaeb0c7885f$var$data);
    $557adaaeb0c7885f$var$mapClass = function(c4) {
      switch (c4) {
        case $1627905f8be2ef3f$export$d710c5f50fc7496a:
          return $1627905f8be2ef3f$export$1bb1140fe1358b00;
        case $1627905f8be2ef3f$export$da51c6332ad11d7b:
        case $1627905f8be2ef3f$export$bea437c40441867d:
        case $1627905f8be2ef3f$export$98e1f8a379849661:
          return $1627905f8be2ef3f$export$1bb1140fe1358b00;
        case $1627905f8be2ef3f$export$eb6c6d0b7c8826f2:
          return $1627905f8be2ef3f$export$fb4028874a74450;
        default:
          return c4;
      }
    };
    $557adaaeb0c7885f$var$mapFirst = function(c4) {
      switch (c4) {
        case $1627905f8be2ef3f$export$606cfc2a8896c91f:
        case $1627905f8be2ef3f$export$e51d3c675bb0140d:
          return $1627905f8be2ef3f$export$66498d28055820a9;
        case $1627905f8be2ef3f$export$c4c7eecbfed13dc9:
          return $1627905f8be2ef3f$export$9e5d732f3676a9ba;
        default:
          return c4;
      }
    };
    $557adaaeb0c7885f$var$Break = class {
      constructor(position, required = false) {
        this.position = position;
        this.required = required;
      }
    };
    $557adaaeb0c7885f$var$LineBreaker = class {
      nextCodePoint() {
        const code = this.string.charCodeAt(this.pos++);
        const next = this.string.charCodeAt(this.pos);
        if (55296 <= code && code <= 56319 && 56320 <= next && next <= 57343) {
          this.pos++;
          return (code - 55296) * 1024 + (next - 56320) + 65536;
        }
        return code;
      }
      nextCharClass() {
        return $557adaaeb0c7885f$var$mapClass($557adaaeb0c7885f$var$classTrie.get(this.nextCodePoint()));
      }
      getSimpleBreak() {
        switch (this.nextClass) {
          case $1627905f8be2ef3f$export$c4c7eecbfed13dc9:
            return false;
          case $1627905f8be2ef3f$export$66498d28055820a9:
          case $1627905f8be2ef3f$export$606cfc2a8896c91f:
          case $1627905f8be2ef3f$export$e51d3c675bb0140d:
            this.curClass = $1627905f8be2ef3f$export$66498d28055820a9;
            return false;
          case $1627905f8be2ef3f$export$de92be486109a1df:
            this.curClass = $1627905f8be2ef3f$export$de92be486109a1df;
            return false;
        }
        return null;
      }
      getPairTableBreak(lastClass) {
        let shouldBreak = false;
        switch ($32627af916ac1b00$export$5bdb8ccbf5c57afc[this.curClass][this.nextClass]) {
          case $32627af916ac1b00$export$98f50d781a474745:
            shouldBreak = true;
            break;
          case $32627af916ac1b00$export$12ee1f8f5315ca7e:
            shouldBreak = lastClass === $1627905f8be2ef3f$export$c4c7eecbfed13dc9;
            break;
          case $32627af916ac1b00$export$e4965ce242860454:
            shouldBreak = lastClass === $1627905f8be2ef3f$export$c4c7eecbfed13dc9;
            if (!shouldBreak) {
              shouldBreak = false;
              return shouldBreak;
            }
            break;
          case $32627af916ac1b00$export$8f14048969dcd45e:
            if (lastClass !== $1627905f8be2ef3f$export$c4c7eecbfed13dc9)
              return shouldBreak;
            break;
          case $32627af916ac1b00$export$133eb141bf58aff4:
            break;
        }
        if (this.LB8a)
          shouldBreak = false;
        if (this.LB21a && (this.curClass === $1627905f8be2ef3f$export$24aa617c849a894a || this.curClass === $1627905f8be2ef3f$export$a73c4d14459b698d)) {
          shouldBreak = false;
          this.LB21a = false;
        } else
          this.LB21a = this.curClass === $1627905f8be2ef3f$export$f3e416a182673355;
        if (this.curClass === $1627905f8be2ef3f$export$1dff41d5c0caca01) {
          this.LB30a++;
          if (this.LB30a == 2 && this.nextClass === $1627905f8be2ef3f$export$1dff41d5c0caca01) {
            shouldBreak = true;
            this.LB30a = 0;
          }
        } else
          this.LB30a = 0;
        this.curClass = this.nextClass;
        return shouldBreak;
      }
      nextBreak() {
        if (this.curClass == null) {
          let firstClass = this.nextCharClass();
          this.curClass = $557adaaeb0c7885f$var$mapFirst(firstClass);
          this.nextClass = firstClass;
          this.LB8a = firstClass === $1627905f8be2ef3f$export$30a74a373318dec6;
          this.LB30a = 0;
        }
        while (this.pos < this.string.length) {
          this.lastPos = this.pos;
          const lastClass = this.nextClass;
          this.nextClass = this.nextCharClass();
          if (this.curClass === $1627905f8be2ef3f$export$66498d28055820a9 || this.curClass === $1627905f8be2ef3f$export$de92be486109a1df && this.nextClass !== $1627905f8be2ef3f$export$606cfc2a8896c91f) {
            this.curClass = $557adaaeb0c7885f$var$mapFirst($557adaaeb0c7885f$var$mapClass(this.nextClass));
            return new $557adaaeb0c7885f$var$Break(this.lastPos, true);
          }
          let shouldBreak = this.getSimpleBreak();
          if (shouldBreak === null)
            shouldBreak = this.getPairTableBreak(lastClass);
          this.LB8a = this.nextClass === $1627905f8be2ef3f$export$30a74a373318dec6;
          if (shouldBreak)
            return new $557adaaeb0c7885f$var$Break(this.lastPos);
        }
        if (this.lastPos < this.string.length) {
          this.lastPos = this.string.length;
          return new $557adaaeb0c7885f$var$Break(this.string.length);
        }
        return null;
      }
      constructor(string) {
        this.string = string;
        this.pos = 0;
        this.lastPos = 0;
        this.curClass = null;
        this.nextClass = null;
        this.LB8a = false;
        this.LB21a = false;
        this.LB30a = 0;
      }
    };
    $557adaaeb0c7885f$exports = $557adaaeb0c7885f$var$LineBreaker;
  }
});

// ../../node_modules/postcss-value-parser/lib/parse.js
var require_parse = __commonJS({
  "../../node_modules/postcss-value-parser/lib/parse.js"(exports2, module) {
    var openParentheses = "(".charCodeAt(0);
    var closeParentheses = ")".charCodeAt(0);
    var singleQuote = "'".charCodeAt(0);
    var doubleQuote = '"'.charCodeAt(0);
    var backslash = "\\".charCodeAt(0);
    var slash2 = "/".charCodeAt(0);
    var comma = ",".charCodeAt(0);
    var colon = ":".charCodeAt(0);
    var star = "*".charCodeAt(0);
    var uLower = "u".charCodeAt(0);
    var uUpper = "U".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var isUnicodeRange = /^[a-f0-9?-]+$/i;
    module.exports = function(input) {
      var tokens = [];
      var value = input;
      var next, quote, prev, token, escape2, escapePos, whitespacePos, parenthesesOpenPos;
      var pos = 0;
      var code = value.charCodeAt(pos);
      var max2 = value.length;
      var stack = [{ nodes: tokens }];
      var balanced = 0;
      var parent;
      var name = "";
      var before = "";
      var after = "";
      while (pos < max2) {
        if (code <= 32) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          token = value.slice(pos, next);
          prev = tokens[tokens.length - 1];
          if (code === closeParentheses && balanced) {
            after = token;
          } else if (prev && prev.type === "div") {
            prev.after = token;
            prev.sourceEndIndex += token.length;
          } else if (code === comma || code === colon || code === slash2 && value.charCodeAt(next + 1) !== star && (!parent || parent && parent.type === "function" && parent.value !== "calc")) {
            before = token;
          } else {
            tokens.push({
              type: "space",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        } else if (code === singleQuote || code === doubleQuote) {
          next = pos;
          quote = code === singleQuote ? "'" : '"';
          token = {
            type: "string",
            sourceIndex: pos,
            quote
          };
          do {
            escape2 = false;
            next = value.indexOf(quote, next + 1);
            if (~next) {
              escapePos = next;
              while (value.charCodeAt(escapePos - 1) === backslash) {
                escapePos -= 1;
                escape2 = !escape2;
              }
            } else {
              value += quote;
              next = value.length - 1;
              token.unclosed = true;
            }
          } while (escape2);
          token.value = value.slice(pos + 1, next);
          token.sourceEndIndex = token.unclosed ? next : next + 1;
          tokens.push(token);
          pos = next + 1;
          code = value.charCodeAt(pos);
        } else if (code === slash2 && value.charCodeAt(pos + 1) === star) {
          next = value.indexOf("*/", pos);
          token = {
            type: "comment",
            sourceIndex: pos,
            sourceEndIndex: next + 2
          };
          if (next === -1) {
            token.unclosed = true;
            next = value.length;
            token.sourceEndIndex = next;
          }
          token.value = value.slice(pos + 2, next);
          tokens.push(token);
          pos = next + 2;
          code = value.charCodeAt(pos);
        } else if ((code === slash2 || code === star) && parent && parent.type === "function" && parent.value === "calc") {
          token = value[pos];
          tokens.push({
            type: "word",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token
          });
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (code === slash2 || code === comma || code === colon) {
          token = value[pos];
          tokens.push({
            type: "div",
            sourceIndex: pos - before.length,
            sourceEndIndex: pos + token.length,
            value: token,
            before,
            after: ""
          });
          before = "";
          pos += 1;
          code = value.charCodeAt(pos);
        } else if (openParentheses === code) {
          next = pos;
          do {
            next += 1;
            code = value.charCodeAt(next);
          } while (code <= 32);
          parenthesesOpenPos = pos;
          token = {
            type: "function",
            sourceIndex: pos - name.length,
            value: name,
            before: value.slice(parenthesesOpenPos + 1, next)
          };
          pos = next;
          if (name === "url" && code !== singleQuote && code !== doubleQuote) {
            next -= 1;
            do {
              escape2 = false;
              next = value.indexOf(")", next + 1);
              if (~next) {
                escapePos = next;
                while (value.charCodeAt(escapePos - 1) === backslash) {
                  escapePos -= 1;
                  escape2 = !escape2;
                }
              } else {
                value += ")";
                next = value.length - 1;
                token.unclosed = true;
              }
            } while (escape2);
            whitespacePos = next;
            do {
              whitespacePos -= 1;
              code = value.charCodeAt(whitespacePos);
            } while (code <= 32);
            if (parenthesesOpenPos < whitespacePos) {
              if (pos !== whitespacePos + 1) {
                token.nodes = [
                  {
                    type: "word",
                    sourceIndex: pos,
                    sourceEndIndex: whitespacePos + 1,
                    value: value.slice(pos, whitespacePos + 1)
                  }
                ];
              } else {
                token.nodes = [];
              }
              if (token.unclosed && whitespacePos + 1 !== next) {
                token.after = "";
                token.nodes.push({
                  type: "space",
                  sourceIndex: whitespacePos + 1,
                  sourceEndIndex: next,
                  value: value.slice(whitespacePos + 1, next)
                });
              } else {
                token.after = value.slice(whitespacePos + 1, next);
                token.sourceEndIndex = next;
              }
            } else {
              token.after = "";
              token.nodes = [];
            }
            pos = next + 1;
            token.sourceEndIndex = token.unclosed ? next : pos;
            code = value.charCodeAt(pos);
            tokens.push(token);
          } else {
            balanced += 1;
            token.after = "";
            token.sourceEndIndex = pos + 1;
            tokens.push(token);
            stack.push(token);
            tokens = token.nodes = [];
            parent = token;
          }
          name = "";
        } else if (closeParentheses === code && balanced) {
          pos += 1;
          code = value.charCodeAt(pos);
          parent.after = after;
          parent.sourceEndIndex += after.length;
          after = "";
          balanced -= 1;
          stack[stack.length - 1].sourceEndIndex = pos;
          stack.pop();
          parent = stack[balanced];
          tokens = parent.nodes;
        } else {
          next = pos;
          do {
            if (code === backslash) {
              next += 1;
            }
            next += 1;
            code = value.charCodeAt(next);
          } while (next < max2 && !(code <= 32 || code === singleQuote || code === doubleQuote || code === comma || code === colon || code === slash2 || code === openParentheses || code === star && parent && parent.type === "function" && parent.value === "calc" || code === slash2 && parent.type === "function" && parent.value === "calc" || code === closeParentheses && balanced));
          token = value.slice(pos, next);
          if (openParentheses === code) {
            name = token;
          } else if ((uLower === token.charCodeAt(0) || uUpper === token.charCodeAt(0)) && plus === token.charCodeAt(1) && isUnicodeRange.test(token.slice(2))) {
            tokens.push({
              type: "unicode-range",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          } else {
            tokens.push({
              type: "word",
              sourceIndex: pos,
              sourceEndIndex: next,
              value: token
            });
          }
          pos = next;
        }
      }
      for (pos = stack.length - 1; pos; pos -= 1) {
        stack[pos].unclosed = true;
        stack[pos].sourceEndIndex = value.length;
      }
      return stack[0].nodes;
    };
  }
});

// ../../node_modules/postcss-value-parser/lib/walk.js
var require_walk = __commonJS({
  "../../node_modules/postcss-value-parser/lib/walk.js"(exports2, module) {
    module.exports = function walk(nodes, cb, bubble) {
      var i3, max2, node, result;
      for (i3 = 0, max2 = nodes.length; i3 < max2; i3 += 1) {
        node = nodes[i3];
        if (!bubble) {
          result = cb(node, i3, nodes);
        }
        if (result !== false && node.type === "function" && Array.isArray(node.nodes)) {
          walk(node.nodes, cb, bubble);
        }
        if (bubble) {
          cb(node, i3, nodes);
        }
      }
    };
  }
});

// ../../node_modules/postcss-value-parser/lib/stringify.js
var require_stringify = __commonJS({
  "../../node_modules/postcss-value-parser/lib/stringify.js"(exports2, module) {
    function stringifyNode(node, custom) {
      var type = node.type;
      var value = node.value;
      var buf2;
      var customResult;
      if (custom && (customResult = custom(node)) !== void 0) {
        return customResult;
      } else if (type === "word" || type === "space") {
        return value;
      } else if (type === "string") {
        buf2 = node.quote || "";
        return buf2 + value + (node.unclosed ? "" : buf2);
      } else if (type === "comment") {
        return "/*" + value + (node.unclosed ? "" : "*/");
      } else if (type === "div") {
        return (node.before || "") + value + (node.after || "");
      } else if (Array.isArray(node.nodes)) {
        buf2 = stringify(node.nodes, custom);
        if (type !== "function") {
          return buf2;
        }
        return value + "(" + (node.before || "") + buf2 + (node.after || "") + (node.unclosed ? "" : ")");
      }
      return value;
    }
    function stringify(nodes, custom) {
      var result, i3;
      if (Array.isArray(nodes)) {
        result = "";
        for (i3 = nodes.length - 1; ~i3; i3 -= 1) {
          result = stringifyNode(nodes[i3], custom) + result;
        }
        return result;
      }
      return stringifyNode(nodes, custom);
    }
    module.exports = stringify;
  }
});

// ../../node_modules/postcss-value-parser/lib/unit.js
var require_unit = __commonJS({
  "../../node_modules/postcss-value-parser/lib/unit.js"(exports2, module) {
    var minus = "-".charCodeAt(0);
    var plus = "+".charCodeAt(0);
    var dot = ".".charCodeAt(0);
    var exp = "e".charCodeAt(0);
    var EXP = "E".charCodeAt(0);
    function likeNumber(value) {
      var code = value.charCodeAt(0);
      var nextCode;
      if (code === plus || code === minus) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        var nextNextCode = value.charCodeAt(2);
        if (nextCode === dot && nextNextCode >= 48 && nextNextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code === dot) {
        nextCode = value.charCodeAt(1);
        if (nextCode >= 48 && nextCode <= 57) {
          return true;
        }
        return false;
      }
      if (code >= 48 && code <= 57) {
        return true;
      }
      return false;
    }
    module.exports = function(value) {
      var pos = 0;
      var length = value.length;
      var code;
      var nextCode;
      var nextNextCode;
      if (length === 0 || !likeNumber(value)) {
        return false;
      }
      code = value.charCodeAt(pos);
      if (code === plus || code === minus) {
        pos++;
      }
      while (pos < length) {
        code = value.charCodeAt(pos);
        if (code < 48 || code > 57) {
          break;
        }
        pos += 1;
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      if (code === dot && nextCode >= 48 && nextCode <= 57) {
        pos += 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      code = value.charCodeAt(pos);
      nextCode = value.charCodeAt(pos + 1);
      nextNextCode = value.charCodeAt(pos + 2);
      if ((code === exp || code === EXP) && (nextCode >= 48 && nextCode <= 57 || (nextCode === plus || nextCode === minus) && nextNextCode >= 48 && nextNextCode <= 57)) {
        pos += nextCode === plus || nextCode === minus ? 3 : 2;
        while (pos < length) {
          code = value.charCodeAt(pos);
          if (code < 48 || code > 57) {
            break;
          }
          pos += 1;
        }
      }
      return {
        number: value.slice(0, pos),
        unit: value.slice(pos)
      };
    };
  }
});

// ../../node_modules/postcss-value-parser/lib/index.js
var require_lib = __commonJS({
  "../../node_modules/postcss-value-parser/lib/index.js"(exports2, module) {
    var parse7 = require_parse();
    var walk = require_walk();
    var stringify = require_stringify();
    function ValueParser(value) {
      if (this instanceof ValueParser) {
        this.nodes = parse7(value);
        return this;
      }
      return new ValueParser(value);
    }
    ValueParser.prototype.toString = function() {
      return Array.isArray(this.nodes) ? stringify(this.nodes) : "";
    };
    ValueParser.prototype.walk = function(cb, bubble) {
      walk(this.nodes, cb, bubble);
      return this;
    };
    ValueParser.unit = require_unit();
    ValueParser.walk = walk;
    ValueParser.stringify = stringify;
    module.exports = ValueParser;
  }
});

// ../../node_modules/camelize/index.js
var require_camelize = __commonJS({
  "../../node_modules/camelize/index.js"(exports2, module) {
    "use strict";
    module.exports = function(obj) {
      if (typeof obj === "string") {
        return camelCase(obj);
      }
      return walk(obj);
    };
    function walk(obj) {
      if (!obj || typeof obj !== "object") {
        return obj;
      }
      if (isDate(obj) || isRegex(obj)) {
        return obj;
      }
      if (isArray(obj)) {
        return map(obj, walk);
      }
      return reduce2(objectKeys(obj), function(acc, key) {
        var camel = camelCase(key);
        acc[camel] = walk(obj[key]);
        return acc;
      }, {});
    }
    function camelCase(str) {
      return str.replace(/[_.-](\w|$)/g, function(_6, x4) {
        return x4.toUpperCase();
      });
    }
    var isArray = Array.isArray || function(obj) {
      return Object.prototype.toString.call(obj) === "[object Array]";
    };
    var isDate = function(obj) {
      return Object.prototype.toString.call(obj) === "[object Date]";
    };
    var isRegex = function(obj) {
      return Object.prototype.toString.call(obj) === "[object RegExp]";
    };
    var has = Object.prototype.hasOwnProperty;
    var objectKeys = Object.keys || function(obj) {
      var keys = [];
      for (var key in obj) {
        if (has.call(obj, key)) {
          keys.push(key);
        }
      }
      return keys;
    };
    function map(xs2, f4) {
      if (xs2.map) {
        return xs2.map(f4);
      }
      var res = [];
      for (var i3 = 0; i3 < xs2.length; i3++) {
        res.push(f4(xs2[i3], i3));
      }
      return res;
    }
    function reduce2(xs2, f4, acc) {
      if (xs2.reduce) {
        return xs2.reduce(f4, acc);
      }
      for (var i3 = 0; i3 < xs2.length; i3++) {
        acc = f4(acc, xs2[i3], i3);
      }
      return acc;
    }
  }
});

// ../../node_modules/css-color-keywords/colors.json
var require_colors = __commonJS({
  "../../node_modules/css-color-keywords/colors.json"(exports2, module) {
    module.exports = {
      black: "#000000",
      silver: "#c0c0c0",
      gray: "#808080",
      white: "#ffffff",
      maroon: "#800000",
      red: "#ff0000",
      purple: "#800080",
      fuchsia: "#ff00ff",
      green: "#008000",
      lime: "#00ff00",
      olive: "#808000",
      yellow: "#ffff00",
      navy: "#000080",
      blue: "#0000ff",
      teal: "#008080",
      aqua: "#00ffff",
      orange: "#ffa500",
      aliceblue: "#f0f8ff",
      antiquewhite: "#faebd7",
      aquamarine: "#7fffd4",
      azure: "#f0ffff",
      beige: "#f5f5dc",
      bisque: "#ffe4c4",
      blanchedalmond: "#ffebcd",
      blueviolet: "#8a2be2",
      brown: "#a52a2a",
      burlywood: "#deb887",
      cadetblue: "#5f9ea0",
      chartreuse: "#7fff00",
      chocolate: "#d2691e",
      coral: "#ff7f50",
      cornflowerblue: "#6495ed",
      cornsilk: "#fff8dc",
      crimson: "#dc143c",
      darkblue: "#00008b",
      darkcyan: "#008b8b",
      darkgoldenrod: "#b8860b",
      darkgray: "#a9a9a9",
      darkgreen: "#006400",
      darkgrey: "#a9a9a9",
      darkkhaki: "#bdb76b",
      darkmagenta: "#8b008b",
      darkolivegreen: "#556b2f",
      darkorange: "#ff8c00",
      darkorchid: "#9932cc",
      darkred: "#8b0000",
      darksalmon: "#e9967a",
      darkseagreen: "#8fbc8f",
      darkslateblue: "#483d8b",
      darkslategray: "#2f4f4f",
      darkslategrey: "#2f4f4f",
      darkturquoise: "#00ced1",
      darkviolet: "#9400d3",
      deeppink: "#ff1493",
      deepskyblue: "#00bfff",
      dimgray: "#696969",
      dimgrey: "#696969",
      dodgerblue: "#1e90ff",
      firebrick: "#b22222",
      floralwhite: "#fffaf0",
      forestgreen: "#228b22",
      gainsboro: "#dcdcdc",
      ghostwhite: "#f8f8ff",
      gold: "#ffd700",
      goldenrod: "#daa520",
      greenyellow: "#adff2f",
      grey: "#808080",
      honeydew: "#f0fff0",
      hotpink: "#ff69b4",
      indianred: "#cd5c5c",
      indigo: "#4b0082",
      ivory: "#fffff0",
      khaki: "#f0e68c",
      lavender: "#e6e6fa",
      lavenderblush: "#fff0f5",
      lawngreen: "#7cfc00",
      lemonchiffon: "#fffacd",
      lightblue: "#add8e6",
      lightcoral: "#f08080",
      lightcyan: "#e0ffff",
      lightgoldenrodyellow: "#fafad2",
      lightgray: "#d3d3d3",
      lightgreen: "#90ee90",
      lightgrey: "#d3d3d3",
      lightpink: "#ffb6c1",
      lightsalmon: "#ffa07a",
      lightseagreen: "#20b2aa",
      lightskyblue: "#87cefa",
      lightslategray: "#778899",
      lightslategrey: "#778899",
      lightsteelblue: "#b0c4de",
      lightyellow: "#ffffe0",
      limegreen: "#32cd32",
      linen: "#faf0e6",
      mediumaquamarine: "#66cdaa",
      mediumblue: "#0000cd",
      mediumorchid: "#ba55d3",
      mediumpurple: "#9370db",
      mediumseagreen: "#3cb371",
      mediumslateblue: "#7b68ee",
      mediumspringgreen: "#00fa9a",
      mediumturquoise: "#48d1cc",
      mediumvioletred: "#c71585",
      midnightblue: "#191970",
      mintcream: "#f5fffa",
      mistyrose: "#ffe4e1",
      moccasin: "#ffe4b5",
      navajowhite: "#ffdead",
      oldlace: "#fdf5e6",
      olivedrab: "#6b8e23",
      orangered: "#ff4500",
      orchid: "#da70d6",
      palegoldenrod: "#eee8aa",
      palegreen: "#98fb98",
      paleturquoise: "#afeeee",
      palevioletred: "#db7093",
      papayawhip: "#ffefd5",
      peachpuff: "#ffdab9",
      peru: "#cd853f",
      pink: "#ffc0cb",
      plum: "#dda0dd",
      powderblue: "#b0e0e6",
      rosybrown: "#bc8f8f",
      royalblue: "#4169e1",
      saddlebrown: "#8b4513",
      salmon: "#fa8072",
      sandybrown: "#f4a460",
      seagreen: "#2e8b57",
      seashell: "#fff5ee",
      sienna: "#a0522d",
      skyblue: "#87ceeb",
      slateblue: "#6a5acd",
      slategray: "#708090",
      slategrey: "#708090",
      snow: "#fffafa",
      springgreen: "#00ff7f",
      steelblue: "#4682b4",
      tan: "#d2b48c",
      thistle: "#d8bfd8",
      tomato: "#ff6347",
      turquoise: "#40e0d0",
      violet: "#ee82ee",
      wheat: "#f5deb3",
      whitesmoke: "#f5f5f5",
      yellowgreen: "#9acd32",
      rebeccapurple: "#663399"
    };
  }
});

// ../../node_modules/css-color-keywords/index.js
var require_css_color_keywords = __commonJS({
  "../../node_modules/css-color-keywords/index.js"(exports2, module) {
    "use strict";
    module.exports = require_colors();
  }
});

// ../../node_modules/css-to-react-native/index.js
var require_css_to_react_native = __commonJS({
  "../../node_modules/css-to-react-native/index.js"(exports2) {
    "use strict";
    Object.defineProperty(exports2, "__esModule", {
      value: true
    });
    function _interopDefault(ex) {
      return ex && typeof ex === "object" && "default" in ex ? ex["default"] : ex;
    }
    var parse7 = require_lib();
    var parse__default = _interopDefault(parse7);
    var camelizeStyleName = _interopDefault(require_camelize());
    var cssColorKeywords = _interopDefault(require_css_color_keywords());
    var matchString = function matchString2(node) {
      if (node.type !== "string")
        return null;
      return node.value.replace(/\\([0-9a-f]{1,6})(?:\s|$)/gi, function(match, charCode) {
        return String.fromCharCode(parseInt(charCode, 16));
      }).replace(/\\/g, "");
    };
    var hexColorRe = /^(#(?:[0-9a-f]{3,4}){1,2})$/i;
    var cssFunctionNameRe = /^(rgba?|hsla?|hwb|lab|lch|gray|color)$/;
    var matchColor = function matchColor2(node) {
      if (node.type === "word" && (hexColorRe.test(node.value) || node.value in cssColorKeywords || node.value === "transparent")) {
        return node.value;
      } else if (node.type === "function" && cssFunctionNameRe.test(node.value)) {
        return parse7.stringify(node);
      }
      return null;
    };
    var noneRe = /^(none)$/i;
    var autoRe = /^(auto)$/i;
    var identRe = /(^-?[_a-z][_a-z0-9-]*$)/i;
    var numberRe = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)$/i;
    var lengthRe = /^(0$|(?:[+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)(?=px$))/i;
    var unsupportedUnitRe = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?(ch|em|ex|rem|vh|vw|vmin|vmax|cm|mm|in|pc|pt))$/i;
    var angleRe = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?(?:deg|rad))$/i;
    var percentRe = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?%)$/i;
    var noopToken = function noopToken2(predicate) {
      return function(node) {
        return predicate(node) ? "<token>" : null;
      };
    };
    var valueForTypeToken = function valueForTypeToken2(type) {
      return function(node) {
        return node.type === type ? node.value : null;
      };
    };
    var regExpToken = function regExpToken2(regExp, transform2) {
      if (transform2 === void 0) {
        transform2 = String;
      }
      return function(node) {
        if (node.type !== "word")
          return null;
        var match = node.value.match(regExp);
        if (match === null)
          return null;
        var value = transform2(match[1]);
        return value;
      };
    };
    var SPACE = noopToken(function(node) {
      return node.type === "space";
    });
    var SLASH = noopToken(function(node) {
      return node.type === "div" && node.value === "/";
    });
    var COMMA = noopToken(function(node) {
      return node.type === "div" && node.value === ",";
    });
    var WORD = valueForTypeToken("word");
    var NONE = regExpToken(noneRe);
    var AUTO = regExpToken(autoRe);
    var NUMBER = regExpToken(numberRe, Number);
    var LENGTH = regExpToken(lengthRe, Number);
    var UNSUPPORTED_LENGTH_UNIT = regExpToken(unsupportedUnitRe);
    var ANGLE = regExpToken(angleRe, function(angle) {
      return angle.toLowerCase();
    });
    var PERCENT = regExpToken(percentRe);
    var IDENT = regExpToken(identRe);
    var STRING = matchString;
    var COLOR = matchColor;
    var LINE = regExpToken(/^(none|underline|line-through)$/i);
    var aspectRatio = function aspectRatio2(tokenStream) {
      var aspectRatio3 = tokenStream.expect(NUMBER);
      if (tokenStream.hasTokens()) {
        tokenStream.expect(SLASH);
        aspectRatio3 /= tokenStream.expect(NUMBER);
      }
      return {
        aspectRatio: aspectRatio3
      };
    };
    var BORDER_STYLE = regExpToken(/^(solid|dashed|dotted)$/);
    var defaultBorderWidth = 1;
    var defaultBorderColor = "black";
    var defaultBorderStyle = "solid";
    var border = function border2(tokenStream) {
      var borderWidth2;
      var borderColor2;
      var borderStyle;
      if (tokenStream.matches(NONE)) {
        tokenStream.expectEmpty();
        return {
          borderWidth: 0,
          borderColor: "black",
          borderStyle: "solid"
        };
      }
      var partsParsed = 0;
      while (partsParsed < 3 && tokenStream.hasTokens()) {
        if (partsParsed !== 0)
          tokenStream.expect(SPACE);
        if (borderWidth2 === void 0 && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {
          borderWidth2 = tokenStream.lastValue;
        } else if (borderColor2 === void 0 && tokenStream.matches(COLOR)) {
          borderColor2 = tokenStream.lastValue;
        } else if (borderStyle === void 0 && tokenStream.matches(BORDER_STYLE)) {
          borderStyle = tokenStream.lastValue;
        } else {
          tokenStream["throw"]();
        }
        partsParsed += 1;
      }
      tokenStream.expectEmpty();
      if (borderWidth2 === void 0)
        borderWidth2 = defaultBorderWidth;
      if (borderColor2 === void 0)
        borderColor2 = defaultBorderColor;
      if (borderStyle === void 0)
        borderStyle = defaultBorderStyle;
      return {
        borderWidth: borderWidth2,
        borderColor: borderColor2,
        borderStyle
      };
    };
    var directionFactory = function directionFactory2(_ref2) {
      var _ref$types = _ref2.types, types3 = _ref$types === void 0 ? [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT] : _ref$types, _ref$directions = _ref2.directions, directions = _ref$directions === void 0 ? ["Top", "Right", "Bottom", "Left"] : _ref$directions, _ref$prefix = _ref2.prefix, prefix = _ref$prefix === void 0 ? "" : _ref$prefix, _ref$suffix = _ref2.suffix, suffix = _ref$suffix === void 0 ? "" : _ref$suffix;
      return function(tokenStream) {
        var _ref22;
        var values = [];
        values.push(tokenStream.expect.apply(tokenStream, types3));
        while (values.length < 4 && tokenStream.hasTokens()) {
          tokenStream.expect(SPACE);
          values.push(tokenStream.expect.apply(tokenStream, types3));
        }
        tokenStream.expectEmpty();
        var top = values[0], _values$ = values[1], right = _values$ === void 0 ? top : _values$, _values$2 = values[2], bottom = _values$2 === void 0 ? top : _values$2, _values$3 = values[3], left = _values$3 === void 0 ? right : _values$3;
        var keyFor = function keyFor2(n3) {
          return "" + prefix + directions[n3] + suffix;
        };
        return _ref22 = {}, _ref22[keyFor(0)] = top, _ref22[keyFor(1)] = right, _ref22[keyFor(2)] = bottom, _ref22[keyFor(3)] = left, _ref22;
      };
    };
    var parseShadowOffset = function parseShadowOffset2(tokenStream) {
      var width = tokenStream.expect(LENGTH);
      var height = tokenStream.matches(SPACE) ? tokenStream.expect(LENGTH) : width;
      tokenStream.expectEmpty();
      return {
        width,
        height
      };
    };
    var parseShadow = function parseShadow2(tokenStream) {
      var offsetX;
      var offsetY;
      var radius;
      var color;
      if (tokenStream.matches(NONE)) {
        tokenStream.expectEmpty();
        return {
          offset: {
            width: 0,
            height: 0
          },
          radius: 0,
          color: "black"
        };
      }
      var didParseFirst = false;
      while (tokenStream.hasTokens()) {
        if (didParseFirst)
          tokenStream.expect(SPACE);
        if (offsetX === void 0 && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {
          offsetX = tokenStream.lastValue;
          tokenStream.expect(SPACE);
          offsetY = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);
          tokenStream.saveRewindPoint();
          if (tokenStream.matches(SPACE) && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT)) {
            radius = tokenStream.lastValue;
          } else {
            tokenStream.rewind();
          }
        } else if (color === void 0 && tokenStream.matches(COLOR)) {
          color = tokenStream.lastValue;
        } else {
          tokenStream["throw"]();
        }
        didParseFirst = true;
      }
      if (offsetX === void 0)
        tokenStream["throw"]();
      return {
        offset: {
          width: offsetX,
          height: offsetY
        },
        radius: radius !== void 0 ? radius : 0,
        color: color !== void 0 ? color : "black"
      };
    };
    var boxShadow = function boxShadow2(tokenStream) {
      var _parseShadow = parseShadow(tokenStream), offset = _parseShadow.offset, radius = _parseShadow.radius, color = _parseShadow.color;
      return {
        shadowOffset: offset,
        shadowRadius: radius,
        shadowColor: color,
        shadowOpacity: 1
      };
    };
    var defaultFlexGrow = 1;
    var defaultFlexShrink = 1;
    var defaultFlexBasis = 0;
    var flex = function flex2(tokenStream) {
      var flexGrow;
      var flexShrink;
      var flexBasis;
      if (tokenStream.matches(NONE)) {
        tokenStream.expectEmpty();
        return {
          flexGrow: 0,
          flexShrink: 0,
          flexBasis: "auto"
        };
      }
      tokenStream.saveRewindPoint();
      if (tokenStream.matches(AUTO) && !tokenStream.hasTokens()) {
        return {
          flexGrow: 1,
          flexShrink: 1,
          flexBasis: "auto"
        };
      }
      tokenStream.rewind();
      var partsParsed = 0;
      while (partsParsed < 2 && tokenStream.hasTokens()) {
        if (partsParsed !== 0)
          tokenStream.expect(SPACE);
        if (flexGrow === void 0 && tokenStream.matches(NUMBER)) {
          flexGrow = tokenStream.lastValue;
          tokenStream.saveRewindPoint();
          if (tokenStream.matches(SPACE) && tokenStream.matches(NUMBER)) {
            flexShrink = tokenStream.lastValue;
          } else {
            tokenStream.rewind();
          }
        } else if (flexBasis === void 0 && tokenStream.matches(LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT)) {
          flexBasis = tokenStream.lastValue;
        } else if (flexBasis === void 0 && tokenStream.matches(AUTO)) {
          flexBasis = "auto";
        } else {
          tokenStream["throw"]();
        }
        partsParsed += 1;
      }
      tokenStream.expectEmpty();
      if (flexGrow === void 0)
        flexGrow = defaultFlexGrow;
      if (flexShrink === void 0)
        flexShrink = defaultFlexShrink;
      if (flexBasis === void 0)
        flexBasis = defaultFlexBasis;
      return {
        flexGrow,
        flexShrink,
        flexBasis
      };
    };
    var FLEX_WRAP = regExpToken(/(nowrap|wrap|wrap-reverse)/);
    var FLEX_DIRECTION = regExpToken(/(row|row-reverse|column|column-reverse)/);
    var defaultFlexWrap = "nowrap";
    var defaultFlexDirection = "row";
    var flexFlow = function flexFlow2(tokenStream) {
      var flexWrap;
      var flexDirection;
      var partsParsed = 0;
      while (partsParsed < 2 && tokenStream.hasTokens()) {
        if (partsParsed !== 0)
          tokenStream.expect(SPACE);
        if (flexWrap === void 0 && tokenStream.matches(FLEX_WRAP)) {
          flexWrap = tokenStream.lastValue;
        } else if (flexDirection === void 0 && tokenStream.matches(FLEX_DIRECTION)) {
          flexDirection = tokenStream.lastValue;
        } else {
          tokenStream["throw"]();
        }
        partsParsed += 1;
      }
      tokenStream.expectEmpty();
      if (flexWrap === void 0)
        flexWrap = defaultFlexWrap;
      if (flexDirection === void 0)
        flexDirection = defaultFlexDirection;
      return {
        flexWrap,
        flexDirection
      };
    };
    var fontFamily = function fontFamily2(tokenStream) {
      var fontFamily3;
      if (tokenStream.matches(STRING)) {
        fontFamily3 = tokenStream.lastValue;
      } else {
        fontFamily3 = tokenStream.expect(IDENT);
        while (tokenStream.hasTokens()) {
          tokenStream.expect(SPACE);
          var nextIdent = tokenStream.expect(IDENT);
          fontFamily3 += " " + nextIdent;
        }
      }
      tokenStream.expectEmpty();
      return {
        fontFamily: fontFamily3
      };
    };
    var NORMAL = regExpToken(/^(normal)$/);
    var STYLE = regExpToken(/^(italic)$/);
    var WEIGHT = regExpToken(/^([1-9]00|bold)$/);
    var VARIANT = regExpToken(/^(small-caps)$/);
    var defaultFontStyle = "normal";
    var defaultFontWeight = "normal";
    var defaultFontVariant = [];
    var font = function font2(tokenStream) {
      var fontStyle;
      var fontWeight2;
      var fontVariant2;
      var lineHeight;
      var numStyleWeightVariantMatched = 0;
      while (numStyleWeightVariantMatched < 3 && tokenStream.hasTokens()) {
        if (tokenStream.matches(NORMAL))
          ;
        else if (fontStyle === void 0 && tokenStream.matches(STYLE)) {
          fontStyle = tokenStream.lastValue;
        } else if (fontWeight2 === void 0 && tokenStream.matches(WEIGHT)) {
          fontWeight2 = tokenStream.lastValue;
        } else if (fontVariant2 === void 0 && tokenStream.matches(VARIANT)) {
          fontVariant2 = [tokenStream.lastValue];
        } else {
          break;
        }
        tokenStream.expect(SPACE);
        numStyleWeightVariantMatched += 1;
      }
      var fontSize = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);
      if (tokenStream.matches(SLASH)) {
        lineHeight = tokenStream.expect(LENGTH, UNSUPPORTED_LENGTH_UNIT);
      }
      tokenStream.expect(SPACE);
      var _fontFamily = fontFamily(tokenStream), fontFamily$1 = _fontFamily.fontFamily;
      if (fontStyle === void 0)
        fontStyle = defaultFontStyle;
      if (fontWeight2 === void 0)
        fontWeight2 = defaultFontWeight;
      if (fontVariant2 === void 0)
        fontVariant2 = defaultFontVariant;
      var out = {
        fontStyle,
        fontWeight: fontWeight2,
        fontVariant: fontVariant2,
        fontSize,
        fontFamily: fontFamily$1
      };
      if (lineHeight !== void 0)
        out.lineHeight = lineHeight;
      return out;
    };
    var fontVariant = function fontVariant2(tokenStream) {
      var values = [tokenStream.expect(IDENT)];
      while (tokenStream.hasTokens()) {
        tokenStream.expect(SPACE);
        values.push(tokenStream.expect(IDENT));
      }
      return {
        fontVariant: values
      };
    };
    var ALIGN_CONTENT = regExpToken(/(flex-(?:start|end)|center|stretch|space-(?:between|around))/);
    var JUSTIFY_CONTENT = regExpToken(/(flex-(?:start|end)|center|space-(?:between|around|evenly))/);
    var placeContent = function placeContent2(tokenStream) {
      var alignContent = tokenStream.expect(ALIGN_CONTENT);
      var justifyContent;
      if (tokenStream.hasTokens()) {
        tokenStream.expect(SPACE);
        justifyContent = tokenStream.expect(JUSTIFY_CONTENT);
      } else {
        justifyContent = "stretch";
      }
      tokenStream.expectEmpty();
      return {
        alignContent,
        justifyContent
      };
    };
    var STYLE$1 = regExpToken(/^(solid|double|dotted|dashed)$/);
    var defaultTextDecorationLine = "none";
    var defaultTextDecorationStyle = "solid";
    var defaultTextDecorationColor = "black";
    var textDecoration = function textDecoration2(tokenStream) {
      var line;
      var style;
      var color;
      var didParseFirst = false;
      while (tokenStream.hasTokens()) {
        if (didParseFirst)
          tokenStream.expect(SPACE);
        if (line === void 0 && tokenStream.matches(LINE)) {
          var lines = [tokenStream.lastValue.toLowerCase()];
          tokenStream.saveRewindPoint();
          if (lines[0] !== "none" && tokenStream.matches(SPACE) && tokenStream.matches(LINE)) {
            lines.push(tokenStream.lastValue.toLowerCase());
            lines.sort().reverse();
          } else {
            tokenStream.rewind();
          }
          line = lines.join(" ");
        } else if (style === void 0 && tokenStream.matches(STYLE$1)) {
          style = tokenStream.lastValue;
        } else if (color === void 0 && tokenStream.matches(COLOR)) {
          color = tokenStream.lastValue;
        } else {
          tokenStream["throw"]();
        }
        didParseFirst = true;
      }
      return {
        textDecorationLine: line !== void 0 ? line : defaultTextDecorationLine,
        textDecorationColor: color !== void 0 ? color : defaultTextDecorationColor,
        textDecorationStyle: style !== void 0 ? style : defaultTextDecorationStyle
      };
    };
    var textDecorationLine = function textDecorationLine2(tokenStream) {
      var lines = [];
      var didParseFirst = false;
      while (tokenStream.hasTokens()) {
        if (didParseFirst)
          tokenStream.expect(SPACE);
        lines.push(tokenStream.expect(LINE).toLowerCase());
        didParseFirst = true;
      }
      lines.sort().reverse();
      return {
        textDecorationLine: lines.join(" ")
      };
    };
    var textShadow = function textShadow2(tokenStream) {
      var _parseShadow2 = parseShadow(tokenStream), offset = _parseShadow2.offset, radius = _parseShadow2.radius, color = _parseShadow2.color;
      return {
        textShadowOffset: offset,
        textShadowRadius: radius,
        textShadowColor: color
      };
    };
    var oneOfType = function oneOfType2(tokenType) {
      return function(functionStream) {
        var value = functionStream.expect(tokenType);
        functionStream.expectEmpty();
        return value;
      };
    };
    var singleNumber = oneOfType(NUMBER);
    var singleLength = oneOfType(LENGTH);
    var singleAngle = oneOfType(ANGLE);
    var xyTransformFactory = function xyTransformFactory2(tokenType) {
      return function(key, valueIfOmitted) {
        return function(functionStream) {
          var _ref3, _ref4;
          var x4 = functionStream.expect(tokenType);
          var y3;
          if (functionStream.hasTokens()) {
            functionStream.expect(COMMA);
            y3 = functionStream.expect(tokenType);
          } else if (valueIfOmitted !== void 0) {
            y3 = valueIfOmitted;
          } else {
            return x4;
          }
          functionStream.expectEmpty();
          return [(_ref3 = {}, _ref3[key + "Y"] = y3, _ref3), (_ref4 = {}, _ref4[key + "X"] = x4, _ref4)];
        };
      };
    };
    var xyNumber = xyTransformFactory(NUMBER);
    var xyLength = xyTransformFactory(LENGTH);
    var xyAngle = xyTransformFactory(ANGLE);
    var partTransforms = {
      perspective: singleNumber,
      scale: xyNumber("scale"),
      scaleX: singleNumber,
      scaleY: singleNumber,
      translate: xyLength("translate", 0),
      translateX: singleLength,
      translateY: singleLength,
      rotate: singleAngle,
      rotateX: singleAngle,
      rotateY: singleAngle,
      rotateZ: singleAngle,
      skewX: singleAngle,
      skewY: singleAngle,
      skew: xyAngle("skew", "0deg")
    };
    var transform = function transform2(tokenStream) {
      var transforms2 = [];
      var didParseFirst = false;
      while (tokenStream.hasTokens()) {
        if (didParseFirst)
          tokenStream.expect(SPACE);
        var functionStream = tokenStream.expectFunction();
        var functionName = functionStream.functionName;
        var transformedValues = partTransforms[functionName](functionStream);
        if (!Array.isArray(transformedValues)) {
          var _ref5;
          transformedValues = [(_ref5 = {}, _ref5[functionName] = transformedValues, _ref5)];
        }
        transforms2 = transformedValues.concat(transforms2);
        didParseFirst = true;
      }
      return {
        transform: transforms2
      };
    };
    var background = function background2(tokenStream) {
      return {
        backgroundColor: tokenStream.expect(COLOR)
      };
    };
    var borderColor = directionFactory({
      types: [COLOR],
      prefix: "border",
      suffix: "Color"
    });
    var borderRadius = directionFactory({
      directions: ["TopLeft", "TopRight", "BottomRight", "BottomLeft"],
      prefix: "border",
      suffix: "Radius"
    });
    var borderWidth = directionFactory({
      prefix: "border",
      suffix: "Width"
    });
    var margin = directionFactory({
      types: [LENGTH, UNSUPPORTED_LENGTH_UNIT, PERCENT, AUTO],
      prefix: "margin"
    });
    var padding = directionFactory({
      prefix: "padding"
    });
    var fontWeight = function fontWeight2(tokenStream) {
      return {
        fontWeight: tokenStream.expect(WORD)
        // Also match numbers as strings
      };
    };
    var shadowOffset = function shadowOffset2(tokenStream) {
      return {
        shadowOffset: parseShadowOffset(tokenStream)
      };
    };
    var textShadowOffset = function textShadowOffset2(tokenStream) {
      return {
        textShadowOffset: parseShadowOffset(tokenStream)
      };
    };
    var transforms = {
      aspectRatio,
      background,
      border,
      borderColor,
      borderRadius,
      borderWidth,
      boxShadow,
      flex,
      flexFlow,
      font,
      fontFamily,
      fontVariant,
      fontWeight,
      margin,
      padding,
      placeContent,
      shadowOffset,
      textShadow,
      textShadowOffset,
      textDecoration,
      textDecorationLine,
      transform
    };
    var propertiesWithoutUnits;
    if (true) {
      propertiesWithoutUnits = ["aspectRatio", "elevation", "flexGrow", "flexShrink", "opacity", "shadowOpacity", "zIndex"];
    }
    var devPropertiesWithUnitsRegExp = propertiesWithoutUnits != null ? new RegExp(propertiesWithoutUnits.join("|")) : null;
    var SYMBOL_MATCH = "SYMBOL_MATCH";
    var TokenStream = /* @__PURE__ */ function() {
      function TokenStream2(nodes, parent) {
        this.index = 0;
        this.nodes = nodes;
        this.functionName = parent != null ? parent.value : null;
        this.lastValue = null;
        this.rewindIndex = -1;
      }
      var _proto = TokenStream2.prototype;
      _proto.hasTokens = function hasTokens() {
        return this.index <= this.nodes.length - 1;
      };
      _proto[SYMBOL_MATCH] = function() {
        if (!this.hasTokens())
          return null;
        var node = this.nodes[this.index];
        for (var i3 = 0; i3 < arguments.length; i3 += 1) {
          var tokenDescriptor = i3 < 0 || arguments.length <= i3 ? void 0 : arguments[i3];
          var value = tokenDescriptor(node);
          if (value !== null) {
            this.index += 1;
            this.lastValue = value;
            return value;
          }
        }
        return null;
      };
      _proto.matches = function matches() {
        return this[SYMBOL_MATCH].apply(this, arguments) !== null;
      };
      _proto.expect = function expect() {
        var value = this[SYMBOL_MATCH].apply(this, arguments);
        return value !== null ? value : this["throw"]();
      };
      _proto.matchesFunction = function matchesFunction() {
        var node = this.nodes[this.index];
        if (node.type !== "function")
          return null;
        var value = new TokenStream2(node.nodes, node);
        this.index += 1;
        this.lastValue = null;
        return value;
      };
      _proto.expectFunction = function expectFunction() {
        var value = this.matchesFunction();
        return value !== null ? value : this["throw"]();
      };
      _proto.expectEmpty = function expectEmpty() {
        if (this.hasTokens())
          this["throw"]();
      };
      _proto["throw"] = function _throw() {
        throw new Error("Unexpected token type: " + this.nodes[this.index].type);
      };
      _proto.saveRewindPoint = function saveRewindPoint() {
        this.rewindIndex = this.index;
      };
      _proto.rewind = function rewind() {
        if (this.rewindIndex === -1)
          throw new Error("Internal error");
        this.index = this.rewindIndex;
        this.lastValue = null;
      };
      return TokenStream2;
    }();
    var numberOrLengthRe = /^([+-]?(?:\d*\.)?\d+(?:e[+-]?\d+)?)(?:px)?$/i;
    var numberOnlyRe = /^[+-]?(?:\d*\.\d*|[1-9]\d*)(?:e[+-]?\d+)?$/i;
    var boolRe = /^true|false$/i;
    var nullRe = /^null$/i;
    var undefinedRe = /^undefined$/i;
    var transformRawValue = function transformRawValue2(propName, value) {
      if (true) {
        var needsUnit = !devPropertiesWithUnitsRegExp.test(propName);
        var isNumberWithoutUnit = numberOnlyRe.test(value);
        if (needsUnit && isNumberWithoutUnit) {
          console.warn('Expected style "' + propName + ": " + value + '" to contain units');
        }
        if (!needsUnit && value !== "0" && !isNumberWithoutUnit) {
          console.warn('Expected style "' + propName + ": " + value + '" to be unitless');
        }
      }
      var numberMatch = value.match(numberOrLengthRe);
      if (numberMatch !== null)
        return Number(numberMatch[1]);
      var boolMatch = value.match(boolRe);
      if (boolMatch !== null)
        return boolMatch[0].toLowerCase() === "true";
      var nullMatch = value.match(nullRe);
      if (nullMatch !== null)
        return null;
      var undefinedMatch = value.match(undefinedRe);
      if (undefinedMatch !== null)
        return void 0;
      return value;
    };
    var baseTransformShorthandValue = function baseTransformShorthandValue2(propName, value) {
      var ast = parse__default(value);
      var tokenStream = new TokenStream(ast.nodes);
      return transforms[propName](tokenStream);
    };
    var transformShorthandValue = false ? baseTransformShorthandValue : function(propName, value) {
      try {
        return baseTransformShorthandValue(propName, value);
      } catch (e2) {
        throw new Error('Failed to parse declaration "' + propName + ": " + value + '"');
      }
    };
    var getStylesForProperty = function getStylesForProperty2(propName, inputValue, allowShorthand) {
      var _ref6;
      var isRawValue = allowShorthand === false || !(propName in transforms);
      var value = inputValue.trim();
      var propValues = isRawValue ? (_ref6 = {}, _ref6[propName] = transformRawValue(propName, value), _ref6) : transformShorthandValue(propName, value);
      return propValues;
    };
    var getPropertyName = function getPropertyName2(propName) {
      var isCustomProp = /^--\w+/.test(propName);
      if (isCustomProp) {
        return propName;
      }
      return camelizeStyleName(propName);
    };
    var index = function index2(rules, shorthandBlacklist) {
      if (shorthandBlacklist === void 0) {
        shorthandBlacklist = [];
      }
      return rules.reduce(function(accum, rule) {
        var propertyName = getPropertyName(rule[0]);
        var value = rule[1];
        var allowShorthand = shorthandBlacklist.indexOf(propertyName) === -1;
        return Object.assign(accum, getStylesForProperty(propertyName, value, allowShorthand));
      }, {});
    };
    exports2["default"] = index;
    exports2.getPropertyName = getPropertyName;
    exports2.getStylesForProperty = getStylesForProperty;
    exports2.transformRawValue = transformRawValue;
  }
});

// ../../node_modules/css-background-parser/index.js
var require_css_background_parser = __commonJS({
  "../../node_modules/css-background-parser/index.js"(exports2, module) {
    (function(exports3) {
      function BackgroundList(backgrounds) {
        if (!(this instanceof BackgroundList)) {
          return new BackgroundList();
        }
        this.backgrounds = backgrounds || [];
      }
      BackgroundList.prototype.toString = function() {
        return this.backgrounds.join(", ");
      };
      function Background(props) {
        if (!(this instanceof Background)) {
          return new Background(props);
        }
        props = props || {};
        var bg2 = this;
        function defprop(name, defaultValue) {
          bg2[name] = name in props ? props[name] : defaultValue;
        }
        defprop("color", "");
        defprop("image", "none");
        defprop("attachment", "scroll");
        defprop("clip", "border-box");
        defprop("origin", "padding-box");
        defprop("position", "0% 0%");
        defprop("repeat", "repeat");
        defprop("size", "auto");
      }
      Background.prototype.toString = function() {
        var list = [
          this.image,
          this.repeat,
          this.attachment,
          this.position + " / " + this.size,
          this.origin,
          this.clip
        ];
        if (this.color) {
          list.unshift(this.color);
        }
        return list.join(" ");
      };
      exports3.BackgroundList = BackgroundList;
      exports3.Background = Background;
      function parseImages(cssText) {
        var images = [];
        var tokens = /[,\(\)]/;
        var parens = 0;
        var buffer = "";
        if (cssText == null) {
          return images;
        }
        while (cssText.length) {
          var match = tokens.exec(cssText);
          if (!match) {
            break;
          }
          var char = match[0];
          var ignoreChar = false;
          switch (char) {
            case ",":
              if (!parens) {
                images.push(buffer.trim());
                buffer = "";
                ignoreChar = true;
              }
              break;
            case "(":
              parens++;
              break;
            case ")":
              parens--;
              break;
          }
          var index = match.index + 1;
          buffer += cssText.slice(0, ignoreChar ? index - 1 : index);
          cssText = cssText.slice(index);
        }
        if (buffer.length || cssText.length) {
          images.push((buffer + cssText).trim());
        }
        return images;
      }
      function trim(str) {
        return str.trim();
      }
      function parseSimpleList(cssText) {
        return (cssText || "").split(",").map(trim);
      }
      exports3.parseElementStyle = function(styleObject) {
        var list = new BackgroundList();
        if (styleObject == null) {
          return list;
        }
        var bgImage = parseImages(styleObject.backgroundImage);
        var bgColor = styleObject.backgroundColor;
        var bgAttachment = parseSimpleList(styleObject.backgroundAttachment);
        var bgClip = parseSimpleList(styleObject.backgroundClip);
        var bgOrigin = parseSimpleList(styleObject.backgroundOrigin);
        var bgPosition = parseSimpleList(styleObject.backgroundPosition);
        var bgRepeat = parseSimpleList(styleObject.backgroundRepeat);
        var bgSize = parseSimpleList(styleObject.backgroundSize);
        var background;
        for (var i3 = 0, ii = bgImage.length; i3 < ii; i3++) {
          background = new Background({
            image: bgImage[i3],
            attachment: bgAttachment[i3 % bgAttachment.length],
            clip: bgClip[i3 % bgClip.length],
            origin: bgOrigin[i3 % bgOrigin.length],
            position: bgPosition[i3 % bgPosition.length],
            repeat: bgRepeat[i3 % bgRepeat.length],
            size: bgSize[i3 % bgSize.length]
          });
          if (i3 === ii - 1) {
            background.color = bgColor;
          }
          list.backgrounds.push(background);
        }
        return list;
      };
    })(function(root) {
      if (typeof module !== "undefined" && module.exports !== void 0)
        return module.exports;
      return root.cssBgParser = {};
    }(exports2));
  }
});

// ../../node_modules/css-box-shadow/index.js
var require_css_box_shadow = __commonJS({
  "../../node_modules/css-box-shadow/index.js"(exports2, module) {
    var VALUES_REG = /,(?![^\(]*\))/;
    var PARTS_REG = /\s(?![^(]*\))/;
    var LENGTH_REG = /^[0-9]+[a-zA-Z%]+?$/;
    var parseValue = (str) => {
      const parts = str.split(PARTS_REG);
      const inset = parts.includes("inset");
      const last = parts.slice(-1)[0];
      const color = !isLength(last) ? last : void 0;
      const nums = parts.filter((n3) => n3 !== "inset").filter((n3) => n3 !== color).map(toNum);
      const [offsetX, offsetY, blurRadius, spreadRadius] = nums;
      return {
        inset,
        offsetX,
        offsetY,
        blurRadius,
        spreadRadius,
        color
      };
    };
    var stringifyValue = (obj) => {
      const {
        inset,
        offsetX = 0,
        offsetY = 0,
        blurRadius = 0,
        spreadRadius,
        color
      } = obj || {};
      return [
        inset ? "inset" : null,
        offsetX,
        offsetY,
        blurRadius,
        spreadRadius,
        color
      ].filter((v4) => v4 !== null && v4 !== void 0).map(toPx).map((s3) => ("" + s3).trim()).join(" ");
    };
    var isLength = (v4) => v4 === "0" || LENGTH_REG.test(v4);
    var toNum = (v4) => {
      if (!/px$/.test(v4) && v4 !== "0")
        return v4;
      const n3 = parseFloat(v4);
      return !isNaN(n3) ? n3 : v4;
    };
    var toPx = (n3) => typeof n3 === "number" && n3 !== 0 ? n3 + "px" : n3;
    var parse7 = (str) => str.split(VALUES_REG).map((s3) => s3.trim()).map(parseValue);
    var stringify = (arr) => arr.map(stringifyValue).join(", ");
    module.exports = {
      parse: parse7,
      stringify
    };
  }
});

// ../../node_modules/satori/node_modules/emoji-regex/index.mjs
var emoji_regex_default;
var init_emoji_regex = __esm({
  "../../node_modules/satori/node_modules/emoji-regex/index.mjs"() {
    emoji_regex_default = () => {
      return /[#*0-9]\uFE0F?\u20E3|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26AA\u26B0\u26B1\u26BD\u26BE\u26C4\u26C8\u26CF\u26D1\u26E9\u26F0-\u26F5\u26F7\u26F8\u26FA\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2757\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B55\u3030\u303D\u3297\u3299]\uFE0F?|[\u261D\u270C\u270D](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\u270A\u270B](?:\uD83C[\uDFFB-\uDFFF])?|[\u23E9-\u23EC\u23F0\u23F3\u25FD\u2693\u26A1\u26AB\u26C5\u26CE\u26D4\u26EA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2795-\u2797\u27B0\u27BF\u2B50]|\u26D3\uFE0F?(?:\u200D\uD83D\uDCA5)?|\u26F9(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\u2764\uFE0F?(?:\u200D(?:\uD83D\uDD25|\uD83E\uDE79))?|\uD83C(?:[\uDC04\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]\uFE0F?|[\uDF85\uDFC2\uDFC7](?:\uD83C[\uDFFB-\uDFFF])?|[\uDFC4\uDFCA](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDFCB\uDFCC](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF43\uDF45-\uDF4A\uDF4C-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uDDE6\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF]|\uDDE7\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF]|\uDDE8\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF]|\uDDE9\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF]|\uDDEA\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA]|\uDDEB\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7]|\uDDEC\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE]|\uDDED\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA]|\uDDEE\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9]|\uDDEF\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5]|\uDDF0\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF]|\uDDF1\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE]|\uDDF2\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF]|\uDDF3\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF]|\uDDF4\uD83C\uDDF2|\uDDF5\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE]|\uDDF6\uD83C\uDDE6|\uDDF7\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC]|\uDDF8\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF]|\uDDF9\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF]|\uDDFA\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF]|\uDDFB\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA]|\uDDFC\uD83C[\uDDEB\uDDF8]|\uDDFD\uD83C\uDDF0|\uDDFE\uD83C[\uDDEA\uDDF9]|\uDDFF\uD83C[\uDDE6\uDDF2\uDDFC]|\uDF44(?:\u200D\uD83D\uDFEB)?|\uDF4B(?:\u200D\uD83D\uDFE9)?|\uDFC3(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDFF3\uFE0F?(?:\u200D(?:\u26A7\uFE0F?|\uD83C\uDF08))?|\uDFF4(?:\u200D\u2620\uFE0F?|\uDB40\uDC67\uDB40\uDC62\uDB40(?:\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDC73\uDB40\uDC63\uDB40\uDC74|\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F)?)|\uD83D(?:[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3]\uFE0F?|[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC](?:\uD83C[\uDFFB-\uDFFF])?|[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4\uDEB5](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD74\uDD90](?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?|[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC25\uDC27-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE41\uDE43\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEDC-\uDEDF\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB\uDFF0]|\uDC08(?:\u200D\u2B1B)?|\uDC15(?:\u200D\uD83E\uDDBA)?|\uDC26(?:\u200D(?:\u2B1B|\uD83D\uDD25))?|\uDC3B(?:\u200D\u2744\uFE0F?)?|\uDC41\uFE0F?(?:\u200D\uD83D\uDDE8\uFE0F?)?|\uDC68(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDC68\uDC69]\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?)|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?\uDC68\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D\uDC68\uD83C[\uDFFB-\uDFFE])))?))?|\uDC69(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:\uDC8B\u200D\uD83D)?[\uDC68\uDC69]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D(?:[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?|\uDC69\u200D\uD83D(?:\uDC66(?:\u200D\uD83D\uDC66)?|\uDC67(?:\u200D\uD83D[\uDC66\uDC67])?))|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFC-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFD-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFD\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D\uD83D(?:[\uDC68\uDC69]|\uDC8B\u200D\uD83D[\uDC68\uDC69])\uD83C[\uDFFB-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83D[\uDC68\uDC69]\uD83C[\uDFFB-\uDFFE])))?))?|\uDC6F(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDD75(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|\uDE2E(?:\u200D\uD83D\uDCA8)?|\uDE35(?:\u200D\uD83D\uDCAB)?|\uDE36(?:\u200D\uD83C\uDF2B\uFE0F?)?|\uDE42(?:\u200D[\u2194\u2195]\uFE0F?)?|\uDEB6(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?)|\uD83E(?:[\uDD0C\uDD0F\uDD18-\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5\uDEC3-\uDEC5\uDEF0\uDEF2-\uDEF8](?:\uD83C[\uDFFB-\uDFFF])?|[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD\uDDCF\uDDD4\uDDD6-\uDDDD](?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDDDE\uDDDF](?:\u200D[\u2640\u2642]\uFE0F?)?|[\uDD0D\uDD0E\uDD10-\uDD17\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCC\uDDD0\uDDE0-\uDDFF\uDE70-\uDE7C\uDE80-\uDE88\uDE90-\uDEBD\uDEBF-\uDEC2\uDECE-\uDEDB\uDEE0-\uDEE8]|\uDD3C(?:\u200D[\u2640\u2642]\uFE0F?|\uD83C[\uDFFB-\uDFFF])?|\uDDCE(?:\uD83C[\uDFFB-\uDFFF])?(?:\u200D(?:[\u2640\u2642]\uFE0F?(?:\u200D\u27A1\uFE0F?)?|\u27A1\uFE0F?))?|\uDDD1(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1|\uDDD1\u200D\uD83E\uDDD2(?:\u200D\uD83E\uDDD2)?|\uDDD2(?:\u200D\uD83E\uDDD2)?))|\uD83C(?:\uDFFB(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFC-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFC(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFD-\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFD(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFE(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFD\uDFFF]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?|\uDFFF(?:\u200D(?:[\u2695\u2696\u2708]\uFE0F?|\u2764\uFE0F?\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1\uD83C[\uDFFB-\uDFFE]|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E(?:[\uDDAF\uDDBC\uDDBD](?:\u200D\u27A1\uFE0F?)?|[\uDDB0-\uDDB3]|\uDD1D\u200D\uD83E\uDDD1\uD83C[\uDFFB-\uDFFF])))?))?|\uDEF1(?:\uD83C(?:\uDFFB(?:\u200D\uD83E\uDEF2\uD83C[\uDFFC-\uDFFF])?|\uDFFC(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFD-\uDFFF])?|\uDFFD(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])?|\uDFFE(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFD\uDFFF])?|\uDFFF(?:\u200D\uD83E\uDEF2\uD83C[\uDFFB-\uDFFE])?))?)/g;
    };
  }
});

// ../../node_modules/@shuding/opentype.js/dist/opentype.module.js
function inflateSync(data, out) {
  return inflt(data, out);
}
function Path() {
  this.commands = [];
  this.fill = "black";
  this.stroke = null;
  this.strokeWidth = 1;
}
function DefaultEncoding(font) {
  this.font = font;
}
function CmapEncoding(cmap2) {
  this.cmap = cmap2;
}
function CffEncoding(encoding, charset) {
  this.encoding = encoding;
  this.charset = charset;
}
function addGlyphNamesAll(font) {
  var glyph;
  var glyphIndexMap = font.tables.cmap.glyphIndexMap;
  var charCodes = Object.keys(glyphIndexMap);
  for (var i3 = 0; i3 < charCodes.length; i3 += 1) {
    var c4 = charCodes[i3];
    var glyphIndex = glyphIndexMap[c4];
    glyph = font.glyphs.get(glyphIndex);
    glyph.addUnicode(parseInt(c4));
  }
}
function addGlyphNamesToUnicodeMap(font) {
  font._IndexToUnicodeMap = {};
  var glyphIndexMap = font.tables.cmap.glyphIndexMap;
  var charCodes = Object.keys(glyphIndexMap);
  for (var i3 = 0; i3 < charCodes.length; i3 += 1) {
    var c4 = charCodes[i3];
    var glyphIndex = glyphIndexMap[c4];
    if (font._IndexToUnicodeMap[glyphIndex] === void 0) {
      font._IndexToUnicodeMap[glyphIndex] = {
        unicodes: [parseInt(c4)]
      };
    } else {
      font._IndexToUnicodeMap[glyphIndex].unicodes.push(parseInt(c4));
    }
  }
}
function addGlyphNames(font, opt) {
  if (opt.lowMemory) {
    addGlyphNamesToUnicodeMap(font);
  } else {
    addGlyphNamesAll(font);
  }
}
function fail(message2) {
  throw new Error(message2);
}
function argument(predicate, message2) {
  if (!predicate) {
    fail(message2);
  }
}
function getPathDefinition(glyph, path) {
  var _path = path || new Path();
  return {
    configurable: true,
    get: function() {
      if (typeof _path === "function") {
        _path = _path();
      }
      return _path;
    },
    set: function(p6) {
      _path = p6;
    }
  };
}
function Glyph(options) {
  this.bindConstructorValues(options);
}
function defineDependentProperty(glyph, externalName, internalName) {
  Object.defineProperty(glyph, externalName, {
    get: function() {
      glyph.path;
      return glyph[internalName];
    },
    set: function(newValue) {
      glyph[internalName] = newValue;
    },
    enumerable: true,
    configurable: true
  });
}
function GlyphSet(font, glyphs) {
  this.font = font;
  this.glyphs = {};
  if (Array.isArray(glyphs)) {
    for (var i3 = 0; i3 < glyphs.length; i3++) {
      var glyph = glyphs[i3];
      glyph.path.unitsPerEm = font.unitsPerEm;
      this.glyphs[i3] = glyph;
    }
  }
  this.length = glyphs && glyphs.length || 0;
}
function glyphLoader(font, index) {
  return new Glyph({ index, font });
}
function ttfGlyphLoader(font, index, parseGlyph2, data, position, buildPath2) {
  return function() {
    var glyph = new Glyph({ index, font });
    glyph.path = function() {
      parseGlyph2(glyph, data, position);
      var path = buildPath2(font.glyphs, glyph);
      path.unitsPerEm = font.unitsPerEm;
      return path;
    };
    defineDependentProperty(glyph, "xMin", "_xMin");
    defineDependentProperty(glyph, "xMax", "_xMax");
    defineDependentProperty(glyph, "yMin", "_yMin");
    defineDependentProperty(glyph, "yMax", "_yMax");
    return glyph;
  };
}
function cffGlyphLoader(font, index, parseCFFCharstring2, charstring) {
  return function() {
    var glyph = new Glyph({ index, font });
    glyph.path = function() {
      var path = parseCFFCharstring2(font, glyph, charstring);
      path.unitsPerEm = font.unitsPerEm;
      return path;
    };
    return glyph;
  };
}
function searchTag(arr, tag) {
  var imin = 0;
  var imax = arr.length - 1;
  while (imin <= imax) {
    var imid = imin + imax >>> 1;
    var val = arr[imid].tag;
    if (val === tag) {
      return imid;
    } else if (val < tag) {
      imin = imid + 1;
    } else {
      imax = imid - 1;
    }
  }
  return -imin - 1;
}
function binSearch(arr, value) {
  var imin = 0;
  var imax = arr.length - 1;
  while (imin <= imax) {
    var imid = imin + imax >>> 1;
    var val = arr[imid];
    if (val === value) {
      return imid;
    } else if (val < value) {
      imin = imid + 1;
    } else {
      imax = imid - 1;
    }
  }
  return -imin - 1;
}
function searchRange(ranges, value) {
  var range;
  var imin = 0;
  var imax = ranges.length - 1;
  while (imin <= imax) {
    var imid = imin + imax >>> 1;
    range = ranges[imid];
    var start = range.start;
    if (start === value) {
      return range;
    } else if (start < value) {
      imin = imid + 1;
    } else {
      imax = imid - 1;
    }
  }
  if (imin > 0) {
    range = ranges[imin - 1];
    if (value > range.end) {
      return 0;
    }
    return range;
  }
}
function Layout(font, tableName) {
  this.font = font;
  this.tableName = tableName;
}
function Position(font) {
  Layout.call(this, font, "gpos");
}
function Substitution(font) {
  Layout.call(this, font, "gsub");
}
function arraysEqual(ar1, ar2) {
  var n3 = ar1.length;
  if (n3 !== ar2.length) {
    return false;
  }
  for (var i3 = 0; i3 < n3; i3++) {
    if (ar1[i3] !== ar2[i3]) {
      return false;
    }
  }
  return true;
}
function getSubstFormat(lookupTable, format2, defaultSubtable) {
  var subtables = lookupTable.subtables;
  for (var i3 = 0; i3 < subtables.length; i3++) {
    var subtable = subtables[i3];
    if (subtable.substFormat === format2) {
      return subtable;
    }
  }
  if (defaultSubtable) {
    subtables.push(defaultSubtable);
    return defaultSubtable;
  }
  return void 0;
}
function checkArgument(expression, message2) {
  if (!expression) {
    throw message2;
  }
}
function getByte(dataView, offset) {
  return dataView.getUint8(offset);
}
function getUShort(dataView, offset) {
  return dataView.getUint16(offset, false);
}
function getShort(dataView, offset) {
  return dataView.getInt16(offset, false);
}
function getULong(dataView, offset) {
  return dataView.getUint32(offset, false);
}
function getFixed(dataView, offset) {
  var decimal = dataView.getInt16(offset, false);
  var fraction = dataView.getUint16(offset + 2, false);
  return decimal + fraction / 65535;
}
function getTag(dataView, offset) {
  var tag = "";
  for (var i3 = offset; i3 < offset + 4; i3 += 1) {
    tag += String.fromCharCode(dataView.getInt8(i3));
  }
  return tag;
}
function getOffset(dataView, offset, offSize) {
  var v4 = 0;
  for (var i3 = 0; i3 < offSize; i3 += 1) {
    v4 <<= 8;
    v4 += dataView.getUint8(offset + i3);
  }
  return v4;
}
function getBytes(dataView, startOffset, endOffset) {
  var bytes = [];
  for (var i3 = startOffset; i3 < endOffset; i3 += 1) {
    bytes.push(dataView.getUint8(i3));
  }
  return bytes;
}
function bytesToString(bytes) {
  var s3 = "";
  for (var i3 = 0; i3 < bytes.length; i3 += 1) {
    s3 += String.fromCharCode(bytes[i3]);
  }
  return s3;
}
function Parser(data, offset) {
  this.data = data;
  this.offset = offset;
  this.relativeOffset = 0;
}
function parseGlyphCoordinate(p6, flag, previousValue, shortVectorBitMask, sameBitMask) {
  var v4;
  if ((flag & shortVectorBitMask) > 0) {
    v4 = p6.parseByte();
    if ((flag & sameBitMask) === 0) {
      v4 = -v4;
    }
    v4 = previousValue + v4;
  } else {
    if ((flag & sameBitMask) > 0) {
      v4 = previousValue;
    } else {
      v4 = previousValue + p6.parseShort();
    }
  }
  return v4;
}
function parseGlyph(glyph, data, start) {
  var p6 = new parse4.Parser(data, start);
  glyph.numberOfContours = p6.parseShort();
  glyph._xMin = p6.parseShort();
  glyph._yMin = p6.parseShort();
  glyph._xMax = p6.parseShort();
  glyph._yMax = p6.parseShort();
  var flags2;
  var flag;
  if (glyph.numberOfContours > 0) {
    var endPointIndices = glyph.endPointIndices = [];
    for (var i3 = 0; i3 < glyph.numberOfContours; i3 += 1) {
      endPointIndices.push(p6.parseUShort());
    }
    glyph.instructionLength = p6.parseUShort();
    glyph.instructions = [];
    for (var i$1 = 0; i$1 < glyph.instructionLength; i$1 += 1) {
      glyph.instructions.push(p6.parseByte());
    }
    var numberOfCoordinates = endPointIndices[endPointIndices.length - 1] + 1;
    flags2 = [];
    for (var i$2 = 0; i$2 < numberOfCoordinates; i$2 += 1) {
      flag = p6.parseByte();
      flags2.push(flag);
      if ((flag & 8) > 0) {
        var repeatCount = p6.parseByte();
        for (var j5 = 0; j5 < repeatCount; j5 += 1) {
          flags2.push(flag);
          i$2 += 1;
        }
      }
    }
    check2.argument(flags2.length === numberOfCoordinates, "Bad flags.");
    if (endPointIndices.length > 0) {
      var points = [];
      var point;
      if (numberOfCoordinates > 0) {
        for (var i$3 = 0; i$3 < numberOfCoordinates; i$3 += 1) {
          flag = flags2[i$3];
          point = {};
          point.onCurve = !!(flag & 1);
          point.lastPointOfContour = endPointIndices.indexOf(i$3) >= 0;
          points.push(point);
        }
        var px = 0;
        for (var i$4 = 0; i$4 < numberOfCoordinates; i$4 += 1) {
          flag = flags2[i$4];
          point = points[i$4];
          point.x = parseGlyphCoordinate(p6, flag, px, 2, 16);
          px = point.x;
        }
        var py = 0;
        for (var i$5 = 0; i$5 < numberOfCoordinates; i$5 += 1) {
          flag = flags2[i$5];
          point = points[i$5];
          point.y = parseGlyphCoordinate(p6, flag, py, 4, 32);
          py = point.y;
        }
      }
      glyph.points = points;
    } else {
      glyph.points = [];
    }
  } else if (glyph.numberOfContours === 0) {
    glyph.points = [];
  } else {
    glyph.isComposite = true;
    glyph.points = [];
    glyph.components = [];
    var moreComponents = true;
    while (moreComponents) {
      flags2 = p6.parseUShort();
      var component = {
        glyphIndex: p6.parseUShort(),
        xScale: 1,
        scale01: 0,
        scale10: 0,
        yScale: 1,
        dx: 0,
        dy: 0
      };
      if ((flags2 & 1) > 0) {
        if ((flags2 & 2) > 0) {
          component.dx = p6.parseShort();
          component.dy = p6.parseShort();
        } else {
          component.matchedPoints = [p6.parseUShort(), p6.parseUShort()];
        }
      } else {
        if ((flags2 & 2) > 0) {
          component.dx = p6.parseChar();
          component.dy = p6.parseChar();
        } else {
          component.matchedPoints = [p6.parseByte(), p6.parseByte()];
        }
      }
      if ((flags2 & 8) > 0) {
        component.xScale = component.yScale = p6.parseF2Dot14();
      } else if ((flags2 & 64) > 0) {
        component.xScale = p6.parseF2Dot14();
        component.yScale = p6.parseF2Dot14();
      } else if ((flags2 & 128) > 0) {
        component.xScale = p6.parseF2Dot14();
        component.scale01 = p6.parseF2Dot14();
        component.scale10 = p6.parseF2Dot14();
        component.yScale = p6.parseF2Dot14();
      }
      glyph.components.push(component);
      moreComponents = !!(flags2 & 32);
    }
    if (flags2 & 256) {
      glyph.instructionLength = p6.parseUShort();
      glyph.instructions = [];
      for (var i$6 = 0; i$6 < glyph.instructionLength; i$6 += 1) {
        glyph.instructions.push(p6.parseByte());
      }
    }
  }
}
function transformPoints(points, transform) {
  var newPoints = [];
  for (var i3 = 0; i3 < points.length; i3 += 1) {
    var pt2 = points[i3];
    var newPt = {
      x: transform.xScale * pt2.x + transform.scale01 * pt2.y + transform.dx,
      y: transform.scale10 * pt2.x + transform.yScale * pt2.y + transform.dy,
      onCurve: pt2.onCurve,
      lastPointOfContour: pt2.lastPointOfContour
    };
    newPoints.push(newPt);
  }
  return newPoints;
}
function getContours(points) {
  var contours = [];
  var currentContour = [];
  for (var i3 = 0; i3 < points.length; i3 += 1) {
    var pt2 = points[i3];
    currentContour.push(pt2);
    if (pt2.lastPointOfContour) {
      contours.push(currentContour);
      currentContour = [];
    }
  }
  check2.argument(currentContour.length === 0, "There are still points left in the current contour.");
  return contours;
}
function getPath(points) {
  var p6 = new Path();
  if (!points) {
    return p6;
  }
  var contours = getContours(points);
  for (var contourIndex = 0; contourIndex < contours.length; ++contourIndex) {
    var contour = contours[contourIndex];
    var prev = null;
    var curr = contour[contour.length - 1];
    var next = contour[0];
    if (curr.onCurve) {
      p6.moveTo(curr.x, curr.y);
    } else {
      if (next.onCurve) {
        p6.moveTo(next.x, next.y);
      } else {
        var start = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };
        p6.moveTo(start.x, start.y);
      }
    }
    for (var i3 = 0; i3 < contour.length; ++i3) {
      prev = curr;
      curr = next;
      next = contour[(i3 + 1) % contour.length];
      if (curr.onCurve) {
        p6.lineTo(curr.x, curr.y);
      } else {
        var prev2 = prev;
        var next2 = next;
        if (!prev.onCurve) {
          prev2 = { x: (curr.x + prev.x) * 0.5, y: (curr.y + prev.y) * 0.5 };
        }
        if (!next.onCurve) {
          next2 = { x: (curr.x + next.x) * 0.5, y: (curr.y + next.y) * 0.5 };
        }
        p6.quadraticCurveTo(curr.x, curr.y, next2.x, next2.y);
      }
    }
    p6.closePath();
  }
  return p6;
}
function buildPath(glyphs, glyph) {
  if (glyph.isComposite) {
    for (var j5 = 0; j5 < glyph.components.length; j5 += 1) {
      var component = glyph.components[j5];
      var componentGlyph = glyphs.get(component.glyphIndex);
      componentGlyph.getPath();
      if (componentGlyph.points) {
        var transformedPoints = void 0;
        if (component.matchedPoints === void 0) {
          transformedPoints = transformPoints(componentGlyph.points, component);
        } else {
          if (component.matchedPoints[0] > glyph.points.length - 1 || component.matchedPoints[1] > componentGlyph.points.length - 1) {
            throw Error("Matched points out of range in " + glyph.name);
          }
          var firstPt = glyph.points[component.matchedPoints[0]];
          var secondPt = componentGlyph.points[component.matchedPoints[1]];
          var transform = {
            xScale: component.xScale,
            scale01: component.scale01,
            scale10: component.scale10,
            yScale: component.yScale,
            dx: 0,
            dy: 0
          };
          secondPt = transformPoints([secondPt], transform)[0];
          transform.dx = firstPt.x - secondPt.x;
          transform.dy = firstPt.y - secondPt.y;
          transformedPoints = transformPoints(componentGlyph.points, transform);
        }
        glyph.points = glyph.points.concat(transformedPoints);
      }
    }
  }
  return getPath(glyph.points);
}
function parseGlyfTableAll(data, start, loca2, font) {
  var glyphs = new glyphset.GlyphSet(font);
  for (var i3 = 0; i3 < loca2.length - 1; i3 += 1) {
    var offset = loca2[i3];
    var nextOffset = loca2[i3 + 1];
    if (offset !== nextOffset) {
      glyphs.push(i3, glyphset.ttfGlyphLoader(font, i3, parseGlyph, data, start + offset, buildPath));
    } else {
      glyphs.push(i3, glyphset.glyphLoader(font, i3));
    }
  }
  return glyphs;
}
function parseGlyfTableOnLowMemory(data, start, loca2, font) {
  var glyphs = new glyphset.GlyphSet(font);
  font._push = function(i3) {
    var offset = loca2[i3];
    var nextOffset = loca2[i3 + 1];
    if (offset !== nextOffset) {
      glyphs.push(i3, glyphset.ttfGlyphLoader(font, i3, parseGlyph, data, start + offset, buildPath));
    } else {
      glyphs.push(i3, glyphset.glyphLoader(font, i3));
    }
  };
  return glyphs;
}
function parseGlyfTable(data, start, loca2, font, opt) {
  if (opt.lowMemory) {
    return parseGlyfTableOnLowMemory(data, start, loca2, font);
  } else {
    return parseGlyfTableAll(data, start, loca2, font);
  }
}
function Hinting(font) {
  this.font = font;
  this.getCommands = function(hPoints) {
    return glyf.getPath(hPoints).commands;
  };
  this._fpgmState = this._prepState = void 0;
  this._errorState = 0;
}
function roundOff(v4) {
  return v4;
}
function roundToGrid(v4) {
  return Math.sign(v4) * Math.round(Math.abs(v4));
}
function roundToDoubleGrid(v4) {
  return Math.sign(v4) * Math.round(Math.abs(v4 * 2)) / 2;
}
function roundToHalfGrid(v4) {
  return Math.sign(v4) * (Math.round(Math.abs(v4) + 0.5) - 0.5);
}
function roundUpToGrid(v4) {
  return Math.sign(v4) * Math.ceil(Math.abs(v4));
}
function roundDownToGrid(v4) {
  return Math.sign(v4) * Math.floor(Math.abs(v4));
}
function UnitVector(x4, y3) {
  this.x = x4;
  this.y = y3;
  this.axis = void 0;
  this.slope = y3 / x4;
  this.normalSlope = -x4 / y3;
  Object.freeze(this);
}
function getUnitVector(x4, y3) {
  var d5 = Math.sqrt(x4 * x4 + y3 * y3);
  x4 /= d5;
  y3 /= d5;
  if (x4 === 1 && y3 === 0) {
    return xUnitVector;
  } else if (x4 === 0 && y3 === 1) {
    return yUnitVector;
  } else {
    return new UnitVector(x4, y3);
  }
}
function HPoint(x4, y3, lastPointOfContour, onCurve) {
  this.x = this.xo = Math.round(x4 * 64) / 64;
  this.y = this.yo = Math.round(y3 * 64) / 64;
  this.lastPointOfContour = lastPointOfContour;
  this.onCurve = onCurve;
  this.prevPointOnContour = void 0;
  this.nextPointOnContour = void 0;
  this.xTouched = false;
  this.yTouched = false;
  Object.preventExtensions(this);
}
function State(env, prog) {
  this.env = env;
  this.stack = [];
  this.prog = prog;
  switch (env) {
    case "glyf":
      this.zp0 = this.zp1 = this.zp2 = 1;
      this.rp0 = this.rp1 = this.rp2 = 0;
    case "prep":
      this.fv = this.pv = this.dpv = xUnitVector;
      this.round = roundToGrid;
  }
}
function initTZone(state2) {
  var tZone = state2.tZone = new Array(state2.gZone.length);
  for (var i3 = 0; i3 < tZone.length; i3++) {
    tZone[i3] = new HPoint(0, 0);
  }
}
function skip(state2, handleElse) {
  var prog = state2.prog;
  var ip = state2.ip;
  var nesting = 1;
  var ins;
  do {
    ins = prog[++ip];
    if (ins === 88) {
      nesting++;
    } else if (ins === 89) {
      nesting--;
    } else if (ins === 64) {
      ip += prog[ip + 1] + 1;
    } else if (ins === 65) {
      ip += 2 * prog[ip + 1] + 1;
    } else if (ins >= 176 && ins <= 183) {
      ip += ins - 176 + 1;
    } else if (ins >= 184 && ins <= 191) {
      ip += (ins - 184 + 1) * 2;
    } else if (handleElse && nesting === 1 && ins === 27) {
      break;
    }
  } while (nesting > 0);
  state2.ip = ip;
}
function SVTCA(v4, state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "SVTCA[" + v4.axis + "]");
  }
  state2.fv = state2.pv = state2.dpv = v4;
}
function SPVTCA(v4, state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "SPVTCA[" + v4.axis + "]");
  }
  state2.pv = state2.dpv = v4;
}
function SFVTCA(v4, state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "SFVTCA[" + v4.axis + "]");
  }
  state2.fv = v4;
}
function SPVTL(a3, state2) {
  var stack = state2.stack;
  var p2i = stack.pop();
  var p1i = stack.pop();
  var p22 = state2.z2[p2i];
  var p1 = state2.z1[p1i];
  if (exports.DEBUG) {
    console.log("SPVTL[" + a3 + "]", p2i, p1i);
  }
  var dx;
  var dy;
  if (!a3) {
    dx = p1.x - p22.x;
    dy = p1.y - p22.y;
  } else {
    dx = p22.y - p1.y;
    dy = p1.x - p22.x;
  }
  state2.pv = state2.dpv = getUnitVector(dx, dy);
}
function SFVTL(a3, state2) {
  var stack = state2.stack;
  var p2i = stack.pop();
  var p1i = stack.pop();
  var p22 = state2.z2[p2i];
  var p1 = state2.z1[p1i];
  if (exports.DEBUG) {
    console.log("SFVTL[" + a3 + "]", p2i, p1i);
  }
  var dx;
  var dy;
  if (!a3) {
    dx = p1.x - p22.x;
    dy = p1.y - p22.y;
  } else {
    dx = p22.y - p1.y;
    dy = p1.x - p22.x;
  }
  state2.fv = getUnitVector(dx, dy);
}
function SPVFS(state2) {
  var stack = state2.stack;
  var y3 = stack.pop();
  var x4 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SPVFS[]", y3, x4);
  }
  state2.pv = state2.dpv = getUnitVector(x4, y3);
}
function SFVFS(state2) {
  var stack = state2.stack;
  var y3 = stack.pop();
  var x4 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SPVFS[]", y3, x4);
  }
  state2.fv = getUnitVector(x4, y3);
}
function GPV(state2) {
  var stack = state2.stack;
  var pv = state2.pv;
  if (exports.DEBUG) {
    console.log(state2.step, "GPV[]");
  }
  stack.push(pv.x * 16384);
  stack.push(pv.y * 16384);
}
function GFV(state2) {
  var stack = state2.stack;
  var fv = state2.fv;
  if (exports.DEBUG) {
    console.log(state2.step, "GFV[]");
  }
  stack.push(fv.x * 16384);
  stack.push(fv.y * 16384);
}
function SFVTPV(state2) {
  state2.fv = state2.pv;
  if (exports.DEBUG) {
    console.log(state2.step, "SFVTPV[]");
  }
}
function ISECT(state2) {
  var stack = state2.stack;
  var pa0i = stack.pop();
  var pa1i = stack.pop();
  var pb0i = stack.pop();
  var pb1i = stack.pop();
  var pi2 = stack.pop();
  var z02 = state2.z0;
  var z1 = state2.z1;
  var pa0 = z02[pa0i];
  var pa1 = z02[pa1i];
  var pb0 = z1[pb0i];
  var pb1 = z1[pb1i];
  var p6 = state2.z2[pi2];
  if (exports.DEBUG) {
    console.log("ISECT[], ", pa0i, pa1i, pb0i, pb1i, pi2);
  }
  var x1 = pa0.x;
  var y1 = pa0.y;
  var x22 = pa1.x;
  var y22 = pa1.y;
  var x32 = pb0.x;
  var y3 = pb0.y;
  var x4 = pb1.x;
  var y4 = pb1.y;
  var div = (x1 - x22) * (y3 - y4) - (y1 - y22) * (x32 - x4);
  var f1 = x1 * y22 - y1 * x22;
  var f22 = x32 * y4 - y3 * x4;
  p6.x = (f1 * (x32 - x4) - f22 * (x1 - x22)) / div;
  p6.y = (f1 * (y3 - y4) - f22 * (y1 - y22)) / div;
}
function SRP0(state2) {
  state2.rp0 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SRP0[]", state2.rp0);
  }
}
function SRP1(state2) {
  state2.rp1 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SRP1[]", state2.rp1);
  }
}
function SRP2(state2) {
  state2.rp2 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SRP2[]", state2.rp2);
  }
}
function SZP0(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SZP0[]", n3);
  }
  state2.zp0 = n3;
  switch (n3) {
    case 0:
      if (!state2.tZone) {
        initTZone(state2);
      }
      state2.z0 = state2.tZone;
      break;
    case 1:
      state2.z0 = state2.gZone;
      break;
    default:
      throw new Error("Invalid zone pointer");
  }
}
function SZP1(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SZP1[]", n3);
  }
  state2.zp1 = n3;
  switch (n3) {
    case 0:
      if (!state2.tZone) {
        initTZone(state2);
      }
      state2.z1 = state2.tZone;
      break;
    case 1:
      state2.z1 = state2.gZone;
      break;
    default:
      throw new Error("Invalid zone pointer");
  }
}
function SZP2(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SZP2[]", n3);
  }
  state2.zp2 = n3;
  switch (n3) {
    case 0:
      if (!state2.tZone) {
        initTZone(state2);
      }
      state2.z2 = state2.tZone;
      break;
    case 1:
      state2.z2 = state2.gZone;
      break;
    default:
      throw new Error("Invalid zone pointer");
  }
}
function SZPS(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SZPS[]", n3);
  }
  state2.zp0 = state2.zp1 = state2.zp2 = n3;
  switch (n3) {
    case 0:
      if (!state2.tZone) {
        initTZone(state2);
      }
      state2.z0 = state2.z1 = state2.z2 = state2.tZone;
      break;
    case 1:
      state2.z0 = state2.z1 = state2.z2 = state2.gZone;
      break;
    default:
      throw new Error("Invalid zone pointer");
  }
}
function SLOOP(state2) {
  state2.loop = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SLOOP[]", state2.loop);
  }
}
function RTG(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "RTG[]");
  }
  state2.round = roundToGrid;
}
function RTHG(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "RTHG[]");
  }
  state2.round = roundToHalfGrid;
}
function SMD(state2) {
  var d5 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SMD[]", d5);
  }
  state2.minDis = d5 / 64;
}
function ELSE(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "ELSE[]");
  }
  skip(state2, false);
}
function JMPR(state2) {
  var o5 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "JMPR[]", o5);
  }
  state2.ip += o5 - 1;
}
function SCVTCI(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SCVTCI[]", n3);
  }
  state2.cvCutIn = n3 / 64;
}
function DUP(state2) {
  var stack = state2.stack;
  if (exports.DEBUG) {
    console.log(state2.step, "DUP[]");
  }
  stack.push(stack[stack.length - 1]);
}
function POP(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "POP[]");
  }
  state2.stack.pop();
}
function CLEAR(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "CLEAR[]");
  }
  state2.stack.length = 0;
}
function SWAP(state2) {
  var stack = state2.stack;
  var a3 = stack.pop();
  var b5 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SWAP[]");
  }
  stack.push(a3);
  stack.push(b5);
}
function DEPTH(state2) {
  var stack = state2.stack;
  if (exports.DEBUG) {
    console.log(state2.step, "DEPTH[]");
  }
  stack.push(stack.length);
}
function LOOPCALL(state2) {
  var stack = state2.stack;
  var fn2 = stack.pop();
  var c4 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "LOOPCALL[]", fn2, c4);
  }
  var cip = state2.ip;
  var cprog = state2.prog;
  state2.prog = state2.funcs[fn2];
  for (var i3 = 0; i3 < c4; i3++) {
    exec(state2);
    if (exports.DEBUG) {
      console.log(
        ++state2.step,
        i3 + 1 < c4 ? "next loopcall" : "done loopcall",
        i3
      );
    }
  }
  state2.ip = cip;
  state2.prog = cprog;
}
function CALL(state2) {
  var fn2 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "CALL[]", fn2);
  }
  var cip = state2.ip;
  var cprog = state2.prog;
  state2.prog = state2.funcs[fn2];
  exec(state2);
  state2.ip = cip;
  state2.prog = cprog;
  if (exports.DEBUG) {
    console.log(++state2.step, "returning from", fn2);
  }
}
function CINDEX(state2) {
  var stack = state2.stack;
  var k6 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "CINDEX[]", k6);
  }
  stack.push(stack[stack.length - k6]);
}
function MINDEX(state2) {
  var stack = state2.stack;
  var k6 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "MINDEX[]", k6);
  }
  stack.push(stack.splice(stack.length - k6, 1)[0]);
}
function FDEF(state2) {
  if (state2.env !== "fpgm") {
    throw new Error("FDEF not allowed here");
  }
  var stack = state2.stack;
  var prog = state2.prog;
  var ip = state2.ip;
  var fn2 = stack.pop();
  var ipBegin = ip;
  if (exports.DEBUG) {
    console.log(state2.step, "FDEF[]", fn2);
  }
  while (prog[++ip] !== 45) {
  }
  state2.ip = ip;
  state2.funcs[fn2] = prog.slice(ipBegin + 1, ip);
}
function MDAP(round, state2) {
  var pi2 = state2.stack.pop();
  var p6 = state2.z0[pi2];
  var fv = state2.fv;
  var pv = state2.pv;
  if (exports.DEBUG) {
    console.log(state2.step, "MDAP[" + round + "]", pi2);
  }
  var d5 = pv.distance(p6, HPZero);
  if (round) {
    d5 = state2.round(d5);
  }
  fv.setRelative(p6, HPZero, d5, pv);
  fv.touch(p6);
  state2.rp0 = state2.rp1 = pi2;
}
function IUP(v4, state2) {
  var z22 = state2.z2;
  var pLen = z22.length - 2;
  var cp;
  var pp;
  var np;
  if (exports.DEBUG) {
    console.log(state2.step, "IUP[" + v4.axis + "]");
  }
  for (var i3 = 0; i3 < pLen; i3++) {
    cp = z22[i3];
    if (v4.touched(cp)) {
      continue;
    }
    pp = cp.prevTouched(v4);
    if (pp === cp) {
      continue;
    }
    np = cp.nextTouched(v4);
    if (pp === np) {
      v4.setRelative(cp, cp, v4.distance(pp, pp, false, true), v4, true);
    }
    v4.interpolate(cp, pp, np, v4);
  }
}
function SHP(a3, state2) {
  var stack = state2.stack;
  var rpi = a3 ? state2.rp1 : state2.rp2;
  var rp = (a3 ? state2.z0 : state2.z1)[rpi];
  var fv = state2.fv;
  var pv = state2.pv;
  var loop = state2.loop;
  var z22 = state2.z2;
  while (loop--) {
    var pi2 = stack.pop();
    var p6 = z22[pi2];
    var d5 = pv.distance(rp, rp, false, true);
    fv.setRelative(p6, p6, d5, pv);
    fv.touch(p6);
    if (exports.DEBUG) {
      console.log(
        state2.step,
        (state2.loop > 1 ? "loop " + (state2.loop - loop) + ": " : "") + "SHP[" + (a3 ? "rp1" : "rp2") + "]",
        pi2
      );
    }
  }
  state2.loop = 1;
}
function SHC(a3, state2) {
  var stack = state2.stack;
  var rpi = a3 ? state2.rp1 : state2.rp2;
  var rp = (a3 ? state2.z0 : state2.z1)[rpi];
  var fv = state2.fv;
  var pv = state2.pv;
  var ci2 = stack.pop();
  var sp = state2.z2[state2.contours[ci2]];
  var p6 = sp;
  if (exports.DEBUG) {
    console.log(state2.step, "SHC[" + a3 + "]", ci2);
  }
  var d5 = pv.distance(rp, rp, false, true);
  do {
    if (p6 !== rp) {
      fv.setRelative(p6, p6, d5, pv);
    }
    p6 = p6.nextPointOnContour;
  } while (p6 !== sp);
}
function SHZ(a3, state2) {
  var stack = state2.stack;
  var rpi = a3 ? state2.rp1 : state2.rp2;
  var rp = (a3 ? state2.z0 : state2.z1)[rpi];
  var fv = state2.fv;
  var pv = state2.pv;
  var e2 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SHZ[" + a3 + "]", e2);
  }
  var z5;
  switch (e2) {
    case 0:
      z5 = state2.tZone;
      break;
    case 1:
      z5 = state2.gZone;
      break;
    default:
      throw new Error("Invalid zone");
  }
  var p6;
  var d5 = pv.distance(rp, rp, false, true);
  var pLen = z5.length - 2;
  for (var i3 = 0; i3 < pLen; i3++) {
    p6 = z5[i3];
    fv.setRelative(p6, p6, d5, pv);
  }
}
function SHPIX(state2) {
  var stack = state2.stack;
  var loop = state2.loop;
  var fv = state2.fv;
  var d5 = stack.pop() / 64;
  var z22 = state2.z2;
  while (loop--) {
    var pi2 = stack.pop();
    var p6 = z22[pi2];
    if (exports.DEBUG) {
      console.log(
        state2.step,
        (state2.loop > 1 ? "loop " + (state2.loop - loop) + ": " : "") + "SHPIX[]",
        pi2,
        d5
      );
    }
    fv.setRelative(p6, p6, d5);
    fv.touch(p6);
  }
  state2.loop = 1;
}
function IP(state2) {
  var stack = state2.stack;
  var rp1i = state2.rp1;
  var rp2i = state2.rp2;
  var loop = state2.loop;
  var rp1 = state2.z0[rp1i];
  var rp2 = state2.z1[rp2i];
  var fv = state2.fv;
  var pv = state2.dpv;
  var z22 = state2.z2;
  while (loop--) {
    var pi2 = stack.pop();
    var p6 = z22[pi2];
    if (exports.DEBUG) {
      console.log(
        state2.step,
        (state2.loop > 1 ? "loop " + (state2.loop - loop) + ": " : "") + "IP[]",
        pi2,
        rp1i,
        "<->",
        rp2i
      );
    }
    fv.interpolate(p6, rp1, rp2, pv);
    fv.touch(p6);
  }
  state2.loop = 1;
}
function MSIRP(a3, state2) {
  var stack = state2.stack;
  var d5 = stack.pop() / 64;
  var pi2 = stack.pop();
  var p6 = state2.z1[pi2];
  var rp0 = state2.z0[state2.rp0];
  var fv = state2.fv;
  var pv = state2.pv;
  fv.setRelative(p6, rp0, d5, pv);
  fv.touch(p6);
  if (exports.DEBUG) {
    console.log(state2.step, "MSIRP[" + a3 + "]", d5, pi2);
  }
  state2.rp1 = state2.rp0;
  state2.rp2 = pi2;
  if (a3) {
    state2.rp0 = pi2;
  }
}
function ALIGNRP(state2) {
  var stack = state2.stack;
  var rp0i = state2.rp0;
  var rp0 = state2.z0[rp0i];
  var loop = state2.loop;
  var fv = state2.fv;
  var pv = state2.pv;
  var z1 = state2.z1;
  while (loop--) {
    var pi2 = stack.pop();
    var p6 = z1[pi2];
    if (exports.DEBUG) {
      console.log(
        state2.step,
        (state2.loop > 1 ? "loop " + (state2.loop - loop) + ": " : "") + "ALIGNRP[]",
        pi2
      );
    }
    fv.setRelative(p6, rp0, 0, pv);
    fv.touch(p6);
  }
  state2.loop = 1;
}
function RTDG(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "RTDG[]");
  }
  state2.round = roundToDoubleGrid;
}
function MIAP(round, state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  var pi2 = stack.pop();
  var p6 = state2.z0[pi2];
  var fv = state2.fv;
  var pv = state2.pv;
  var cv = state2.cvt[n3];
  if (exports.DEBUG) {
    console.log(
      state2.step,
      "MIAP[" + round + "]",
      n3,
      "(",
      cv,
      ")",
      pi2
    );
  }
  var d5 = pv.distance(p6, HPZero);
  if (round) {
    if (Math.abs(d5 - cv) < state2.cvCutIn) {
      d5 = cv;
    }
    d5 = state2.round(d5);
  }
  fv.setRelative(p6, HPZero, d5, pv);
  if (state2.zp0 === 0) {
    p6.xo = p6.x;
    p6.yo = p6.y;
  }
  fv.touch(p6);
  state2.rp0 = state2.rp1 = pi2;
}
function NPUSHB(state2) {
  var prog = state2.prog;
  var ip = state2.ip;
  var stack = state2.stack;
  var n3 = prog[++ip];
  if (exports.DEBUG) {
    console.log(state2.step, "NPUSHB[]", n3);
  }
  for (var i3 = 0; i3 < n3; i3++) {
    stack.push(prog[++ip]);
  }
  state2.ip = ip;
}
function NPUSHW(state2) {
  var ip = state2.ip;
  var prog = state2.prog;
  var stack = state2.stack;
  var n3 = prog[++ip];
  if (exports.DEBUG) {
    console.log(state2.step, "NPUSHW[]", n3);
  }
  for (var i3 = 0; i3 < n3; i3++) {
    var w7 = prog[++ip] << 8 | prog[++ip];
    if (w7 & 32768) {
      w7 = -((w7 ^ 65535) + 1);
    }
    stack.push(w7);
  }
  state2.ip = ip;
}
function WS(state2) {
  var stack = state2.stack;
  var store = state2.store;
  if (!store) {
    store = state2.store = [];
  }
  var v4 = stack.pop();
  var l3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "WS", v4, l3);
  }
  store[l3] = v4;
}
function RS(state2) {
  var stack = state2.stack;
  var store = state2.store;
  var l3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "RS", l3);
  }
  var v4 = store && store[l3] || 0;
  stack.push(v4);
}
function WCVTP(state2) {
  var stack = state2.stack;
  var v4 = stack.pop();
  var l3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "WCVTP", v4, l3);
  }
  state2.cvt[l3] = v4 / 64;
}
function RCVT(state2) {
  var stack = state2.stack;
  var cvte = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "RCVT", cvte);
  }
  stack.push(state2.cvt[cvte] * 64);
}
function GC(a3, state2) {
  var stack = state2.stack;
  var pi2 = stack.pop();
  var p6 = state2.z2[pi2];
  if (exports.DEBUG) {
    console.log(state2.step, "GC[" + a3 + "]", pi2);
  }
  stack.push(state2.dpv.distance(p6, HPZero, a3, false) * 64);
}
function MD(a3, state2) {
  var stack = state2.stack;
  var pi2 = stack.pop();
  var pi1 = stack.pop();
  var p22 = state2.z1[pi2];
  var p1 = state2.z0[pi1];
  var d5 = state2.dpv.distance(p1, p22, a3, a3);
  if (exports.DEBUG) {
    console.log(state2.step, "MD[" + a3 + "]", pi2, pi1, "->", d5);
  }
  state2.stack.push(Math.round(d5 * 64));
}
function MPPEM(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "MPPEM[]");
  }
  state2.stack.push(state2.ppem);
}
function FLIPON(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "FLIPON[]");
  }
  state2.autoFlip = true;
}
function LT(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "LT[]", e2, e1);
  }
  stack.push(e1 < e2 ? 1 : 0);
}
function LTEQ(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "LTEQ[]", e2, e1);
  }
  stack.push(e1 <= e2 ? 1 : 0);
}
function GT(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "GT[]", e2, e1);
  }
  stack.push(e1 > e2 ? 1 : 0);
}
function GTEQ(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "GTEQ[]", e2, e1);
  }
  stack.push(e1 >= e2 ? 1 : 0);
}
function EQ(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "EQ[]", e2, e1);
  }
  stack.push(e2 === e1 ? 1 : 0);
}
function NEQ(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "NEQ[]", e2, e1);
  }
  stack.push(e2 !== e1 ? 1 : 0);
}
function ODD(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "ODD[]", n3);
  }
  stack.push(Math.trunc(n3) % 2 ? 1 : 0);
}
function EVEN(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "EVEN[]", n3);
  }
  stack.push(Math.trunc(n3) % 2 ? 0 : 1);
}
function IF(state2) {
  var test = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "IF[]", test);
  }
  if (!test) {
    skip(state2, true);
    if (exports.DEBUG) {
      console.log(state2.step, "EIF[]");
    }
  }
}
function EIF(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "EIF[]");
  }
}
function AND(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "AND[]", e2, e1);
  }
  stack.push(e2 && e1 ? 1 : 0);
}
function OR(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "OR[]", e2, e1);
  }
  stack.push(e2 || e1 ? 1 : 0);
}
function NOT(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "NOT[]", e2);
  }
  stack.push(e2 ? 0 : 1);
}
function DELTAP123(b5, state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  var fv = state2.fv;
  var pv = state2.pv;
  var ppem = state2.ppem;
  var base = state2.deltaBase + (b5 - 1) * 16;
  var ds2 = state2.deltaShift;
  var z02 = state2.z0;
  if (exports.DEBUG) {
    console.log(state2.step, "DELTAP[" + b5 + "]", n3, stack);
  }
  for (var i3 = 0; i3 < n3; i3++) {
    var pi2 = stack.pop();
    var arg = stack.pop();
    var appem = base + ((arg & 240) >> 4);
    if (appem !== ppem) {
      continue;
    }
    var mag = (arg & 15) - 8;
    if (mag >= 0) {
      mag++;
    }
    if (exports.DEBUG) {
      console.log(state2.step, "DELTAPFIX", pi2, "by", mag * ds2);
    }
    var p6 = z02[pi2];
    fv.setRelative(p6, p6, mag * ds2, pv);
  }
}
function SDB(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SDB[]", n3);
  }
  state2.deltaBase = n3;
}
function SDS(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SDS[]", n3);
  }
  state2.deltaShift = Math.pow(0.5, n3);
}
function ADD(state2) {
  var stack = state2.stack;
  var n22 = stack.pop();
  var n1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "ADD[]", n22, n1);
  }
  stack.push(n1 + n22);
}
function SUB(state2) {
  var stack = state2.stack;
  var n22 = stack.pop();
  var n1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SUB[]", n22, n1);
  }
  stack.push(n1 - n22);
}
function DIV(state2) {
  var stack = state2.stack;
  var n22 = stack.pop();
  var n1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "DIV[]", n22, n1);
  }
  stack.push(n1 * 64 / n22);
}
function MUL(state2) {
  var stack = state2.stack;
  var n22 = stack.pop();
  var n1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "MUL[]", n22, n1);
  }
  stack.push(n1 * n22 / 64);
}
function ABS(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "ABS[]", n3);
  }
  stack.push(Math.abs(n3));
}
function NEG(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "NEG[]", n3);
  }
  stack.push(-n3);
}
function FLOOR(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "FLOOR[]", n3);
  }
  stack.push(Math.floor(n3 / 64) * 64);
}
function CEILING(state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "CEILING[]", n3);
  }
  stack.push(Math.ceil(n3 / 64) * 64);
}
function ROUND(dt3, state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "ROUND[]");
  }
  stack.push(state2.round(n3 / 64) * 64);
}
function WCVTF(state2) {
  var stack = state2.stack;
  var v4 = stack.pop();
  var l3 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "WCVTF[]", v4, l3);
  }
  state2.cvt[l3] = v4 * state2.ppem / state2.font.unitsPerEm;
}
function DELTAC123(b5, state2) {
  var stack = state2.stack;
  var n3 = stack.pop();
  var ppem = state2.ppem;
  var base = state2.deltaBase + (b5 - 1) * 16;
  var ds2 = state2.deltaShift;
  if (exports.DEBUG) {
    console.log(state2.step, "DELTAC[" + b5 + "]", n3, stack);
  }
  for (var i3 = 0; i3 < n3; i3++) {
    var c4 = stack.pop();
    var arg = stack.pop();
    var appem = base + ((arg & 240) >> 4);
    if (appem !== ppem) {
      continue;
    }
    var mag = (arg & 15) - 8;
    if (mag >= 0) {
      mag++;
    }
    var delta = mag * ds2;
    if (exports.DEBUG) {
      console.log(state2.step, "DELTACFIX", c4, "by", delta);
    }
    state2.cvt[c4] += delta;
  }
}
function SROUND(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SROUND[]", n3);
  }
  state2.round = roundSuper;
  var period;
  switch (n3 & 192) {
    case 0:
      period = 0.5;
      break;
    case 64:
      period = 1;
      break;
    case 128:
      period = 2;
      break;
    default:
      throw new Error("invalid SROUND value");
  }
  state2.srPeriod = period;
  switch (n3 & 48) {
    case 0:
      state2.srPhase = 0;
      break;
    case 16:
      state2.srPhase = 0.25 * period;
      break;
    case 32:
      state2.srPhase = 0.5 * period;
      break;
    case 48:
      state2.srPhase = 0.75 * period;
      break;
    default:
      throw new Error("invalid SROUND value");
  }
  n3 &= 15;
  if (n3 === 0) {
    state2.srThreshold = 0;
  } else {
    state2.srThreshold = (n3 / 8 - 0.5) * period;
  }
}
function S45ROUND(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "S45ROUND[]", n3);
  }
  state2.round = roundSuper;
  var period;
  switch (n3 & 192) {
    case 0:
      period = Math.sqrt(2) / 2;
      break;
    case 64:
      period = Math.sqrt(2);
      break;
    case 128:
      period = 2 * Math.sqrt(2);
      break;
    default:
      throw new Error("invalid S45ROUND value");
  }
  state2.srPeriod = period;
  switch (n3 & 48) {
    case 0:
      state2.srPhase = 0;
      break;
    case 16:
      state2.srPhase = 0.25 * period;
      break;
    case 32:
      state2.srPhase = 0.5 * period;
      break;
    case 48:
      state2.srPhase = 0.75 * period;
      break;
    default:
      throw new Error("invalid S45ROUND value");
  }
  n3 &= 15;
  if (n3 === 0) {
    state2.srThreshold = 0;
  } else {
    state2.srThreshold = (n3 / 8 - 0.5) * period;
  }
}
function ROFF(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "ROFF[]");
  }
  state2.round = roundOff;
}
function RUTG(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "RUTG[]");
  }
  state2.round = roundUpToGrid;
}
function RDTG(state2) {
  if (exports.DEBUG) {
    console.log(state2.step, "RDTG[]");
  }
  state2.round = roundDownToGrid;
}
function SCANCTRL(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SCANCTRL[]", n3);
  }
}
function SDPVTL(a3, state2) {
  var stack = state2.stack;
  var p2i = stack.pop();
  var p1i = stack.pop();
  var p22 = state2.z2[p2i];
  var p1 = state2.z1[p1i];
  if (exports.DEBUG) {
    console.log(state2.step, "SDPVTL[" + a3 + "]", p2i, p1i);
  }
  var dx;
  var dy;
  if (!a3) {
    dx = p1.x - p22.x;
    dy = p1.y - p22.y;
  } else {
    dx = p22.y - p1.y;
    dy = p1.x - p22.x;
  }
  state2.dpv = getUnitVector(dx, dy);
}
function GETINFO(state2) {
  var stack = state2.stack;
  var sel = stack.pop();
  var r4 = 0;
  if (exports.DEBUG) {
    console.log(state2.step, "GETINFO[]", sel);
  }
  if (sel & 1) {
    r4 = 35;
  }
  if (sel & 32) {
    r4 |= 4096;
  }
  stack.push(r4);
}
function ROLL(state2) {
  var stack = state2.stack;
  var a3 = stack.pop();
  var b5 = stack.pop();
  var c4 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "ROLL[]");
  }
  stack.push(b5);
  stack.push(a3);
  stack.push(c4);
}
function MAX(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "MAX[]", e2, e1);
  }
  stack.push(Math.max(e1, e2));
}
function MIN(state2) {
  var stack = state2.stack;
  var e2 = stack.pop();
  var e1 = stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "MIN[]", e2, e1);
  }
  stack.push(Math.min(e1, e2));
}
function SCANTYPE(state2) {
  var n3 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "SCANTYPE[]", n3);
  }
}
function INSTCTRL(state2) {
  var s3 = state2.stack.pop();
  var v4 = state2.stack.pop();
  if (exports.DEBUG) {
    console.log(state2.step, "INSTCTRL[]", s3, v4);
  }
  switch (s3) {
    case 1:
      state2.inhibitGridFit = !!v4;
      return;
    case 2:
      state2.ignoreCvt = !!v4;
      return;
    default:
      throw new Error("invalid INSTCTRL[] selector");
  }
}
function PUSHB(n3, state2) {
  var stack = state2.stack;
  var prog = state2.prog;
  var ip = state2.ip;
  if (exports.DEBUG) {
    console.log(state2.step, "PUSHB[" + n3 + "]");
  }
  for (var i3 = 0; i3 < n3; i3++) {
    stack.push(prog[++ip]);
  }
  state2.ip = ip;
}
function PUSHW(n3, state2) {
  var ip = state2.ip;
  var prog = state2.prog;
  var stack = state2.stack;
  if (exports.DEBUG) {
    console.log(state2.ip, "PUSHW[" + n3 + "]");
  }
  for (var i3 = 0; i3 < n3; i3++) {
    var w7 = prog[++ip] << 8 | prog[++ip];
    if (w7 & 32768) {
      w7 = -((w7 ^ 65535) + 1);
    }
    stack.push(w7);
  }
  state2.ip = ip;
}
function MDRP_MIRP(indirect, setRp0, keepD, ro2, dt3, state2) {
  var stack = state2.stack;
  var cvte = indirect && stack.pop();
  var pi2 = stack.pop();
  var rp0i = state2.rp0;
  var rp = state2.z0[rp0i];
  var p6 = state2.z1[pi2];
  var md = state2.minDis;
  var fv = state2.fv;
  var pv = state2.dpv;
  var od;
  var d5;
  var sign;
  var cv;
  d5 = od = pv.distance(p6, rp, true, true);
  sign = d5 >= 0 ? 1 : -1;
  d5 = Math.abs(d5);
  if (indirect) {
    cv = state2.cvt[cvte];
    if (ro2 && Math.abs(d5 - cv) < state2.cvCutIn) {
      d5 = cv;
    }
  }
  if (keepD && d5 < md) {
    d5 = md;
  }
  if (ro2) {
    d5 = state2.round(d5);
  }
  fv.setRelative(p6, rp, sign * d5, pv);
  fv.touch(p6);
  if (exports.DEBUG) {
    console.log(
      state2.step,
      (indirect ? "MIRP[" : "MDRP[") + (setRp0 ? "M" : "m") + (keepD ? ">" : "_") + (ro2 ? "R" : "_") + (dt3 === 0 ? "Gr" : dt3 === 1 ? "Bl" : dt3 === 2 ? "Wh" : "") + "]",
      indirect ? cvte + "(" + state2.cvt[cvte] + "," + cv + ")" : "",
      pi2,
      "(d =",
      od,
      "->",
      sign * d5,
      ")"
    );
  }
  state2.rp1 = state2.rp0;
  state2.rp2 = pi2;
  if (setRp0) {
    state2.rp0 = pi2;
  }
}
function Token(char) {
  this.char = char;
  this.state = {};
  this.activeState = null;
}
function ContextRange(startIndex, endOffset, contextName) {
  this.contextName = contextName;
  this.startIndex = startIndex;
  this.endOffset = endOffset;
}
function ContextChecker(contextName, checkStart, checkEnd) {
  this.contextName = contextName;
  this.openRange = null;
  this.ranges = [];
  this.checkStart = checkStart;
  this.checkEnd = checkEnd;
}
function ContextParams(context, currentIndex) {
  this.context = context;
  this.index = currentIndex;
  this.length = context.length;
  this.current = context[currentIndex];
  this.backtrack = context.slice(0, currentIndex);
  this.lookahead = context.slice(currentIndex + 1);
}
function Event(eventId) {
  this.eventId = eventId;
  this.subscribers = [];
}
function initializeCoreEvents(events) {
  var this$1 = this;
  var coreEvents = [
    "start",
    "end",
    "next",
    "newToken",
    "contextStart",
    "contextEnd",
    "insertToken",
    "removeToken",
    "removeRange",
    "replaceToken",
    "replaceRange",
    "composeRUD",
    "updateContextsRanges"
  ];
  coreEvents.forEach(function(eventId) {
    Object.defineProperty(this$1.events, eventId, {
      value: new Event(eventId)
    });
  });
  if (!!events) {
    coreEvents.forEach(function(eventId) {
      var event = events[eventId];
      if (typeof event === "function") {
        this$1.events[eventId].subscribe(event);
      }
    });
  }
  var requiresContextUpdate = [
    "insertToken",
    "removeToken",
    "removeRange",
    "replaceToken",
    "replaceRange",
    "composeRUD"
  ];
  requiresContextUpdate.forEach(function(eventId) {
    this$1.events[eventId].subscribe(
      this$1.updateContextsRanges
    );
  });
}
function Tokenizer(events) {
  this.tokens = [];
  this.registeredContexts = {};
  this.contextCheckers = [];
  this.events = {};
  this.registeredModifiers = [];
  initializeCoreEvents.call(this, events);
}
function isArabicChar(c4) {
  return /[\u0600-\u065F\u066A-\u06D2\u06FA-\u06FF]/.test(c4);
}
function isIsolatedArabicChar(char) {
  return /[\u0630\u0690\u0621\u0631\u0661\u0671\u0622\u0632\u0672\u0692\u06C2\u0623\u0673\u0693\u06C3\u0624\u0694\u06C4\u0625\u0675\u0695\u06C5\u06E5\u0676\u0696\u06C6\u0627\u0677\u0697\u06C7\u0648\u0688\u0698\u06C8\u0689\u0699\u06C9\u068A\u06CA\u066B\u068B\u06CB\u068C\u068D\u06CD\u06FD\u068E\u06EE\u06FE\u062F\u068F\u06CF\u06EF]/.test(char);
}
function isTashkeelArabicChar(char) {
  return /[\u0600-\u0605\u060C-\u060E\u0610-\u061B\u061E\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED]/.test(char);
}
function isLatinChar(c4) {
  return /[A-z]/.test(c4);
}
function isWhiteSpace(c4) {
  return /\s/.test(c4);
}
function FeatureQuery(font) {
  this.font = font;
  this.features = {};
}
function SubstitutionAction(action) {
  this.id = action.id;
  this.tag = action.tag;
  this.substitution = action.substitution;
}
function lookupCoverage(glyphIndex, coverage) {
  if (!glyphIndex) {
    return -1;
  }
  switch (coverage.format) {
    case 1:
      return coverage.glyphs.indexOf(glyphIndex);
    case 2:
      var ranges = coverage.ranges;
      for (var i3 = 0; i3 < ranges.length; i3++) {
        var range = ranges[i3];
        if (glyphIndex >= range.start && glyphIndex <= range.end) {
          var offset = glyphIndex - range.start;
          return range.index + offset;
        }
      }
      break;
    default:
      return -1;
  }
  return -1;
}
function singleSubstitutionFormat1(glyphIndex, subtable) {
  var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
  if (substituteIndex === -1) {
    return null;
  }
  return glyphIndex + subtable.deltaGlyphId;
}
function singleSubstitutionFormat2(glyphIndex, subtable) {
  var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
  if (substituteIndex === -1) {
    return null;
  }
  return subtable.substitute[substituteIndex];
}
function lookupCoverageList(coverageList, contextParams) {
  var lookupList = [];
  for (var i3 = 0; i3 < coverageList.length; i3++) {
    var coverage = coverageList[i3];
    var glyphIndex = contextParams.current;
    glyphIndex = Array.isArray(glyphIndex) ? glyphIndex[0] : glyphIndex;
    var lookupIndex = lookupCoverage(glyphIndex, coverage);
    if (lookupIndex !== -1) {
      lookupList.push(lookupIndex);
    }
  }
  if (lookupList.length !== coverageList.length) {
    return -1;
  }
  return lookupList;
}
function chainingSubstitutionFormat3(contextParams, subtable) {
  var lookupsCount = subtable.inputCoverage.length + subtable.lookaheadCoverage.length + subtable.backtrackCoverage.length;
  if (contextParams.context.length < lookupsCount) {
    return [];
  }
  var inputLookups = lookupCoverageList(
    subtable.inputCoverage,
    contextParams
  );
  if (inputLookups === -1) {
    return [];
  }
  var lookaheadOffset = subtable.inputCoverage.length - 1;
  if (contextParams.lookahead.length < subtable.lookaheadCoverage.length) {
    return [];
  }
  var lookaheadContext = contextParams.lookahead.slice(lookaheadOffset);
  while (lookaheadContext.length && isTashkeelArabicChar(lookaheadContext[0].char)) {
    lookaheadContext.shift();
  }
  var lookaheadParams = new ContextParams(lookaheadContext, 0);
  var lookaheadLookups = lookupCoverageList(
    subtable.lookaheadCoverage,
    lookaheadParams
  );
  var backtrackContext = [].concat(contextParams.backtrack);
  backtrackContext.reverse();
  while (backtrackContext.length && isTashkeelArabicChar(backtrackContext[0].char)) {
    backtrackContext.shift();
  }
  if (backtrackContext.length < subtable.backtrackCoverage.length) {
    return [];
  }
  var backtrackParams = new ContextParams(backtrackContext, 0);
  var backtrackLookups = lookupCoverageList(
    subtable.backtrackCoverage,
    backtrackParams
  );
  var contextRulesMatch = inputLookups.length === subtable.inputCoverage.length && lookaheadLookups.length === subtable.lookaheadCoverage.length && backtrackLookups.length === subtable.backtrackCoverage.length;
  var substitutions = [];
  if (contextRulesMatch) {
    for (var i3 = 0; i3 < subtable.lookupRecords.length; i3++) {
      var lookupRecord = subtable.lookupRecords[i3];
      var lookupListIndex = lookupRecord.lookupListIndex;
      var lookupTable = this.getLookupByIndex(lookupListIndex);
      for (var s3 = 0; s3 < lookupTable.subtables.length; s3++) {
        var subtable$1 = lookupTable.subtables[s3];
        var lookup2 = this.getLookupMethod(lookupTable, subtable$1);
        var substitutionType = this.getSubstitutionType(lookupTable, subtable$1);
        if (substitutionType === "12") {
          for (var n3 = 0; n3 < inputLookups.length; n3++) {
            var glyphIndex = contextParams.get(n3);
            var substitution = lookup2(glyphIndex);
            if (substitution) {
              substitutions.push(substitution);
            }
          }
        }
      }
    }
  }
  return substitutions;
}
function ligatureSubstitutionFormat1(contextParams, subtable) {
  var glyphIndex = contextParams.current;
  var ligSetIndex = lookupCoverage(glyphIndex, subtable.coverage);
  if (ligSetIndex === -1) {
    return null;
  }
  var ligature;
  var ligatureSet = subtable.ligatureSets[ligSetIndex];
  for (var s3 = 0; s3 < ligatureSet.length; s3++) {
    ligature = ligatureSet[s3];
    for (var l3 = 0; l3 < ligature.components.length; l3++) {
      var lookaheadItem = contextParams.lookahead[l3];
      var component = ligature.components[l3];
      if (lookaheadItem !== component) {
        break;
      }
      if (l3 === ligature.components.length - 1) {
        return ligature;
      }
    }
  }
  return null;
}
function decompositionSubstitutionFormat1(glyphIndex, subtable) {
  var substituteIndex = lookupCoverage(glyphIndex, subtable.coverage);
  if (substituteIndex === -1) {
    return null;
  }
  return subtable.sequences[substituteIndex];
}
function arabicWordStartCheck(contextParams) {
  var char = contextParams.current;
  var prevChar = contextParams.get(-1);
  return (
    // ? arabic first char
    prevChar === null && isArabicChar(char) || // ? arabic char preceded with a non arabic char
    !isArabicChar(prevChar) && isArabicChar(char)
  );
}
function arabicWordEndCheck(contextParams) {
  var nextChar = contextParams.get(1);
  return (
    // ? last arabic char
    nextChar === null || // ? next char is not arabic
    !isArabicChar(nextChar)
  );
}
function arabicSentenceStartCheck(contextParams) {
  var char = contextParams.current;
  var prevChar = contextParams.get(-1);
  return (
    // ? an arabic char preceded with a non arabic char
    (isArabicChar(char) || isTashkeelArabicChar(char)) && !isArabicChar(prevChar)
  );
}
function arabicSentenceEndCheck(contextParams) {
  var nextChar = contextParams.get(1);
  switch (true) {
    case nextChar === null:
      return true;
    case (!isArabicChar(nextChar) && !isTashkeelArabicChar(nextChar)):
      var nextIsWhitespace = isWhiteSpace(nextChar);
      if (!nextIsWhitespace) {
        return true;
      }
      if (nextIsWhitespace) {
        var arabicCharAhead = false;
        arabicCharAhead = contextParams.lookahead.some(
          function(c4) {
            return isArabicChar(c4) || isTashkeelArabicChar(c4);
          }
        );
        if (!arabicCharAhead) {
          return true;
        }
      }
      break;
    default:
      return false;
  }
}
function singleSubstitutionFormat1$1(action, tokens, index) {
  tokens[index].setState(action.tag, action.substitution);
}
function singleSubstitutionFormat2$1(action, tokens, index) {
  tokens[index].setState(action.tag, action.substitution);
}
function chainingSubstitutionFormat3$1(action, tokens, index) {
  action.substitution.forEach(function(subst, offset) {
    var token = tokens[index + offset];
    token.setState(action.tag, subst);
  });
}
function ligatureSubstitutionFormat1$1(action, tokens, index) {
  var token = tokens[index];
  token.setState(action.tag, action.substitution.ligGlyph);
  var compsCount = action.substitution.components.length;
  for (var i3 = 0; i3 < compsCount; i3++) {
    token = tokens[index + i3 + 1];
    token.setState("deleted", true);
  }
}
function applySubstitution(action, tokens, index) {
  if (action instanceof SubstitutionAction && SUBSTITUTIONS[action.id]) {
    SUBSTITUTIONS[action.id](action, tokens, index);
  }
}
function willConnectPrev(charContextParams) {
  var backtrack = [].concat(charContextParams.backtrack);
  for (var i3 = backtrack.length - 1; i3 >= 0; i3--) {
    var prevChar = backtrack[i3];
    var isolated = isIsolatedArabicChar(prevChar);
    var tashkeel = isTashkeelArabicChar(prevChar);
    if (!isolated && !tashkeel) {
      return true;
    }
    if (isolated) {
      return false;
    }
  }
  return false;
}
function willConnectNext(charContextParams) {
  if (isIsolatedArabicChar(charContextParams.current)) {
    return false;
  }
  for (var i3 = 0; i3 < charContextParams.lookahead.length; i3++) {
    var nextChar = charContextParams.lookahead[i3];
    var tashkeel = isTashkeelArabicChar(nextChar);
    if (!tashkeel) {
      return true;
    }
  }
  return false;
}
function arabicPresentationForms(range) {
  var this$1 = this;
  var script = "arab";
  var tags = this.featuresTags[script];
  var tokens = this.tokenizer.getRangeTokens(range);
  if (tokens.length === 1) {
    return;
  }
  var contextParams = new ContextParams(
    tokens.map(
      function(token) {
        return token.getState("glyphIndex");
      }
    ),
    0
  );
  var charContextParams = new ContextParams(
    tokens.map(
      function(token) {
        return token.char;
      }
    ),
    0
  );
  tokens.forEach(function(token, index) {
    if (isTashkeelArabicChar(token.char)) {
      return;
    }
    contextParams.setCurrentIndex(index);
    charContextParams.setCurrentIndex(index);
    var CONNECT = 0;
    if (willConnectPrev(charContextParams)) {
      CONNECT |= 1;
    }
    if (willConnectNext(charContextParams)) {
      CONNECT |= 2;
    }
    var tag;
    switch (CONNECT) {
      case 1:
        tag = "fina";
        break;
      case 2:
        tag = "init";
        break;
      case 3:
        tag = "medi";
        break;
    }
    if (tags.indexOf(tag) === -1) {
      return;
    }
    var substitutions = this$1.query.lookupFeature({
      tag,
      script,
      contextParams
    });
    if (substitutions instanceof Error) {
      return console.info(substitutions.message);
    }
    substitutions.forEach(function(action, index2) {
      if (action instanceof SubstitutionAction) {
        applySubstitution(action, tokens, index2);
        contextParams.context[index2] = action.substitution;
      }
    });
  });
}
function getContextParams(tokens, index) {
  var context = tokens.map(function(token) {
    return token.activeState.value;
  });
  return new ContextParams(context, index || 0);
}
function arabicRequiredLigatures(range) {
  var this$1 = this;
  var script = "arab";
  var tokens = this.tokenizer.getRangeTokens(range);
  var contextParams = getContextParams(tokens);
  contextParams.context.forEach(function(glyphIndex, index) {
    contextParams.setCurrentIndex(index);
    var substitutions = this$1.query.lookupFeature({
      tag: "rlig",
      script,
      contextParams
    });
    if (substitutions.length) {
      substitutions.forEach(
        function(action) {
          return applySubstitution(action, tokens, index);
        }
      );
      contextParams = getContextParams(tokens);
    }
  });
}
function latinWordStartCheck(contextParams) {
  var char = contextParams.current;
  var prevChar = contextParams.get(-1);
  return (
    // ? latin first char
    prevChar === null && isLatinChar(char) || // ? latin char preceded with a non latin char
    !isLatinChar(prevChar) && isLatinChar(char)
  );
}
function latinWordEndCheck(contextParams) {
  var nextChar = contextParams.get(1);
  return (
    // ? last latin char
    nextChar === null || // ? next char is not latin
    !isLatinChar(nextChar)
  );
}
function getContextParams$1(tokens, index) {
  var context = tokens.map(function(token) {
    return token.activeState.value;
  });
  return new ContextParams(context, index || 0);
}
function latinLigature(range) {
  var this$1 = this;
  var script = "latn";
  var tokens = this.tokenizer.getRangeTokens(range);
  var contextParams = getContextParams$1(tokens);
  contextParams.context.forEach(function(glyphIndex, index) {
    contextParams.setCurrentIndex(index);
    var substitutions = this$1.query.lookupFeature({
      tag: "liga",
      script,
      contextParams
    });
    if (substitutions.length) {
      substitutions.forEach(
        function(action) {
          return applySubstitution(action, tokens, index);
        }
      );
      contextParams = getContextParams$1(tokens);
    }
  });
}
function Bidi(baseDir) {
  this.baseDir = baseDir || "ltr";
  this.tokenizer = new Tokenizer();
  this.featuresTags = {};
}
function registerContextChecker(checkId) {
  var check3 = this.contextChecks[checkId + "Check"];
  return this.tokenizer.registerContextChecker(
    checkId,
    check3.startCheck,
    check3.endCheck
  );
}
function tokenizeText() {
  registerContextChecker.call(this, "latinWord");
  registerContextChecker.call(this, "arabicWord");
  registerContextChecker.call(this, "arabicSentence");
  return this.tokenizer.tokenize(this.text);
}
function reverseArabicSentences() {
  var this$1 = this;
  var ranges = this.tokenizer.getContextRanges("arabicSentence");
  ranges.forEach(function(range) {
    var rangeTokens = this$1.tokenizer.getRangeTokens(range);
    this$1.tokenizer.replaceRange(
      range.startIndex,
      range.endOffset,
      rangeTokens.reverse()
    );
  });
}
function checkGlyphIndexStatus() {
  if (this.tokenizer.registeredModifiers.indexOf("glyphIndex") === -1) {
    throw new Error(
      "glyphIndex modifier is required to apply arabic presentation features."
    );
  }
}
function applyArabicPresentationForms() {
  var this$1 = this;
  var script = "arab";
  if (!this.featuresTags.hasOwnProperty(script)) {
    return;
  }
  checkGlyphIndexStatus.call(this);
  var ranges = this.tokenizer.getContextRanges("arabicWord");
  ranges.forEach(function(range) {
    arabicPresentationForms.call(this$1, range);
  });
}
function applyArabicRequireLigatures() {
  var this$1 = this;
  var script = "arab";
  if (!this.featuresTags.hasOwnProperty(script)) {
    return;
  }
  var tags = this.featuresTags[script];
  if (tags.indexOf("rlig") === -1) {
    return;
  }
  checkGlyphIndexStatus.call(this);
  var ranges = this.tokenizer.getContextRanges("arabicWord");
  ranges.forEach(function(range) {
    arabicRequiredLigatures.call(this$1, range);
  });
}
function applyLatinLigatures() {
  var this$1 = this;
  var script = "latn";
  if (!this.featuresTags.hasOwnProperty(script)) {
    return;
  }
  var tags = this.featuresTags[script];
  if (tags.indexOf("liga") === -1) {
    return;
  }
  checkGlyphIndexStatus.call(this);
  var ranges = this.tokenizer.getContextRanges("latinWord");
  ranges.forEach(function(range) {
    latinLigature.call(this$1, range);
  });
}
function Font(options) {
  options = options || {};
  options.tables = options.tables || {};
  if (!options.empty) {
    checkArgument(
      options.familyName,
      "When creating a new Font object, familyName is required."
    );
    checkArgument(
      options.styleName,
      "When creating a new Font object, styleName is required."
    );
    checkArgument(
      options.unitsPerEm,
      "When creating a new Font object, unitsPerEm is required."
    );
    checkArgument(
      options.ascender,
      "When creating a new Font object, ascender is required."
    );
    checkArgument(
      options.descender <= 0,
      "When creating a new Font object, negative descender value is required."
    );
    this.unitsPerEm = options.unitsPerEm || 1e3;
    this.ascender = options.ascender;
    this.descender = options.descender;
    this.createdTimestamp = options.createdTimestamp;
    this.tables = Object.assign(options.tables, {
      os2: Object.assign(
        {
          usWeightClass: options.weightClass || this.usWeightClasses.MEDIUM,
          usWidthClass: options.widthClass || this.usWidthClasses.MEDIUM,
          fsSelection: options.fsSelection || this.fsSelectionValues.REGULAR
        },
        options.tables.os2
      )
    });
  }
  this.supported = true;
  this.glyphs = new glyphset.GlyphSet(this, options.glyphs || []);
  this.encoding = new DefaultEncoding(this);
  this.position = new Position(this);
  this.substitution = new Substitution(this);
  this.tables = this.tables || {};
  this._push = null;
  this._hmtxTableData = {};
  Object.defineProperty(this, "hinting", {
    get: function() {
      if (this._hinting) {
        return this._hinting;
      }
      if (this.outlinesFormat === "truetype") {
        return this._hinting = new Hinting(this);
      }
    }
  });
}
function parseCmapTableFormat12(cmap2, p6) {
  p6.parseUShort();
  cmap2.length = p6.parseULong();
  cmap2.language = p6.parseULong();
  var groupCount;
  cmap2.groupCount = groupCount = p6.parseULong();
  cmap2.glyphIndexMap = {};
  for (var i3 = 0; i3 < groupCount; i3 += 1) {
    var startCharCode = p6.parseULong();
    var endCharCode = p6.parseULong();
    var startGlyphId = p6.parseULong();
    for (var c4 = startCharCode; c4 <= endCharCode; c4 += 1) {
      cmap2.glyphIndexMap[c4] = startGlyphId;
      startGlyphId++;
    }
  }
}
function parseCmapTableFormat4(cmap2, p6, data, start, offset) {
  cmap2.length = p6.parseUShort();
  cmap2.language = p6.parseUShort();
  var segCount;
  cmap2.segCount = segCount = p6.parseUShort() >> 1;
  p6.skip("uShort", 3);
  cmap2.glyphIndexMap = {};
  var endCountParser = new parse4.Parser(data, start + offset + 14);
  var startCountParser = new parse4.Parser(
    data,
    start + offset + 16 + segCount * 2
  );
  var idDeltaParser = new parse4.Parser(
    data,
    start + offset + 16 + segCount * 4
  );
  var idRangeOffsetParser = new parse4.Parser(
    data,
    start + offset + 16 + segCount * 6
  );
  var glyphIndexOffset = start + offset + 16 + segCount * 8;
  for (var i3 = 0; i3 < segCount - 1; i3 += 1) {
    var glyphIndex = void 0;
    var endCount = endCountParser.parseUShort();
    var startCount = startCountParser.parseUShort();
    var idDelta = idDeltaParser.parseShort();
    var idRangeOffset = idRangeOffsetParser.parseUShort();
    for (var c4 = startCount; c4 <= endCount; c4 += 1) {
      if (idRangeOffset !== 0) {
        glyphIndexOffset = idRangeOffsetParser.offset + idRangeOffsetParser.relativeOffset - 2;
        glyphIndexOffset += idRangeOffset;
        glyphIndexOffset += (c4 - startCount) * 2;
        glyphIndex = parse4.getUShort(data, glyphIndexOffset);
        if (glyphIndex !== 0) {
          glyphIndex = glyphIndex + idDelta & 65535;
        }
      } else {
        glyphIndex = c4 + idDelta & 65535;
      }
      cmap2.glyphIndexMap[c4] = glyphIndex;
    }
  }
}
function parseCmapTable(data, start) {
  var cmap2 = {};
  cmap2.version = parse4.getUShort(data, start);
  check2.argument(cmap2.version === 0, "cmap table version should be 0.");
  cmap2.numTables = parse4.getUShort(data, start + 2);
  var offset = -1;
  for (var i3 = cmap2.numTables - 1; i3 >= 0; i3 -= 1) {
    var platformId = parse4.getUShort(data, start + 4 + i3 * 8);
    var encodingId = parse4.getUShort(data, start + 4 + i3 * 8 + 2);
    if (platformId === 3 && (encodingId === 0 || encodingId === 1 || encodingId === 10) || platformId === 0 && (encodingId === 0 || encodingId === 1 || encodingId === 2 || encodingId === 3 || encodingId === 4)) {
      offset = parse4.getULong(data, start + 4 + i3 * 8 + 4);
      break;
    }
  }
  if (offset === -1) {
    throw new Error("No valid cmap sub-tables found.");
  }
  var p6 = new parse4.Parser(data, start + offset);
  cmap2.format = p6.parseUShort();
  if (cmap2.format === 12) {
    parseCmapTableFormat12(cmap2, p6);
  } else if (cmap2.format === 4) {
    parseCmapTableFormat4(cmap2, p6, data, start, offset);
  } else {
    throw new Error(
      "Only format 4 and 12 cmap tables are supported (found format " + cmap2.format + ")."
    );
  }
  return cmap2;
}
function calcCFFSubroutineBias(subrs) {
  var bias;
  if (subrs.length < 1240) {
    bias = 107;
  } else if (subrs.length < 33900) {
    bias = 1131;
  } else {
    bias = 32768;
  }
  return bias;
}
function parseCFFIndex(data, start, conversionFn) {
  var offsets = [];
  var objects = [];
  var count = parse4.getCard16(data, start);
  var objectOffset;
  var endOffset;
  if (count !== 0) {
    var offsetSize = parse4.getByte(data, start + 2);
    objectOffset = start + (count + 1) * offsetSize + 2;
    var pos = start + 3;
    for (var i3 = 0; i3 < count + 1; i3 += 1) {
      offsets.push(parse4.getOffset(data, pos, offsetSize));
      pos += offsetSize;
    }
    endOffset = objectOffset + offsets[count];
  } else {
    endOffset = start + 2;
  }
  for (var i$1 = 0; i$1 < offsets.length - 1; i$1 += 1) {
    var value = parse4.getBytes(
      data,
      objectOffset + offsets[i$1],
      objectOffset + offsets[i$1 + 1]
    );
    if (conversionFn) {
      value = conversionFn(value);
    }
    objects.push(value);
  }
  return { objects, startOffset: start, endOffset };
}
function parseCFFIndexLowMemory(data, start) {
  var offsets = [];
  var count = parse4.getCard16(data, start);
  var objectOffset;
  var endOffset;
  if (count !== 0) {
    var offsetSize = parse4.getByte(data, start + 2);
    objectOffset = start + (count + 1) * offsetSize + 2;
    var pos = start + 3;
    for (var i3 = 0; i3 < count + 1; i3 += 1) {
      offsets.push(parse4.getOffset(data, pos, offsetSize));
      pos += offsetSize;
    }
    endOffset = objectOffset + offsets[count];
  } else {
    endOffset = start + 2;
  }
  return { offsets, startOffset: start, endOffset };
}
function getCffIndexObject(i3, offsets, data, start, conversionFn) {
  var count = parse4.getCard16(data, start);
  var objectOffset = 0;
  if (count !== 0) {
    var offsetSize = parse4.getByte(data, start + 2);
    objectOffset = start + (count + 1) * offsetSize + 2;
  }
  var value = parse4.getBytes(
    data,
    objectOffset + offsets[i3],
    objectOffset + offsets[i3 + 1]
  );
  if (conversionFn) {
    value = conversionFn(value);
  }
  return value;
}
function parseFloatOperand(parser) {
  var s3 = "";
  var eof = 15;
  var lookup2 = [
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    ".",
    "E",
    "E-",
    null,
    "-"
  ];
  while (true) {
    var b5 = parser.parseByte();
    var n1 = b5 >> 4;
    var n22 = b5 & 15;
    if (n1 === eof) {
      break;
    }
    s3 += lookup2[n1];
    if (n22 === eof) {
      break;
    }
    s3 += lookup2[n22];
  }
  return parseFloat(s3);
}
function parseOperand(parser, b0) {
  var b1;
  var b22;
  var b32;
  var b42;
  if (b0 === 28) {
    b1 = parser.parseByte();
    b22 = parser.parseByte();
    return b1 << 8 | b22;
  }
  if (b0 === 29) {
    b1 = parser.parseByte();
    b22 = parser.parseByte();
    b32 = parser.parseByte();
    b42 = parser.parseByte();
    return b1 << 24 | b22 << 16 | b32 << 8 | b42;
  }
  if (b0 === 30) {
    return parseFloatOperand(parser);
  }
  if (b0 >= 32 && b0 <= 246) {
    return b0 - 139;
  }
  if (b0 >= 247 && b0 <= 250) {
    b1 = parser.parseByte();
    return (b0 - 247) * 256 + b1 + 108;
  }
  if (b0 >= 251 && b0 <= 254) {
    b1 = parser.parseByte();
    return -(b0 - 251) * 256 - b1 - 108;
  }
  throw new Error("Invalid b0 " + b0);
}
function entriesToObject(entries) {
  var o5 = {};
  for (var i3 = 0; i3 < entries.length; i3 += 1) {
    var key = entries[i3][0];
    var values = entries[i3][1];
    var value = void 0;
    if (values.length === 1) {
      value = values[0];
    } else {
      value = values;
    }
    if (o5.hasOwnProperty(key) && !isNaN(o5[key])) {
      throw new Error("Object " + o5 + " already has key " + key);
    }
    o5[key] = value;
  }
  return o5;
}
function parseCFFDict(data, start, size) {
  start = start !== void 0 ? start : 0;
  var parser = new parse4.Parser(data, start);
  var entries = [];
  var operands = [];
  size = size !== void 0 ? size : data.length;
  while (parser.relativeOffset < size) {
    var op = parser.parseByte();
    if (op <= 21) {
      if (op === 12) {
        op = 1200 + parser.parseByte();
      }
      entries.push([op, operands]);
      operands = [];
    } else {
      operands.push(parseOperand(parser, op));
    }
  }
  return entriesToObject(entries);
}
function getCFFString(strings, index) {
  if (index <= 390) {
    index = cffStandardStrings[index];
  } else {
    index = strings[index - 391];
  }
  return index;
}
function interpretDict(dict, meta2, strings) {
  var newDict = {};
  var value;
  for (var i3 = 0; i3 < meta2.length; i3 += 1) {
    var m4 = meta2[i3];
    if (Array.isArray(m4.type)) {
      var values = [];
      values.length = m4.type.length;
      for (var j5 = 0; j5 < m4.type.length; j5++) {
        value = dict[m4.op] !== void 0 ? dict[m4.op][j5] : void 0;
        if (value === void 0) {
          value = m4.value !== void 0 && m4.value[j5] !== void 0 ? m4.value[j5] : null;
        }
        if (m4.type[j5] === "SID") {
          value = getCFFString(strings, value);
        }
        values[j5] = value;
      }
      newDict[m4.name] = values;
    } else {
      value = dict[m4.op];
      if (value === void 0) {
        value = m4.value !== void 0 ? m4.value : null;
      }
      if (m4.type === "SID") {
        value = getCFFString(strings, value);
      }
      newDict[m4.name] = value;
    }
  }
  return newDict;
}
function parseCFFHeader(data, start) {
  var header = {};
  header.formatMajor = parse4.getCard8(data, start);
  header.formatMinor = parse4.getCard8(data, start + 1);
  header.size = parse4.getCard8(data, start + 2);
  header.offsetSize = parse4.getCard8(data, start + 3);
  header.startOffset = start;
  header.endOffset = start + 4;
  return header;
}
function parseCFFTopDict(data, strings) {
  var dict = parseCFFDict(data, 0, data.byteLength);
  return interpretDict(dict, TOP_DICT_META, strings);
}
function parseCFFPrivateDict(data, start, size, strings) {
  var dict = parseCFFDict(data, start, size);
  return interpretDict(dict, PRIVATE_DICT_META, strings);
}
function gatherCFFTopDicts(data, start, cffIndex, strings) {
  var topDictArray = [];
  for (var iTopDict = 0; iTopDict < cffIndex.length; iTopDict += 1) {
    var topDictData = new DataView(
      new Uint8Array(cffIndex[iTopDict]).buffer
    );
    var topDict = parseCFFTopDict(topDictData, strings);
    topDict._subrs = [];
    topDict._subrsBias = 0;
    topDict._defaultWidthX = 0;
    topDict._nominalWidthX = 0;
    var privateSize = topDict.private[0];
    var privateOffset = topDict.private[1];
    if (privateSize !== 0 && privateOffset !== 0) {
      var privateDict = parseCFFPrivateDict(
        data,
        privateOffset + start,
        privateSize,
        strings
      );
      topDict._defaultWidthX = privateDict.defaultWidthX;
      topDict._nominalWidthX = privateDict.nominalWidthX;
      if (privateDict.subrs !== 0) {
        var subrOffset = privateOffset + privateDict.subrs;
        var subrIndex = parseCFFIndex(data, subrOffset + start);
        topDict._subrs = subrIndex.objects;
        topDict._subrsBias = calcCFFSubroutineBias(topDict._subrs);
      }
      topDict._privateDict = privateDict;
    }
    topDictArray.push(topDict);
  }
  return topDictArray;
}
function parseCFFCharset(data, start, nGlyphs, strings) {
  var sid;
  var count;
  var parser = new parse4.Parser(data, start);
  nGlyphs -= 1;
  var charset = [".notdef"];
  var format2 = parser.parseCard8();
  if (format2 === 0) {
    for (var i3 = 0; i3 < nGlyphs; i3 += 1) {
      sid = parser.parseSID();
      charset.push(getCFFString(strings, sid));
    }
  } else if (format2 === 1) {
    while (charset.length <= nGlyphs) {
      sid = parser.parseSID();
      count = parser.parseCard8();
      for (var i$1 = 0; i$1 <= count; i$1 += 1) {
        charset.push(getCFFString(strings, sid));
        sid += 1;
      }
    }
  } else if (format2 === 2) {
    while (charset.length <= nGlyphs) {
      sid = parser.parseSID();
      count = parser.parseCard16();
      for (var i$2 = 0; i$2 <= count; i$2 += 1) {
        charset.push(getCFFString(strings, sid));
        sid += 1;
      }
    }
  } else {
    throw new Error("Unknown charset format " + format2);
  }
  return charset;
}
function parseCFFEncoding(data, start, charset) {
  var code;
  var enc = {};
  var parser = new parse4.Parser(data, start);
  var format2 = parser.parseCard8();
  if (format2 === 0) {
    var nCodes = parser.parseCard8();
    for (var i3 = 0; i3 < nCodes; i3 += 1) {
      code = parser.parseCard8();
      enc[code] = i3;
    }
  } else if (format2 === 1) {
    var nRanges = parser.parseCard8();
    code = 1;
    for (var i$1 = 0; i$1 < nRanges; i$1 += 1) {
      var first = parser.parseCard8();
      var nLeft = parser.parseCard8();
      for (var j5 = first; j5 <= first + nLeft; j5 += 1) {
        enc[j5] = code;
        code += 1;
      }
    }
  } else {
    throw new Error("Unknown encoding format " + format2);
  }
  return new CffEncoding(enc, charset);
}
function parseCFFCharstring(font, glyph, code) {
  var c1x;
  var c1y;
  var c2x;
  var c2y;
  var p6 = new Path();
  var stack = [];
  var nStems = 0;
  var haveWidth = false;
  var open = false;
  var x4 = 0;
  var y3 = 0;
  var subrs;
  var subrsBias;
  var defaultWidthX;
  var nominalWidthX;
  if (font.isCIDFont) {
    var fdIndex = font.tables.cff.topDict._fdSelect[glyph.index];
    var fdDict = font.tables.cff.topDict._fdArray[fdIndex];
    subrs = fdDict._subrs;
    subrsBias = fdDict._subrsBias;
    defaultWidthX = fdDict._defaultWidthX;
    nominalWidthX = fdDict._nominalWidthX;
  } else {
    subrs = font.tables.cff.topDict._subrs;
    subrsBias = font.tables.cff.topDict._subrsBias;
    defaultWidthX = font.tables.cff.topDict._defaultWidthX;
    nominalWidthX = font.tables.cff.topDict._nominalWidthX;
  }
  var width = defaultWidthX;
  function newContour(x5, y4) {
    if (open) {
      p6.closePath();
    }
    p6.moveTo(x5, y4);
    open = true;
  }
  function parseStems() {
    var hasWidthArg;
    hasWidthArg = stack.length % 2 !== 0;
    if (hasWidthArg && !haveWidth) {
      width = stack.shift() + nominalWidthX;
    }
    nStems += stack.length >> 1;
    stack.length = 0;
    haveWidth = true;
  }
  function parse7(code2) {
    var b1;
    var b22;
    var b32;
    var b42;
    var codeIndex;
    var subrCode;
    var jpx;
    var jpy;
    var c3x;
    var c3y;
    var c4x;
    var c4y;
    var i3 = 0;
    while (i3 < code2.length) {
      var v4 = code2[i3];
      i3 += 1;
      switch (v4) {
        case 1:
          parseStems();
          break;
        case 3:
          parseStems();
          break;
        case 4:
          if (stack.length > 1 && !haveWidth) {
            width = stack.shift() + nominalWidthX;
            haveWidth = true;
          }
          y3 += stack.pop();
          newContour(x4, y3);
          break;
        case 5:
          while (stack.length > 0) {
            x4 += stack.shift();
            y3 += stack.shift();
            p6.lineTo(x4, y3);
          }
          break;
        case 6:
          while (stack.length > 0) {
            x4 += stack.shift();
            p6.lineTo(x4, y3);
            if (stack.length === 0) {
              break;
            }
            y3 += stack.shift();
            p6.lineTo(x4, y3);
          }
          break;
        case 7:
          while (stack.length > 0) {
            y3 += stack.shift();
            p6.lineTo(x4, y3);
            if (stack.length === 0) {
              break;
            }
            x4 += stack.shift();
            p6.lineTo(x4, y3);
          }
          break;
        case 8:
          while (stack.length > 0) {
            c1x = x4 + stack.shift();
            c1y = y3 + stack.shift();
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x + stack.shift();
            y3 = c2y + stack.shift();
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          break;
        case 10:
          codeIndex = stack.pop() + subrsBias;
          subrCode = subrs[codeIndex];
          if (subrCode) {
            parse7(subrCode);
          }
          break;
        case 11:
          return;
        case 12:
          v4 = code2[i3];
          i3 += 1;
          switch (v4) {
            case 35:
              c1x = x4 + stack.shift();
              c1y = y3 + stack.shift();
              c2x = c1x + stack.shift();
              c2y = c1y + stack.shift();
              jpx = c2x + stack.shift();
              jpy = c2y + stack.shift();
              c3x = jpx + stack.shift();
              c3y = jpy + stack.shift();
              c4x = c3x + stack.shift();
              c4y = c3y + stack.shift();
              x4 = c4x + stack.shift();
              y3 = c4y + stack.shift();
              stack.shift();
              p6.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
              p6.curveTo(c3x, c3y, c4x, c4y, x4, y3);
              break;
            case 34:
              c1x = x4 + stack.shift();
              c1y = y3;
              c2x = c1x + stack.shift();
              c2y = c1y + stack.shift();
              jpx = c2x + stack.shift();
              jpy = c2y;
              c3x = jpx + stack.shift();
              c3y = c2y;
              c4x = c3x + stack.shift();
              c4y = y3;
              x4 = c4x + stack.shift();
              p6.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
              p6.curveTo(c3x, c3y, c4x, c4y, x4, y3);
              break;
            case 36:
              c1x = x4 + stack.shift();
              c1y = y3 + stack.shift();
              c2x = c1x + stack.shift();
              c2y = c1y + stack.shift();
              jpx = c2x + stack.shift();
              jpy = c2y;
              c3x = jpx + stack.shift();
              c3y = c2y;
              c4x = c3x + stack.shift();
              c4y = c3y + stack.shift();
              x4 = c4x + stack.shift();
              p6.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
              p6.curveTo(c3x, c3y, c4x, c4y, x4, y3);
              break;
            case 37:
              c1x = x4 + stack.shift();
              c1y = y3 + stack.shift();
              c2x = c1x + stack.shift();
              c2y = c1y + stack.shift();
              jpx = c2x + stack.shift();
              jpy = c2y + stack.shift();
              c3x = jpx + stack.shift();
              c3y = jpy + stack.shift();
              c4x = c3x + stack.shift();
              c4y = c3y + stack.shift();
              if (Math.abs(c4x - x4) > Math.abs(c4y - y3)) {
                x4 = c4x + stack.shift();
              } else {
                y3 = c4y + stack.shift();
              }
              p6.curveTo(c1x, c1y, c2x, c2y, jpx, jpy);
              p6.curveTo(c3x, c3y, c4x, c4y, x4, y3);
              break;
            default:
              console.log(
                "Glyph " + glyph.index + ": unknown operator 1200" + v4
              );
              stack.length = 0;
          }
          break;
        case 14:
          if (stack.length > 0 && !haveWidth) {
            width = stack.shift() + nominalWidthX;
            haveWidth = true;
          }
          if (open) {
            p6.closePath();
            open = false;
          }
          break;
        case 18:
          parseStems();
          break;
        case 19:
        case 20:
          parseStems();
          i3 += nStems + 7 >> 3;
          break;
        case 21:
          if (stack.length > 2 && !haveWidth) {
            width = stack.shift() + nominalWidthX;
            haveWidth = true;
          }
          y3 += stack.pop();
          x4 += stack.pop();
          newContour(x4, y3);
          break;
        case 22:
          if (stack.length > 1 && !haveWidth) {
            width = stack.shift() + nominalWidthX;
            haveWidth = true;
          }
          x4 += stack.pop();
          newContour(x4, y3);
          break;
        case 23:
          parseStems();
          break;
        case 24:
          while (stack.length > 2) {
            c1x = x4 + stack.shift();
            c1y = y3 + stack.shift();
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x + stack.shift();
            y3 = c2y + stack.shift();
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          x4 += stack.shift();
          y3 += stack.shift();
          p6.lineTo(x4, y3);
          break;
        case 25:
          while (stack.length > 6) {
            x4 += stack.shift();
            y3 += stack.shift();
            p6.lineTo(x4, y3);
          }
          c1x = x4 + stack.shift();
          c1y = y3 + stack.shift();
          c2x = c1x + stack.shift();
          c2y = c1y + stack.shift();
          x4 = c2x + stack.shift();
          y3 = c2y + stack.shift();
          p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          break;
        case 26:
          if (stack.length % 2) {
            x4 += stack.shift();
          }
          while (stack.length > 0) {
            c1x = x4;
            c1y = y3 + stack.shift();
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x;
            y3 = c2y + stack.shift();
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          break;
        case 27:
          if (stack.length % 2) {
            y3 += stack.shift();
          }
          while (stack.length > 0) {
            c1x = x4 + stack.shift();
            c1y = y3;
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x + stack.shift();
            y3 = c2y;
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          break;
        case 28:
          b1 = code2[i3];
          b22 = code2[i3 + 1];
          stack.push((b1 << 24 | b22 << 16) >> 16);
          i3 += 2;
          break;
        case 29:
          codeIndex = stack.pop() + font.gsubrsBias;
          subrCode = font.gsubrs[codeIndex];
          if (subrCode) {
            parse7(subrCode);
          }
          break;
        case 30:
          while (stack.length > 0) {
            c1x = x4;
            c1y = y3 + stack.shift();
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x + stack.shift();
            y3 = c2y + (stack.length === 1 ? stack.shift() : 0);
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
            if (stack.length === 0) {
              break;
            }
            c1x = x4 + stack.shift();
            c1y = y3;
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            y3 = c2y + stack.shift();
            x4 = c2x + (stack.length === 1 ? stack.shift() : 0);
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          break;
        case 31:
          while (stack.length > 0) {
            c1x = x4 + stack.shift();
            c1y = y3;
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            y3 = c2y + stack.shift();
            x4 = c2x + (stack.length === 1 ? stack.shift() : 0);
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
            if (stack.length === 0) {
              break;
            }
            c1x = x4;
            c1y = y3 + stack.shift();
            c2x = c1x + stack.shift();
            c2y = c1y + stack.shift();
            x4 = c2x + stack.shift();
            y3 = c2y + (stack.length === 1 ? stack.shift() : 0);
            p6.curveTo(c1x, c1y, c2x, c2y, x4, y3);
          }
          break;
        default:
          if (v4 < 32) {
            console.log(
              "Glyph " + glyph.index + ": unknown operator " + v4
            );
          } else if (v4 < 247) {
            stack.push(v4 - 139);
          } else if (v4 < 251) {
            b1 = code2[i3];
            i3 += 1;
            stack.push((v4 - 247) * 256 + b1 + 108);
          } else if (v4 < 255) {
            b1 = code2[i3];
            i3 += 1;
            stack.push(-(v4 - 251) * 256 - b1 - 108);
          } else {
            b1 = code2[i3];
            b22 = code2[i3 + 1];
            b32 = code2[i3 + 2];
            b42 = code2[i3 + 3];
            i3 += 4;
            stack.push(
              (b1 << 24 | b22 << 16 | b32 << 8 | b42) / 65536
            );
          }
      }
    }
  }
  parse7(code);
  glyph.advanceWidth = width;
  return p6;
}
function parseCFFFDSelect(data, start, nGlyphs, fdArrayCount) {
  var fdSelect = [];
  var fdIndex;
  var parser = new parse4.Parser(data, start);
  var format2 = parser.parseCard8();
  if (format2 === 0) {
    for (var iGid = 0; iGid < nGlyphs; iGid++) {
      fdIndex = parser.parseCard8();
      if (fdIndex >= fdArrayCount) {
        throw new Error(
          "CFF table CID Font FDSelect has bad FD index value " + fdIndex + " (FD count " + fdArrayCount + ")"
        );
      }
      fdSelect.push(fdIndex);
    }
  } else if (format2 === 3) {
    var nRanges = parser.parseCard16();
    var first = parser.parseCard16();
    if (first !== 0) {
      throw new Error(
        "CFF Table CID Font FDSelect format 3 range has bad initial GID " + first
      );
    }
    var next;
    for (var iRange = 0; iRange < nRanges; iRange++) {
      fdIndex = parser.parseCard8();
      next = parser.parseCard16();
      if (fdIndex >= fdArrayCount) {
        throw new Error(
          "CFF table CID Font FDSelect has bad FD index value " + fdIndex + " (FD count " + fdArrayCount + ")"
        );
      }
      if (next > nGlyphs) {
        throw new Error(
          "CFF Table CID Font FDSelect format 3 range has bad GID " + next
        );
      }
      for (; first < next; first++) {
        fdSelect.push(fdIndex);
      }
      first = next;
    }
    if (next !== nGlyphs) {
      throw new Error(
        "CFF Table CID Font FDSelect format 3 range has bad final GID " + next
      );
    }
  } else {
    throw new Error(
      "CFF Table CID Font FDSelect table has unsupported format " + format2
    );
  }
  return fdSelect;
}
function parseCFFTable(data, start, font, opt) {
  font.tables.cff = {};
  var header = parseCFFHeader(data, start);
  var nameIndex = parseCFFIndex(
    data,
    header.endOffset,
    parse4.bytesToString
  );
  var topDictIndex = parseCFFIndex(data, nameIndex.endOffset);
  var stringIndex = parseCFFIndex(
    data,
    topDictIndex.endOffset,
    parse4.bytesToString
  );
  var globalSubrIndex = parseCFFIndex(data, stringIndex.endOffset);
  font.gsubrs = globalSubrIndex.objects;
  font.gsubrsBias = calcCFFSubroutineBias(font.gsubrs);
  var topDictArray = gatherCFFTopDicts(
    data,
    start,
    topDictIndex.objects,
    stringIndex.objects
  );
  if (topDictArray.length !== 1) {
    throw new Error(
      "CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + topDictArray.length
    );
  }
  var topDict = topDictArray[0];
  font.tables.cff.topDict = topDict;
  if (topDict._privateDict) {
    font.defaultWidthX = topDict._privateDict.defaultWidthX;
    font.nominalWidthX = topDict._privateDict.nominalWidthX;
  }
  if (topDict.ros[0] !== void 0 && topDict.ros[1] !== void 0) {
    font.isCIDFont = true;
  }
  if (font.isCIDFont) {
    var fdArrayOffset = topDict.fdArray;
    var fdSelectOffset = topDict.fdSelect;
    if (fdArrayOffset === 0 || fdSelectOffset === 0) {
      throw new Error(
        "Font is marked as a CID font, but FDArray and/or FDSelect information is missing"
      );
    }
    fdArrayOffset += start;
    var fdArrayIndex = parseCFFIndex(data, fdArrayOffset);
    var fdArray = gatherCFFTopDicts(
      data,
      start,
      fdArrayIndex.objects,
      stringIndex.objects
    );
    topDict._fdArray = fdArray;
    fdSelectOffset += start;
    topDict._fdSelect = parseCFFFDSelect(
      data,
      fdSelectOffset,
      font.numGlyphs,
      fdArray.length
    );
  }
  var privateDictOffset = start + topDict.private[1];
  var privateDict = parseCFFPrivateDict(
    data,
    privateDictOffset,
    topDict.private[0],
    stringIndex.objects
  );
  font.defaultWidthX = privateDict.defaultWidthX;
  font.nominalWidthX = privateDict.nominalWidthX;
  if (privateDict.subrs !== 0) {
    var subrOffset = privateDictOffset + privateDict.subrs;
    var subrIndex = parseCFFIndex(data, subrOffset);
    font.subrs = subrIndex.objects;
    font.subrsBias = calcCFFSubroutineBias(font.subrs);
  } else {
    font.subrs = [];
    font.subrsBias = 0;
  }
  var charStringsIndex;
  if (opt.lowMemory) {
    charStringsIndex = parseCFFIndexLowMemory(
      data,
      start + topDict.charStrings
    );
    font.nGlyphs = charStringsIndex.offsets.length;
  } else {
    charStringsIndex = parseCFFIndex(data, start + topDict.charStrings);
    font.nGlyphs = charStringsIndex.objects.length;
  }
  var charset = parseCFFCharset(
    data,
    start + topDict.charset,
    font.nGlyphs,
    stringIndex.objects
  );
  if (topDict.encoding === 0) {
    font.cffEncoding = new CffEncoding(cffStandardEncoding, charset);
  } else if (topDict.encoding === 1) {
    font.cffEncoding = new CffEncoding(cffExpertEncoding, charset);
  } else {
    font.cffEncoding = parseCFFEncoding(
      data,
      start + topDict.encoding,
      charset
    );
  }
  font.encoding = font.encoding || font.cffEncoding;
  font.glyphs = new glyphset.GlyphSet(font);
  if (opt.lowMemory) {
    font._push = function(i4) {
      var charString2 = getCffIndexObject(
        i4,
        charStringsIndex.offsets,
        data,
        start + topDict.charStrings
      );
      font.glyphs.push(
        i4,
        glyphset.cffGlyphLoader(font, i4, parseCFFCharstring, charString2)
      );
    };
  } else {
    for (var i3 = 0; i3 < font.nGlyphs; i3 += 1) {
      var charString = charStringsIndex.objects[i3];
      font.glyphs.push(
        i3,
        glyphset.cffGlyphLoader(font, i3, parseCFFCharstring, charString)
      );
    }
  }
}
function parseFvarAxis(data, start, names) {
  var axis = {};
  var p6 = new parse4.Parser(data, start);
  axis.tag = p6.parseTag();
  axis.minValue = p6.parseFixed();
  axis.defaultValue = p6.parseFixed();
  axis.maxValue = p6.parseFixed();
  p6.skip("uShort", 1);
  axis.name = names[p6.parseUShort()] || {};
  return axis;
}
function parseFvarInstance(data, start, axes, names) {
  var inst = {};
  var p6 = new parse4.Parser(data, start);
  inst.name = names[p6.parseUShort()] || {};
  p6.skip("uShort", 1);
  inst.coordinates = {};
  for (var i3 = 0; i3 < axes.length; ++i3) {
    inst.coordinates[axes[i3].tag] = p6.parseFixed();
  }
  return inst;
}
function parseFvarTable(data, start, names) {
  var p6 = new parse4.Parser(data, start);
  var tableVersion = p6.parseULong();
  check2.argument(
    tableVersion === 65536,
    "Unsupported fvar table version."
  );
  var offsetToData = p6.parseOffset16();
  p6.skip("uShort", 1);
  var axisCount = p6.parseUShort();
  var axisSize = p6.parseUShort();
  var instanceCount = p6.parseUShort();
  var instanceSize = p6.parseUShort();
  var axes = [];
  for (var i3 = 0; i3 < axisCount; i3++) {
    axes.push(
      parseFvarAxis(data, start + offsetToData + i3 * axisSize, names)
    );
  }
  var instances = [];
  var instanceStart = start + offsetToData + axisCount * axisSize;
  for (var j5 = 0; j5 < instanceCount; j5++) {
    instances.push(
      parseFvarInstance(
        data,
        instanceStart + j5 * instanceSize,
        axes,
        names
      )
    );
  }
  return { axes, instances };
}
function parseGDEFTable(data, start) {
  start = start || 0;
  var p6 = new Parser(data, start);
  var tableVersion = p6.parseVersion(1);
  check2.argument(
    tableVersion === 1 || tableVersion === 1.2 || tableVersion === 1.3,
    "Unsupported GDEF table version."
  );
  var gdef2 = {
    version: tableVersion,
    classDef: p6.parsePointer(Parser.classDef),
    attachList: p6.parsePointer(attachList),
    ligCaretList: p6.parsePointer(ligCaretList),
    markAttachClassDef: p6.parsePointer(Parser.classDef)
  };
  if (tableVersion >= 1.2) {
    gdef2.markGlyphSets = p6.parsePointer(markGlyphSets);
  }
  return gdef2;
}
function parseGposTable(data, start) {
  start = start || 0;
  var p6 = new Parser(data, start);
  var tableVersion = p6.parseVersion(1);
  check2.argument(
    tableVersion === 1 || tableVersion === 1.1,
    "Unsupported GPOS table version " + tableVersion
  );
  if (tableVersion === 1) {
    return {
      version: tableVersion,
      scripts: p6.parseScriptList(),
      features: p6.parseFeatureList(),
      lookups: p6.parseLookupList(subtableParsers)
    };
  } else {
    return {
      version: tableVersion,
      scripts: p6.parseScriptList(),
      features: p6.parseFeatureList(),
      lookups: p6.parseLookupList(subtableParsers),
      variations: p6.parseFeatureVariationsList()
    };
  }
}
function parseGsubTable(data, start) {
  start = start || 0;
  var p6 = new Parser(data, start);
  var tableVersion = p6.parseVersion(1);
  check2.argument(
    tableVersion === 1 || tableVersion === 1.1,
    "Unsupported GSUB table version."
  );
  if (tableVersion === 1) {
    return {
      version: tableVersion,
      scripts: p6.parseScriptList(),
      features: p6.parseFeatureList(),
      lookups: p6.parseLookupList(subtableParsers$1)
    };
  } else {
    return {
      version: tableVersion,
      scripts: p6.parseScriptList(),
      features: p6.parseFeatureList(),
      lookups: p6.parseLookupList(subtableParsers$1),
      variations: p6.parseFeatureVariationsList()
    };
  }
}
function parseHeadTable(data, start) {
  var head2 = {};
  var p6 = new parse4.Parser(data, start);
  head2.version = p6.parseVersion();
  head2.fontRevision = Math.round(p6.parseFixed() * 1e3) / 1e3;
  head2.checkSumAdjustment = p6.parseULong();
  head2.magicNumber = p6.parseULong();
  check2.argument(
    head2.magicNumber === 1594834165,
    "Font header has wrong magic number."
  );
  head2.flags = p6.parseUShort();
  head2.unitsPerEm = p6.parseUShort();
  head2.created = p6.parseLongDateTime();
  head2.modified = p6.parseLongDateTime();
  head2.xMin = p6.parseShort();
  head2.yMin = p6.parseShort();
  head2.xMax = p6.parseShort();
  head2.yMax = p6.parseShort();
  head2.macStyle = p6.parseUShort();
  head2.lowestRecPPEM = p6.parseUShort();
  head2.fontDirectionHint = p6.parseShort();
  head2.indexToLocFormat = p6.parseShort();
  head2.glyphDataFormat = p6.parseShort();
  return head2;
}
function parseHheaTable(data, start) {
  var hhea2 = {};
  var p6 = new parse4.Parser(data, start);
  hhea2.version = p6.parseVersion();
  hhea2.ascender = p6.parseShort();
  hhea2.descender = p6.parseShort();
  hhea2.lineGap = p6.parseShort();
  hhea2.advanceWidthMax = p6.parseUShort();
  hhea2.minLeftSideBearing = p6.parseShort();
  hhea2.minRightSideBearing = p6.parseShort();
  hhea2.xMaxExtent = p6.parseShort();
  hhea2.caretSlopeRise = p6.parseShort();
  hhea2.caretSlopeRun = p6.parseShort();
  hhea2.caretOffset = p6.parseShort();
  p6.relativeOffset += 8;
  hhea2.metricDataFormat = p6.parseShort();
  hhea2.numberOfHMetrics = p6.parseUShort();
  return hhea2;
}
function parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs) {
  var advanceWidth;
  var leftSideBearing;
  var p6 = new parse4.Parser(data, start);
  for (var i3 = 0; i3 < numGlyphs; i3 += 1) {
    if (i3 < numMetrics) {
      advanceWidth = p6.parseUShort();
      leftSideBearing = p6.parseShort();
    }
    var glyph = glyphs.get(i3);
    glyph.advanceWidth = advanceWidth;
    glyph.leftSideBearing = leftSideBearing;
  }
}
function parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs) {
  font._hmtxTableData = {};
  var advanceWidth;
  var leftSideBearing;
  var p6 = new parse4.Parser(data, start);
  for (var i3 = 0; i3 < numGlyphs; i3 += 1) {
    if (i3 < numMetrics) {
      advanceWidth = p6.parseUShort();
      leftSideBearing = p6.parseShort();
    }
    font._hmtxTableData[i3] = {
      advanceWidth,
      leftSideBearing
    };
  }
}
function parseHmtxTable(font, data, start, numMetrics, numGlyphs, glyphs, opt) {
  if (opt.lowMemory) {
    parseHmtxTableOnLowMemory(font, data, start, numMetrics, numGlyphs);
  } else {
    parseHmtxTableAll(data, start, numMetrics, numGlyphs, glyphs);
  }
}
function parseWindowsKernTable(p6) {
  var pairs = {};
  p6.skip("uShort");
  var subtableVersion = p6.parseUShort();
  check2.argument(subtableVersion === 0, "Unsupported kern sub-table version.");
  p6.skip("uShort", 2);
  var nPairs = p6.parseUShort();
  p6.skip("uShort", 3);
  for (var i3 = 0; i3 < nPairs; i3 += 1) {
    var leftIndex = p6.parseUShort();
    var rightIndex = p6.parseUShort();
    var value = p6.parseShort();
    pairs[leftIndex + "," + rightIndex] = value;
  }
  return pairs;
}
function parseMacKernTable(p6) {
  var pairs = {};
  p6.skip("uShort");
  var nTables = p6.parseULong();
  if (nTables > 1) {
    console.warn("Only the first kern subtable is supported.");
  }
  p6.skip("uLong");
  var coverage = p6.parseUShort();
  var subtableVersion = coverage & 255;
  p6.skip("uShort");
  if (subtableVersion === 0) {
    var nPairs = p6.parseUShort();
    p6.skip("uShort", 3);
    for (var i3 = 0; i3 < nPairs; i3 += 1) {
      var leftIndex = p6.parseUShort();
      var rightIndex = p6.parseUShort();
      var value = p6.parseShort();
      pairs[leftIndex + "," + rightIndex] = value;
    }
  }
  return pairs;
}
function parseKernTable(data, start) {
  var p6 = new parse4.Parser(data, start);
  var tableVersion = p6.parseUShort();
  if (tableVersion === 0) {
    return parseWindowsKernTable(p6);
  } else if (tableVersion === 1) {
    return parseMacKernTable(p6);
  } else {
    throw new Error("Unsupported kern table version (" + tableVersion + ").");
  }
}
function parseLtagTable(data, start) {
  var p6 = new parse4.Parser(data, start);
  var tableVersion = p6.parseULong();
  check2.argument(tableVersion === 1, "Unsupported ltag table version.");
  p6.skip("uLong", 1);
  var numTags = p6.parseULong();
  var tags = [];
  for (var i3 = 0; i3 < numTags; i3++) {
    var tag = "";
    var offset = start + p6.parseUShort();
    var length = p6.parseUShort();
    for (var j5 = offset; j5 < offset + length; ++j5) {
      tag += String.fromCharCode(data.getInt8(j5));
    }
    tags.push(tag);
  }
  return tags;
}
function parseLocaTable(data, start, numGlyphs, shortVersion) {
  var p6 = new parse4.Parser(data, start);
  var parseFn = shortVersion ? p6.parseUShort : p6.parseULong;
  var glyphOffsets = [];
  for (var i3 = 0; i3 < numGlyphs + 1; i3 += 1) {
    var glyphOffset = parseFn.call(p6);
    if (shortVersion) {
      glyphOffset *= 2;
    }
    glyphOffsets.push(glyphOffset);
  }
  return glyphOffsets;
}
function parseMaxpTable(data, start) {
  var maxp2 = {};
  var p6 = new parse4.Parser(data, start);
  maxp2.version = p6.parseVersion();
  maxp2.numGlyphs = p6.parseUShort();
  if (maxp2.version === 1) {
    maxp2.maxPoints = p6.parseUShort();
    maxp2.maxContours = p6.parseUShort();
    maxp2.maxCompositePoints = p6.parseUShort();
    maxp2.maxCompositeContours = p6.parseUShort();
    maxp2.maxZones = p6.parseUShort();
    maxp2.maxTwilightPoints = p6.parseUShort();
    maxp2.maxStorage = p6.parseUShort();
    maxp2.maxFunctionDefs = p6.parseUShort();
    maxp2.maxInstructionDefs = p6.parseUShort();
    maxp2.maxStackElements = p6.parseUShort();
    maxp2.maxSizeOfInstructions = p6.parseUShort();
    maxp2.maxComponentElements = p6.parseUShort();
    maxp2.maxComponentDepth = p6.parseUShort();
  }
  return maxp2;
}
function parseOS2Table(data, start) {
  var os22 = {};
  var p6 = new parse4.Parser(data, start);
  os22.version = p6.parseUShort();
  os22.xAvgCharWidth = p6.parseShort();
  os22.usWeightClass = p6.parseUShort();
  os22.usWidthClass = p6.parseUShort();
  os22.fsType = p6.parseUShort();
  os22.ySubscriptXSize = p6.parseShort();
  os22.ySubscriptYSize = p6.parseShort();
  os22.ySubscriptXOffset = p6.parseShort();
  os22.ySubscriptYOffset = p6.parseShort();
  os22.ySuperscriptXSize = p6.parseShort();
  os22.ySuperscriptYSize = p6.parseShort();
  os22.ySuperscriptXOffset = p6.parseShort();
  os22.ySuperscriptYOffset = p6.parseShort();
  os22.yStrikeoutSize = p6.parseShort();
  os22.yStrikeoutPosition = p6.parseShort();
  os22.sFamilyClass = p6.parseShort();
  os22.panose = [];
  for (var i3 = 0; i3 < 10; i3++) {
    os22.panose[i3] = p6.parseByte();
  }
  os22.ulUnicodeRange1 = p6.parseULong();
  os22.ulUnicodeRange2 = p6.parseULong();
  os22.ulUnicodeRange3 = p6.parseULong();
  os22.ulUnicodeRange4 = p6.parseULong();
  os22.achVendID = String.fromCharCode(
    p6.parseByte(),
    p6.parseByte(),
    p6.parseByte(),
    p6.parseByte()
  );
  os22.fsSelection = p6.parseUShort();
  os22.usFirstCharIndex = p6.parseUShort();
  os22.usLastCharIndex = p6.parseUShort();
  os22.sTypoAscender = p6.parseShort();
  os22.sTypoDescender = p6.parseShort();
  os22.sTypoLineGap = p6.parseShort();
  os22.usWinAscent = p6.parseUShort();
  os22.usWinDescent = p6.parseUShort();
  if (os22.version >= 1) {
    os22.ulCodePageRange1 = p6.parseULong();
    os22.ulCodePageRange2 = p6.parseULong();
  }
  if (os22.version >= 2) {
    os22.sxHeight = p6.parseShort();
    os22.sCapHeight = p6.parseShort();
    os22.usDefaultChar = p6.parseUShort();
    os22.usBreakChar = p6.parseUShort();
    os22.usMaxContent = p6.parseUShort();
  }
  return os22;
}
function parsePostTable(data, start) {
  var post2 = {};
  var p6 = new parse4.Parser(data, start);
  post2.version = p6.parseVersion();
  post2.italicAngle = p6.parseFixed();
  post2.underlinePosition = p6.parseShort();
  post2.underlineThickness = p6.parseShort();
  post2.isFixedPitch = p6.parseULong();
  post2.minMemType42 = p6.parseULong();
  post2.maxMemType42 = p6.parseULong();
  post2.minMemType1 = p6.parseULong();
  post2.maxMemType1 = p6.parseULong();
  post2.names = [];
  switch (post2.version) {
    case 1:
      break;
    case 2:
      post2.numberOfGlyphs = p6.parseUShort();
      post2.glyphNameIndex = new Array(post2.numberOfGlyphs);
      for (var i3 = 0; i3 < post2.numberOfGlyphs; i3++) {
        post2.glyphNameIndex[i3] = p6.parseUShort();
      }
      break;
    case 2.5:
      post2.numberOfGlyphs = p6.parseUShort();
      post2.offset = new Array(post2.numberOfGlyphs);
      for (var i$1 = 0; i$1 < post2.numberOfGlyphs; i$1++) {
        post2.offset[i$1] = p6.parseChar();
      }
      break;
  }
  return post2;
}
function parseMetaTable(data, start) {
  var p6 = new parse4.Parser(data, start);
  var tableVersion = p6.parseULong();
  check2.argument(tableVersion === 1, "Unsupported META table version.");
  p6.parseULong();
  p6.parseULong();
  var numDataMaps = p6.parseULong();
  var tags = {};
  for (var i3 = 0; i3 < numDataMaps; i3++) {
    var tag = p6.parseTag();
    var dataOffset = p6.parseULong();
    var dataLength = p6.parseULong();
    var text2 = decode4.UTF8(data, start + dataOffset, dataLength);
    tags[tag] = text2;
  }
  return tags;
}
function parseOpenTypeTableEntries(data, numTables) {
  var tableEntries = [];
  var p6 = 12;
  for (var i3 = 0; i3 < numTables; i3 += 1) {
    var tag = parse4.getTag(data, p6);
    var checksum = parse4.getULong(data, p6 + 4);
    var offset = parse4.getULong(data, p6 + 8);
    var length = parse4.getULong(data, p6 + 12);
    tableEntries.push({
      tag,
      checksum,
      offset,
      length,
      compression: false
    });
    p6 += 16;
  }
  return tableEntries;
}
function parseWOFFTableEntries(data, numTables) {
  var tableEntries = [];
  var p6 = 44;
  for (var i3 = 0; i3 < numTables; i3 += 1) {
    var tag = parse4.getTag(data, p6);
    var offset = parse4.getULong(data, p6 + 4);
    var compLength = parse4.getULong(data, p6 + 8);
    var origLength = parse4.getULong(data, p6 + 12);
    var compression = void 0;
    if (compLength < origLength) {
      compression = "WOFF";
    } else {
      compression = false;
    }
    tableEntries.push({
      tag,
      offset,
      compression,
      compressedLength: compLength,
      length: origLength
    });
    p6 += 20;
  }
  return tableEntries;
}
function uncompressTable(data, tableEntry) {
  if (tableEntry.compression === "WOFF") {
    var inBuffer = new Uint8Array(
      data.buffer,
      tableEntry.offset + 2,
      tableEntry.compressedLength - 2
    );
    var outBuffer = new Uint8Array(tableEntry.length);
    inflateSync(inBuffer, outBuffer);
    if (outBuffer.byteLength !== tableEntry.length) {
      throw new Error(
        "Decompression error: " + tableEntry.tag + " decompressed length doesn't match recorded length"
      );
    }
    var view = new DataView(outBuffer.buffer, 0);
    return { data: view, offset: 0 };
  } else {
    return { data, offset: tableEntry.offset };
  }
}
function parseBuffer(buffer, opt) {
  opt = opt === void 0 || opt === null ? {} : opt;
  var indexToLocFormat;
  var font = new Font({ empty: true });
  var data = new DataView(buffer, 0);
  var numTables;
  var tableEntries = [];
  var signature = parse4.getTag(data, 0);
  if (signature === String.fromCharCode(0, 1, 0, 0) || signature === "true" || signature === "typ1") {
    font.outlinesFormat = "truetype";
    numTables = parse4.getUShort(data, 4);
    tableEntries = parseOpenTypeTableEntries(data, numTables);
  } else if (signature === "OTTO") {
    font.outlinesFormat = "cff";
    numTables = parse4.getUShort(data, 4);
    tableEntries = parseOpenTypeTableEntries(data, numTables);
  } else if (signature === "wOFF") {
    var flavor = parse4.getTag(data, 4);
    if (flavor === String.fromCharCode(0, 1, 0, 0)) {
      font.outlinesFormat = "truetype";
    } else if (flavor === "OTTO") {
      font.outlinesFormat = "cff";
    } else {
      throw new Error("Unsupported OpenType flavor " + signature);
    }
    numTables = parse4.getUShort(data, 12);
    tableEntries = parseWOFFTableEntries(data, numTables);
  } else {
    throw new Error("Unsupported OpenType signature " + signature);
  }
  var cffTableEntry;
  var fvarTableEntry;
  var glyfTableEntry;
  var gdefTableEntry;
  var gposTableEntry;
  var gsubTableEntry;
  var hmtxTableEntry;
  var kernTableEntry;
  var locaTableEntry;
  var metaTableEntry;
  var p6;
  for (var i3 = 0; i3 < numTables; i3 += 1) {
    var tableEntry = tableEntries[i3];
    var table = void 0;
    switch (tableEntry.tag) {
      case "cmap":
        table = uncompressTable(data, tableEntry);
        font.tables.cmap = cmap.parse(table.data, table.offset);
        font.encoding = new CmapEncoding(font.tables.cmap);
        break;
      case "cvt ":
        table = uncompressTable(data, tableEntry);
        p6 = new parse4.Parser(table.data, table.offset);
        font.tables.cvt = p6.parseShortList(tableEntry.length / 2);
        break;
      case "fvar":
        fvarTableEntry = tableEntry;
        break;
      case "fpgm":
        table = uncompressTable(data, tableEntry);
        p6 = new parse4.Parser(table.data, table.offset);
        font.tables.fpgm = p6.parseByteList(tableEntry.length);
        break;
      case "head":
        table = uncompressTable(data, tableEntry);
        font.tables.head = head.parse(table.data, table.offset);
        font.unitsPerEm = font.tables.head.unitsPerEm;
        indexToLocFormat = font.tables.head.indexToLocFormat;
        break;
      case "hhea":
        table = uncompressTable(data, tableEntry);
        font.tables.hhea = hhea.parse(table.data, table.offset);
        font.ascender = font.tables.hhea.ascender;
        font.descender = font.tables.hhea.descender;
        font.numberOfHMetrics = font.tables.hhea.numberOfHMetrics;
        break;
      case "hmtx":
        hmtxTableEntry = tableEntry;
        break;
      case "ltag":
        table = uncompressTable(data, tableEntry);
        ltagTable = ltag.parse(table.data, table.offset);
        break;
      case "maxp":
        table = uncompressTable(data, tableEntry);
        font.tables.maxp = maxp.parse(table.data, table.offset);
        font.numGlyphs = font.tables.maxp.numGlyphs;
        break;
      case "OS/2":
        table = uncompressTable(data, tableEntry);
        font.tables.os2 = os2.parse(table.data, table.offset);
        break;
      case "post":
        table = uncompressTable(data, tableEntry);
        font.tables.post = post.parse(table.data, table.offset);
        break;
      case "prep":
        table = uncompressTable(data, tableEntry);
        p6 = new parse4.Parser(table.data, table.offset);
        font.tables.prep = p6.parseByteList(tableEntry.length);
        break;
      case "glyf":
        glyfTableEntry = tableEntry;
        break;
      case "loca":
        locaTableEntry = tableEntry;
        break;
      case "CFF ":
        cffTableEntry = tableEntry;
        break;
      case "kern":
        kernTableEntry = tableEntry;
        break;
      case "GDEF":
        gdefTableEntry = tableEntry;
        break;
      case "GPOS":
        gposTableEntry = tableEntry;
        break;
      case "GSUB":
        gsubTableEntry = tableEntry;
        break;
      case "meta":
        metaTableEntry = tableEntry;
        break;
    }
  }
  if (glyfTableEntry && locaTableEntry) {
    var shortVersion = indexToLocFormat === 0;
    var locaTable = uncompressTable(data, locaTableEntry);
    var locaOffsets = loca.parse(
      locaTable.data,
      locaTable.offset,
      font.numGlyphs,
      shortVersion
    );
    var glyfTable = uncompressTable(data, glyfTableEntry);
    font.glyphs = glyf.parse(
      glyfTable.data,
      glyfTable.offset,
      locaOffsets,
      font,
      opt
    );
  } else if (cffTableEntry) {
    var cffTable = uncompressTable(data, cffTableEntry);
    cff.parse(cffTable.data, cffTable.offset, font, opt);
  } else {
    throw new Error("Font doesn't contain TrueType or CFF outlines.");
  }
  var hmtxTable = uncompressTable(data, hmtxTableEntry);
  hmtx.parse(
    font,
    hmtxTable.data,
    hmtxTable.offset,
    font.numberOfHMetrics,
    font.numGlyphs,
    font.glyphs,
    opt
  );
  addGlyphNames(font, opt);
  if (kernTableEntry) {
    var kernTable = uncompressTable(data, kernTableEntry);
    font.kerningPairs = kern.parse(kernTable.data, kernTable.offset);
  } else {
    font.kerningPairs = {};
  }
  if (gdefTableEntry) {
    var gdefTable = uncompressTable(data, gdefTableEntry);
    font.tables.gdef = gdef.parse(gdefTable.data, gdefTable.offset);
  }
  if (gposTableEntry) {
    var gposTable = uncompressTable(data, gposTableEntry);
    font.tables.gpos = gpos.parse(gposTable.data, gposTable.offset);
    font.position.init();
  }
  if (gsubTableEntry) {
    var gsubTable = uncompressTable(data, gsubTableEntry);
    font.tables.gsub = gsub.parse(gsubTable.data, gsubTable.offset);
  }
  if (fvarTableEntry) {
    var fvarTable = uncompressTable(data, fvarTableEntry);
    font.tables.fvar = fvar.parse(
      fvarTable.data,
      fvarTable.offset,
      font.names
    );
  }
  if (metaTableEntry) {
    var metaTable = uncompressTable(data, metaTableEntry);
    font.tables.meta = meta.parse(metaTable.data, metaTable.offset);
    font.metas = font.tables.meta;
  }
  return font;
}
function load() {
}
function loadSync() {
}
var u8, u16, u322, fleb, fdeb, clim, freb, _a, fl, revfl, _b, fd, rev, x4, i3, hMap, flt, i3, i3, i3, i3, fdt, i3, flrm, fdrm, max, bits, bits16, shft, slc, ec, err, inflt, et, td, tds, cffStandardStrings, cffStandardEncoding, cffExpertEncoding, check2, glyphset, typeOffsets, langSysTable, parse4, glyf, instructionTable, exec, execGlyph, execComponent, roundSuper, xUnitVector, yUnitVector, HPZero, defaultState, arabicWordCheck, arabicSentenceCheck, SUBSTITUTIONS, latinWordCheck, cmap, TOP_DICT_META, PRIVATE_DICT_META, cff, fvar, attachList, caretValue, ligGlyph, ligCaretList, markGlyphSets, gdef, subtableParsers, gpos, subtableParsers$1, lookupRecordDesc, gsub, head, hhea, hmtx, kern, ltag, loca, maxp, os2, post, decode4, eightBitMacEncodings, meta, opentype, opentype_module_default;
var init_opentype_module = __esm({
  "../../node_modules/@shuding/opentype.js/dist/opentype.module.js"() {
    u8 = Uint8Array;
    u16 = Uint16Array;
    u322 = Uint32Array;
    fleb = new u8([
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      1,
      1,
      1,
      1,
      2,
      2,
      2,
      2,
      3,
      3,
      3,
      3,
      4,
      4,
      4,
      4,
      5,
      5,
      5,
      5,
      0,
      /* unused */
      0,
      0,
      /* impossible */
      0
    ]);
    fdeb = new u8([
      0,
      0,
      0,
      0,
      1,
      1,
      2,
      2,
      3,
      3,
      4,
      4,
      5,
      5,
      6,
      6,
      7,
      7,
      8,
      8,
      9,
      9,
      10,
      10,
      11,
      11,
      12,
      12,
      13,
      13,
      /* unused */
      0,
      0
    ]);
    clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
    freb = function(eb, start) {
      var b5 = new u16(31);
      for (var i3 = 0; i3 < 31; ++i3) {
        b5[i3] = start += 1 << eb[i3 - 1];
      }
      var r4 = new u322(b5[30]);
      for (var i3 = 1; i3 < 30; ++i3) {
        for (var j5 = b5[i3]; j5 < b5[i3 + 1]; ++j5) {
          r4[j5] = j5 - b5[i3] << 5 | i3;
        }
      }
      return [b5, r4];
    };
    _a = freb(fleb, 2);
    fl = _a[0];
    revfl = _a[1];
    fl[28] = 258, revfl[258] = 28;
    _b = freb(fdeb, 0);
    fd = _b[0];
    rev = new u16(32768);
    for (i3 = 0; i3 < 32768; ++i3) {
      x4 = (i3 & 43690) >>> 1 | (i3 & 21845) << 1;
      x4 = (x4 & 52428) >>> 2 | (x4 & 13107) << 2;
      x4 = (x4 & 61680) >>> 4 | (x4 & 3855) << 4;
      rev[i3] = ((x4 & 65280) >>> 8 | (x4 & 255) << 8) >>> 1;
    }
    hMap = function(cd, mb, r4) {
      var s3 = cd.length;
      var i3 = 0;
      var l3 = new u16(mb);
      for (; i3 < s3; ++i3) {
        if (cd[i3]) {
          ++l3[cd[i3] - 1];
        }
      }
      var le2 = new u16(mb);
      for (i3 = 0; i3 < mb; ++i3) {
        le2[i3] = le2[i3 - 1] + l3[i3 - 1] << 1;
      }
      var co2;
      if (r4) {
        co2 = new u16(1 << mb);
        var rvb = 15 - mb;
        for (i3 = 0; i3 < s3; ++i3) {
          if (cd[i3]) {
            var sv = i3 << 4 | cd[i3];
            var r_1 = mb - cd[i3];
            var v4 = le2[cd[i3] - 1]++ << r_1;
            for (var m4 = v4 | (1 << r_1) - 1; v4 <= m4; ++v4) {
              co2[rev[v4] >>> rvb] = sv;
            }
          }
        }
      } else {
        co2 = new u16(s3);
        for (i3 = 0; i3 < s3; ++i3) {
          if (cd[i3]) {
            co2[i3] = rev[le2[cd[i3] - 1]++] >>> 15 - cd[i3];
          }
        }
      }
      return co2;
    };
    flt = new u8(288);
    for (i3 = 0; i3 < 144; ++i3) {
      flt[i3] = 8;
    }
    for (i3 = 144; i3 < 256; ++i3) {
      flt[i3] = 9;
    }
    for (i3 = 256; i3 < 280; ++i3) {
      flt[i3] = 7;
    }
    for (i3 = 280; i3 < 288; ++i3) {
      flt[i3] = 8;
    }
    fdt = new u8(32);
    for (i3 = 0; i3 < 32; ++i3) {
      fdt[i3] = 5;
    }
    flrm = /* @__PURE__ */ hMap(flt, 9, 1);
    fdrm = /* @__PURE__ */ hMap(fdt, 5, 1);
    max = function(a3) {
      var m4 = a3[0];
      for (var i3 = 1; i3 < a3.length; ++i3) {
        if (a3[i3] > m4) {
          m4 = a3[i3];
        }
      }
      return m4;
    };
    bits = function(d5, p6, m4) {
      var o5 = p6 / 8 | 0;
      return (d5[o5] | d5[o5 + 1] << 8) >> (p6 & 7) & m4;
    };
    bits16 = function(d5, p6) {
      var o5 = p6 / 8 | 0;
      return (d5[o5] | d5[o5 + 1] << 8 | d5[o5 + 2] << 16) >> (p6 & 7);
    };
    shft = function(p6) {
      return (p6 + 7) / 8 | 0;
    };
    slc = function(v4, s3, e2) {
      if (s3 == null || s3 < 0) {
        s3 = 0;
      }
      if (e2 == null || e2 > v4.length) {
        e2 = v4.length;
      }
      var n3 = new (v4.BYTES_PER_ELEMENT == 2 ? u16 : v4.BYTES_PER_ELEMENT == 4 ? u322 : u8)(e2 - s3);
      n3.set(v4.subarray(s3, e2));
      return n3;
    };
    ec = [
      "unexpected EOF",
      "invalid block type",
      "invalid length/literal",
      "invalid distance",
      "stream finished",
      "no stream handler",
      ,
      "no callback",
      "invalid UTF-8 data",
      "extra field too long",
      "date not in range 1980-2099",
      "filename too long",
      "stream finishing",
      "invalid zip data"
      // determined by unknown compression method
    ];
    err = function(ind, msg, nt2) {
      var e2 = new Error(msg || ec[ind]);
      e2.code = ind;
      if (Error.captureStackTrace) {
        Error.captureStackTrace(e2, err);
      }
      if (!nt2) {
        throw e2;
      }
      return e2;
    };
    inflt = function(dat, buf2, st3) {
      var sl2 = dat.length;
      if (!sl2 || st3 && st3.f && !st3.l) {
        return buf2 || new u8(0);
      }
      var noBuf = !buf2 || st3;
      var noSt = !st3 || st3.i;
      if (!st3) {
        st3 = {};
      }
      if (!buf2) {
        buf2 = new u8(sl2 * 3);
      }
      var cbuf = function(l4) {
        var bl2 = buf2.length;
        if (l4 > bl2) {
          var nbuf = new u8(Math.max(bl2 * 2, l4));
          nbuf.set(buf2);
          buf2 = nbuf;
        }
      };
      var final = st3.f || 0, pos = st3.p || 0, bt3 = st3.b || 0, lm = st3.l, dm = st3.d, lbt = st3.m, dbt = st3.n;
      var tbts = sl2 * 8;
      do {
        if (!lm) {
          final = bits(dat, pos, 1);
          var type = bits(dat, pos + 1, 3);
          pos += 3;
          if (!type) {
            var s3 = shft(pos) + 4, l3 = dat[s3 - 4] | dat[s3 - 3] << 8, t2 = s3 + l3;
            if (t2 > sl2) {
              if (noSt) {
                err(0);
              }
              break;
            }
            if (noBuf) {
              cbuf(bt3 + l3);
            }
            buf2.set(dat.subarray(s3, t2), bt3);
            st3.b = bt3 += l3, st3.p = pos = t2 * 8, st3.f = final;
            continue;
          } else if (type == 1) {
            lm = flrm, dm = fdrm, lbt = 9, dbt = 5;
          } else if (type == 2) {
            var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;
            var tl2 = hLit + bits(dat, pos + 5, 31) + 1;
            pos += 14;
            var ldt = new u8(tl2);
            var clt = new u8(19);
            for (var i3 = 0; i3 < hcLen; ++i3) {
              clt[clim[i3]] = bits(dat, pos + i3 * 3, 7);
            }
            pos += hcLen * 3;
            var clb = max(clt), clbmsk = (1 << clb) - 1;
            var clm = hMap(clt, clb, 1);
            for (var i3 = 0; i3 < tl2; ) {
              var r4 = clm[bits(dat, pos, clbmsk)];
              pos += r4 & 15;
              var s3 = r4 >>> 4;
              if (s3 < 16) {
                ldt[i3++] = s3;
              } else {
                var c4 = 0, n3 = 0;
                if (s3 == 16) {
                  n3 = 3 + bits(dat, pos, 3), pos += 2, c4 = ldt[i3 - 1];
                } else if (s3 == 17) {
                  n3 = 3 + bits(dat, pos, 7), pos += 3;
                } else if (s3 == 18) {
                  n3 = 11 + bits(dat, pos, 127), pos += 7;
                }
                while (n3--) {
                  ldt[i3++] = c4;
                }
              }
            }
            var lt2 = ldt.subarray(0, hLit), dt3 = ldt.subarray(hLit);
            lbt = max(lt2);
            dbt = max(dt3);
            lm = hMap(lt2, lbt, 1);
            dm = hMap(dt3, dbt, 1);
          } else {
            err(1);
          }
          if (pos > tbts) {
            if (noSt) {
              err(0);
            }
            break;
          }
        }
        if (noBuf) {
          cbuf(bt3 + 131072);
        }
        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;
        var lpos = pos;
        for (; ; lpos = pos) {
          var c4 = lm[bits16(dat, pos) & lms], sym = c4 >>> 4;
          pos += c4 & 15;
          if (pos > tbts) {
            if (noSt) {
              err(0);
            }
            break;
          }
          if (!c4) {
            err(2);
          }
          if (sym < 256) {
            buf2[bt3++] = sym;
          } else if (sym == 256) {
            lpos = pos, lm = null;
            break;
          } else {
            var add = sym - 254;
            if (sym > 264) {
              var i3 = sym - 257, b5 = fleb[i3];
              add = bits(dat, pos, (1 << b5) - 1) + fl[i3];
              pos += b5;
            }
            var d5 = dm[bits16(dat, pos) & dms], dsym = d5 >>> 4;
            if (!d5) {
              err(3);
            }
            pos += d5 & 15;
            var dt3 = fd[dsym];
            if (dsym > 3) {
              var b5 = fdeb[dsym];
              dt3 += bits16(dat, pos) & (1 << b5) - 1, pos += b5;
            }
            if (pos > tbts) {
              if (noSt) {
                err(0);
              }
              break;
            }
            if (noBuf) {
              cbuf(bt3 + 131072);
            }
            var end3 = bt3 + add;
            for (; bt3 < end3; bt3 += 4) {
              buf2[bt3] = buf2[bt3 - dt3];
              buf2[bt3 + 1] = buf2[bt3 + 1 - dt3];
              buf2[bt3 + 2] = buf2[bt3 + 2 - dt3];
              buf2[bt3 + 3] = buf2[bt3 + 3 - dt3];
            }
            bt3 = end3;
          }
        }
        st3.l = lm, st3.p = lpos, st3.b = bt3, st3.f = final;
        if (lm) {
          final = 1, st3.m = lbt, st3.d = dm, st3.n = dbt;
        }
      } while (!final);
      return bt3 == buf2.length ? buf2 : slc(buf2, 0, bt3);
    };
    et = /* @__PURE__ */ new u8(0);
    td = typeof TextDecoder != "undefined" && /* @__PURE__ */ new TextDecoder();
    tds = 0;
    try {
      td.decode(et, { stream: true });
      tds = 1;
    } catch (e2) {
    }
    Path.prototype.moveTo = function(x4, y3) {
      this.commands.push({
        type: "M",
        x: x4,
        y: y3
      });
    };
    Path.prototype.lineTo = function(x4, y3) {
      this.commands.push({
        type: "L",
        x: x4,
        y: y3
      });
    };
    Path.prototype.curveTo = Path.prototype.bezierCurveTo = function(x1, y1, x22, y22, x4, y3) {
      this.commands.push({
        type: "C",
        x1,
        y1,
        x2: x22,
        y2: y22,
        x: x4,
        y: y3
      });
    };
    Path.prototype.quadTo = Path.prototype.quadraticCurveTo = function(x1, y1, x4, y3) {
      this.commands.push({
        type: "Q",
        x1,
        y1,
        x: x4,
        y: y3
      });
    };
    Path.prototype.close = Path.prototype.closePath = function() {
      this.commands.push({
        type: "Z"
      });
    };
    Path.prototype.extend = function(pathOrCommands) {
      if (pathOrCommands.commands) {
        pathOrCommands = pathOrCommands.commands;
      }
      Array.prototype.push.apply(this.commands, pathOrCommands);
    };
    Path.prototype.toPathData = function(decimalPlaces) {
      decimalPlaces = decimalPlaces !== void 0 ? decimalPlaces : 2;
      function floatToString(v4) {
        if (Math.round(v4) === v4) {
          return "" + Math.round(v4);
        } else {
          return v4.toFixed(decimalPlaces);
        }
      }
      function packValues() {
        var arguments$1 = arguments;
        var s3 = "";
        for (var i4 = 0; i4 < arguments.length; i4 += 1) {
          var v4 = arguments$1[i4];
          if (v4 >= 0 && i4 > 0) {
            s3 += " ";
          }
          s3 += floatToString(v4);
        }
        return s3;
      }
      var d5 = "";
      for (var i3 = 0; i3 < this.commands.length; i3 += 1) {
        var cmd = this.commands[i3];
        if (cmd.type === "M") {
          d5 += "M" + packValues(cmd.x, cmd.y);
        } else if (cmd.type === "L") {
          d5 += "L" + packValues(cmd.x, cmd.y);
        } else if (cmd.type === "C") {
          d5 += "C" + packValues(cmd.x1, cmd.y1, cmd.x2, cmd.y2, cmd.x, cmd.y);
        } else if (cmd.type === "Q") {
          d5 += "Q" + packValues(cmd.x1, cmd.y1, cmd.x, cmd.y);
        } else if (cmd.type === "Z") {
          d5 += "Z";
        }
      }
      return d5;
    };
    cffStandardStrings = [
      ".notdef",
      "space",
      "exclam",
      "quotedbl",
      "numbersign",
      "dollar",
      "percent",
      "ampersand",
      "quoteright",
      "parenleft",
      "parenright",
      "asterisk",
      "plus",
      "comma",
      "hyphen",
      "period",
      "slash",
      "zero",
      "one",
      "two",
      "three",
      "four",
      "five",
      "six",
      "seven",
      "eight",
      "nine",
      "colon",
      "semicolon",
      "less",
      "equal",
      "greater",
      "question",
      "at",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      "bracketleft",
      "backslash",
      "bracketright",
      "asciicircum",
      "underscore",
      "quoteleft",
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h",
      "i",
      "j",
      "k",
      "l",
      "m",
      "n",
      "o",
      "p",
      "q",
      "r",
      "s",
      "t",
      "u",
      "v",
      "w",
      "x",
      "y",
      "z",
      "braceleft",
      "bar",
      "braceright",
      "asciitilde",
      "exclamdown",
      "cent",
      "sterling",
      "fraction",
      "yen",
      "florin",
      "section",
      "currency",
      "quotesingle",
      "quotedblleft",
      "guillemotleft",
      "guilsinglleft",
      "guilsinglright",
      "fi",
      "fl",
      "endash",
      "dagger",
      "daggerdbl",
      "periodcentered",
      "paragraph",
      "bullet",
      "quotesinglbase",
      "quotedblbase",
      "quotedblright",
      "guillemotright",
      "ellipsis",
      "perthousand",
      "questiondown",
      "grave",
      "acute",
      "circumflex",
      "tilde",
      "macron",
      "breve",
      "dotaccent",
      "dieresis",
      "ring",
      "cedilla",
      "hungarumlaut",
      "ogonek",
      "caron",
      "emdash",
      "AE",
      "ordfeminine",
      "Lslash",
      "Oslash",
      "OE",
      "ordmasculine",
      "ae",
      "dotlessi",
      "lslash",
      "oslash",
      "oe",
      "germandbls",
      "onesuperior",
      "logicalnot",
      "mu",
      "trademark",
      "Eth",
      "onehalf",
      "plusminus",
      "Thorn",
      "onequarter",
      "divide",
      "brokenbar",
      "degree",
      "thorn",
      "threequarters",
      "twosuperior",
      "registered",
      "minus",
      "eth",
      "multiply",
      "threesuperior",
      "copyright",
      "Aacute",
      "Acircumflex",
      "Adieresis",
      "Agrave",
      "Aring",
      "Atilde",
      "Ccedilla",
      "Eacute",
      "Ecircumflex",
      "Edieresis",
      "Egrave",
      "Iacute",
      "Icircumflex",
      "Idieresis",
      "Igrave",
      "Ntilde",
      "Oacute",
      "Ocircumflex",
      "Odieresis",
      "Ograve",
      "Otilde",
      "Scaron",
      "Uacute",
      "Ucircumflex",
      "Udieresis",
      "Ugrave",
      "Yacute",
      "Ydieresis",
      "Zcaron",
      "aacute",
      "acircumflex",
      "adieresis",
      "agrave",
      "aring",
      "atilde",
      "ccedilla",
      "eacute",
      "ecircumflex",
      "edieresis",
      "egrave",
      "iacute",
      "icircumflex",
      "idieresis",
      "igrave",
      "ntilde",
      "oacute",
      "ocircumflex",
      "odieresis",
      "ograve",
      "otilde",
      "scaron",
      "uacute",
      "ucircumflex",
      "udieresis",
      "ugrave",
      "yacute",
      "ydieresis",
      "zcaron",
      "exclamsmall",
      "Hungarumlautsmall",
      "dollaroldstyle",
      "dollarsuperior",
      "ampersandsmall",
      "Acutesmall",
      "parenleftsuperior",
      "parenrightsuperior",
      "266 ff",
      "onedotenleader",
      "zerooldstyle",
      "oneoldstyle",
      "twooldstyle",
      "threeoldstyle",
      "fouroldstyle",
      "fiveoldstyle",
      "sixoldstyle",
      "sevenoldstyle",
      "eightoldstyle",
      "nineoldstyle",
      "commasuperior",
      "threequartersemdash",
      "periodsuperior",
      "questionsmall",
      "asuperior",
      "bsuperior",
      "centsuperior",
      "dsuperior",
      "esuperior",
      "isuperior",
      "lsuperior",
      "msuperior",
      "nsuperior",
      "osuperior",
      "rsuperior",
      "ssuperior",
      "tsuperior",
      "ff",
      "ffi",
      "ffl",
      "parenleftinferior",
      "parenrightinferior",
      "Circumflexsmall",
      "hyphensuperior",
      "Gravesmall",
      "Asmall",
      "Bsmall",
      "Csmall",
      "Dsmall",
      "Esmall",
      "Fsmall",
      "Gsmall",
      "Hsmall",
      "Ismall",
      "Jsmall",
      "Ksmall",
      "Lsmall",
      "Msmall",
      "Nsmall",
      "Osmall",
      "Psmall",
      "Qsmall",
      "Rsmall",
      "Ssmall",
      "Tsmall",
      "Usmall",
      "Vsmall",
      "Wsmall",
      "Xsmall",
      "Ysmall",
      "Zsmall",
      "colonmonetary",
      "onefitted",
      "rupiah",
      "Tildesmall",
      "exclamdownsmall",
      "centoldstyle",
      "Lslashsmall",
      "Scaronsmall",
      "Zcaronsmall",
      "Dieresissmall",
      "Brevesmall",
      "Caronsmall",
      "Dotaccentsmall",
      "Macronsmall",
      "figuredash",
      "hypheninferior",
      "Ogoneksmall",
      "Ringsmall",
      "Cedillasmall",
      "questiondownsmall",
      "oneeighth",
      "threeeighths",
      "fiveeighths",
      "seveneighths",
      "onethird",
      "twothirds",
      "zerosuperior",
      "foursuperior",
      "fivesuperior",
      "sixsuperior",
      "sevensuperior",
      "eightsuperior",
      "ninesuperior",
      "zeroinferior",
      "oneinferior",
      "twoinferior",
      "threeinferior",
      "fourinferior",
      "fiveinferior",
      "sixinferior",
      "seveninferior",
      "eightinferior",
      "nineinferior",
      "centinferior",
      "dollarinferior",
      "periodinferior",
      "commainferior",
      "Agravesmall",
      "Aacutesmall",
      "Acircumflexsmall",
      "Atildesmall",
      "Adieresissmall",
      "Aringsmall",
      "AEsmall",
      "Ccedillasmall",
      "Egravesmall",
      "Eacutesmall",
      "Ecircumflexsmall",
      "Edieresissmall",
      "Igravesmall",
      "Iacutesmall",
      "Icircumflexsmall",
      "Idieresissmall",
      "Ethsmall",
      "Ntildesmall",
      "Ogravesmall",
      "Oacutesmall",
      "Ocircumflexsmall",
      "Otildesmall",
      "Odieresissmall",
      "OEsmall",
      "Oslashsmall",
      "Ugravesmall",
      "Uacutesmall",
      "Ucircumflexsmall",
      "Udieresissmall",
      "Yacutesmall",
      "Thornsmall",
      "Ydieresissmall",
      "001.000",
      "001.001",
      "001.002",
      "001.003",
      "Black",
      "Bold",
      "Book",
      "Light",
      "Medium",
      "Regular",
      "Roman",
      "Semibold"
    ];
    cffStandardEncoding = [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "space",
      "exclam",
      "quotedbl",
      "numbersign",
      "dollar",
      "percent",
      "ampersand",
      "quoteright",
      "parenleft",
      "parenright",
      "asterisk",
      "plus",
      "comma",
      "hyphen",
      "period",
      "slash",
      "zero",
      "one",
      "two",
      "three",
      "four",
      "five",
      "six",
      "seven",
      "eight",
      "nine",
      "colon",
      "semicolon",
      "less",
      "equal",
      "greater",
      "question",
      "at",
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z",
      "bracketleft",
      "backslash",
      "bracketright",
      "asciicircum",
      "underscore",
      "quoteleft",
      "a",
      "b",
      "c",
      "d",
      "e",
      "f",
      "g",
      "h",
      "i",
      "j",
      "k",
      "l",
      "m",
      "n",
      "o",
      "p",
      "q",
      "r",
      "s",
      "t",
      "u",
      "v",
      "w",
      "x",
      "y",
      "z",
      "braceleft",
      "bar",
      "braceright",
      "asciitilde",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "exclamdown",
      "cent",
      "sterling",
      "fraction",
      "yen",
      "florin",
      "section",
      "currency",
      "quotesingle",
      "quotedblleft",
      "guillemotleft",
      "guilsinglleft",
      "guilsinglright",
      "fi",
      "fl",
      "",
      "endash",
      "dagger",
      "daggerdbl",
      "periodcentered",
      "",
      "paragraph",
      "bullet",
      "quotesinglbase",
      "quotedblbase",
      "quotedblright",
      "guillemotright",
      "ellipsis",
      "perthousand",
      "",
      "questiondown",
      "",
      "grave",
      "acute",
      "circumflex",
      "tilde",
      "macron",
      "breve",
      "dotaccent",
      "dieresis",
      "",
      "ring",
      "cedilla",
      "",
      "hungarumlaut",
      "ogonek",
      "caron",
      "emdash",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "AE",
      "",
      "ordfeminine",
      "",
      "",
      "",
      "",
      "Lslash",
      "Oslash",
      "OE",
      "ordmasculine",
      "",
      "",
      "",
      "",
      "",
      "ae",
      "",
      "",
      "",
      "dotlessi",
      "",
      "",
      "lslash",
      "oslash",
      "oe",
      "germandbls"
    ];
    cffExpertEncoding = [
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "space",
      "exclamsmall",
      "Hungarumlautsmall",
      "",
      "dollaroldstyle",
      "dollarsuperior",
      "ampersandsmall",
      "Acutesmall",
      "parenleftsuperior",
      "parenrightsuperior",
      "twodotenleader",
      "onedotenleader",
      "comma",
      "hyphen",
      "period",
      "fraction",
      "zerooldstyle",
      "oneoldstyle",
      "twooldstyle",
      "threeoldstyle",
      "fouroldstyle",
      "fiveoldstyle",
      "sixoldstyle",
      "sevenoldstyle",
      "eightoldstyle",
      "nineoldstyle",
      "colon",
      "semicolon",
      "commasuperior",
      "threequartersemdash",
      "periodsuperior",
      "questionsmall",
      "",
      "asuperior",
      "bsuperior",
      "centsuperior",
      "dsuperior",
      "esuperior",
      "",
      "",
      "isuperior",
      "",
      "",
      "lsuperior",
      "msuperior",
      "nsuperior",
      "osuperior",
      "",
      "",
      "rsuperior",
      "ssuperior",
      "tsuperior",
      "",
      "ff",
      "fi",
      "fl",
      "ffi",
      "ffl",
      "parenleftinferior",
      "",
      "parenrightinferior",
      "Circumflexsmall",
      "hyphensuperior",
      "Gravesmall",
      "Asmall",
      "Bsmall",
      "Csmall",
      "Dsmall",
      "Esmall",
      "Fsmall",
      "Gsmall",
      "Hsmall",
      "Ismall",
      "Jsmall",
      "Ksmall",
      "Lsmall",
      "Msmall",
      "Nsmall",
      "Osmall",
      "Psmall",
      "Qsmall",
      "Rsmall",
      "Ssmall",
      "Tsmall",
      "Usmall",
      "Vsmall",
      "Wsmall",
      "Xsmall",
      "Ysmall",
      "Zsmall",
      "colonmonetary",
      "onefitted",
      "rupiah",
      "Tildesmall",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "",
      "exclamdownsmall",
      "centoldstyle",
      "Lslashsmall",
      "",
      "",
      "Scaronsmall",
      "Zcaronsmall",
      "Dieresissmall",
      "Brevesmall",
      "Caronsmall",
      "",
      "Dotaccentsmall",
      "",
      "",
      "Macronsmall",
      "",
      "",
      "figuredash",
      "hypheninferior",
      "",
      "",
      "Ogoneksmall",
      "Ringsmall",
      "Cedillasmall",
      "",
      "",
      "",
      "onequarter",
      "onehalf",
      "threequarters",
      "questiondownsmall",
      "oneeighth",
      "threeeighths",
      "fiveeighths",
      "seveneighths",
      "onethird",
      "twothirds",
      "",
      "",
      "zerosuperior",
      "onesuperior",
      "twosuperior",
      "threesuperior",
      "foursuperior",
      "fivesuperior",
      "sixsuperior",
      "sevensuperior",
      "eightsuperior",
      "ninesuperior",
      "zeroinferior",
      "oneinferior",
      "twoinferior",
      "threeinferior",
      "fourinferior",
      "fiveinferior",
      "sixinferior",
      "seveninferior",
      "eightinferior",
      "nineinferior",
      "centinferior",
      "dollarinferior",
      "periodinferior",
      "commainferior",
      "Agravesmall",
      "Aacutesmall",
      "Acircumflexsmall",
      "Atildesmall",
      "Adieresissmall",
      "Aringsmall",
      "AEsmall",
      "Ccedillasmall",
      "Egravesmall",
      "Eacutesmall",
      "Ecircumflexsmall",
      "Edieresissmall",
      "Igravesmall",
      "Iacutesmall",
      "Icircumflexsmall",
      "Idieresissmall",
      "Ethsmall",
      "Ntildesmall",
      "Ogravesmall",
      "Oacutesmall",
      "Ocircumflexsmall",
      "Otildesmall",
      "Odieresissmall",
      "OEsmall",
      "Oslashsmall",
      "Ugravesmall",
      "Uacutesmall",
      "Ucircumflexsmall",
      "Udieresissmall",
      "Yacutesmall",
      "Thornsmall",
      "Ydieresissmall"
    ];
    DefaultEncoding.prototype.charToGlyphIndex = function(c4) {
      var code = c4.codePointAt(0);
      var glyphs = this.font.glyphs;
      if (glyphs) {
        for (var i3 = 0; i3 < glyphs.length; i3 += 1) {
          var glyph = glyphs.get(i3);
          for (var j5 = 0; j5 < glyph.unicodes.length; j5 += 1) {
            if (glyph.unicodes[j5] === code) {
              return i3;
            }
          }
        }
      }
      return null;
    };
    CmapEncoding.prototype.charToGlyphIndex = function(c4) {
      return this.cmap.glyphIndexMap[c4.codePointAt(0)] || 0;
    };
    CffEncoding.prototype.charToGlyphIndex = function(s3) {
      var code = s3.codePointAt(0);
      var charName = this.encoding[code];
      return this.charset.indexOf(charName);
    };
    check2 = { fail, argument, assert: argument };
    Glyph.prototype.bindConstructorValues = function(options) {
      this.index = options.index || 0;
      this.name = options.name || null;
      this.unicode = options.unicode || void 0;
      this.unicodes = options.unicodes || options.unicode !== void 0 ? [options.unicode] : [];
      if ("xMin" in options) {
        this.xMin = options.xMin;
      }
      if ("yMin" in options) {
        this.yMin = options.yMin;
      }
      if ("xMax" in options) {
        this.xMax = options.xMax;
      }
      if ("yMax" in options) {
        this.yMax = options.yMax;
      }
      if ("advanceWidth" in options) {
        this.advanceWidth = options.advanceWidth;
      }
      Object.defineProperty(this, "path", getPathDefinition(this, options.path));
    };
    Glyph.prototype.addUnicode = function(unicode) {
      if (this.unicodes.length === 0) {
        this.unicode = unicode;
      }
      this.unicodes.push(unicode);
    };
    Glyph.prototype.getPath = function(x4, y3, fontSize, options, font) {
      x4 = x4 !== void 0 ? x4 : 0;
      y3 = y3 !== void 0 ? y3 : 0;
      fontSize = fontSize !== void 0 ? fontSize : 72;
      var commands;
      var hPoints;
      if (!options) {
        options = {};
      }
      var xScale = options.xScale;
      var yScale = options.yScale;
      if (options.hinting && font && font.hinting) {
        hPoints = this.path && font.hinting.exec(this, fontSize);
      }
      if (hPoints) {
        commands = font.hinting.getCommands(hPoints);
        x4 = Math.round(x4);
        y3 = Math.round(y3);
        xScale = yScale = 1;
      } else {
        commands = this.path.commands;
        var scale = 1 / (this.path.unitsPerEm || 1e3) * fontSize;
        if (xScale === void 0) {
          xScale = scale;
        }
        if (yScale === void 0) {
          yScale = scale;
        }
      }
      var p6 = new Path();
      for (var i3 = 0; i3 < commands.length; i3 += 1) {
        var cmd = commands[i3];
        if (cmd.type === "M") {
          p6.moveTo(x4 + cmd.x * xScale, y3 + -cmd.y * yScale);
        } else if (cmd.type === "L") {
          p6.lineTo(x4 + cmd.x * xScale, y3 + -cmd.y * yScale);
        } else if (cmd.type === "Q") {
          p6.quadraticCurveTo(
            x4 + cmd.x1 * xScale,
            y3 + -cmd.y1 * yScale,
            x4 + cmd.x * xScale,
            y3 + -cmd.y * yScale
          );
        } else if (cmd.type === "C") {
          p6.curveTo(
            x4 + cmd.x1 * xScale,
            y3 + -cmd.y1 * yScale,
            x4 + cmd.x2 * xScale,
            y3 + -cmd.y2 * yScale,
            x4 + cmd.x * xScale,
            y3 + -cmd.y * yScale
          );
        } else if (cmd.type === "Z") {
          p6.closePath();
        }
      }
      return p6;
    };
    Glyph.prototype.getContours = function() {
      if (this.points === void 0) {
        return [];
      }
      var contours = [];
      var currentContour = [];
      for (var i3 = 0; i3 < this.points.length; i3 += 1) {
        var pt2 = this.points[i3];
        currentContour.push(pt2);
        if (pt2.lastPointOfContour) {
          contours.push(currentContour);
          currentContour = [];
        }
      }
      check2.argument(
        currentContour.length === 0,
        "There are still points left in the current contour."
      );
      return contours;
    };
    Glyph.prototype.getMetrics = function() {
      var commands = this.path.commands;
      var xCoords = [];
      var yCoords = [];
      for (var i3 = 0; i3 < commands.length; i3 += 1) {
        var cmd = commands[i3];
        if (cmd.type !== "Z") {
          xCoords.push(cmd.x);
          yCoords.push(cmd.y);
        }
        if (cmd.type === "Q" || cmd.type === "C") {
          xCoords.push(cmd.x1);
          yCoords.push(cmd.y1);
        }
        if (cmd.type === "C") {
          xCoords.push(cmd.x2);
          yCoords.push(cmd.y2);
        }
      }
      var metrics = {
        xMin: Math.min.apply(null, xCoords),
        yMin: Math.min.apply(null, yCoords),
        xMax: Math.max.apply(null, xCoords),
        yMax: Math.max.apply(null, yCoords),
        leftSideBearing: this.leftSideBearing
      };
      if (!isFinite(metrics.xMin)) {
        metrics.xMin = 0;
      }
      if (!isFinite(metrics.xMax)) {
        metrics.xMax = this.advanceWidth;
      }
      if (!isFinite(metrics.yMin)) {
        metrics.yMin = 0;
      }
      if (!isFinite(metrics.yMax)) {
        metrics.yMax = 0;
      }
      metrics.rightSideBearing = this.advanceWidth - metrics.leftSideBearing - (metrics.xMax - metrics.xMin);
      return metrics;
    };
    GlyphSet.prototype.get = function(index) {
      if (this.glyphs[index] === void 0) {
        this.font._push(index);
        if (typeof this.glyphs[index] === "function") {
          this.glyphs[index] = this.glyphs[index]();
        }
        var glyph = this.glyphs[index];
        var unicodeObj = this.font._IndexToUnicodeMap[index];
        if (unicodeObj) {
          for (var j5 = 0; j5 < unicodeObj.unicodes.length; j5++) {
            glyph.addUnicode(unicodeObj.unicodes[j5]);
          }
        }
        this.glyphs[index].advanceWidth = this.font._hmtxTableData[index].advanceWidth;
        this.glyphs[index].leftSideBearing = this.font._hmtxTableData[index].leftSideBearing;
      } else {
        if (typeof this.glyphs[index] === "function") {
          this.glyphs[index] = this.glyphs[index]();
        }
      }
      return this.glyphs[index];
    };
    GlyphSet.prototype.push = function(index, loader) {
      this.glyphs[index] = loader;
      this.length++;
    };
    glyphset = { GlyphSet, glyphLoader, ttfGlyphLoader, cffGlyphLoader };
    Layout.prototype = {
      /**
       * Binary search an object by "tag" property
       * @instance
       * @function searchTag
       * @memberof opentype.Layout
       * @param  {Array} arr
       * @param  {string} tag
       * @return {number}
       */
      searchTag,
      /**
       * Binary search in a list of numbers
       * @instance
       * @function binSearch
       * @memberof opentype.Layout
       * @param  {Array} arr
       * @param  {number} value
       * @return {number}
       */
      binSearch,
      /**
       * Get or create the Layout table (GSUB, GPOS etc).
       * @param  {boolean} create - Whether to create a new one.
       * @return {Object} The GSUB or GPOS table.
       */
      getTable: function(create) {
        var layout = this.font.tables[this.tableName];
        if (!layout && create) {
          layout = this.font.tables[this.tableName] = this.createDefaultTable();
        }
        return layout;
      },
      /**
       * Returns the best bet for a script name.
       * Returns 'DFLT' if it exists.
       * If not, returns 'latn' if it exists.
       * If neither exist, returns undefined.
       */
      getDefaultScriptName: function() {
        var layout = this.getTable();
        if (!layout) {
          return;
        }
        var hasLatn = false;
        for (var i3 = 0; i3 < layout.scripts.length; i3++) {
          var name = layout.scripts[i3].tag;
          if (name === "DFLT") {
            return name;
          }
          if (name === "latn") {
            hasLatn = true;
          }
        }
        if (hasLatn) {
          return "latn";
        }
      },
      /**
       * Returns all LangSysRecords in the given script.
       * @instance
       * @param {string} [script='DFLT']
       * @param {boolean} create - forces the creation of this script table if it doesn't exist.
       * @return {Object} An object with tag and script properties.
       */
      getScriptTable: function(script, create) {
        var layout = this.getTable(create);
        if (layout) {
          script = script || "DFLT";
          var scripts = layout.scripts;
          var pos = searchTag(layout.scripts, script);
          if (pos >= 0) {
            return scripts[pos].script;
          } else if (create) {
            var scr = {
              tag: script,
              script: {
                defaultLangSys: {
                  reserved: 0,
                  reqFeatureIndex: 65535,
                  featureIndexes: []
                },
                langSysRecords: []
              }
            };
            scripts.splice(-1 - pos, 0, scr);
            return scr.script;
          }
        }
      },
      /**
       * Returns a language system table
       * @instance
       * @param {string} [script='DFLT']
       * @param {string} [language='dlft']
       * @param {boolean} create - forces the creation of this langSysTable if it doesn't exist.
       * @return {Object}
       */
      getLangSysTable: function(script, language, create) {
        var scriptTable = this.getScriptTable(script, create);
        if (scriptTable) {
          if (!language || language === "dflt" || language === "DFLT") {
            return scriptTable.defaultLangSys;
          }
          var pos = searchTag(scriptTable.langSysRecords, language);
          if (pos >= 0) {
            return scriptTable.langSysRecords[pos].langSys;
          } else if (create) {
            var langSysRecord = {
              tag: language,
              langSys: {
                reserved: 0,
                reqFeatureIndex: 65535,
                featureIndexes: []
              }
            };
            scriptTable.langSysRecords.splice(-1 - pos, 0, langSysRecord);
            return langSysRecord.langSys;
          }
        }
      },
      /**
       * Get a specific feature table.
       * @instance
       * @param {string} [script='DFLT']
       * @param {string} [language='dlft']
       * @param {string} feature - One of the codes listed at https://www.microsoft.com/typography/OTSPEC/featurelist.htm
       * @param {boolean} create - forces the creation of the feature table if it doesn't exist.
       * @return {Object}
       */
      getFeatureTable: function(script, language, feature, create) {
        var langSysTable2 = this.getLangSysTable(script, language, create);
        if (langSysTable2) {
          var featureRecord;
          var featIndexes = langSysTable2.featureIndexes;
          var allFeatures = this.font.tables[this.tableName].features;
          for (var i3 = 0; i3 < featIndexes.length; i3++) {
            featureRecord = allFeatures[featIndexes[i3]];
            if (featureRecord.tag === feature) {
              return featureRecord.feature;
            }
          }
          if (create) {
            var index = allFeatures.length;
            check2.assert(
              index === 0 || feature >= allFeatures[index - 1].tag,
              "Features must be added in alphabetical order."
            );
            featureRecord = {
              tag: feature,
              feature: { params: 0, lookupListIndexes: [] }
            };
            allFeatures.push(featureRecord);
            featIndexes.push(index);
            return featureRecord.feature;
          }
        }
      },
      /**
       * Get the lookup tables of a given type for a script/language/feature.
       * @instance
       * @param {string} [script='DFLT']
       * @param {string} [language='dlft']
       * @param {string} feature - 4-letter feature code
       * @param {number} lookupType - 1 to 9
       * @param {boolean} create - forces the creation of the lookup table if it doesn't exist, with no subtables.
       * @return {Object[]}
       */
      getLookupTables: function(script, language, feature, lookupType, create) {
        var featureTable = this.getFeatureTable(
          script,
          language,
          feature,
          create
        );
        var tables = [];
        if (featureTable) {
          var lookupTable;
          var lookupListIndexes = featureTable.lookupListIndexes;
          var allLookups = this.font.tables[this.tableName].lookups;
          for (var i3 = 0; i3 < lookupListIndexes.length; i3++) {
            lookupTable = allLookups[lookupListIndexes[i3]];
            if (lookupTable.lookupType === lookupType) {
              tables.push(lookupTable);
            }
          }
          if (tables.length === 0 && create) {
            lookupTable = {
              lookupType,
              lookupFlag: 0,
              subtables: [],
              markFilteringSet: void 0
            };
            var index = allLookups.length;
            allLookups.push(lookupTable);
            lookupListIndexes.push(index);
            return [lookupTable];
          }
        }
        return tables;
      },
      /**
       * Find a glyph in a class definition table
       * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#class-definition-table
       * @param {object} classDefTable - an OpenType Layout class definition table
       * @param {number} glyphIndex - the index of the glyph to find
       * @returns {number} -1 if not found
       */
      getGlyphClass: function(classDefTable, glyphIndex) {
        switch (classDefTable.format) {
          case 1:
            if (classDefTable.startGlyph <= glyphIndex && glyphIndex < classDefTable.startGlyph + classDefTable.classes.length) {
              return classDefTable.classes[glyphIndex - classDefTable.startGlyph];
            }
            return 0;
          case 2:
            var range = searchRange(classDefTable.ranges, glyphIndex);
            return range ? range.classId : 0;
        }
      },
      /**
       * Find a glyph in a coverage table
       * https://docs.microsoft.com/en-us/typography/opentype/spec/chapter2#coverage-table
       * @param {object} coverageTable - an OpenType Layout coverage table
       * @param {number} glyphIndex - the index of the glyph to find
       * @returns {number} -1 if not found
       */
      getCoverageIndex: function(coverageTable, glyphIndex) {
        switch (coverageTable.format) {
          case 1:
            var index = binSearch(coverageTable.glyphs, glyphIndex);
            return index >= 0 ? index : -1;
          case 2:
            var range = searchRange(coverageTable.ranges, glyphIndex);
            return range ? range.index + glyphIndex - range.start : -1;
        }
      },
      /**
       * Returns the list of glyph indexes of a coverage table.
       * Format 1: the list is stored raw
       * Format 2: compact list as range records.
       * @instance
       * @param  {Object} coverageTable
       * @return {Array}
       */
      expandCoverage: function(coverageTable) {
        if (coverageTable.format === 1) {
          return coverageTable.glyphs;
        } else {
          var glyphs = [];
          var ranges = coverageTable.ranges;
          for (var i3 = 0; i3 < ranges.length; i3++) {
            var range = ranges[i3];
            var start = range.start;
            var end3 = range.end;
            for (var j5 = start; j5 <= end3; j5++) {
              glyphs.push(j5);
            }
          }
          return glyphs;
        }
      }
    };
    Position.prototype = Layout.prototype;
    Position.prototype.init = function() {
      var script = this.getDefaultScriptName();
      this.defaultKerningTables = this.getKerningTables(script);
    };
    Position.prototype.getKerningValue = function(kerningLookups, leftIndex, rightIndex) {
      for (var i3 = 0; i3 < kerningLookups.length; i3++) {
        var subtables = kerningLookups[i3].subtables;
        for (var j5 = 0; j5 < subtables.length; j5++) {
          var subtable = subtables[j5];
          var covIndex = this.getCoverageIndex(subtable.coverage, leftIndex);
          if (covIndex < 0) {
            continue;
          }
          switch (subtable.posFormat) {
            case 1:
              var pairSet = subtable.pairSets[covIndex];
              for (var k6 = 0; k6 < pairSet.length; k6++) {
                var pair = pairSet[k6];
                if (pair.secondGlyph === rightIndex) {
                  return pair.value1 && pair.value1.xAdvance || 0;
                }
              }
              break;
            case 2:
              var class1 = this.getGlyphClass(subtable.classDef1, leftIndex);
              var class2 = this.getGlyphClass(subtable.classDef2, rightIndex);
              var pair$1 = subtable.classRecords[class1][class2];
              return pair$1.value1 && pair$1.value1.xAdvance || 0;
          }
        }
      }
      return 0;
    };
    Position.prototype.getKerningTables = function(script, language) {
      if (this.font.tables.gpos) {
        return this.getLookupTables(script, language, "kern", 2);
      }
    };
    Substitution.prototype = Layout.prototype;
    Substitution.prototype.createDefaultTable = function() {
      return {
        version: 1,
        scripts: [
          {
            tag: "DFLT",
            script: {
              defaultLangSys: {
                reserved: 0,
                reqFeatureIndex: 65535,
                featureIndexes: []
              },
              langSysRecords: []
            }
          }
        ],
        features: [],
        lookups: []
      };
    };
    Substitution.prototype.getSingle = function(feature, script, language) {
      var substitutions = [];
      var lookupTables = this.getLookupTables(script, language, feature, 1);
      for (var idx = 0; idx < lookupTables.length; idx++) {
        var subtables = lookupTables[idx].subtables;
        for (var i3 = 0; i3 < subtables.length; i3++) {
          var subtable = subtables[i3];
          var glyphs = this.expandCoverage(subtable.coverage);
          var j5 = void 0;
          if (subtable.substFormat === 1) {
            var delta = subtable.deltaGlyphId;
            for (j5 = 0; j5 < glyphs.length; j5++) {
              var glyph = glyphs[j5];
              substitutions.push({ sub: glyph, by: glyph + delta });
            }
          } else {
            var substitute = subtable.substitute;
            for (j5 = 0; j5 < glyphs.length; j5++) {
              substitutions.push({ sub: glyphs[j5], by: substitute[j5] });
            }
          }
        }
      }
      return substitutions;
    };
    Substitution.prototype.getMultiple = function(feature, script, language) {
      var substitutions = [];
      var lookupTables = this.getLookupTables(script, language, feature, 2);
      for (var idx = 0; idx < lookupTables.length; idx++) {
        var subtables = lookupTables[idx].subtables;
        for (var i3 = 0; i3 < subtables.length; i3++) {
          var subtable = subtables[i3];
          var glyphs = this.expandCoverage(subtable.coverage);
          var j5 = void 0;
          for (j5 = 0; j5 < glyphs.length; j5++) {
            var glyph = glyphs[j5];
            var replacements = subtable.sequences[j5];
            substitutions.push({ sub: glyph, by: replacements });
          }
        }
      }
      return substitutions;
    };
    Substitution.prototype.getAlternates = function(feature, script, language) {
      var alternates = [];
      var lookupTables = this.getLookupTables(script, language, feature, 3);
      for (var idx = 0; idx < lookupTables.length; idx++) {
        var subtables = lookupTables[idx].subtables;
        for (var i3 = 0; i3 < subtables.length; i3++) {
          var subtable = subtables[i3];
          var glyphs = this.expandCoverage(subtable.coverage);
          var alternateSets = subtable.alternateSets;
          for (var j5 = 0; j5 < glyphs.length; j5++) {
            alternates.push({ sub: glyphs[j5], by: alternateSets[j5] });
          }
        }
      }
      return alternates;
    };
    Substitution.prototype.getLigatures = function(feature, script, language) {
      var ligatures = [];
      var lookupTables = this.getLookupTables(script, language, feature, 4);
      for (var idx = 0; idx < lookupTables.length; idx++) {
        var subtables = lookupTables[idx].subtables;
        for (var i3 = 0; i3 < subtables.length; i3++) {
          var subtable = subtables[i3];
          var glyphs = this.expandCoverage(subtable.coverage);
          var ligatureSets = subtable.ligatureSets;
          for (var j5 = 0; j5 < glyphs.length; j5++) {
            var startGlyph = glyphs[j5];
            var ligSet = ligatureSets[j5];
            for (var k6 = 0; k6 < ligSet.length; k6++) {
              var lig = ligSet[k6];
              ligatures.push({
                sub: [startGlyph].concat(lig.components),
                by: lig.ligGlyph
              });
            }
          }
        }
      }
      return ligatures;
    };
    Substitution.prototype.addSingle = function(feature, substitution, script, language) {
      var lookupTable = this.getLookupTables(
        script,
        language,
        feature,
        1,
        true
      )[0];
      var subtable = getSubstFormat(lookupTable, 2, {
        // lookup type 1 subtable, format 2, coverage format 1
        substFormat: 2,
        coverage: { format: 1, glyphs: [] },
        substitute: []
      });
      check2.assert(
        subtable.coverage.format === 1,
        "Single: unable to modify coverage table format " + subtable.coverage.format
      );
      var coverageGlyph = substitution.sub;
      var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
      if (pos < 0) {
        pos = -1 - pos;
        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
        subtable.substitute.splice(pos, 0, 0);
      }
      subtable.substitute[pos] = substitution.by;
    };
    Substitution.prototype.addMultiple = function(feature, substitution, script, language) {
      check2.assert(
        substitution.by instanceof Array && substitution.by.length > 1,
        'Multiple: "by" must be an array of two or more ids'
      );
      var lookupTable = this.getLookupTables(
        script,
        language,
        feature,
        2,
        true
      )[0];
      var subtable = getSubstFormat(lookupTable, 1, {
        // lookup type 2 subtable, format 1, coverage format 1
        substFormat: 1,
        coverage: { format: 1, glyphs: [] },
        sequences: []
      });
      check2.assert(
        subtable.coverage.format === 1,
        "Multiple: unable to modify coverage table format " + subtable.coverage.format
      );
      var coverageGlyph = substitution.sub;
      var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
      if (pos < 0) {
        pos = -1 - pos;
        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
        subtable.sequences.splice(pos, 0, 0);
      }
      subtable.sequences[pos] = substitution.by;
    };
    Substitution.prototype.addAlternate = function(feature, substitution, script, language) {
      var lookupTable = this.getLookupTables(
        script,
        language,
        feature,
        3,
        true
      )[0];
      var subtable = getSubstFormat(lookupTable, 1, {
        // lookup type 3 subtable, format 1, coverage format 1
        substFormat: 1,
        coverage: { format: 1, glyphs: [] },
        alternateSets: []
      });
      check2.assert(
        subtable.coverage.format === 1,
        "Alternate: unable to modify coverage table format " + subtable.coverage.format
      );
      var coverageGlyph = substitution.sub;
      var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
      if (pos < 0) {
        pos = -1 - pos;
        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
        subtable.alternateSets.splice(pos, 0, 0);
      }
      subtable.alternateSets[pos] = substitution.by;
    };
    Substitution.prototype.addLigature = function(feature, ligature, script, language) {
      var lookupTable = this.getLookupTables(
        script,
        language,
        feature,
        4,
        true
      )[0];
      var subtable = lookupTable.subtables[0];
      if (!subtable) {
        subtable = {
          // lookup type 4 subtable, format 1, coverage format 1
          substFormat: 1,
          coverage: { format: 1, glyphs: [] },
          ligatureSets: []
        };
        lookupTable.subtables[0] = subtable;
      }
      check2.assert(
        subtable.coverage.format === 1,
        "Ligature: unable to modify coverage table format " + subtable.coverage.format
      );
      var coverageGlyph = ligature.sub[0];
      var ligComponents = ligature.sub.slice(1);
      var ligatureTable = {
        ligGlyph: ligature.by,
        components: ligComponents
      };
      var pos = this.binSearch(subtable.coverage.glyphs, coverageGlyph);
      if (pos >= 0) {
        var ligatureSet = subtable.ligatureSets[pos];
        for (var i3 = 0; i3 < ligatureSet.length; i3++) {
          if (arraysEqual(ligatureSet[i3].components, ligComponents)) {
            return;
          }
        }
        ligatureSet.push(ligatureTable);
      } else {
        pos = -1 - pos;
        subtable.coverage.glyphs.splice(pos, 0, coverageGlyph);
        subtable.ligatureSets.splice(pos, 0, [ligatureTable]);
      }
    };
    Substitution.prototype.getFeature = function(feature, script, language) {
      if (/ss\d\d/.test(feature)) {
        return this.getSingle(feature, script, language);
      }
      switch (feature) {
        case "aalt":
        case "salt":
          return this.getSingle(feature, script, language).concat(
            this.getAlternates(feature, script, language)
          );
        case "dlig":
        case "liga":
        case "rlig":
          return this.getLigatures(feature, script, language);
        case "ccmp":
          return this.getMultiple(feature, script, language).concat(
            this.getLigatures(feature, script, language)
          );
        case "stch":
          return this.getMultiple(feature, script, language);
      }
      return void 0;
    };
    Substitution.prototype.add = function(feature, sub, script, language) {
      if (/ss\d\d/.test(feature)) {
        return this.addSingle(feature, sub, script, language);
      }
      switch (feature) {
        case "aalt":
        case "salt":
          if (typeof sub.by === "number") {
            return this.addSingle(feature, sub, script, language);
          }
          return this.addAlternate(feature, sub, script, language);
        case "dlig":
        case "liga":
        case "rlig":
          return this.addLigature(feature, sub, script, language);
        case "ccmp":
          if (sub.by instanceof Array) {
            return this.addMultiple(feature, sub, script, language);
          }
          return this.addLigature(feature, sub, script, language);
      }
      return void 0;
    };
    typeOffsets = {
      byte: 1,
      uShort: 2,
      short: 2,
      uLong: 4,
      fixed: 4,
      longDateTime: 8,
      tag: 4
    };
    Parser.prototype.parseByte = function() {
      var v4 = this.data.getUint8(this.offset + this.relativeOffset);
      this.relativeOffset += 1;
      return v4;
    };
    Parser.prototype.parseChar = function() {
      var v4 = this.data.getInt8(this.offset + this.relativeOffset);
      this.relativeOffset += 1;
      return v4;
    };
    Parser.prototype.parseCard8 = Parser.prototype.parseByte;
    Parser.prototype.parseUShort = function() {
      var v4 = this.data.getUint16(this.offset + this.relativeOffset);
      this.relativeOffset += 2;
      return v4;
    };
    Parser.prototype.parseCard16 = Parser.prototype.parseUShort;
    Parser.prototype.parseSID = Parser.prototype.parseUShort;
    Parser.prototype.parseOffset16 = Parser.prototype.parseUShort;
    Parser.prototype.parseShort = function() {
      var v4 = this.data.getInt16(this.offset + this.relativeOffset);
      this.relativeOffset += 2;
      return v4;
    };
    Parser.prototype.parseF2Dot14 = function() {
      var v4 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
      this.relativeOffset += 2;
      return v4;
    };
    Parser.prototype.parseULong = function() {
      var v4 = getULong(this.data, this.offset + this.relativeOffset);
      this.relativeOffset += 4;
      return v4;
    };
    Parser.prototype.parseOffset32 = Parser.prototype.parseULong;
    Parser.prototype.parseFixed = function() {
      var v4 = getFixed(this.data, this.offset + this.relativeOffset);
      this.relativeOffset += 4;
      return v4;
    };
    Parser.prototype.parseString = function(length) {
      var dataView = this.data;
      var offset = this.offset + this.relativeOffset;
      var string = "";
      this.relativeOffset += length;
      for (var i3 = 0; i3 < length; i3++) {
        string += String.fromCharCode(dataView.getUint8(offset + i3));
      }
      return string;
    };
    Parser.prototype.parseTag = function() {
      return this.parseString(4);
    };
    Parser.prototype.parseLongDateTime = function() {
      var v4 = getULong(this.data, this.offset + this.relativeOffset + 4);
      v4 -= 2082844800;
      this.relativeOffset += 8;
      return v4;
    };
    Parser.prototype.parseVersion = function(minorBase) {
      var major = getUShort(this.data, this.offset + this.relativeOffset);
      var minor = getUShort(this.data, this.offset + this.relativeOffset + 2);
      this.relativeOffset += 4;
      if (minorBase === void 0) {
        minorBase = 4096;
      }
      return major + minor / minorBase / 10;
    };
    Parser.prototype.skip = function(type, amount) {
      if (amount === void 0) {
        amount = 1;
      }
      this.relativeOffset += typeOffsets[type] * amount;
    };
    Parser.prototype.parseULongList = function(count) {
      if (count === void 0) {
        count = this.parseULong();
      }
      var offsets = new Array(count);
      var dataView = this.data;
      var offset = this.offset + this.relativeOffset;
      for (var i3 = 0; i3 < count; i3++) {
        offsets[i3] = dataView.getUint32(offset);
        offset += 4;
      }
      this.relativeOffset += count * 4;
      return offsets;
    };
    Parser.prototype.parseOffset16List = Parser.prototype.parseUShortList = function(count) {
      if (count === void 0) {
        count = this.parseUShort();
      }
      var offsets = new Array(count);
      var dataView = this.data;
      var offset = this.offset + this.relativeOffset;
      for (var i3 = 0; i3 < count; i3++) {
        offsets[i3] = dataView.getUint16(offset);
        offset += 2;
      }
      this.relativeOffset += count * 2;
      return offsets;
    };
    Parser.prototype.parseShortList = function(count) {
      var list = new Array(count);
      var dataView = this.data;
      var offset = this.offset + this.relativeOffset;
      for (var i3 = 0; i3 < count; i3++) {
        list[i3] = dataView.getInt16(offset);
        offset += 2;
      }
      this.relativeOffset += count * 2;
      return list;
    };
    Parser.prototype.parseByteList = function(count) {
      var list = new Array(count);
      var dataView = this.data;
      var offset = this.offset + this.relativeOffset;
      for (var i3 = 0; i3 < count; i3++) {
        list[i3] = dataView.getUint8(offset++);
      }
      this.relativeOffset += count;
      return list;
    };
    Parser.prototype.parseList = function(count, itemCallback) {
      if (!itemCallback) {
        itemCallback = count;
        count = this.parseUShort();
      }
      var list = new Array(count);
      for (var i3 = 0; i3 < count; i3++) {
        list[i3] = itemCallback.call(this);
      }
      return list;
    };
    Parser.prototype.parseList32 = function(count, itemCallback) {
      if (!itemCallback) {
        itemCallback = count;
        count = this.parseULong();
      }
      var list = new Array(count);
      for (var i3 = 0; i3 < count; i3++) {
        list[i3] = itemCallback.call(this);
      }
      return list;
    };
    Parser.prototype.parseRecordList = function(count, recordDescription) {
      if (!recordDescription) {
        recordDescription = count;
        count = this.parseUShort();
      }
      var records = new Array(count);
      var fields = Object.keys(recordDescription);
      for (var i3 = 0; i3 < count; i3++) {
        var rec = {};
        for (var j5 = 0; j5 < fields.length; j5++) {
          var fieldName = fields[j5];
          var fieldType = recordDescription[fieldName];
          rec[fieldName] = fieldType.call(this);
        }
        records[i3] = rec;
      }
      return records;
    };
    Parser.prototype.parseRecordList32 = function(count, recordDescription) {
      if (!recordDescription) {
        recordDescription = count;
        count = this.parseULong();
      }
      var records = new Array(count);
      var fields = Object.keys(recordDescription);
      for (var i3 = 0; i3 < count; i3++) {
        var rec = {};
        for (var j5 = 0; j5 < fields.length; j5++) {
          var fieldName = fields[j5];
          var fieldType = recordDescription[fieldName];
          rec[fieldName] = fieldType.call(this);
        }
        records[i3] = rec;
      }
      return records;
    };
    Parser.prototype.parseStruct = function(description) {
      if (typeof description === "function") {
        return description.call(this);
      } else {
        var fields = Object.keys(description);
        var struct = {};
        for (var j5 = 0; j5 < fields.length; j5++) {
          var fieldName = fields[j5];
          var fieldType = description[fieldName];
          struct[fieldName] = fieldType.call(this);
        }
        return struct;
      }
    };
    Parser.prototype.parseValueRecord = function(valueFormat) {
      if (valueFormat === void 0) {
        valueFormat = this.parseUShort();
      }
      if (valueFormat === 0) {
        return;
      }
      var valueRecord = {};
      if (valueFormat & 1) {
        valueRecord.xPlacement = this.parseShort();
      }
      if (valueFormat & 2) {
        valueRecord.yPlacement = this.parseShort();
      }
      if (valueFormat & 4) {
        valueRecord.xAdvance = this.parseShort();
      }
      if (valueFormat & 8) {
        valueRecord.yAdvance = this.parseShort();
      }
      if (valueFormat & 16) {
        valueRecord.xPlaDevice = void 0;
        this.parseShort();
      }
      if (valueFormat & 32) {
        valueRecord.yPlaDevice = void 0;
        this.parseShort();
      }
      if (valueFormat & 64) {
        valueRecord.xAdvDevice = void 0;
        this.parseShort();
      }
      if (valueFormat & 128) {
        valueRecord.yAdvDevice = void 0;
        this.parseShort();
      }
      return valueRecord;
    };
    Parser.prototype.parseValueRecordList = function() {
      var valueFormat = this.parseUShort();
      var valueCount = this.parseUShort();
      var values = new Array(valueCount);
      for (var i3 = 0; i3 < valueCount; i3++) {
        values[i3] = this.parseValueRecord(valueFormat);
      }
      return values;
    };
    Parser.prototype.parsePointer = function(description) {
      var structOffset = this.parseOffset16();
      if (structOffset > 0) {
        return new Parser(this.data, this.offset + structOffset).parseStruct(description);
      }
      return void 0;
    };
    Parser.prototype.parsePointer32 = function(description) {
      var structOffset = this.parseOffset32();
      if (structOffset > 0) {
        return new Parser(this.data, this.offset + structOffset).parseStruct(description);
      }
      return void 0;
    };
    Parser.prototype.parseListOfLists = function(itemCallback) {
      var offsets = this.parseOffset16List();
      var count = offsets.length;
      var relativeOffset = this.relativeOffset;
      var list = new Array(count);
      for (var i3 = 0; i3 < count; i3++) {
        var start = offsets[i3];
        if (start === 0) {
          list[i3] = void 0;
          continue;
        }
        this.relativeOffset = start;
        if (itemCallback) {
          var subOffsets = this.parseOffset16List();
          var subList = new Array(subOffsets.length);
          for (var j5 = 0; j5 < subOffsets.length; j5++) {
            this.relativeOffset = start + subOffsets[j5];
            subList[j5] = itemCallback.call(this);
          }
          list[i3] = subList;
        } else {
          list[i3] = this.parseUShortList();
        }
      }
      this.relativeOffset = relativeOffset;
      return list;
    };
    Parser.prototype.parseCoverage = function() {
      var startOffset = this.offset + this.relativeOffset;
      var format2 = this.parseUShort();
      var count = this.parseUShort();
      if (format2 === 1) {
        return {
          format: 1,
          glyphs: this.parseUShortList(count)
        };
      } else if (format2 === 2) {
        var ranges = new Array(count);
        for (var i3 = 0; i3 < count; i3++) {
          ranges[i3] = {
            start: this.parseUShort(),
            end: this.parseUShort(),
            index: this.parseUShort()
          };
        }
        return {
          format: 2,
          ranges
        };
      }
      throw new Error("0x" + startOffset.toString(16) + ": Coverage format must be 1 or 2.");
    };
    Parser.prototype.parseClassDef = function() {
      var startOffset = this.offset + this.relativeOffset;
      var format2 = this.parseUShort();
      if (format2 === 1) {
        return {
          format: 1,
          startGlyph: this.parseUShort(),
          classes: this.parseUShortList()
        };
      } else if (format2 === 2) {
        return {
          format: 2,
          ranges: this.parseRecordList({
            start: Parser.uShort,
            end: Parser.uShort,
            classId: Parser.uShort
          })
        };
      }
      throw new Error("0x" + startOffset.toString(16) + ": ClassDef format must be 1 or 2.");
    };
    Parser.list = function(count, itemCallback) {
      return function() {
        return this.parseList(count, itemCallback);
      };
    };
    Parser.list32 = function(count, itemCallback) {
      return function() {
        return this.parseList32(count, itemCallback);
      };
    };
    Parser.recordList = function(count, recordDescription) {
      return function() {
        return this.parseRecordList(count, recordDescription);
      };
    };
    Parser.recordList32 = function(count, recordDescription) {
      return function() {
        return this.parseRecordList32(count, recordDescription);
      };
    };
    Parser.pointer = function(description) {
      return function() {
        return this.parsePointer(description);
      };
    };
    Parser.pointer32 = function(description) {
      return function() {
        return this.parsePointer32(description);
      };
    };
    Parser.tag = Parser.prototype.parseTag;
    Parser.byte = Parser.prototype.parseByte;
    Parser.uShort = Parser.offset16 = Parser.prototype.parseUShort;
    Parser.uShortList = Parser.prototype.parseUShortList;
    Parser.uLong = Parser.offset32 = Parser.prototype.parseULong;
    Parser.uLongList = Parser.prototype.parseULongList;
    Parser.struct = Parser.prototype.parseStruct;
    Parser.coverage = Parser.prototype.parseCoverage;
    Parser.classDef = Parser.prototype.parseClassDef;
    langSysTable = {
      reserved: Parser.uShort,
      reqFeatureIndex: Parser.uShort,
      featureIndexes: Parser.uShortList
    };
    Parser.prototype.parseScriptList = function() {
      return this.parsePointer(Parser.recordList({
        tag: Parser.tag,
        script: Parser.pointer({
          defaultLangSys: Parser.pointer(langSysTable),
          langSysRecords: Parser.recordList({
            tag: Parser.tag,
            langSys: Parser.pointer(langSysTable)
          })
        })
      })) || [];
    };
    Parser.prototype.parseFeatureList = function() {
      return this.parsePointer(Parser.recordList({
        tag: Parser.tag,
        feature: Parser.pointer({
          featureParams: Parser.offset16,
          lookupListIndexes: Parser.uShortList
        })
      })) || [];
    };
    Parser.prototype.parseLookupList = function(lookupTableParsers) {
      return this.parsePointer(Parser.list(Parser.pointer(function() {
        var lookupType = this.parseUShort();
        check2.argument(1 <= lookupType && lookupType <= 9, "GPOS/GSUB lookup type " + lookupType + " unknown.");
        var lookupFlag = this.parseUShort();
        var useMarkFilteringSet = lookupFlag & 16;
        return {
          lookupType,
          lookupFlag,
          subtables: this.parseList(Parser.pointer(lookupTableParsers[lookupType])),
          markFilteringSet: useMarkFilteringSet ? this.parseUShort() : void 0
        };
      }))) || [];
    };
    Parser.prototype.parseFeatureVariationsList = function() {
      return this.parsePointer32(function() {
        var majorVersion = this.parseUShort();
        var minorVersion = this.parseUShort();
        check2.argument(majorVersion === 1 && minorVersion < 1, "GPOS/GSUB feature variations table unknown.");
        var featureVariations = this.parseRecordList32({
          conditionSetOffset: Parser.offset32,
          featureTableSubstitutionOffset: Parser.offset32
        });
        return featureVariations;
      }) || [];
    };
    parse4 = {
      getByte,
      getCard8: getByte,
      getUShort,
      getCard16: getUShort,
      getShort,
      getULong,
      getFixed,
      getTag,
      getOffset,
      getBytes,
      bytesToString,
      Parser
    };
    glyf = { getPath, parse: parseGlyfTable };
    roundSuper = function(v4) {
      var period = this.srPeriod;
      var phase = this.srPhase;
      var threshold = this.srThreshold;
      var sign = 1;
      if (v4 < 0) {
        v4 = -v4;
        sign = -1;
      }
      v4 += threshold - phase;
      v4 = Math.trunc(v4 / period) * period;
      v4 += phase;
      if (v4 < 0) {
        return phase * sign;
      }
      return v4 * sign;
    };
    xUnitVector = {
      x: 1,
      y: 0,
      axis: "x",
      // Gets the projected distance between two points.
      // o1/o2 ... if true, respective original position is used.
      distance: function(p1, p22, o1, o22) {
        return (o1 ? p1.xo : p1.x) - (o22 ? p22.xo : p22.x);
      },
      // Moves point p so the moved position has the same relative
      // position to the moved positions of rp1 and rp2 than the
      // original positions had.
      //
      // See APPENDIX on INTERPOLATE at the bottom of this file.
      interpolate: function(p6, rp1, rp2, pv) {
        var do1;
        var do2;
        var doa1;
        var doa2;
        var dm1;
        var dm2;
        var dt3;
        if (!pv || pv === this) {
          do1 = p6.xo - rp1.xo;
          do2 = p6.xo - rp2.xo;
          dm1 = rp1.x - rp1.xo;
          dm2 = rp2.x - rp2.xo;
          doa1 = Math.abs(do1);
          doa2 = Math.abs(do2);
          dt3 = doa1 + doa2;
          if (dt3 === 0) {
            p6.x = p6.xo + (dm1 + dm2) / 2;
            return;
          }
          p6.x = p6.xo + (dm1 * doa2 + dm2 * doa1) / dt3;
          return;
        }
        do1 = pv.distance(p6, rp1, true, true);
        do2 = pv.distance(p6, rp2, true, true);
        dm1 = pv.distance(rp1, rp1, false, true);
        dm2 = pv.distance(rp2, rp2, false, true);
        doa1 = Math.abs(do1);
        doa2 = Math.abs(do2);
        dt3 = doa1 + doa2;
        if (dt3 === 0) {
          xUnitVector.setRelative(p6, p6, (dm1 + dm2) / 2, pv, true);
          return;
        }
        xUnitVector.setRelative(p6, p6, (dm1 * doa2 + dm2 * doa1) / dt3, pv, true);
      },
      // Slope of line normal to this
      normalSlope: Number.NEGATIVE_INFINITY,
      // Sets the point 'p' relative to point 'rp'
      // by the distance 'd'.
      //
      // See APPENDIX on SETRELATIVE at the bottom of this file.
      //
      // p   ... point to set
      // rp  ... reference point
      // d   ... distance on projection vector
      // pv  ... projection vector (undefined = this)
      // org ... if true, uses the original position of rp as reference.
      setRelative: function(p6, rp, d5, pv, org) {
        if (!pv || pv === this) {
          p6.x = (org ? rp.xo : rp.x) + d5;
          return;
        }
        var rpx = org ? rp.xo : rp.x;
        var rpy = org ? rp.yo : rp.y;
        var rpdx = rpx + d5 * pv.x;
        var rpdy = rpy + d5 * pv.y;
        p6.x = rpdx + (p6.y - rpdy) / pv.normalSlope;
      },
      // Slope of vector line.
      slope: 0,
      // Touches the point p.
      touch: function(p6) {
        p6.xTouched = true;
      },
      // Tests if a point p is touched.
      touched: function(p6) {
        return p6.xTouched;
      },
      // Untouches the point p.
      untouch: function(p6) {
        p6.xTouched = false;
      }
    };
    yUnitVector = {
      x: 0,
      y: 1,
      axis: "y",
      // Gets the projected distance between two points.
      // o1/o2 ... if true, respective original position is used.
      distance: function(p1, p22, o1, o22) {
        return (o1 ? p1.yo : p1.y) - (o22 ? p22.yo : p22.y);
      },
      // Moves point p so the moved position has the same relative
      // position to the moved positions of rp1 and rp2 than the
      // original positions had.
      //
      // See APPENDIX on INTERPOLATE at the bottom of this file.
      interpolate: function(p6, rp1, rp2, pv) {
        var do1;
        var do2;
        var doa1;
        var doa2;
        var dm1;
        var dm2;
        var dt3;
        if (!pv || pv === this) {
          do1 = p6.yo - rp1.yo;
          do2 = p6.yo - rp2.yo;
          dm1 = rp1.y - rp1.yo;
          dm2 = rp2.y - rp2.yo;
          doa1 = Math.abs(do1);
          doa2 = Math.abs(do2);
          dt3 = doa1 + doa2;
          if (dt3 === 0) {
            p6.y = p6.yo + (dm1 + dm2) / 2;
            return;
          }
          p6.y = p6.yo + (dm1 * doa2 + dm2 * doa1) / dt3;
          return;
        }
        do1 = pv.distance(p6, rp1, true, true);
        do2 = pv.distance(p6, rp2, true, true);
        dm1 = pv.distance(rp1, rp1, false, true);
        dm2 = pv.distance(rp2, rp2, false, true);
        doa1 = Math.abs(do1);
        doa2 = Math.abs(do2);
        dt3 = doa1 + doa2;
        if (dt3 === 0) {
          yUnitVector.setRelative(p6, p6, (dm1 + dm2) / 2, pv, true);
          return;
        }
        yUnitVector.setRelative(p6, p6, (dm1 * doa2 + dm2 * doa1) / dt3, pv, true);
      },
      // Slope of line normal to this.
      normalSlope: 0,
      // Sets the point 'p' relative to point 'rp'
      // by the distance 'd'
      //
      // See APPENDIX on SETRELATIVE at the bottom of this file.
      //
      // p   ... point to set
      // rp  ... reference point
      // d   ... distance on projection vector
      // pv  ... projection vector (undefined = this)
      // org ... if true, uses the original position of rp as reference.
      setRelative: function(p6, rp, d5, pv, org) {
        if (!pv || pv === this) {
          p6.y = (org ? rp.yo : rp.y) + d5;
          return;
        }
        var rpx = org ? rp.xo : rp.x;
        var rpy = org ? rp.yo : rp.y;
        var rpdx = rpx + d5 * pv.x;
        var rpdy = rpy + d5 * pv.y;
        p6.y = rpdy + pv.normalSlope * (p6.x - rpdx);
      },
      // Slope of vector line.
      slope: Number.POSITIVE_INFINITY,
      // Touches the point p.
      touch: function(p6) {
        p6.yTouched = true;
      },
      // Tests if a point p is touched.
      touched: function(p6) {
        return p6.yTouched;
      },
      // Untouches the point p.
      untouch: function(p6) {
        p6.yTouched = false;
      }
    };
    Object.freeze(xUnitVector);
    Object.freeze(yUnitVector);
    UnitVector.prototype.distance = function(p1, p22, o1, o22) {
      return this.x * xUnitVector.distance(p1, p22, o1, o22) + this.y * yUnitVector.distance(p1, p22, o1, o22);
    };
    UnitVector.prototype.interpolate = function(p6, rp1, rp2, pv) {
      var dm1;
      var dm2;
      var do1;
      var do2;
      var doa1;
      var doa2;
      var dt3;
      do1 = pv.distance(p6, rp1, true, true);
      do2 = pv.distance(p6, rp2, true, true);
      dm1 = pv.distance(rp1, rp1, false, true);
      dm2 = pv.distance(rp2, rp2, false, true);
      doa1 = Math.abs(do1);
      doa2 = Math.abs(do2);
      dt3 = doa1 + doa2;
      if (dt3 === 0) {
        this.setRelative(p6, p6, (dm1 + dm2) / 2, pv, true);
        return;
      }
      this.setRelative(p6, p6, (dm1 * doa2 + dm2 * doa1) / dt3, pv, true);
    };
    UnitVector.prototype.setRelative = function(p6, rp, d5, pv, org) {
      pv = pv || this;
      var rpx = org ? rp.xo : rp.x;
      var rpy = org ? rp.yo : rp.y;
      var rpdx = rpx + d5 * pv.x;
      var rpdy = rpy + d5 * pv.y;
      var pvns = pv.normalSlope;
      var fvs = this.slope;
      var px = p6.x;
      var py = p6.y;
      p6.x = (fvs * px - pvns * rpdx + rpdy - py) / (fvs - pvns);
      p6.y = fvs * (p6.x - px) + py;
    };
    UnitVector.prototype.touch = function(p6) {
      p6.xTouched = true;
      p6.yTouched = true;
    };
    HPoint.prototype.nextTouched = function(v4) {
      var p6 = this.nextPointOnContour;
      while (!v4.touched(p6) && p6 !== this) {
        p6 = p6.nextPointOnContour;
      }
      return p6;
    };
    HPoint.prototype.prevTouched = function(v4) {
      var p6 = this.prevPointOnContour;
      while (!v4.touched(p6) && p6 !== this) {
        p6 = p6.prevPointOnContour;
      }
      return p6;
    };
    HPZero = Object.freeze(new HPoint(0, 0));
    defaultState = {
      cvCutIn: 17 / 16,
      // control value cut in
      deltaBase: 9,
      deltaShift: 0.125,
      loop: 1,
      // loops some instructions
      minDis: 1,
      // minimum distance
      autoFlip: true
    };
    Hinting.prototype.exec = function(glyph, ppem) {
      if (typeof ppem !== "number") {
        throw new Error("Point size is not a number!");
      }
      if (this._errorState > 2) {
        return;
      }
      var font = this.font;
      var prepState = this._prepState;
      if (!prepState || prepState.ppem !== ppem) {
        var fpgmState = this._fpgmState;
        if (!fpgmState) {
          State.prototype = defaultState;
          fpgmState = this._fpgmState = new State("fpgm", font.tables.fpgm);
          fpgmState.funcs = [];
          fpgmState.font = font;
          if (exports.DEBUG) {
            console.log("---EXEC FPGM---");
            fpgmState.step = -1;
          }
          try {
            exec(fpgmState);
          } catch (e2) {
            console.log("Hinting error in FPGM:" + e2);
            this._errorState = 3;
            return;
          }
        }
        State.prototype = fpgmState;
        prepState = this._prepState = new State("prep", font.tables.prep);
        prepState.ppem = ppem;
        var oCvt = font.tables.cvt;
        if (oCvt) {
          var cvt = prepState.cvt = new Array(oCvt.length);
          var scale = ppem / font.unitsPerEm;
          for (var c4 = 0; c4 < oCvt.length; c4++) {
            cvt[c4] = oCvt[c4] * scale;
          }
        } else {
          prepState.cvt = [];
        }
        if (exports.DEBUG) {
          console.log("---EXEC PREP---");
          prepState.step = -1;
        }
        try {
          exec(prepState);
        } catch (e2) {
          if (this._errorState < 2) {
            console.log("Hinting error in PREP:" + e2);
          }
          this._errorState = 2;
        }
      }
      if (this._errorState > 1) {
        return;
      }
      try {
        return execGlyph(glyph, prepState);
      } catch (e2) {
        if (this._errorState < 1) {
          console.log("Hinting error:" + e2);
          console.log("Note: further hinting errors are silenced");
        }
        this._errorState = 1;
        return void 0;
      }
    };
    execGlyph = function(glyph, prepState) {
      var xScale = prepState.ppem / prepState.font.unitsPerEm;
      var yScale = xScale;
      var components = glyph.components;
      var contours;
      var gZone;
      var state2;
      State.prototype = prepState;
      if (!components) {
        state2 = new State("glyf", glyph.instructions);
        if (exports.DEBUG) {
          console.log("---EXEC GLYPH---");
          state2.step = -1;
        }
        execComponent(glyph, state2, xScale, yScale);
        gZone = state2.gZone;
      } else {
        var font = prepState.font;
        gZone = [];
        contours = [];
        for (var i3 = 0; i3 < components.length; i3++) {
          var c4 = components[i3];
          var cg = font.glyphs.get(c4.glyphIndex);
          state2 = new State("glyf", cg.instructions);
          if (exports.DEBUG) {
            console.log("---EXEC COMP " + i3 + "---");
            state2.step = -1;
          }
          execComponent(cg, state2, xScale, yScale);
          var dx = Math.round(c4.dx * xScale);
          var dy = Math.round(c4.dy * yScale);
          var gz = state2.gZone;
          var cc = state2.contours;
          for (var pi2 = 0; pi2 < gz.length; pi2++) {
            var p6 = gz[pi2];
            p6.xTouched = p6.yTouched = false;
            p6.xo = p6.x = p6.x + dx;
            p6.yo = p6.y = p6.y + dy;
          }
          var gLen = gZone.length;
          gZone.push.apply(gZone, gz);
          for (var j5 = 0; j5 < cc.length; j5++) {
            contours.push(cc[j5] + gLen);
          }
        }
        if (glyph.instructions && !state2.inhibitGridFit) {
          state2 = new State("glyf", glyph.instructions);
          state2.gZone = state2.z0 = state2.z1 = state2.z2 = gZone;
          state2.contours = contours;
          gZone.push(
            new HPoint(0, 0),
            new HPoint(Math.round(glyph.advanceWidth * xScale), 0)
          );
          if (exports.DEBUG) {
            console.log("---EXEC COMPOSITE---");
            state2.step = -1;
          }
          exec(state2);
          gZone.length -= 2;
        }
      }
      return gZone;
    };
    execComponent = function(glyph, state2, xScale, yScale) {
      var points = glyph.points || [];
      var pLen = points.length;
      var gZone = state2.gZone = state2.z0 = state2.z1 = state2.z2 = [];
      var contours = state2.contours = [];
      var cp;
      for (var i3 = 0; i3 < pLen; i3++) {
        cp = points[i3];
        gZone[i3] = new HPoint(
          cp.x * xScale,
          cp.y * yScale,
          cp.lastPointOfContour,
          cp.onCurve
        );
      }
      var sp;
      var np;
      for (var i$1 = 0; i$1 < pLen; i$1++) {
        cp = gZone[i$1];
        if (!sp) {
          sp = cp;
          contours.push(i$1);
        }
        if (cp.lastPointOfContour) {
          cp.nextPointOnContour = sp;
          sp.prevPointOnContour = cp;
          sp = void 0;
        } else {
          np = gZone[i$1 + 1];
          cp.nextPointOnContour = np;
          np.prevPointOnContour = cp;
        }
      }
      if (state2.inhibitGridFit) {
        return;
      }
      if (exports.DEBUG) {
        console.log("PROCESSING GLYPH", state2.stack);
        for (var i$2 = 0; i$2 < pLen; i$2++) {
          console.log(i$2, gZone[i$2].x, gZone[i$2].y);
        }
      }
      gZone.push(
        new HPoint(0, 0),
        new HPoint(Math.round(glyph.advanceWidth * xScale), 0)
      );
      exec(state2);
      gZone.length -= 2;
      if (exports.DEBUG) {
        console.log("FINISHED GLYPH", state2.stack);
        for (var i$3 = 0; i$3 < pLen; i$3++) {
          console.log(i$3, gZone[i$3].x, gZone[i$3].y);
        }
      }
    };
    exec = function(state2) {
      var prog = state2.prog;
      if (!prog) {
        return;
      }
      var pLen = prog.length;
      var ins;
      for (state2.ip = 0; state2.ip < pLen; state2.ip++) {
        if (exports.DEBUG) {
          state2.step++;
        }
        ins = instructionTable[prog[state2.ip]];
        if (!ins) {
          throw new Error(
            "unknown instruction: 0x" + Number(prog[state2.ip]).toString(16)
          );
        }
        ins(state2);
      }
    };
    instructionTable = [
      /* 0x00 */
      SVTCA.bind(void 0, yUnitVector),
      /* 0x01 */
      SVTCA.bind(void 0, xUnitVector),
      /* 0x02 */
      SPVTCA.bind(void 0, yUnitVector),
      /* 0x03 */
      SPVTCA.bind(void 0, xUnitVector),
      /* 0x04 */
      SFVTCA.bind(void 0, yUnitVector),
      /* 0x05 */
      SFVTCA.bind(void 0, xUnitVector),
      /* 0x06 */
      SPVTL.bind(void 0, 0),
      /* 0x07 */
      SPVTL.bind(void 0, 1),
      /* 0x08 */
      SFVTL.bind(void 0, 0),
      /* 0x09 */
      SFVTL.bind(void 0, 1),
      /* 0x0A */
      SPVFS,
      /* 0x0B */
      SFVFS,
      /* 0x0C */
      GPV,
      /* 0x0D */
      GFV,
      /* 0x0E */
      SFVTPV,
      /* 0x0F */
      ISECT,
      /* 0x10 */
      SRP0,
      /* 0x11 */
      SRP1,
      /* 0x12 */
      SRP2,
      /* 0x13 */
      SZP0,
      /* 0x14 */
      SZP1,
      /* 0x15 */
      SZP2,
      /* 0x16 */
      SZPS,
      /* 0x17 */
      SLOOP,
      /* 0x18 */
      RTG,
      /* 0x19 */
      RTHG,
      /* 0x1A */
      SMD,
      /* 0x1B */
      ELSE,
      /* 0x1C */
      JMPR,
      /* 0x1D */
      SCVTCI,
      /* 0x1E */
      void 0,
      // TODO SSWCI
      /* 0x1F */
      void 0,
      // TODO SSW
      /* 0x20 */
      DUP,
      /* 0x21 */
      POP,
      /* 0x22 */
      CLEAR,
      /* 0x23 */
      SWAP,
      /* 0x24 */
      DEPTH,
      /* 0x25 */
      CINDEX,
      /* 0x26 */
      MINDEX,
      /* 0x27 */
      void 0,
      // TODO ALIGNPTS
      /* 0x28 */
      void 0,
      /* 0x29 */
      void 0,
      // TODO UTP
      /* 0x2A */
      LOOPCALL,
      /* 0x2B */
      CALL,
      /* 0x2C */
      FDEF,
      /* 0x2D */
      void 0,
      // ENDF (eaten by FDEF)
      /* 0x2E */
      MDAP.bind(void 0, 0),
      /* 0x2F */
      MDAP.bind(void 0, 1),
      /* 0x30 */
      IUP.bind(void 0, yUnitVector),
      /* 0x31 */
      IUP.bind(void 0, xUnitVector),
      /* 0x32 */
      SHP.bind(void 0, 0),
      /* 0x33 */
      SHP.bind(void 0, 1),
      /* 0x34 */
      SHC.bind(void 0, 0),
      /* 0x35 */
      SHC.bind(void 0, 1),
      /* 0x36 */
      SHZ.bind(void 0, 0),
      /* 0x37 */
      SHZ.bind(void 0, 1),
      /* 0x38 */
      SHPIX,
      /* 0x39 */
      IP,
      /* 0x3A */
      MSIRP.bind(void 0, 0),
      /* 0x3B */
      MSIRP.bind(void 0, 1),
      /* 0x3C */
      ALIGNRP,
      /* 0x3D */
      RTDG,
      /* 0x3E */
      MIAP.bind(void 0, 0),
      /* 0x3F */
      MIAP.bind(void 0, 1),
      /* 0x40 */
      NPUSHB,
      /* 0x41 */
      NPUSHW,
      /* 0x42 */
      WS,
      /* 0x43 */
      RS,
      /* 0x44 */
      WCVTP,
      /* 0x45 */
      RCVT,
      /* 0x46 */
      GC.bind(void 0, 0),
      /* 0x47 */
      GC.bind(void 0, 1),
      /* 0x48 */
      void 0,
      // TODO SCFS
      /* 0x49 */
      MD.bind(void 0, 0),
      /* 0x4A */
      MD.bind(void 0, 1),
      /* 0x4B */
      MPPEM,
      /* 0x4C */
      void 0,
      // TODO MPS
      /* 0x4D */
      FLIPON,
      /* 0x4E */
      void 0,
      // TODO FLIPOFF
      /* 0x4F */
      void 0,
      // TODO DEBUG
      /* 0x50 */
      LT,
      /* 0x51 */
      LTEQ,
      /* 0x52 */
      GT,
      /* 0x53 */
      GTEQ,
      /* 0x54 */
      EQ,
      /* 0x55 */
      NEQ,
      /* 0x56 */
      ODD,
      /* 0x57 */
      EVEN,
      /* 0x58 */
      IF,
      /* 0x59 */
      EIF,
      /* 0x5A */
      AND,
      /* 0x5B */
      OR,
      /* 0x5C */
      NOT,
      /* 0x5D */
      DELTAP123.bind(void 0, 1),
      /* 0x5E */
      SDB,
      /* 0x5F */
      SDS,
      /* 0x60 */
      ADD,
      /* 0x61 */
      SUB,
      /* 0x62 */
      DIV,
      /* 0x63 */
      MUL,
      /* 0x64 */
      ABS,
      /* 0x65 */
      NEG,
      /* 0x66 */
      FLOOR,
      /* 0x67 */
      CEILING,
      /* 0x68 */
      ROUND.bind(void 0, 0),
      /* 0x69 */
      ROUND.bind(void 0, 1),
      /* 0x6A */
      ROUND.bind(void 0, 2),
      /* 0x6B */
      ROUND.bind(void 0, 3),
      /* 0x6C */
      void 0,
      // TODO NROUND[ab]
      /* 0x6D */
      void 0,
      // TODO NROUND[ab]
      /* 0x6E */
      void 0,
      // TODO NROUND[ab]
      /* 0x6F */
      void 0,
      // TODO NROUND[ab]
      /* 0x70 */
      WCVTF,
      /* 0x71 */
      DELTAP123.bind(void 0, 2),
      /* 0x72 */
      DELTAP123.bind(void 0, 3),
      /* 0x73 */
      DELTAC123.bind(void 0, 1),
      /* 0x74 */
      DELTAC123.bind(void 0, 2),
      /* 0x75 */
      DELTAC123.bind(void 0, 3),
      /* 0x76 */
      SROUND,
      /* 0x77 */
      S45ROUND,
      /* 0x78 */
      void 0,
      // TODO JROT[]
      /* 0x79 */
      void 0,
      // TODO JROF[]
      /* 0x7A */
      ROFF,
      /* 0x7B */
      void 0,
      /* 0x7C */
      RUTG,
      /* 0x7D */
      RDTG,
      /* 0x7E */
      POP,
      // actually SANGW, supposed to do only a pop though
      /* 0x7F */
      POP,
      // actually AA, supposed to do only a pop though
      /* 0x80 */
      void 0,
      // TODO FLIPPT
      /* 0x81 */
      void 0,
      // TODO FLIPRGON
      /* 0x82 */
      void 0,
      // TODO FLIPRGOFF
      /* 0x83 */
      void 0,
      /* 0x84 */
      void 0,
      /* 0x85 */
      SCANCTRL,
      /* 0x86 */
      SDPVTL.bind(void 0, 0),
      /* 0x87 */
      SDPVTL.bind(void 0, 1),
      /* 0x88 */
      GETINFO,
      /* 0x89 */
      void 0,
      // TODO IDEF
      /* 0x8A */
      ROLL,
      /* 0x8B */
      MAX,
      /* 0x8C */
      MIN,
      /* 0x8D */
      SCANTYPE,
      /* 0x8E */
      INSTCTRL,
      /* 0x8F */
      void 0,
      /* 0x90 */
      void 0,
      /* 0x91 */
      void 0,
      /* 0x92 */
      void 0,
      /* 0x93 */
      void 0,
      /* 0x94 */
      void 0,
      /* 0x95 */
      void 0,
      /* 0x96 */
      void 0,
      /* 0x97 */
      void 0,
      /* 0x98 */
      void 0,
      /* 0x99 */
      void 0,
      /* 0x9A */
      void 0,
      /* 0x9B */
      void 0,
      /* 0x9C */
      void 0,
      /* 0x9D */
      void 0,
      /* 0x9E */
      void 0,
      /* 0x9F */
      void 0,
      /* 0xA0 */
      void 0,
      /* 0xA1 */
      void 0,
      /* 0xA2 */
      void 0,
      /* 0xA3 */
      void 0,
      /* 0xA4 */
      void 0,
      /* 0xA5 */
      void 0,
      /* 0xA6 */
      void 0,
      /* 0xA7 */
      void 0,
      /* 0xA8 */
      void 0,
      /* 0xA9 */
      void 0,
      /* 0xAA */
      void 0,
      /* 0xAB */
      void 0,
      /* 0xAC */
      void 0,
      /* 0xAD */
      void 0,
      /* 0xAE */
      void 0,
      /* 0xAF */
      void 0,
      /* 0xB0 */
      PUSHB.bind(void 0, 1),
      /* 0xB1 */
      PUSHB.bind(void 0, 2),
      /* 0xB2 */
      PUSHB.bind(void 0, 3),
      /* 0xB3 */
      PUSHB.bind(void 0, 4),
      /* 0xB4 */
      PUSHB.bind(void 0, 5),
      /* 0xB5 */
      PUSHB.bind(void 0, 6),
      /* 0xB6 */
      PUSHB.bind(void 0, 7),
      /* 0xB7 */
      PUSHB.bind(void 0, 8),
      /* 0xB8 */
      PUSHW.bind(void 0, 1),
      /* 0xB9 */
      PUSHW.bind(void 0, 2),
      /* 0xBA */
      PUSHW.bind(void 0, 3),
      /* 0xBB */
      PUSHW.bind(void 0, 4),
      /* 0xBC */
      PUSHW.bind(void 0, 5),
      /* 0xBD */
      PUSHW.bind(void 0, 6),
      /* 0xBE */
      PUSHW.bind(void 0, 7),
      /* 0xBF */
      PUSHW.bind(void 0, 8),
      /* 0xC0 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 0),
      /* 0xC1 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 1),
      /* 0xC2 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 2),
      /* 0xC3 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 0, 3),
      /* 0xC4 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 0),
      /* 0xC5 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 1),
      /* 0xC6 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 2),
      /* 0xC7 */
      MDRP_MIRP.bind(void 0, 0, 0, 0, 1, 3),
      /* 0xC8 */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 0),
      /* 0xC9 */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 1),
      /* 0xCA */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 2),
      /* 0xCB */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 0, 3),
      /* 0xCC */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 0),
      /* 0xCD */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 1),
      /* 0xCE */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 2),
      /* 0xCF */
      MDRP_MIRP.bind(void 0, 0, 0, 1, 1, 3),
      /* 0xD0 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 0),
      /* 0xD1 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 1),
      /* 0xD2 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 2),
      /* 0xD3 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 0, 3),
      /* 0xD4 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 0),
      /* 0xD5 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 1),
      /* 0xD6 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 2),
      /* 0xD7 */
      MDRP_MIRP.bind(void 0, 0, 1, 0, 1, 3),
      /* 0xD8 */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 0),
      /* 0xD9 */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 1),
      /* 0xDA */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 2),
      /* 0xDB */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 0, 3),
      /* 0xDC */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 0),
      /* 0xDD */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 1),
      /* 0xDE */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 2),
      /* 0xDF */
      MDRP_MIRP.bind(void 0, 0, 1, 1, 1, 3),
      /* 0xE0 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 0),
      /* 0xE1 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 1),
      /* 0xE2 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 2),
      /* 0xE3 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 0, 3),
      /* 0xE4 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 0),
      /* 0xE5 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 1),
      /* 0xE6 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 2),
      /* 0xE7 */
      MDRP_MIRP.bind(void 0, 1, 0, 0, 1, 3),
      /* 0xE8 */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 0),
      /* 0xE9 */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 1),
      /* 0xEA */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 2),
      /* 0xEB */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 0, 3),
      /* 0xEC */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 0),
      /* 0xED */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 1),
      /* 0xEE */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 2),
      /* 0xEF */
      MDRP_MIRP.bind(void 0, 1, 0, 1, 1, 3),
      /* 0xF0 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 0),
      /* 0xF1 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 1),
      /* 0xF2 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 2),
      /* 0xF3 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 0, 3),
      /* 0xF4 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 0),
      /* 0xF5 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 1),
      /* 0xF6 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 2),
      /* 0xF7 */
      MDRP_MIRP.bind(void 0, 1, 1, 0, 1, 3),
      /* 0xF8 */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 0),
      /* 0xF9 */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 1),
      /* 0xFA */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 2),
      /* 0xFB */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 0, 3),
      /* 0xFC */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 0),
      /* 0xFD */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 1),
      /* 0xFE */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 2),
      /* 0xFF */
      MDRP_MIRP.bind(void 0, 1, 1, 1, 1, 3)
    ];
    Token.prototype.setState = function(key, value) {
      this.state[key] = value;
      this.activeState = { key, value: this.state[key] };
      return this.activeState;
    };
    Token.prototype.getState = function(stateId) {
      return this.state[stateId] || null;
    };
    Tokenizer.prototype.inboundIndex = function(index) {
      return index >= 0 && index < this.tokens.length;
    };
    Tokenizer.prototype.composeRUD = function(RUDs) {
      var this$1 = this;
      var silent = true;
      var state2 = RUDs.map(function(RUD) {
        return this$1[RUD[0]].apply(this$1, RUD.slice(1).concat(silent));
      });
      var hasFAILObject = function(obj) {
        return typeof obj === "object" && obj.hasOwnProperty("FAIL");
      };
      if (state2.every(hasFAILObject)) {
        return {
          FAIL: "composeRUD: one or more operations hasn't completed successfully",
          report: state2.filter(hasFAILObject)
        };
      }
      this.dispatch("composeRUD", [state2.filter(function(op) {
        return !hasFAILObject(op);
      })]);
    };
    Tokenizer.prototype.replaceRange = function(startIndex, offset, tokens, silent) {
      offset = offset !== null ? offset : this.tokens.length;
      var isTokenType = tokens.every(function(token) {
        return token instanceof Token;
      });
      if (!isNaN(startIndex) && this.inboundIndex(startIndex) && isTokenType) {
        var replaced = this.tokens.splice.apply(
          this.tokens,
          [startIndex, offset].concat(tokens)
        );
        if (!silent) {
          this.dispatch("replaceToken", [startIndex, offset, tokens]);
        }
        return [replaced, tokens];
      } else {
        return { FAIL: "replaceRange: invalid tokens or startIndex." };
      }
    };
    Tokenizer.prototype.replaceToken = function(index, token, silent) {
      if (!isNaN(index) && this.inboundIndex(index) && token instanceof Token) {
        var replaced = this.tokens.splice(index, 1, token);
        if (!silent) {
          this.dispatch("replaceToken", [index, token]);
        }
        return [replaced[0], token];
      } else {
        return { FAIL: "replaceToken: invalid token or index." };
      }
    };
    Tokenizer.prototype.removeRange = function(startIndex, offset, silent) {
      offset = !isNaN(offset) ? offset : this.tokens.length;
      var tokens = this.tokens.splice(startIndex, offset);
      if (!silent) {
        this.dispatch("removeRange", [tokens, startIndex, offset]);
      }
      return tokens;
    };
    Tokenizer.prototype.removeToken = function(index, silent) {
      if (!isNaN(index) && this.inboundIndex(index)) {
        var token = this.tokens.splice(index, 1);
        if (!silent) {
          this.dispatch("removeToken", [token, index]);
        }
        return token;
      } else {
        return { FAIL: "removeToken: invalid token index." };
      }
    };
    Tokenizer.prototype.insertToken = function(tokens, index, silent) {
      var tokenType = tokens.every(
        function(token) {
          return token instanceof Token;
        }
      );
      if (tokenType) {
        this.tokens.splice.apply(
          this.tokens,
          [index, 0].concat(tokens)
        );
        if (!silent) {
          this.dispatch("insertToken", [tokens, index]);
        }
        return tokens;
      } else {
        return { FAIL: "insertToken: invalid token(s)." };
      }
    };
    Tokenizer.prototype.registerModifier = function(modifierId, condition, modifier) {
      this.events.newToken.subscribe(function(token, contextParams) {
        var conditionParams = [token, contextParams];
        var canApplyModifier = condition === null || condition.apply(this, conditionParams) === true;
        var modifierParams = [token, contextParams];
        if (canApplyModifier) {
          var newStateValue = modifier.apply(this, modifierParams);
          token.setState(modifierId, newStateValue);
        }
      });
      this.registeredModifiers.push(modifierId);
    };
    Event.prototype.subscribe = function(eventHandler) {
      if (typeof eventHandler === "function") {
        return this.subscribers.push(eventHandler) - 1;
      } else {
        return { FAIL: "invalid '" + this.eventId + "' event handler" };
      }
    };
    Event.prototype.unsubscribe = function(subsId) {
      this.subscribers.splice(subsId, 1);
    };
    ContextParams.prototype.setCurrentIndex = function(index) {
      this.index = index;
      this.current = this.context[index];
      this.backtrack = this.context.slice(0, index);
      this.lookahead = this.context.slice(index + 1);
    };
    ContextParams.prototype.get = function(offset) {
      switch (true) {
        case offset === 0:
          return this.current;
        case (offset < 0 && Math.abs(offset) <= this.backtrack.length):
          return this.backtrack.slice(offset)[0];
        case (offset > 0 && offset <= this.lookahead.length):
          return this.lookahead[offset - 1];
        default:
          return null;
      }
    };
    Tokenizer.prototype.rangeToText = function(range) {
      if (range instanceof ContextRange) {
        return this.getRangeTokens(range).map(function(token) {
          return token.char;
        }).join("");
      }
    };
    Tokenizer.prototype.getText = function() {
      return this.tokens.map(function(token) {
        return token.char;
      }).join("");
    };
    Tokenizer.prototype.getContext = function(contextName) {
      var context = this.registeredContexts[contextName];
      return !!context ? context : null;
    };
    Tokenizer.prototype.on = function(eventName, eventHandler) {
      var event = this.events[eventName];
      if (!!event) {
        return event.subscribe(eventHandler);
      } else {
        return null;
      }
    };
    Tokenizer.prototype.dispatch = function(eventName, args) {
      var this$1 = this;
      var event = this.events[eventName];
      if (event instanceof Event) {
        event.subscribers.forEach(function(subscriber) {
          subscriber.apply(this$1, args || []);
        });
      }
    };
    Tokenizer.prototype.registerContextChecker = function(contextName, contextStartCheck, contextEndCheck) {
      if (!!this.getContext(contextName)) {
        return {
          FAIL: "context name '" + contextName + "' is already registered."
        };
      }
      if (typeof contextStartCheck !== "function") {
        return {
          FAIL: "missing context start check."
        };
      }
      if (typeof contextEndCheck !== "function") {
        return {
          FAIL: "missing context end check."
        };
      }
      var contextCheckers = new ContextChecker(
        contextName,
        contextStartCheck,
        contextEndCheck
      );
      this.registeredContexts[contextName] = contextCheckers;
      this.contextCheckers.push(contextCheckers);
      return contextCheckers;
    };
    Tokenizer.prototype.getRangeTokens = function(range) {
      var endIndex = range.startIndex + range.endOffset;
      return [].concat(
        this.tokens.slice(range.startIndex, endIndex)
      );
    };
    Tokenizer.prototype.getContextRanges = function(contextName) {
      var context = this.getContext(contextName);
      if (!!context) {
        return context.ranges;
      } else {
        return { FAIL: "context checker '" + contextName + "' is not registered." };
      }
    };
    Tokenizer.prototype.resetContextsRanges = function() {
      var registeredContexts = this.registeredContexts;
      for (var contextName in registeredContexts) {
        if (registeredContexts.hasOwnProperty(contextName)) {
          var context = registeredContexts[contextName];
          context.ranges = [];
        }
      }
    };
    Tokenizer.prototype.updateContextsRanges = function() {
      this.resetContextsRanges();
      var chars = this.tokens.map(function(token) {
        return token.char;
      });
      for (var i3 = 0; i3 < chars.length; i3++) {
        var contextParams = new ContextParams(chars, i3);
        this.runContextCheck(contextParams);
      }
      this.dispatch("updateContextsRanges", [this.registeredContexts]);
    };
    Tokenizer.prototype.setEndOffset = function(offset, contextName) {
      var startIndex = this.getContext(contextName).openRange.startIndex;
      var range = new ContextRange(startIndex, offset, contextName);
      var ranges = this.getContext(contextName).ranges;
      range.rangeId = contextName + "." + ranges.length;
      ranges.push(range);
      this.getContext(contextName).openRange = null;
      return range;
    };
    Tokenizer.prototype.runContextCheck = function(contextParams) {
      var this$1 = this;
      var index = contextParams.index;
      this.contextCheckers.forEach(function(contextChecker) {
        var contextName = contextChecker.contextName;
        var openRange = this$1.getContext(contextName).openRange;
        if (!openRange && contextChecker.checkStart(contextParams)) {
          openRange = new ContextRange(index, null, contextName);
          this$1.getContext(contextName).openRange = openRange;
          this$1.dispatch("contextStart", [contextName, index]);
        }
        if (!!openRange && contextChecker.checkEnd(contextParams)) {
          var offset = index - openRange.startIndex + 1;
          var range = this$1.setEndOffset(offset, contextName);
          this$1.dispatch("contextEnd", [contextName, range]);
        }
      });
    };
    Tokenizer.prototype.tokenize = function(text2) {
      this.tokens = [];
      this.resetContextsRanges();
      var chars = Array.from(text2);
      this.dispatch("start");
      for (var i3 = 0; i3 < chars.length; i3++) {
        var char = chars[i3];
        var contextParams = new ContextParams(chars, i3);
        this.dispatch("next", [contextParams]);
        this.runContextCheck(contextParams);
        var token = new Token(char);
        this.tokens.push(token);
        this.dispatch("newToken", [token, contextParams]);
      }
      this.dispatch("end", [this.tokens]);
      return this.tokens;
    };
    FeatureQuery.prototype.getDefaultScriptFeaturesIndexes = function() {
      var scripts = this.font.tables.gsub.scripts;
      for (var s3 = 0; s3 < scripts.length; s3++) {
        var script = scripts[s3];
        if (script.tag === "DFLT") {
          return script.script.defaultLangSys.featureIndexes;
        }
      }
      return [];
    };
    FeatureQuery.prototype.getScriptFeaturesIndexes = function(scriptTag) {
      var tables = this.font.tables;
      if (!tables.gsub) {
        return [];
      }
      if (!scriptTag) {
        return this.getDefaultScriptFeaturesIndexes();
      }
      var scripts = this.font.tables.gsub.scripts;
      for (var i3 = 0; i3 < scripts.length; i3++) {
        var script = scripts[i3];
        if (script.tag === scriptTag && script.script.defaultLangSys) {
          return script.script.defaultLangSys.featureIndexes;
        } else {
          var langSysRecords = script.langSysRecords;
          if (!!langSysRecords) {
            for (var j5 = 0; j5 < langSysRecords.length; j5++) {
              var langSysRecord = langSysRecords[j5];
              if (langSysRecord.tag === scriptTag) {
                var langSys = langSysRecord.langSys;
                return langSys.featureIndexes;
              }
            }
          }
        }
      }
      return this.getDefaultScriptFeaturesIndexes();
    };
    FeatureQuery.prototype.mapTagsToFeatures = function(features, scriptTag) {
      var tags = {};
      for (var i3 = 0; i3 < features.length; i3++) {
        var tag = features[i3].tag;
        var feature = features[i3].feature;
        tags[tag] = feature;
      }
      this.features[scriptTag].tags = tags;
    };
    FeatureQuery.prototype.getScriptFeatures = function(scriptTag) {
      var features = this.features[scriptTag];
      if (this.features.hasOwnProperty(scriptTag)) {
        return features;
      }
      var featuresIndexes = this.getScriptFeaturesIndexes(scriptTag);
      if (!featuresIndexes) {
        return null;
      }
      var gsub2 = this.font.tables.gsub;
      features = featuresIndexes.map(function(index) {
        return gsub2.features[index];
      });
      this.features[scriptTag] = features;
      this.mapTagsToFeatures(features, scriptTag);
      return features;
    };
    FeatureQuery.prototype.getSubstitutionType = function(lookupTable, subtable) {
      var lookupType = lookupTable.lookupType.toString();
      var substFormat = subtable.substFormat.toString();
      return lookupType + substFormat;
    };
    FeatureQuery.prototype.getLookupMethod = function(lookupTable, subtable) {
      var this$1 = this;
      var substitutionType = this.getSubstitutionType(lookupTable, subtable);
      switch (substitutionType) {
        case "11":
          return function(glyphIndex) {
            return singleSubstitutionFormat1.apply(
              this$1,
              [glyphIndex, subtable]
            );
          };
        case "12":
          return function(glyphIndex) {
            return singleSubstitutionFormat2.apply(
              this$1,
              [glyphIndex, subtable]
            );
          };
        case "63":
          return function(contextParams) {
            return chainingSubstitutionFormat3.apply(
              this$1,
              [contextParams, subtable]
            );
          };
        case "41":
          return function(contextParams) {
            return ligatureSubstitutionFormat1.apply(
              this$1,
              [contextParams, subtable]
            );
          };
        case "21":
          return function(glyphIndex) {
            return decompositionSubstitutionFormat1.apply(
              this$1,
              [glyphIndex, subtable]
            );
          };
        default:
          throw new Error(
            "lookupType: " + lookupTable.lookupType + " - substFormat: " + subtable.substFormat + " is not yet supported"
          );
      }
    };
    FeatureQuery.prototype.lookupFeature = function(query) {
      var contextParams = query.contextParams;
      var currentIndex = contextParams.index;
      var feature = this.getFeature({
        tag: query.tag,
        script: query.script
      });
      if (!feature) {
        return new Error(
          "font '" + this.font.names.fullName.en + "' doesn't support feature '" + query.tag + "' for script '" + query.script + "'."
        );
      }
      var lookups = this.getFeatureLookups(feature);
      var substitutions = [].concat(contextParams.context);
      for (var l3 = 0; l3 < lookups.length; l3++) {
        var lookupTable = lookups[l3];
        var subtables = this.getLookupSubtables(lookupTable);
        for (var s3 = 0; s3 < subtables.length; s3++) {
          var subtable = subtables[s3];
          var substType = this.getSubstitutionType(lookupTable, subtable);
          var lookup2 = this.getLookupMethod(lookupTable, subtable);
          var substitution = void 0;
          switch (substType) {
            case "11":
              substitution = lookup2(contextParams.current);
              if (substitution) {
                substitutions.splice(currentIndex, 1, new SubstitutionAction({
                  id: 11,
                  tag: query.tag,
                  substitution
                }));
              }
              break;
            case "12":
              substitution = lookup2(contextParams.current);
              if (substitution) {
                substitutions.splice(currentIndex, 1, new SubstitutionAction({
                  id: 12,
                  tag: query.tag,
                  substitution
                }));
              }
              break;
            case "63":
              substitution = lookup2(contextParams);
              if (Array.isArray(substitution) && substitution.length) {
                substitutions.splice(currentIndex, 1, new SubstitutionAction({
                  id: 63,
                  tag: query.tag,
                  substitution
                }));
              }
              break;
            case "41":
              substitution = lookup2(contextParams);
              if (substitution) {
                substitutions.splice(currentIndex, 1, new SubstitutionAction({
                  id: 41,
                  tag: query.tag,
                  substitution
                }));
              }
              break;
            case "21":
              substitution = lookup2(contextParams.current);
              if (substitution) {
                substitutions.splice(currentIndex, 1, new SubstitutionAction({
                  id: 21,
                  tag: query.tag,
                  substitution
                }));
              }
              break;
          }
          contextParams = new ContextParams(substitutions, currentIndex);
          if (Array.isArray(substitution) && !substitution.length) {
            continue;
          }
          substitution = null;
        }
      }
      return substitutions.length ? substitutions : null;
    };
    FeatureQuery.prototype.supports = function(query) {
      if (!query.script) {
        return false;
      }
      this.getScriptFeatures(query.script);
      var supportedScript = this.features.hasOwnProperty(query.script);
      if (!query.tag) {
        return supportedScript;
      }
      var supportedFeature = this.features[query.script].some(function(feature) {
        return feature.tag === query.tag;
      });
      return supportedScript && supportedFeature;
    };
    FeatureQuery.prototype.getLookupSubtables = function(lookupTable) {
      return lookupTable.subtables || null;
    };
    FeatureQuery.prototype.getLookupByIndex = function(index) {
      var lookups = this.font.tables.gsub.lookups;
      return lookups[index] || null;
    };
    FeatureQuery.prototype.getFeatureLookups = function(feature) {
      return feature.lookupListIndexes.map(this.getLookupByIndex.bind(this));
    };
    FeatureQuery.prototype.getFeature = function getFeature(query) {
      if (!this.font) {
        return { FAIL: "No font was found" };
      }
      if (!this.features.hasOwnProperty(query.script)) {
        this.getScriptFeatures(query.script);
      }
      var scriptFeatures = this.features[query.script];
      if (!scriptFeatures) {
        return { FAIL: "No feature for script " + query.script };
      }
      if (!scriptFeatures.tags[query.tag]) {
        return null;
      }
      return this.features[query.script].tags[query.tag];
    };
    arabicWordCheck = {
      startCheck: arabicWordStartCheck,
      endCheck: arabicWordEndCheck
    };
    arabicSentenceCheck = {
      startCheck: arabicSentenceStartCheck,
      endCheck: arabicSentenceEndCheck
    };
    SUBSTITUTIONS = {
      11: singleSubstitutionFormat1$1,
      12: singleSubstitutionFormat2$1,
      63: chainingSubstitutionFormat3$1,
      41: ligatureSubstitutionFormat1$1
    };
    latinWordCheck = {
      startCheck: latinWordStartCheck,
      endCheck: latinWordEndCheck
    };
    Bidi.prototype.setText = function(text2) {
      this.text = text2;
    };
    Bidi.prototype.contextChecks = {
      latinWordCheck,
      arabicWordCheck,
      arabicSentenceCheck
    };
    Bidi.prototype.registerFeatures = function(script, tags) {
      var this$1 = this;
      var supportedTags = tags.filter(
        function(tag) {
          return this$1.query.supports({ script, tag });
        }
      );
      if (!this.featuresTags.hasOwnProperty(script)) {
        this.featuresTags[script] = supportedTags;
      } else {
        this.featuresTags[script] = this.featuresTags[script].concat(supportedTags);
      }
    };
    Bidi.prototype.applyFeatures = function(font, features) {
      if (!font) {
        throw new Error(
          "No valid font was provided to apply features"
        );
      }
      if (!this.query) {
        this.query = new FeatureQuery(font);
      }
      for (var f4 = 0; f4 < features.length; f4++) {
        var feature = features[f4];
        if (!this.query.supports({ script: feature.script })) {
          continue;
        }
        this.registerFeatures(feature.script, feature.tags);
      }
    };
    Bidi.prototype.registerModifier = function(modifierId, condition, modifier) {
      this.tokenizer.registerModifier(modifierId, condition, modifier);
    };
    Bidi.prototype.checkContextReady = function(contextId) {
      return !!this.tokenizer.getContext(contextId);
    };
    Bidi.prototype.applyFeaturesToContexts = function() {
      if (this.checkContextReady("arabicWord")) {
        applyArabicPresentationForms.call(this);
        applyArabicRequireLigatures.call(this);
      }
      if (this.checkContextReady("latinWord")) {
        applyLatinLigatures.call(this);
      }
      if (this.checkContextReady("arabicSentence")) {
        reverseArabicSentences.call(this);
      }
    };
    Bidi.prototype.processText = function(text2) {
      if (!this.text || this.text !== text2) {
        this.setText(text2);
        tokenizeText.call(this);
        this.applyFeaturesToContexts();
      }
    };
    Bidi.prototype.getBidiText = function(text2) {
      this.processText(text2);
      return this.tokenizer.getText();
    };
    Bidi.prototype.getTextGlyphs = function(text2) {
      this.processText(text2);
      var indexes = [];
      for (var i3 = 0; i3 < this.tokenizer.tokens.length; i3++) {
        var token = this.tokenizer.tokens[i3];
        if (token.state.deleted) {
          continue;
        }
        var index = token.activeState.value;
        indexes.push(Array.isArray(index) ? index[0] : index);
      }
      return indexes;
    };
    Font.prototype.hasChar = function(c4) {
      return this.encoding.charToGlyphIndex(c4) !== null;
    };
    Font.prototype.charToGlyphIndex = function(s3) {
      return this.encoding.charToGlyphIndex(s3);
    };
    Font.prototype.charToGlyph = function(c4) {
      var glyphIndex = this.charToGlyphIndex(c4);
      var glyph = this.glyphs.get(glyphIndex);
      if (!glyph) {
        glyph = this.glyphs.get(0);
      }
      return glyph;
    };
    Font.prototype.updateFeatures = function(options) {
      return this.defaultRenderOptions.features.map(function(feature) {
        if (feature.script === "latn") {
          return {
            script: "latn",
            tags: feature.tags.filter(function(tag) {
              return options[tag];
            })
          };
        } else {
          return feature;
        }
      });
    };
    Font.prototype.stringToGlyphs = function(s3, options) {
      var this$1 = this;
      var bidi = new Bidi();
      var charToGlyphIndexMod = function(token) {
        return this$1.charToGlyphIndex(token.char);
      };
      bidi.registerModifier("glyphIndex", null, charToGlyphIndexMod);
      var features = options ? this.updateFeatures(options.features) : this.defaultRenderOptions.features;
      bidi.applyFeatures(this, features);
      var indexes = bidi.getTextGlyphs(s3);
      var length = indexes.length;
      var glyphs = new Array(length);
      var notdef = this.glyphs.get(0);
      for (var i3 = 0; i3 < length; i3 += 1) {
        glyphs[i3] = this.glyphs.get(indexes[i3]) || notdef;
      }
      return glyphs;
    };
    Font.prototype.getKerningValue = function(leftGlyph, rightGlyph) {
      leftGlyph = leftGlyph.index || leftGlyph;
      rightGlyph = rightGlyph.index || rightGlyph;
      var gposKerning = this.position.defaultKerningTables;
      if (gposKerning) {
        return this.position.getKerningValue(
          gposKerning,
          leftGlyph,
          rightGlyph
        );
      }
      return this.kerningPairs[leftGlyph + "," + rightGlyph] || 0;
    };
    Font.prototype.defaultRenderOptions = {
      kerning: true,
      features: [
        /**
         * these 4 features are required to render Arabic text properly
         * and shouldn't be turned off when rendering arabic text.
         */
        { script: "arab", tags: ["init", "medi", "fina", "rlig"] },
        { script: "latn", tags: ["liga", "rlig"] }
      ]
    };
    Font.prototype.forEachGlyph = function(text2, x4, y3, fontSize, options, callback2) {
      x4 = x4 !== void 0 ? x4 : 0;
      y3 = y3 !== void 0 ? y3 : 0;
      fontSize = fontSize !== void 0 ? fontSize : 72;
      options = Object.assign({}, this.defaultRenderOptions, options);
      var fontScale = 1 / this.unitsPerEm * fontSize;
      var glyphs = this.stringToGlyphs(text2, options);
      var kerningLookups;
      if (options.kerning) {
        var script = options.script || this.position.getDefaultScriptName();
        kerningLookups = this.position.getKerningTables(
          script,
          options.language
        );
      }
      for (var i3 = 0; i3 < glyphs.length; i3 += 1) {
        var glyph = glyphs[i3];
        callback2.call(this, glyph, x4, y3, fontSize, options);
        if (glyph.advanceWidth) {
          x4 += glyph.advanceWidth * fontScale;
        }
        if (options.kerning && i3 < glyphs.length - 1) {
          var kerningValue = kerningLookups ? this.position.getKerningValue(
            kerningLookups,
            glyph.index,
            glyphs[i3 + 1].index
          ) : this.getKerningValue(glyph, glyphs[i3 + 1]);
          x4 += kerningValue * fontScale;
        }
        if (options.letterSpacing) {
          x4 += options.letterSpacing * fontSize;
        } else if (options.tracking) {
          x4 += options.tracking / 1e3 * fontSize;
        }
      }
      return x4;
    };
    Font.prototype.getPath = function(text2, x4, y3, fontSize, options) {
      var fullPath = new Path();
      this.forEachGlyph(
        text2,
        x4,
        y3,
        fontSize,
        options,
        function(glyph, gX, gY, gFontSize) {
          var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);
          fullPath.extend(glyphPath);
        }
      );
      return fullPath;
    };
    Font.prototype.getPaths = function(text2, x4, y3, fontSize, options) {
      var glyphPaths = [];
      this.forEachGlyph(
        text2,
        x4,
        y3,
        fontSize,
        options,
        function(glyph, gX, gY, gFontSize) {
          var glyphPath = glyph.getPath(gX, gY, gFontSize, options, this);
          glyphPaths.push(glyphPath);
        }
      );
      return glyphPaths;
    };
    Font.prototype.getAdvanceWidth = function(text2, fontSize, options) {
      return this.forEachGlyph(text2, 0, 0, fontSize, options, function() {
      });
    };
    Font.prototype.fsSelectionValues = {
      ITALIC: 1,
      //1
      UNDERSCORE: 2,
      //2
      NEGATIVE: 4,
      //4
      OUTLINED: 8,
      //8
      STRIKEOUT: 16,
      //16
      BOLD: 32,
      //32
      REGULAR: 64,
      //64
      USER_TYPO_METRICS: 128,
      //128
      WWS: 256,
      //256
      OBLIQUE: 512
      //512
    };
    Font.prototype.usWidthClasses = {
      ULTRA_CONDENSED: 1,
      EXTRA_CONDENSED: 2,
      CONDENSED: 3,
      SEMI_CONDENSED: 4,
      MEDIUM: 5,
      SEMI_EXPANDED: 6,
      EXPANDED: 7,
      EXTRA_EXPANDED: 8,
      ULTRA_EXPANDED: 9
    };
    Font.prototype.usWeightClasses = {
      THIN: 100,
      EXTRA_LIGHT: 200,
      LIGHT: 300,
      NORMAL: 400,
      MEDIUM: 500,
      SEMI_BOLD: 600,
      BOLD: 700,
      EXTRA_BOLD: 800,
      BLACK: 900
    };
    cmap = { parse: parseCmapTable };
    TOP_DICT_META = [
      { name: "version", op: 0, type: "SID" },
      { name: "notice", op: 1, type: "SID" },
      { name: "copyright", op: 1200, type: "SID" },
      { name: "fullName", op: 2, type: "SID" },
      { name: "familyName", op: 3, type: "SID" },
      { name: "weight", op: 4, type: "SID" },
      { name: "isFixedPitch", op: 1201, type: "number", value: 0 },
      { name: "italicAngle", op: 1202, type: "number", value: 0 },
      { name: "underlinePosition", op: 1203, type: "number", value: -100 },
      { name: "underlineThickness", op: 1204, type: "number", value: 50 },
      { name: "paintType", op: 1205, type: "number", value: 0 },
      { name: "charstringType", op: 1206, type: "number", value: 2 },
      {
        name: "fontMatrix",
        op: 1207,
        type: ["real", "real", "real", "real", "real", "real"],
        value: [1e-3, 0, 0, 1e-3, 0, 0]
      },
      { name: "uniqueId", op: 13, type: "number" },
      {
        name: "fontBBox",
        op: 5,
        type: ["number", "number", "number", "number"],
        value: [0, 0, 0, 0]
      },
      { name: "strokeWidth", op: 1208, type: "number", value: 0 },
      { name: "xuid", op: 14, type: [], value: null },
      { name: "charset", op: 15, type: "offset", value: 0 },
      { name: "encoding", op: 16, type: "offset", value: 0 },
      { name: "charStrings", op: 17, type: "offset", value: 0 },
      { name: "private", op: 18, type: ["number", "offset"], value: [0, 0] },
      { name: "ros", op: 1230, type: ["SID", "SID", "number"] },
      { name: "cidFontVersion", op: 1231, type: "number", value: 0 },
      { name: "cidFontRevision", op: 1232, type: "number", value: 0 },
      { name: "cidFontType", op: 1233, type: "number", value: 0 },
      { name: "cidCount", op: 1234, type: "number", value: 8720 },
      { name: "uidBase", op: 1235, type: "number" },
      { name: "fdArray", op: 1236, type: "offset" },
      { name: "fdSelect", op: 1237, type: "offset" },
      { name: "fontName", op: 1238, type: "SID" }
    ];
    PRIVATE_DICT_META = [
      { name: "subrs", op: 19, type: "offset", value: 0 },
      { name: "defaultWidthX", op: 20, type: "number", value: 0 },
      { name: "nominalWidthX", op: 21, type: "number", value: 0 }
    ];
    cff = { parse: parseCFFTable };
    fvar = { parse: parseFvarTable };
    attachList = function() {
      return {
        coverage: this.parsePointer(Parser.coverage),
        attachPoints: this.parseList(Parser.pointer(Parser.uShortList))
      };
    };
    caretValue = function() {
      var format2 = this.parseUShort();
      check2.argument(
        format2 === 1 || format2 === 2 || format2 === 3,
        "Unsupported CaretValue table version."
      );
      if (format2 === 1) {
        return { coordinate: this.parseShort() };
      } else if (format2 === 2) {
        return { pointindex: this.parseShort() };
      } else if (format2 === 3) {
        return { coordinate: this.parseShort() };
      }
    };
    ligGlyph = function() {
      return this.parseList(Parser.pointer(caretValue));
    };
    ligCaretList = function() {
      return {
        coverage: this.parsePointer(Parser.coverage),
        ligGlyphs: this.parseList(Parser.pointer(ligGlyph))
      };
    };
    markGlyphSets = function() {
      this.parseUShort();
      return this.parseList(Parser.pointer(Parser.coverage));
    };
    gdef = { parse: parseGDEFTable };
    subtableParsers = new Array(10);
    subtableParsers[1] = function parseLookup1() {
      var start = this.offset + this.relativeOffset;
      var posformat = this.parseUShort();
      if (posformat === 1) {
        return {
          posFormat: 1,
          coverage: this.parsePointer(Parser.coverage),
          value: this.parseValueRecord()
        };
      } else if (posformat === 2) {
        return {
          posFormat: 2,
          coverage: this.parsePointer(Parser.coverage),
          values: this.parseValueRecordList()
        };
      }
      check2.assert(
        false,
        "0x" + start.toString(16) + ": GPOS lookup type 1 format must be 1 or 2."
      );
    };
    subtableParsers[2] = function parseLookup2() {
      var start = this.offset + this.relativeOffset;
      var posFormat = this.parseUShort();
      check2.assert(
        posFormat === 1 || posFormat === 2,
        "0x" + start.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."
      );
      var coverage = this.parsePointer(Parser.coverage);
      var valueFormat1 = this.parseUShort();
      var valueFormat2 = this.parseUShort();
      if (posFormat === 1) {
        return {
          posFormat,
          coverage,
          valueFormat1,
          valueFormat2,
          pairSets: this.parseList(
            Parser.pointer(
              Parser.list(function() {
                return {
                  // pairValueRecord
                  secondGlyph: this.parseUShort(),
                  value1: this.parseValueRecord(valueFormat1),
                  value2: this.parseValueRecord(valueFormat2)
                };
              })
            )
          )
        };
      } else if (posFormat === 2) {
        var classDef1 = this.parsePointer(Parser.classDef);
        var classDef2 = this.parsePointer(Parser.classDef);
        var class1Count = this.parseUShort();
        var class2Count = this.parseUShort();
        return {
          // Class Pair Adjustment
          posFormat,
          coverage,
          valueFormat1,
          valueFormat2,
          classDef1,
          classDef2,
          class1Count,
          class2Count,
          classRecords: this.parseList(
            class1Count,
            Parser.list(class2Count, function() {
              return {
                value1: this.parseValueRecord(valueFormat1),
                value2: this.parseValueRecord(valueFormat2)
              };
            })
          )
        };
      }
    };
    subtableParsers[3] = function parseLookup3() {
      return { error: "GPOS Lookup 3 not supported" };
    };
    subtableParsers[4] = function parseLookup4() {
      return { error: "GPOS Lookup 4 not supported" };
    };
    subtableParsers[5] = function parseLookup5() {
      return { error: "GPOS Lookup 5 not supported" };
    };
    subtableParsers[6] = function parseLookup6() {
      return { error: "GPOS Lookup 6 not supported" };
    };
    subtableParsers[7] = function parseLookup7() {
      return { error: "GPOS Lookup 7 not supported" };
    };
    subtableParsers[8] = function parseLookup8() {
      return { error: "GPOS Lookup 8 not supported" };
    };
    subtableParsers[9] = function parseLookup9() {
      return { error: "GPOS Lookup 9 not supported" };
    };
    gpos = { parse: parseGposTable };
    subtableParsers$1 = new Array(9);
    subtableParsers$1[1] = function parseLookup12() {
      var start = this.offset + this.relativeOffset;
      var substFormat = this.parseUShort();
      if (substFormat === 1) {
        return {
          substFormat: 1,
          coverage: this.parsePointer(Parser.coverage),
          deltaGlyphId: this.parseUShort()
        };
      } else if (substFormat === 2) {
        return {
          substFormat: 2,
          coverage: this.parsePointer(Parser.coverage),
          substitute: this.parseOffset16List()
        };
      }
      check2.assert(
        false,
        "0x" + start.toString(16) + ": lookup type 1 format must be 1 or 2."
      );
    };
    subtableParsers$1[2] = function parseLookup22() {
      var substFormat = this.parseUShort();
      check2.argument(
        substFormat === 1,
        "GSUB Multiple Substitution Subtable identifier-format must be 1"
      );
      return {
        substFormat,
        coverage: this.parsePointer(Parser.coverage),
        sequences: this.parseListOfLists()
      };
    };
    subtableParsers$1[3] = function parseLookup32() {
      var substFormat = this.parseUShort();
      check2.argument(
        substFormat === 1,
        "GSUB Alternate Substitution Subtable identifier-format must be 1"
      );
      return {
        substFormat,
        coverage: this.parsePointer(Parser.coverage),
        alternateSets: this.parseListOfLists()
      };
    };
    subtableParsers$1[4] = function parseLookup42() {
      var substFormat = this.parseUShort();
      check2.argument(
        substFormat === 1,
        "GSUB ligature table identifier-format must be 1"
      );
      return {
        substFormat,
        coverage: this.parsePointer(Parser.coverage),
        ligatureSets: this.parseListOfLists(function() {
          return {
            ligGlyph: this.parseUShort(),
            components: this.parseUShortList(this.parseUShort() - 1)
          };
        })
      };
    };
    lookupRecordDesc = {
      sequenceIndex: Parser.uShort,
      lookupListIndex: Parser.uShort
    };
    subtableParsers$1[5] = function parseLookup52() {
      var start = this.offset + this.relativeOffset;
      var substFormat = this.parseUShort();
      if (substFormat === 1) {
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          ruleSets: this.parseListOfLists(function() {
            var glyphCount2 = this.parseUShort();
            var substCount2 = this.parseUShort();
            return {
              input: this.parseUShortList(glyphCount2 - 1),
              lookupRecords: this.parseRecordList(
                substCount2,
                lookupRecordDesc
              )
            };
          })
        };
      } else if (substFormat === 2) {
        return {
          substFormat,
          coverage: this.parsePointer(Parser.coverage),
          classDef: this.parsePointer(Parser.classDef),
          classSets: this.parseListOfLists(function() {
            var glyphCount2 = this.parseUShort();
            var substCount2 = this.parseUShort();
            return {
              classes: this.parseUShortList(glyphCount2 - 1),
              lookupRecords: this.parseRecordList(
                substCount2,
                lookupRecordDesc
              )
            };
          })
        };
      } else if (substFormat === 3) {
        var glyphCount = this.parseUShort();
        var substCount = this.parseUShort();
        return {
          substFormat,
          coverages: this.parseList(
            glyphCount,
            Parser.pointer(Parser.coverage)
          ),
          lookupRecords: this.parseRecordList(substCount, lookupRecordDesc)
        };
      }
      check2.assert(
        false,
        "0x" + start.toString(16) + ": lookup type 5 format must be 1, 2 or 3."
      );
    };
    subtableParsers$1[6] = function parseLookup62() {
      var start = this.offset + this.relativeOffset;
      var substFormat = this.parseUShort();
      if (substFormat === 1) {
        return {
          substFormat: 1,
          coverage: this.parsePointer(Parser.coverage),
          chainRuleSets: this.parseListOfLists(function() {
            return {
              backtrack: this.parseUShortList(),
              input: this.parseUShortList(this.parseShort() - 1),
              lookahead: this.parseUShortList(),
              lookupRecords: this.parseRecordList(lookupRecordDesc)
            };
          })
        };
      } else if (substFormat === 2) {
        return {
          substFormat: 2,
          coverage: this.parsePointer(Parser.coverage),
          backtrackClassDef: this.parsePointer(Parser.classDef),
          inputClassDef: this.parsePointer(Parser.classDef),
          lookaheadClassDef: this.parsePointer(Parser.classDef),
          chainClassSet: this.parseListOfLists(function() {
            return {
              backtrack: this.parseUShortList(),
              input: this.parseUShortList(this.parseShort() - 1),
              lookahead: this.parseUShortList(),
              lookupRecords: this.parseRecordList(lookupRecordDesc)
            };
          })
        };
      } else if (substFormat === 3) {
        return {
          substFormat: 3,
          backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),
          inputCoverage: this.parseList(Parser.pointer(Parser.coverage)),
          lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),
          lookupRecords: this.parseRecordList(lookupRecordDesc)
        };
      }
      check2.assert(
        false,
        "0x" + start.toString(16) + ": lookup type 6 format must be 1, 2 or 3."
      );
    };
    subtableParsers$1[7] = function parseLookup72() {
      var substFormat = this.parseUShort();
      check2.argument(
        substFormat === 1,
        "GSUB Extension Substitution subtable identifier-format must be 1"
      );
      var extensionLookupType = this.parseUShort();
      var extensionParser = new Parser(
        this.data,
        this.offset + this.parseULong()
      );
      return {
        substFormat: 1,
        lookupType: extensionLookupType,
        extension: subtableParsers$1[extensionLookupType].call(extensionParser)
      };
    };
    subtableParsers$1[8] = function parseLookup82() {
      var substFormat = this.parseUShort();
      check2.argument(
        substFormat === 1,
        "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"
      );
      return {
        substFormat,
        coverage: this.parsePointer(Parser.coverage),
        backtrackCoverage: this.parseList(Parser.pointer(Parser.coverage)),
        lookaheadCoverage: this.parseList(Parser.pointer(Parser.coverage)),
        substitutes: this.parseUShortList()
      };
    };
    gsub = { parse: parseGsubTable };
    head = { parse: parseHeadTable };
    hhea = { parse: parseHheaTable };
    hmtx = { parse: parseHmtxTable };
    kern = { parse: parseKernTable };
    ltag = { parse: parseLtagTable };
    loca = { parse: parseLocaTable };
    maxp = { parse: parseMaxpTable };
    os2 = { parse: parseOS2Table };
    post = { parse: parsePostTable };
    decode4 = {};
    decode4.UTF8 = function(data, offset, numBytes) {
      var codePoints = [];
      var numChars = numBytes;
      for (var j5 = 0; j5 < numChars; j5++, offset += 1) {
        codePoints[j5] = data.getUint8(offset);
      }
      return String.fromCharCode.apply(null, codePoints);
    };
    decode4.UTF16 = function(data, offset, numBytes) {
      var codePoints = [];
      var numChars = numBytes / 2;
      for (var j5 = 0; j5 < numChars; j5++, offset += 2) {
        codePoints[j5] = data.getUint16(offset);
      }
      return String.fromCharCode.apply(null, codePoints);
    };
    eightBitMacEncodings = {
      "x-mac-croatian": (
        // Python: 'mac_croatian'
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7"
      ),
      "x-mac-cyrillic": (
        // Python: 'mac_cyrillic'
        "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E"
      ),
      "x-mac-gaelic": (
        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/GAELIC.TXT
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83"
      ),
      "x-mac-greek": (
        // Python: 'mac_greek'
        "\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD"
      ),
      "x-mac-icelandic": (
        // Python: 'mac_iceland'
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"
      ),
      "x-mac-inuit": (
        // http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/INUIT.TXT
        "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142"
      ),
      "x-mac-ce": (
        // Python: 'mac_latin2'
        "\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7"
      ),
      macintosh: (
        // Python: 'mac_roman'
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"
      ),
      "x-mac-romanian": (
        // Python: 'mac_romanian'
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"
      ),
      "x-mac-turkish": (
        // Python: 'mac_turkish'
        "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"
      )
    };
    decode4.MACSTRING = function(dataView, offset, dataLength, encoding) {
      var table = eightBitMacEncodings[encoding];
      if (table === void 0) {
        return void 0;
      }
      var result = "";
      for (var i3 = 0; i3 < dataLength; i3++) {
        var c4 = dataView.getUint8(offset + i3);
        if (c4 <= 127) {
          result += String.fromCharCode(c4);
        } else {
          result += table[c4 & 127];
        }
      }
      return result;
    };
    meta = { parse: parseMetaTable };
    opentype = /* @__PURE__ */ Object.freeze({
      __proto__: null,
      Font,
      Glyph,
      Path,
      _parse: parse4,
      parse: parseBuffer,
      load,
      loadSync
    });
    opentype_module_default = opentype;
  }
});

// ../../node_modules/satori/node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js
var YGEnums, ALIGN_AUTO, ALIGN_FLEX_START, ALIGN_CENTER, ALIGN_FLEX_END, ALIGN_STRETCH, ALIGN_BASELINE, ALIGN_SPACE_BETWEEN, ALIGN_SPACE_AROUND, DIMENSION_WIDTH, DIMENSION_HEIGHT, DIRECTION_INHERIT, DIRECTION_LTR, DIRECTION_RTL, DISPLAY_FLEX, DISPLAY_NONE, EDGE_LEFT, EDGE_TOP, EDGE_RIGHT, EDGE_BOTTOM, EDGE_START, EDGE_END, EDGE_HORIZONTAL, EDGE_VERTICAL, EDGE_ALL, EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS, EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE, EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN, FLEX_DIRECTION_COLUMN, FLEX_DIRECTION_COLUMN_REVERSE, FLEX_DIRECTION_ROW, FLEX_DIRECTION_ROW_REVERSE, GUTTER_COLUMN, GUTTER_ROW, GUTTER_ALL, JUSTIFY_FLEX_START, JUSTIFY_CENTER, JUSTIFY_FLEX_END, JUSTIFY_SPACE_BETWEEN, JUSTIFY_SPACE_AROUND, JUSTIFY_SPACE_EVENLY, LOG_LEVEL_ERROR, LOG_LEVEL_WARN, LOG_LEVEL_INFO, LOG_LEVEL_DEBUG, LOG_LEVEL_VERBOSE, LOG_LEVEL_FATAL, MEASURE_MODE_UNDEFINED, MEASURE_MODE_EXACTLY, MEASURE_MODE_AT_MOST, NODE_TYPE_DEFAULT, NODE_TYPE_TEXT, OVERFLOW_VISIBLE, OVERFLOW_HIDDEN, OVERFLOW_SCROLL, POSITION_TYPE_STATIC, POSITION_TYPE_RELATIVE, POSITION_TYPE_ABSOLUTE, PRINT_OPTIONS_LAYOUT, PRINT_OPTIONS_STYLE, PRINT_OPTIONS_CHILDREN, UNIT_UNDEFINED, UNIT_POINT, UNIT_PERCENT, UNIT_AUTO, WRAP_NO_WRAP, WRAP_WRAP, WRAP_WRAP_REVERSE, wrapAsm;
var init_wrapAsm_f766f97f = __esm({
  "../../node_modules/satori/node_modules/yoga-wasm-web/dist/wrapAsm-f766f97f.js"() {
    YGEnums = {};
    ALIGN_AUTO = YGEnums.ALIGN_AUTO = 0;
    ALIGN_FLEX_START = YGEnums.ALIGN_FLEX_START = 1;
    ALIGN_CENTER = YGEnums.ALIGN_CENTER = 2;
    ALIGN_FLEX_END = YGEnums.ALIGN_FLEX_END = 3;
    ALIGN_STRETCH = YGEnums.ALIGN_STRETCH = 4;
    ALIGN_BASELINE = YGEnums.ALIGN_BASELINE = 5;
    ALIGN_SPACE_BETWEEN = YGEnums.ALIGN_SPACE_BETWEEN = 6;
    ALIGN_SPACE_AROUND = YGEnums.ALIGN_SPACE_AROUND = 7;
    DIMENSION_WIDTH = YGEnums.DIMENSION_WIDTH = 0;
    DIMENSION_HEIGHT = YGEnums.DIMENSION_HEIGHT = 1;
    DIRECTION_INHERIT = YGEnums.DIRECTION_INHERIT = 0;
    DIRECTION_LTR = YGEnums.DIRECTION_LTR = 1;
    DIRECTION_RTL = YGEnums.DIRECTION_RTL = 2;
    DISPLAY_FLEX = YGEnums.DISPLAY_FLEX = 0;
    DISPLAY_NONE = YGEnums.DISPLAY_NONE = 1;
    EDGE_LEFT = YGEnums.EDGE_LEFT = 0;
    EDGE_TOP = YGEnums.EDGE_TOP = 1;
    EDGE_RIGHT = YGEnums.EDGE_RIGHT = 2;
    EDGE_BOTTOM = YGEnums.EDGE_BOTTOM = 3;
    EDGE_START = YGEnums.EDGE_START = 4;
    EDGE_END = YGEnums.EDGE_END = 5;
    EDGE_HORIZONTAL = YGEnums.EDGE_HORIZONTAL = 6;
    EDGE_VERTICAL = YGEnums.EDGE_VERTICAL = 7;
    EDGE_ALL = YGEnums.EDGE_ALL = 8;
    EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = YGEnums.EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS = 0;
    EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = YGEnums.EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE = 1;
    EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = YGEnums.EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN = 2;
    FLEX_DIRECTION_COLUMN = YGEnums.FLEX_DIRECTION_COLUMN = 0;
    FLEX_DIRECTION_COLUMN_REVERSE = YGEnums.FLEX_DIRECTION_COLUMN_REVERSE = 1;
    FLEX_DIRECTION_ROW = YGEnums.FLEX_DIRECTION_ROW = 2;
    FLEX_DIRECTION_ROW_REVERSE = YGEnums.FLEX_DIRECTION_ROW_REVERSE = 3;
    GUTTER_COLUMN = YGEnums.GUTTER_COLUMN = 0;
    GUTTER_ROW = YGEnums.GUTTER_ROW = 1;
    GUTTER_ALL = YGEnums.GUTTER_ALL = 2;
    JUSTIFY_FLEX_START = YGEnums.JUSTIFY_FLEX_START = 0;
    JUSTIFY_CENTER = YGEnums.JUSTIFY_CENTER = 1;
    JUSTIFY_FLEX_END = YGEnums.JUSTIFY_FLEX_END = 2;
    JUSTIFY_SPACE_BETWEEN = YGEnums.JUSTIFY_SPACE_BETWEEN = 3;
    JUSTIFY_SPACE_AROUND = YGEnums.JUSTIFY_SPACE_AROUND = 4;
    JUSTIFY_SPACE_EVENLY = YGEnums.JUSTIFY_SPACE_EVENLY = 5;
    LOG_LEVEL_ERROR = YGEnums.LOG_LEVEL_ERROR = 0;
    LOG_LEVEL_WARN = YGEnums.LOG_LEVEL_WARN = 1;
    LOG_LEVEL_INFO = YGEnums.LOG_LEVEL_INFO = 2;
    LOG_LEVEL_DEBUG = YGEnums.LOG_LEVEL_DEBUG = 3;
    LOG_LEVEL_VERBOSE = YGEnums.LOG_LEVEL_VERBOSE = 4;
    LOG_LEVEL_FATAL = YGEnums.LOG_LEVEL_FATAL = 5;
    MEASURE_MODE_UNDEFINED = YGEnums.MEASURE_MODE_UNDEFINED = 0;
    MEASURE_MODE_EXACTLY = YGEnums.MEASURE_MODE_EXACTLY = 1;
    MEASURE_MODE_AT_MOST = YGEnums.MEASURE_MODE_AT_MOST = 2;
    NODE_TYPE_DEFAULT = YGEnums.NODE_TYPE_DEFAULT = 0;
    NODE_TYPE_TEXT = YGEnums.NODE_TYPE_TEXT = 1;
    OVERFLOW_VISIBLE = YGEnums.OVERFLOW_VISIBLE = 0;
    OVERFLOW_HIDDEN = YGEnums.OVERFLOW_HIDDEN = 1;
    OVERFLOW_SCROLL = YGEnums.OVERFLOW_SCROLL = 2;
    POSITION_TYPE_STATIC = YGEnums.POSITION_TYPE_STATIC = 0;
    POSITION_TYPE_RELATIVE = YGEnums.POSITION_TYPE_RELATIVE = 1;
    POSITION_TYPE_ABSOLUTE = YGEnums.POSITION_TYPE_ABSOLUTE = 2;
    PRINT_OPTIONS_LAYOUT = YGEnums.PRINT_OPTIONS_LAYOUT = 1;
    PRINT_OPTIONS_STYLE = YGEnums.PRINT_OPTIONS_STYLE = 2;
    PRINT_OPTIONS_CHILDREN = YGEnums.PRINT_OPTIONS_CHILDREN = 4;
    UNIT_UNDEFINED = YGEnums.UNIT_UNDEFINED = 0;
    UNIT_POINT = YGEnums.UNIT_POINT = 1;
    UNIT_PERCENT = YGEnums.UNIT_PERCENT = 2;
    UNIT_AUTO = YGEnums.UNIT_AUTO = 3;
    WRAP_NO_WRAP = YGEnums.WRAP_NO_WRAP = 0;
    WRAP_WRAP = YGEnums.WRAP_WRAP = 1;
    WRAP_WRAP_REVERSE = YGEnums.WRAP_WRAP_REVERSE = 2;
    wrapAsm = (E2) => {
      function _6(E3, _7, T5) {
        let N6 = E3[_7];
        E3[_7] = function(...E4) {
          return T5.call(this, N6, ...E4);
        };
      }
      for (let T5 of ["setPosition", "setMargin", "setFlexBasis", "setWidth", "setHeight", "setMinWidth", "setMinHeight", "setMaxWidth", "setMaxHeight", "setPadding"]) {
        let N6 = { [YGEnums.UNIT_POINT]: E2.Node.prototype[T5], [YGEnums.UNIT_PERCENT]: E2.Node.prototype[`${T5}Percent`], [YGEnums.UNIT_AUTO]: E2.Node.prototype[`${T5}Auto`] };
        _6(E2.Node.prototype, T5, function(E3, ..._7) {
          let I4, L5;
          let O6 = _7.pop();
          if ("auto" === O6)
            I4 = YGEnums.UNIT_AUTO, L5 = void 0;
          else if ("object" == typeof O6)
            I4 = O6.unit, L5 = O6.valueOf();
          else if (I4 = "string" == typeof O6 && O6.endsWith("%") ? YGEnums.UNIT_PERCENT : YGEnums.UNIT_POINT, L5 = parseFloat(O6), !Number.isNaN(O6) && Number.isNaN(L5))
            throw Error(`Invalid value ${O6} for ${T5}`);
          if (!N6[I4])
            throw Error(`Failed to execute "${T5}": Unsupported unit '${O6}'`);
          return void 0 !== L5 ? N6[I4].call(this, ..._7, L5) : N6[I4].call(this, ..._7);
        });
      }
      function T4(_7) {
        return E2.MeasureCallback.implement({ measure: (...E3) => {
          let { width: T5, height: N6 } = _7(...E3);
          return { width: T5 ?? NaN, height: N6 ?? NaN };
        } });
      }
      function N5(_7) {
        return E2.DirtiedCallback.implement({ dirtied: _7 });
      }
      return _6(E2.Node.prototype, "setMeasureFunc", function(E3, _7) {
        return _7 ? E3.call(this, T4(_7)) : this.unsetMeasureFunc();
      }), _6(E2.Node.prototype, "setDirtiedFunc", function(E3, _7) {
        E3.call(this, N5(_7));
      }), _6(E2.Config.prototype, "free", function() {
        E2.Config.destroy(this);
      }), _6(E2.Node, "create", (_7, T5) => T5 ? E2.Node.createWithConfig(T5) : E2.Node.createDefault()), _6(E2.Node.prototype, "free", function() {
        E2.Node.destroy(this);
      }), _6(E2.Node.prototype, "freeRecursive", function() {
        for (let E3 = 0, _7 = this.getChildCount(); E3 < _7; ++E3)
          this.getChild(0).freeRecursive();
        this.free();
      }), _6(E2.Node.prototype, "calculateLayout", function(E3, _7 = NaN, T5 = NaN, N6 = YGEnums.DIRECTION_LTR) {
        return E3.call(this, _7, T5, N6);
      }), { Config: E2.Config, Node: E2.Node, ...YGEnums };
    };
  }
});

// ../../node_modules/satori/node_modules/yoga-wasm-web/dist/asm.js
var asm_exports = {};
__export(asm_exports, {
  ALIGN_AUTO: () => ALIGN_AUTO,
  ALIGN_BASELINE: () => ALIGN_BASELINE,
  ALIGN_CENTER: () => ALIGN_CENTER,
  ALIGN_FLEX_END: () => ALIGN_FLEX_END,
  ALIGN_FLEX_START: () => ALIGN_FLEX_START,
  ALIGN_SPACE_AROUND: () => ALIGN_SPACE_AROUND,
  ALIGN_SPACE_BETWEEN: () => ALIGN_SPACE_BETWEEN,
  ALIGN_STRETCH: () => ALIGN_STRETCH,
  DIMENSION_HEIGHT: () => DIMENSION_HEIGHT,
  DIMENSION_WIDTH: () => DIMENSION_WIDTH,
  DIRECTION_INHERIT: () => DIRECTION_INHERIT,
  DIRECTION_LTR: () => DIRECTION_LTR,
  DIRECTION_RTL: () => DIRECTION_RTL,
  DISPLAY_FLEX: () => DISPLAY_FLEX,
  DISPLAY_NONE: () => DISPLAY_NONE,
  EDGE_ALL: () => EDGE_ALL,
  EDGE_BOTTOM: () => EDGE_BOTTOM,
  EDGE_END: () => EDGE_END,
  EDGE_HORIZONTAL: () => EDGE_HORIZONTAL,
  EDGE_LEFT: () => EDGE_LEFT,
  EDGE_RIGHT: () => EDGE_RIGHT,
  EDGE_START: () => EDGE_START,
  EDGE_TOP: () => EDGE_TOP,
  EDGE_VERTICAL: () => EDGE_VERTICAL,
  EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE: () => EXPERIMENTAL_FEATURE_ABSOLUTE_PERCENTAGE_AGAINST_PADDING_EDGE,
  EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN: () => EXPERIMENTAL_FEATURE_FIX_ABSOLUTE_TRAILING_COLUMN_MARGIN,
  EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS: () => EXPERIMENTAL_FEATURE_WEB_FLEX_BASIS,
  FLEX_DIRECTION_COLUMN: () => FLEX_DIRECTION_COLUMN,
  FLEX_DIRECTION_COLUMN_REVERSE: () => FLEX_DIRECTION_COLUMN_REVERSE,
  FLEX_DIRECTION_ROW: () => FLEX_DIRECTION_ROW,
  FLEX_DIRECTION_ROW_REVERSE: () => FLEX_DIRECTION_ROW_REVERSE,
  GUTTER_ALL: () => GUTTER_ALL,
  GUTTER_COLUMN: () => GUTTER_COLUMN,
  GUTTER_ROW: () => GUTTER_ROW,
  JUSTIFY_CENTER: () => JUSTIFY_CENTER,
  JUSTIFY_FLEX_END: () => JUSTIFY_FLEX_END,
  JUSTIFY_FLEX_START: () => JUSTIFY_FLEX_START,
  JUSTIFY_SPACE_AROUND: () => JUSTIFY_SPACE_AROUND,
  JUSTIFY_SPACE_BETWEEN: () => JUSTIFY_SPACE_BETWEEN,
  JUSTIFY_SPACE_EVENLY: () => JUSTIFY_SPACE_EVENLY,
  LOG_LEVEL_DEBUG: () => LOG_LEVEL_DEBUG,
  LOG_LEVEL_ERROR: () => LOG_LEVEL_ERROR,
  LOG_LEVEL_FATAL: () => LOG_LEVEL_FATAL,
  LOG_LEVEL_INFO: () => LOG_LEVEL_INFO,
  LOG_LEVEL_VERBOSE: () => LOG_LEVEL_VERBOSE,
  LOG_LEVEL_WARN: () => LOG_LEVEL_WARN,
  MEASURE_MODE_AT_MOST: () => MEASURE_MODE_AT_MOST,
  MEASURE_MODE_EXACTLY: () => MEASURE_MODE_EXACTLY,
  MEASURE_MODE_UNDEFINED: () => MEASURE_MODE_UNDEFINED,
  NODE_TYPE_DEFAULT: () => NODE_TYPE_DEFAULT,
  NODE_TYPE_TEXT: () => NODE_TYPE_TEXT,
  OVERFLOW_HIDDEN: () => OVERFLOW_HIDDEN,
  OVERFLOW_SCROLL: () => OVERFLOW_SCROLL,
  OVERFLOW_VISIBLE: () => OVERFLOW_VISIBLE,
  POSITION_TYPE_ABSOLUTE: () => POSITION_TYPE_ABSOLUTE,
  POSITION_TYPE_RELATIVE: () => POSITION_TYPE_RELATIVE,
  POSITION_TYPE_STATIC: () => POSITION_TYPE_STATIC,
  PRINT_OPTIONS_CHILDREN: () => PRINT_OPTIONS_CHILDREN,
  PRINT_OPTIONS_LAYOUT: () => PRINT_OPTIONS_LAYOUT,
  PRINT_OPTIONS_STYLE: () => PRINT_OPTIONS_STYLE,
  UNIT_AUTO: () => UNIT_AUTO,
  UNIT_PERCENT: () => UNIT_PERCENT,
  UNIT_POINT: () => UNIT_POINT,
  UNIT_UNDEFINED: () => UNIT_UNDEFINED,
  WRAP_NO_WRAP: () => WRAP_NO_WRAP,
  WRAP_WRAP: () => WRAP_WRAP,
  WRAP_WRAP_REVERSE: () => WRAP_WRAP_REVERSE,
  default: () => asm
});
function asm() {
  return wrapAsm(yoga());
}
var yoga;
var init_asm = __esm({
  "../../node_modules/satori/node_modules/yoga-wasm-web/dist/asm.js"() {
    init_wrapAsm_f766f97f();
    init_wrapAsm_f766f97f();
    yoga = (() => {
      var r4 = "undefined" != typeof document && document.currentScript ? document.currentScript.src : void 0;
      return function(e2 = {}) {
        u4 || (u4 = void 0 !== e2 ? e2 : {}), u4.ready = new Promise(function(r5, e3) {
          s3 = r5, A4 = e3;
        });
        var a3, i3, n3 = Object.assign({}, u4), f4 = "";
        "undefined" != typeof document && document.currentScript && (f4 = document.currentScript.src), r4 && (f4 = r4), f4 = 0 !== f4.indexOf("blob:") ? f4.substr(0, f4.replace(/[?#].*/, "").lastIndexOf("/") + 1) : "";
        var t2 = u4.print || console.log.bind(console), b5 = u4.printErr || console.warn.bind(console);
        function o5() {
        }
        function k6(r5) {
          this.exports = function(r6) {
            for (var e3, a4 = new Uint8Array(123), i4 = 25; i4 >= 0; --i4)
              a4[48 + i4] = 52 + i4, a4[65 + i4] = i4, a4[97 + i4] = 26 + i4;
            function n4(r7, e4, i5) {
              for (var n5, f6, t4 = 0, b7 = e4, o7 = i5.length, k8 = e4 + (3 * o7 >> 2) - ("=" == i5[o7 - 2]) - ("=" == i5[o7 - 1]); t4 < o7; t4 += 4)
                n5 = a4[i5.charCodeAt(t4 + 1)], f6 = a4[i5.charCodeAt(t4 + 2)], r7[b7++] = a4[i5.charCodeAt(t4)] << 2 | n5 >> 4, b7 < k8 && (r7[b7++] = n5 << 4 | f6 >> 2), b7 < k8 && (r7[b7++] = f6 << 6 | a4[i5.charCodeAt(t4 + 3)]);
            }
            a4[43] = 62, a4[47] = 63;
            var f5 = new ArrayBuffer(16), t3 = new Int32Array(f5), b6 = new Float32Array(f5), o6 = new Float64Array(f5);
            function k7() {
              throw Error("abort");
            }
            function c5(r7) {
              b6[2] = r7;
            }
            function u5() {
              return b6[2];
            }
            return function(r7) {
              var a5, i5 = r7.a, f6 = i5.a, b7 = f6.buffer;
              f6.grow = function(r10) {
                r10 |= 0;
                var a6 = 0 | eU(), i6 = a6 + r10 | 0;
                if (a6 < i6 && i6 < 65536) {
                  var n5 = new ArrayBuffer(N6(i6, 65536));
                  new Int8Array(n5).set(s4), s4 = new Int8Array(n5), A5 = new Int16Array(n5), l4 = new Int32Array(n5), d6 = new Uint8Array(n5), h3 = new Uint16Array(n5), v5 = new Uint32Array(n5), p7 = new Float32Array(n5), m5 = new Float64Array(n5), b7 = n5, f6.buffer = b7, e3 = d6;
                }
                return a6;
              };
              var s4 = new Int8Array(b7), A5 = new Int16Array(b7), l4 = new Int32Array(b7), d6 = new Uint8Array(b7), h3 = new Uint16Array(b7), v5 = new Uint32Array(b7), p7 = new Float32Array(b7), m5 = new Float64Array(b7), N6 = Math.imul, w8 = Math.fround, y4 = Math.abs, E3 = Math.clz32, G3 = Math.min, R6 = Math.max, g5 = i5.b, Z3 = i5.c, W3 = i5.d, V4 = i5.e, B3 = i5.f, T5 = i5.g, I5 = i5.h, X3 = i5.i, O7 = i5.j, L6 = i5.k, _7 = i5.l, F4 = i5.m, C6 = i5.n, S6 = i5.o, P4 = i5.p, Y3 = i5.q, U4 = i5.r, M5 = i5.s, H4 = i5.t, Q3 = i5.u, z6 = i5.v, j6 = i5.w, D5 = i5.x, x5 = i5.y, J3 = i5.z, K3 = i5.A, q4 = i5.B, $5 = i5.C, rr3 = i5.D, re3 = 73632, ra2 = 0;
              function ri2(r10, e4, a6, i6, n5, f7, b8, o7, c6, A6, h4, v6, m6, N7) {
                var E4, G4, R7, g6, Z4, W4, V5, B4, I6 = 0, X4 = w8(0), O8 = w8(0), L7 = 0, _8 = 0, F5 = 0, C7 = w8(0), S7 = w8(0), P5 = w8(0), Y4 = 0, U5 = 0, M6 = 0, H5 = w8(0), Q4 = w8(0), z7 = w8(0), j7 = 0, D6 = w8(0), x6 = 0, J4 = w8(0), K4 = w8(0), q5 = 0, $6 = 0, rr4 = 0, ra3 = 0, ri3 = 0, rn4 = w8(0), rf3 = 0, rb3 = w8(0), rk3 = 0, rA3 = 0, rl4 = 0, rd3 = 0, rh3 = w8(0), rp3 = 0, rN3 = 0, rw3 = 0, rG3 = 0, rX3 = w8(0), rL3 = 0, r_3 = 0, rF3 = 0, rC3 = w8(0), rY3 = w8(0), rH3 = 0, rz3 = w8(0), rD3 = w8(0), rx3 = w8(0), rJ3 = 0, rK3 = 0, rq3 = w8(0), r$3 = 0, r03 = w8(0), r24 = w8(0), r12 = w8(0), r43 = w8(0), r33 = 0, r82 = 0, r92 = 0, r73 = 0, er2 = 0, ei2 = 0, ef2 = 0, et4 = 0, eb2 = 0, eo3 = w8(0), ek2 = w8(0);
                re3 = I6 = re3 - 384 | 0;
                r: {
                  e: {
                    a: {
                      if (!(n5 ? e4 != e4 : 0)) {
                        if (!(f7 ? a6 != a6 : 0)) {
                          if (l4[(L7 = (c6 ? 0 : 4) + h4 | 0) >> 2] = l4[L7 >> 2] + 1, L7 = 3 & l4[r10 + 24 >> 2], r$3 = (0 | i6) <= 1 ? 1 : i6, rf3 = L7 || r$3, s4[r10 + 300 | 0] = 252 & d6[r10 + 300 | 0] | 3 & rf3, L7 = r10 + 252 | 0, i6 = ((0 | rf3) != 1) << 3, S7 = rP2(r10, rL3 = (0 | rf3) == 2 ? 3 : 2, b8), p7[L7 + i6 >> 2] = S7, _8 = L7, L7 = ((0 | rf3) == 1) << 3, Q4 = rS2(r10, rL3, b8), p7[_8 + L7 >> 2] = Q4, H5 = rP2(r10, 0, b8), p7[r10 + 256 >> 2] = H5, C7 = rS2(r10, 0, b8), p7[r10 + 264 >> 2] = C7, eb2 = (F5 = r10 + 268 | 0) + i6 | 0, eo3 = rM2(r10, rL3), p7[eb2 >> 2] = eo3, eb2 = L7 + F5 | 0, eo3 = rU2(r10, rL3), p7[eb2 >> 2] = eo3, X4 = rM2(r10, 0), p7[r10 + 272 >> 2] = X4, P5 = rU2(r10, 0), p7[r10 + 280 >> 2] = P5, eb2 = (_8 = i6) + (i6 = r10 + 284 | 0) | 0, eo3 = rZ2(r10, rL3, b8), p7[eb2 >> 2] = eo3, eb2 = i6 + L7 | 0, eo3 = rW2(r10, rL3, b8), p7[eb2 >> 2] = eo3, O8 = rZ2(r10, 0, b8), p7[r10 + 288 >> 2] = O8, D6 = rW2(r10, 0, b8), p7[r10 + 296 >> 2] = D6, S7 = w8(S7 + Q4), Q4 = w8(H5 + C7), i6 = l4[r10 + 8 >> 2]) {
                            H5 = w8(w8(w8(p7[r10 + 284 >> 2] + p7[r10 + 292 >> 2]) + p7[r10 + 268 >> 2]) + p7[r10 + 276 >> 2]), a6 = f7 ? w8(a6 - Q4) : w8(NaN), X4 = w8(w8(O8 + D6) + X4), e4 = O8 = n5 ? w8(e4 - S7) : w8(NaN);
                            i:
                              if (e4 == e4) {
                                if ((e4 = w8(O8 - H5)) != e4) {
                                  e4 = w8(0);
                                  break i;
                                }
                                e4 = eu(e4, w8(0));
                              }
                            S7 = w8(X4 + P5), X4 = a6;
                            n:
                              if (a6 == a6) {
                                if ((X4 = w8(a6 - S7)) != X4) {
                                  X4 = w8(0);
                                  break n;
                                }
                                X4 = eu(X4, w8(0));
                              }
                            if (!((0 | n5) != 1 | (0 | f7) != 1)) {
                              i6 = (e4 = ro3(r10, 2, O8, b8)) != e4, X4 = w8(w8(rZ2(r10, 2, b8) + rM2(r10, 2)) + w8(rW2(r10, 2, b8) + rU2(r10, 2)));
                              f: {
                                if (!(i6 | X4 != X4)) {
                                  e4 = eu(e4, X4);
                                  break f;
                                }
                                e4 = i6 ? X4 : e4;
                              }
                              p7[r10 + 516 >> 2] = e4, i6 = (e4 = ro3(r10, 0, a6, o7)) != e4, a6 = w8(w8(rZ2(r10, 0, b8) + rM2(r10, 0)) + w8(rW2(r10, 0, b8) + rU2(r10, 0)));
                              t: {
                                if (!(i6 | a6 != a6)) {
                                  e4 = eu(e4, a6);
                                  break t;
                                }
                                e4 = i6 ? a6 : e4;
                              }
                              p7[r10 + 520 >> 2] = e4;
                              break r;
                            }
                            b: {
                              if (16 & d6[r10 + 4 | 0]) {
                                eY[0 | i6](I6 + 24 | 0, r10, e4, n5, X4, f7, 0);
                                break b;
                              }
                              eY[0 | i6](I6 + 24 | 0, r10, e4, n5, X4, f7);
                            }
                            l4[h4 + 20 >> 2] = l4[h4 + 20 >> 2] + 1, l4[(i6 = (N7 << 2) + h4 | 0) + 24 >> 2] = l4[i6 + 24 >> 2] + 1, e4 = w8(H5 + p7[I6 + 24 >> 2]), i6 = (e4 = ro3(r10, 2, n5 ? (0 | n5) == 2 ? e4 : O8 : e4, b8)) != e4, X4 = w8(w8(rZ2(r10, 2, b8) + rM2(r10, 2)) + w8(rW2(r10, 2, b8) + rU2(r10, 2)));
                            o: {
                              if (!(i6 | X4 != X4)) {
                                e4 = eu(e4, X4);
                                break o;
                              }
                              e4 = i6 ? X4 : e4;
                            }
                            p7[r10 + 516 >> 2] = e4, e4 = w8(S7 + p7[I6 + 28 >> 2]), i6 = (e4 = ro3(r10, 0, f7 ? (0 | f7) == 2 ? e4 : a6 : e4, o7)) != e4, a6 = w8(w8(rZ2(r10, 0, b8) + rM2(r10, 0)) + w8(rW2(r10, 0, b8) + rU2(r10, 0)));
                            k: {
                              if (!(i6 | a6 != a6)) {
                                e4 = eu(e4, a6);
                                break k;
                              }
                              e4 = i6 ? a6 : e4;
                            }
                            p7[r10 + 520 >> 2] = e4;
                            break r;
                          }
                          if (i6 = l4[r10 + 556 >> 2], N7 = l4[r10 + 560 >> 2], (0 | i6) == (0 | N7)) {
                            Q4 = w8(a6 - Q4), i6 = (e4 = ro3(r10, 2, -3 & n5 ? w8(e4 - S7) : w8(w8(w8(p7[r10 + 284 >> 2] + p7[r10 + 292 >> 2]) + p7[r10 + 268 >> 2]) + p7[r10 + 276 >> 2]), b8)) != e4, a6 = w8(w8(rZ2(r10, 2, b8) + rM2(r10, 2)) + w8(rW2(r10, 2, b8) + rU2(r10, 2)));
                            c: {
                              if (!(i6 | a6 != a6)) {
                                e4 = eu(e4, a6);
                                break c;
                              }
                              e4 = i6 ? a6 : e4;
                            }
                            p7[r10 + 516 >> 2] = e4, i6 = (e4 = ro3(r10, 0, -3 & f7 ? Q4 : w8(w8(w8(O8 + D6) + X4) + P5), o7)) != e4, a6 = w8(w8(rZ2(r10, 0, b8) + rM2(r10, 0)) + w8(rW2(r10, 0, b8) + rU2(r10, 0)));
                            u: {
                              if (!(i6 | a6 != a6)) {
                                e4 = eu(e4, a6);
                                break u;
                              }
                              e4 = i6 ? a6 : e4;
                            }
                            p7[r10 + 520 >> 2] = e4;
                            break r;
                          }
                          s:
                            if (!c6) {
                              if (O8 = w8(e4 - S7), X4 = w8(a6 - Q4), !((0 | n5) == 2 & O8 <= w8(0) | !(!(X4 <= w8(0)) | (0 | f7) != 2) & X4 == X4) & ((0 | n5) != 1 | (0 | f7) != 1))
                                break s;
                              i6 = (e4 = ro3(r10, 2, O8 == O8 ? (0 | n5) == 2 && O8 < w8(0) ? w8(0) : O8 : w8(0), b8)) != e4, a6 = w8(w8(rZ2(r10, 2, b8) + rM2(r10, 2)) + w8(rW2(r10, 2, b8) + rU2(r10, 2)));
                              A: {
                                if (!(i6 | a6 != a6)) {
                                  e4 = eu(e4, a6);
                                  break A;
                                }
                                e4 = i6 ? a6 : e4;
                              }
                              p7[r10 + 516 >> 2] = e4, i6 = (e4 = ro3(r10, 0, X4 != X4 ? w8(0) : (0 | f7) == 2 && X4 < w8(0) ? w8(0) : X4, o7)) != e4, a6 = w8(w8(rZ2(r10, 0, b8) + rM2(r10, 0)) + w8(rW2(r10, 0, b8) + rU2(r10, 0)));
                              l: {
                                if (!(i6 | a6 != a6)) {
                                  e4 = eu(e4, a6);
                                  break l;
                                }
                                e4 = i6 ? a6 : e4;
                              }
                              p7[r10 + 520 >> 2] = e4;
                              break r;
                            }
                          for (rd3 = (rr4 = N7 - i6 | 0) >> 2; L7 = l4[i6 >> 2], l4[L7 + 552 >> 2] != (0 | r10) && (F5 = l4[r10 + 568 >> 2], L7 = rV2(l4[F5 >> 2], d6[F5 + 8 | 0], L7, r10, U5, 0), l4[i6 >> 2] = L7, l4[L7 + 552 >> 2] = r10), U5 = U5 + 1 | 0, (0 | N7) != (0 | (i6 = i6 + 4 | 0)); )
                            ;
                          s4[r10 + 300 | 0] = 251 & d6[r10 + 300 | 0], U5 = 3, i6 = (rH3 = l4[r10 + 24 >> 2]) >>> 2 & 3;
                          d: {
                            h: {
                              v: {
                                if ((0 | rf3) == 2) {
                                  N7 = 0;
                                  p:
                                    switch (i6 - 2 | 0) {
                                      case 0:
                                        break d;
                                      case 1:
                                        break p;
                                      default:
                                        break v;
                                    }
                                  U5 = 2;
                                  break d;
                                }
                                if (U5 = 2, N7 = 0, i6 >>> 0 > 1)
                                  break h;
                              }
                              N7 = U5;
                            }
                            U5 = i6;
                          }
                          r03 = w8(e4 - S7), rh3 = w8(w8(rZ2(r10, U5, b8) + rM2(r10, U5)) + w8(rW2(r10, U5, b8) + rU2(r10, U5))), D6 = w8(rZ2(r10, N7, b8) + rM2(r10, N7)), rb3 = w8(D6 + w8(rW2(r10, N7, b8) + rU2(r10, N7))), C7 = rs3(r10, 0, r03, (rk3 = U5 >>> 0 > 1) ? rh3 : rb3, b8), J4 = rs3(r10, 1, r24 = w8(a6 - Q4), rk3 ? rb3 : rh3, o7), K4 = rk3 ? J4 : C7, Q4 = rk3 ? C7 : J4, rp3 = l4[r10 + 560 >> 2], L7 = l4[r10 + 556 >> 2], x6 = rk3 ? n5 : f7;
                          m:
                            if ((0 | x6) == 1) {
                              if ((0 | L7) == (0 | rp3))
                                break a;
                              for (i6 = 0, F5 = L7; ; ) {
                                _8 = i6, i6 = l4[F5 >> 2];
                                N: {
                                  if (!rQ2(i6)) {
                                    i6 = _8;
                                    break N;
                                  }
                                  if (Y4 = 0, _8 || !(_8 = l4[i6 + 552 >> 2]))
                                    break m;
                                  w: {
                                    y: {
                                      a6 = p7[i6 + 32 >> 2];
                                      E:
                                        if ((a6 == a6 || (X4 = w8(0), (a6 = p7[i6 + 28 >> 2]) > w8(0))) && (X4 = a6, a6 != a6))
                                          break y;
                                      if (w8(y4(X4)) < w8(9999999747378752e-20))
                                        break m;
                                      if (_8)
                                        break y;
                                      a6 = w8(0);
                                      break w;
                                    }
                                    if ((a6 = p7[i6 + 36 >> 2]) != a6) {
                                      if (s4[i6 + 4 | 0] < 0) {
                                        a6 = w8(1);
                                        break w;
                                      }
                                      if (a6 = w8(0), !((e4 = p7[i6 + 28 >> 2]) < w8(0)))
                                        break w;
                                      a6 = w8(-e4);
                                    }
                                    if (a6 != a6)
                                      break N;
                                  }
                                  if (w8(y4(a6)) < w8(9999999747378752e-20))
                                    break m;
                                }
                                if (Y4 = i6, (0 | rp3) == (0 | (F5 = F5 + 4 | 0)))
                                  break;
                              }
                            }
                          if ((0 | L7) == (0 | rp3))
                            break a;
                          for (ra3 = (0 | rf3) <= 1 ? 1 : rf3, rN3 = (rw3 = C7 != C7) | (0 | n5) != 1, rG3 = J4 == J4, r_3 = C7 == C7, X4 = w8(0); ; ) {
                            M6 = l4[L7 >> 2], rc2(M6), F5 = l4[M6 + 24 >> 2];
                            G: {
                              if (4194304 & F5) {
                                if (function r11(e5, a7) {
                                  var i7 = 0, n6 = 0, f8 = 0, t4 = 0, b9 = 0, o8 = 0;
                                  for (re3 = i7 = re3 - 320 | 0, l4[(i7 = n6 = ry2(i7, 0, 288)) + 16 >> 2] = 2143289344, l4[i7 + 20 >> 2] = 2143289344, ry2(i7 + 24 | 0, 0, 49), l4[i7 + 80 >> 2] = 2143289344, t4 = i7 + 288 | 0, f8 = i7 + 96 | 0; l4[(i7 = f8) + 16 >> 2] = -1082130432, l4[i7 + 20 >> 2] = -1082130432, l4[i7 + 8 >> 2] = 0, l4[i7 + 12 >> 2] = 0, l4[i7 >> 2] = -1082130432, l4[i7 + 4 >> 2] = -1082130432, (0 | t4) != (0 | (f8 = i7 + 24 | 0)); )
                                    ;
                                  if (l4[n6 + 312 >> 2] = -1082130432, l4[n6 + 316 >> 2] = -1082130432, l4[n6 + 304 >> 2] = 0, l4[n6 + 308 >> 2] = 0, l4[n6 + 296 >> 2] = -1082130432, l4[n6 + 300 >> 2] = -1082130432, l4[n6 + 288 >> 2] = 2143289344, l4[n6 + 292 >> 2] = 2143289344, ru3(e5 + 228 | 0, n6, 320), l4[e5 + 244 >> 2] = 0, l4[e5 + 248 >> 2] = 0, s4[e5 + 4 | 0] = 1 | d6[e5 + 4 | 0], f8 = l4[e5 + 556 >> 2], b9 = l4[e5 + 560 >> 2], (0 | f8) != (0 | b9))
                                    for (; i7 = l4[f8 >> 2], l4[i7 + 552 >> 2] != (0 | e5) && (t4 = l4[e5 + 568 >> 2], i7 = rV2(l4[t4 >> 2], d6[t4 + 8 | 0], i7, e5, o8, a7), l4[f8 >> 2] = i7, l4[i7 + 552 >> 2] = e5, i7 = l4[f8 >> 2]), r11(i7, a7), o8 = o8 + 1 | 0, (0 | b9) != (0 | (f8 = f8 + 4 | 0)); )
                                      ;
                                  re3 = n6 + 320 | 0;
                                }(M6, 0), F5 = 1 | (i6 = d6[M6 + 4 | 0]), s4[M6 + 4 | 0] = F5, !(4 & i6))
                                  break G;
                                s4[M6 + 4 | 0] = 251 & F5;
                                break G;
                              }
                              if (c6 && (rO2(M6, (i6 = 3 & F5) || ra3, Q4, K4, C7), F5 = l4[M6 + 24 >> 2]), (196608 & F5) == 131072)
                                break G;
                              R: {
                                if ((0 | Y4) == (0 | M6)) {
                                  l4[Y4 + 308 >> 2] = 0, l4[Y4 + 304 >> 2] = m6, a6 = w8(0);
                                  break R;
                                }
                                _8 = (rF3 = l4[r10 + 24 >> 2]) >>> 2 & 3;
                                g: {
                                  Z:
                                    if ((0 | rf3) == 2) {
                                      i6 = 3;
                                      W:
                                        switch (_8 - 2 | 0) {
                                          case 0:
                                            break g;
                                          case 1:
                                            break W;
                                          default:
                                            break Z;
                                        }
                                      i6 = 2;
                                      break g;
                                    }
                                  i6 = _8;
                                }
                                O8 = (rA3 = i6 >>> 0 > 1) ? C7 : J4, a6 = w8(0), e4 = p7[M6 + 40 >> 2];
                                V: {
                                  B: {
                                    _8 = l4[M6 + 40 >> 2];
                                    T:
                                      if ((0 | _8) != 2139156720) {
                                        if ((0 | _8) == 2140081935)
                                          break B;
                                        j7 = 4276;
                                        I: {
                                          if ((0 | _8) != 2141891242) {
                                            if (e4 == e4)
                                              break I;
                                            j7 = 4268;
                                          }
                                          a6 = p7[j7 >> 2];
                                          X: {
                                            O:
                                              switch (0 | (_8 = l4[j7 + 4 >> 2])) {
                                                case 0:
                                                case 3:
                                                  break O;
                                                default:
                                                  break X;
                                              }
                                            if (e4 = w8(NaN), !(p7[M6 + 28 >> 2] > w8(0)))
                                              break V;
                                            ri3 = (j7 = s4[M6 + 4 | 0] < 0) ? 2143289344 : 0, _8 = j7 ? 3 : 1, E4 = ri3, t3[2] = E4, a6 = u5();
                                          }
                                          switch (e4 = w8(NaN), _8 - 1 | 0) {
                                            case 0:
                                              break B;
                                            case 1:
                                              break T;
                                            default:
                                              break V;
                                          }
                                        }
                                        if (G4 = (-1073741825 & _8) + 536870912 | 0, t3[2] = G4, a6 = u5(), !(1073741824 & _8))
                                          break B;
                                      }
                                    e4 = w8(w8(O8 * a6) * w8(0.009999999776482582));
                                    break V;
                                  }
                                  e4 = a6;
                                }
                                a6 = p7[M6 + 572 >> 2], _8 = 0;
                                L: {
                                  _:
                                    switch (0 | ($6 = l4[M6 + 576 >> 2])) {
                                      case 0:
                                      case 3:
                                        break L;
                                      default:
                                        break _;
                                    }
                                  if (S7 = p7[M6 + 572 >> 2], !((0 | $6) != 1 | S7 != S7)) {
                                    if (a6 < w8(0))
                                      break L;
                                    _8 = 1;
                                    break L;
                                  }
                                  if (_8 = 1, (0 | $6) != 2 | S7 != S7 || (_8 = 0, a6 < w8(0)))
                                    break L;
                                  _8 = r_3;
                                }
                                S7 = p7[M6 + 580 >> 2], j7 = 0;
                                F: {
                                  C:
                                    switch (0 | (q5 = l4[M6 + 584 >> 2])) {
                                      case 0:
                                      case 3:
                                        break F;
                                      default:
                                        break C;
                                    }
                                  if (P5 = p7[M6 + 580 >> 2], !((0 | q5) != 1 | P5 != P5)) {
                                    if (S7 < w8(0))
                                      break F;
                                    j7 = 1;
                                    break F;
                                  }
                                  if (j7 = 1, (0 | q5) != 2 | P5 != P5 || (j7 = 0, S7 < w8(0)))
                                    break F;
                                  j7 = rG3;
                                }
                                S: {
                                  P: {
                                    if (!(e4 != e4 | O8 != O8)) {
                                      if (a6 = p7[M6 + 308 >> 2], (!d6[l4[M6 + 568 >> 2] + 20 | 0] | l4[M6 + 304 >> 2] == (0 | m6)) & a6 == a6)
                                        break S;
                                      if (!((a6 = w8(w8(rZ2(M6, i6, C7) + rM2(M6, i6)) + w8(rW2(M6, i6, C7) + rU2(M6, i6)))) <= e4) & e4 < a6)
                                        break P;
                                      a6 = e4;
                                      break P;
                                    }
                                    if (_8 & rA3) {
                                      O8 = w8(w8(rZ2(M6, 2, C7) + rM2(M6, 2)) + w8(rW2(M6, 2, C7) + rU2(M6, 2))), e4 = w8(NaN);
                                      Y:
                                        switch ($6 - 1 | 0) {
                                          case 1:
                                            a6 = w8(w8(C7 * a6) * w8(0.009999999776482582));
                                          case 0:
                                            if (e4 = a6, O8 <= e4)
                                              break P;
                                            break;
                                          default:
                                            break Y;
                                        }
                                      if (!(e4 == e4 | O8 == O8)) {
                                        a6 = e4;
                                        break P;
                                      }
                                      if (e4 < O8) {
                                        a6 = O8;
                                        break P;
                                      }
                                      a6 = e4 != e4 ? O8 : e4;
                                      break P;
                                    }
                                    if (!(rA3 | 1 ^ j7)) {
                                      e4 = w8(w8(rZ2(M6, 0, C7) + rM2(M6, 0)) + w8(rW2(M6, 0, C7) + rU2(M6, 0))), a6 = w8(NaN);
                                      U:
                                        switch (q5 - 1 | 0) {
                                          case 1:
                                            S7 = w8(w8(J4 * S7) * w8(0.009999999776482582));
                                          case 0:
                                            if (a6 = S7, e4 <= a6)
                                              break P;
                                            break;
                                          default:
                                            break U;
                                        }
                                      if (a6 != a6 & e4 != e4)
                                        break P;
                                      if (e4 > a6) {
                                        a6 = e4;
                                        break P;
                                      }
                                      a6 = a6 != a6 ? e4 : a6;
                                      break P;
                                    }
                                    if (l4[I6 + 360 >> 2] = 2143289344, l4[I6 + 24 >> 2] = 2143289344, ri3 = 0, l4[I6 + 356 >> 2] = 0, l4[I6 + 352 >> 2] = 0, P5 = w8(rP2(M6, 2, C7) + rS2(M6, 2, C7)), H5 = rP2(M6, 0, C7), z7 = rS2(M6, 0, C7), O8 = w8(NaN), rl4 = 0, e4 = w8(NaN), _8) {
                                      M: {
                                        H:
                                          switch ($6 - 1 | 0) {
                                            case 0:
                                              e4 = a6;
                                              break M;
                                            case 1:
                                              break H;
                                            default:
                                              break M;
                                          }
                                        e4 = w8(w8(C7 * a6) * w8(0.009999999776482582));
                                      }
                                      l4[I6 + 356 >> 2] = 1, e4 = w8(P5 + e4), p7[I6 + 24 >> 2] = e4, rl4 = 1;
                                    }
                                    if (H5 = w8(H5 + z7), j7) {
                                      a6 = w8(NaN);
                                      Q: {
                                        z:
                                          switch (q5 - 1 | 0) {
                                            case 0:
                                              a6 = S7;
                                              break Q;
                                            case 1:
                                              break z;
                                            default:
                                              break Q;
                                          }
                                        a6 = w8(w8(J4 * S7) * w8(0.009999999776482582));
                                      }
                                      l4[I6 + 352 >> 2] = 1, O8 = w8(H5 + a6), p7[I6 + 360 >> 2] = O8, ri3 = 1;
                                    }
                                    $6 = i6 >>> 0 < 2, q5 = 3145728 & rF3;
                                    j: {
                                      D: {
                                        x: {
                                          if (!(!rA3 & (0 | q5) == 2097152)) {
                                            if (rw3 | (0 | q5) == 2097152)
                                              break D;
                                            if (e4 != e4)
                                              break x;
                                            break D;
                                          }
                                          if (rw3 | e4 == e4)
                                            break j;
                                        }
                                        rl4 = 2, l4[I6 + 356 >> 2] = 2, p7[I6 + 24 >> 2] = C7, e4 = C7;
                                      }
                                      J: {
                                        if (!(!$6 & (0 | q5) == 2097152)) {
                                          if ((0 | q5) == 2097152 | J4 != J4)
                                            break j;
                                          if (O8 != O8)
                                            break J;
                                          break j;
                                        }
                                        if (O8 == O8 | J4 != J4)
                                          break j;
                                      }
                                      ri3 = 2, l4[I6 + 352 >> 2] = 2, p7[I6 + 360 >> 2] = J4, O8 = J4;
                                    }
                                    q5 = (a6 = p7[M6 + 224 >> 2]) != a6;
                                    K:
                                      if (!q5) {
                                        q: {
                                          if (!(rA3 | (0 | rl4) != 1)) {
                                            l4[I6 + 352 >> 2] = 1, p7[I6 + 360 >> 2] = H5 + w8(w8(e4 - P5) / a6);
                                            break q;
                                          }
                                          if ($6 | (0 | ri3) != 1)
                                            break K;
                                          l4[I6 + 356 >> 2] = 1, p7[I6 + 24 >> 2] = w8(w8(O8 - H5) * a6) + P5;
                                        }
                                        ri3 = 1, rl4 = 1;
                                      }
                                    F5 = (F5 = F5 >>> 13 & 7) || rF3 >>> 10 & 7;
                                    $:
                                      if (!((0 | F5) == 5 | (0 | rl4) == 1 | (rA3 | (_8 | rN3)) | (0 | F5) != 4)) {
                                        if (l4[I6 + 356 >> 2] = 1, p7[I6 + 24 >> 2] = C7, q5)
                                          break $;
                                        ri3 = 1, l4[I6 + 352 >> 2] = 1, p7[I6 + 360 >> 2] = w8(C7 - P5) / a6;
                                      }
                                    rr:
                                      if (!($6 | (0 | f7) != 1 | J4 != J4 | j7 | (0 | F5) != 4 | (0 | ri3) == 1)) {
                                        if (l4[I6 + 352 >> 2] = 1, p7[I6 + 360 >> 2] = J4, q5)
                                          break rr;
                                        l4[I6 + 356 >> 2] = 1, p7[I6 + 24 >> 2] = w8(J4 - H5) * a6;
                                      }
                                    if (rg2(M6, 2, C7, C7, I6 + 356 | 0, I6 + 24 | 0), rg2(M6, 0, J4, C7, I6 + 352 | 0, I6 + 360 | 0), rt4(M6, p7[I6 + 24 >> 2], p7[I6 + 360 >> 2], rf3, l4[I6 + 356 >> 2], l4[I6 + 352 >> 2], C7, J4, 0, 5, A6, h4, v6, m6), F5 = (e4 = p7[(M6 + (l4[(i6 << 2) + 4252 >> 2] << 2) | 0) + 516 >> 2]) != e4, a6 = w8(w8(rZ2(M6, i6, C7) + rM2(M6, i6)) + w8(rW2(M6, i6, C7) + rU2(M6, i6))), !(F5 | a6 != a6)) {
                                      a6 = eu(e4, a6);
                                      break P;
                                    }
                                    a6 = F5 ? a6 : e4;
                                  }
                                  p7[M6 + 308 >> 2] = a6;
                                }
                                l4[M6 + 304 >> 2] = m6;
                              }
                              X4 = w8(X4 + w8(a6 + w8(rP2(M6, U5, C7) + rS2(M6, U5, C7))));
                            }
                            if ((0 | rp3) == (0 | (L7 = L7 + 4 | 0)))
                              break;
                          }
                          break e;
                        }
                        l4[I6 >> 2] = 3023, rB2(r10, I6), eX(), k7();
                      }
                      l4[I6 + 16 >> 2] = 3105, rB2(r10, I6 + 16 | 0), eX(), k7();
                    }
                    X4 = w8(0);
                  }
                  e4 = w8(X4 + w8(0)), rz3 = rk3 ? o7 : b8, rC3 = rk3 ? b8 : o7, rr4 >>> 0 >= 5 && (e4 = w8(w8(rv2(r10, U5, K4) * w8(rd3 - 1 >>> 0)) + e4)), i6 = e4 > Q4, rp3 = 786432 & rH3, rG3 = (0 | x6) == 2 && rp3 && i6 ? 1 : x6, r82 = (rw3 = (0 | (M6 = rk3 ? f7 : n5)) == 1) & (1 ^ c6), rk3 = U5 >>> 0 < 2, r92 = -3 & M6, rF3 = r10 + 208 | 0, q5 = (f7 = N7 << 2) + 4220 | 0, r73 = !rp3 & rw3, er2 = (0 | M6) != 1 | c6, rA3 = (L7 = U5 << 2) + 4220 | 0, r_3 = L7 + 4252 | 0, ei2 = (rl4 = K4 == K4) << 1, $6 = f7 + 4252 | 0, ef2 = !x6 | !i6, rH3 = I6 + 52 | 0, r12 = rv2(r10, N7, K4), F5 = 0, i6 = 0, ri3 = 0;
                  re: {
                    for (; ; ) {
                      j7 = i6, ry2(I6 + 24 | 0, 0, 44), i6 = l4[r10 + 560 >> 2], f7 = l4[r10 + 556 >> 2];
                      ra:
                        if ((0 | i6) != (0 | f7)) {
                          if ((0 | (i6 = i6 - f7 | 0)) < 0)
                            break re;
                          if (L7 = en2(I6 + 360 | 0, i6 >> 2, 0, rH3), i6 = l4[I6 + 44 >> 2], f7 = l4[I6 + 48 >> 2] - i6 | 0, f7 = rm2(l4[I6 + 364 >> 2] - f7 | 0, i6, f7), i6 = l4[I6 + 44 >> 2], l4[I6 + 364 >> 2] = i6, l4[I6 + 44 >> 2] = f7, _8 = l4[I6 + 368 >> 2], Y4 = l4[I6 + 372 >> 2], f7 = l4[I6 + 48 >> 2], l4[I6 + 368 >> 2] = f7, x6 = l4[I6 + 52 >> 2], l4[I6 + 48 >> 2] = _8, l4[I6 + 52 >> 2] = Y4, l4[I6 + 372 >> 2] = x6, l4[L7 >> 2] = i6, (0 | i6) != (0 | f7) && (l4[I6 + 368 >> 2] = f7 + ((i6 - f7 | 0) + 3 & -4)), !i6)
                            break ra;
                          rE2(i6);
                        }
                      f7 = (Y4 = l4[r10 + 24 >> 2]) >>> 2 & 3;
                      ri: {
                        rn:
                          if ((0 | ((i6 = 3 & Y4) || r$3)) == 2) {
                            i6 = 3;
                            rf:
                              switch (f7 - 2 | 0) {
                                case 0:
                                  break ri;
                                case 1:
                                  break rf;
                                default:
                                  break rn;
                              }
                            i6 = 2;
                            break ri;
                          }
                        i6 = f7;
                      }
                      X4 = rv2(r10, i6, C7), L7 = F5, _8 = l4[r10 + 560 >> 2], f7 = l4[r10 + 556 >> 2];
                      rt:
                        if (!(L7 >>> 0 >= _8 - f7 >> 2 >>> 0))
                          for (x6 = 786432 & Y4, a6 = w8(0); ; ) {
                            if (_8 - f7 >> 2 >>> 0 <= L7 >>> 0)
                              break re;
                            if (Y4 = l4[(L7 << 2) + f7 >> 2], !(4194304 & (rr4 = l4[Y4 + 24 >> 2]) | (196608 & rr4) == 131072)) {
                              if (l4[Y4 + 548 >> 2] = j7, e4 = rP2(Y4, i6, C7), O8 = rS2(Y4, i6, C7), f7 = l4[I6 + 24 >> 2], S7 = (0 | L7) == (0 | F5) ? w8(0) : X4, e4 = w8(e4 + O8), O8 = p7[Y4 + 308 >> 2], P5 = ro3(Y4, i6, O8, rC3), !(f7 ? !(w8(S7 + w8(e4 + w8(a6 + P5))) > Q4) | !x6 : 1))
                                break rt;
                              if (l4[I6 + 24 >> 2] = f7 + 1, S7 = w8(S7 + w8(e4 + P5)), p7[I6 + 28 >> 2] = S7 + p7[I6 + 28 >> 2], rQ2(Y4)) {
                                rb: {
                                  if (l4[Y4 + 552 >> 2]) {
                                    if ((e4 = p7[Y4 + 32 >> 2]) != e4 && (e4 = (e4 = p7[Y4 + 28 >> 2]) > w8(0) ? e4 : w8(0)), p7[I6 + 32 >> 2] = e4 + p7[I6 + 32 >> 2], (e4 = p7[Y4 + 36 >> 2]) == e4)
                                      break rb;
                                    if (s4[Y4 + 4 | 0] < 0) {
                                      e4 = w8(1);
                                      break rb;
                                    }
                                    if (e4 = w8(0), !((P5 = p7[Y4 + 28 >> 2]) < w8(0)))
                                      break rb;
                                    e4 = w8(-P5);
                                    break rb;
                                  }
                                  e4 = w8(0), p7[I6 + 32 >> 2] = p7[I6 + 32 >> 2] + w8(0);
                                }
                                p7[I6 + 36 >> 2] = p7[I6 + 36 >> 2] - w8(e4 * O8);
                              }
                              f7 = l4[I6 + 48 >> 2];
                              ro: {
                                if ((0 | f7) != l4[I6 + 52 >> 2]) {
                                  l4[f7 >> 2] = Y4, l4[I6 + 48 >> 2] = f7 + 4;
                                  break ro;
                                }
                                if ((_8 = (rr4 = (f7 = f7 - l4[I6 + 44 >> 2] | 0) >> 2) + 1 | 0) >>> 0 >= 1073741824)
                                  break re;
                                if (ra3 = f7 >>> 1 | 0, rr4 = en2(I6 + 360 | 0, f7 >>> 0 >= 2147483644 ? 1073741823 : _8 >>> 0 < ra3 >>> 0 ? ra3 : _8, rr4, rH3), l4[l4[I6 + 368 >> 2] >> 2] = Y4, l4[I6 + 368 >> 2] = l4[I6 + 368 >> 2] + 4, f7 = l4[I6 + 44 >> 2], _8 = l4[I6 + 48 >> 2] - f7 | 0, _8 = rm2(l4[I6 + 364 >> 2] - _8 | 0, f7, _8), f7 = l4[I6 + 44 >> 2], l4[I6 + 364 >> 2] = f7, l4[I6 + 44 >> 2] = _8, Y4 = l4[I6 + 368 >> 2], ra3 = l4[I6 + 372 >> 2], _8 = l4[I6 + 48 >> 2], l4[I6 + 368 >> 2] = _8, rN3 = l4[I6 + 52 >> 2], l4[I6 + 48 >> 2] = Y4, l4[I6 + 52 >> 2] = ra3, l4[I6 + 372 >> 2] = rN3, l4[rr4 >> 2] = f7, (0 | f7) != (0 | _8) && (l4[I6 + 368 >> 2] = _8 + ((f7 - _8 | 0) + 3 & -4)), !f7)
                                  break ro;
                                rE2(f7);
                              }
                              f7 = l4[r10 + 556 >> 2], _8 = l4[r10 + 560 >> 2], a6 = w8(a6 + S7);
                            }
                            if (!((L7 = L7 + 1 | 0) >>> 0 < _8 - f7 >> 2 >>> 0))
                              break;
                          }
                      !((z7 = p7[I6 + 32 >> 2]) > w8(0)) | !(z7 < w8(1)) || (l4[I6 + 32 >> 2] = 1065353216, z7 = w8(1)), !((rn4 = p7[I6 + 36 >> 2]) > w8(0)) | !(rn4 < w8(1)) || (l4[I6 + 36 >> 2] = 1065353216, rn4 = w8(1)), l4[I6 + 40 >> 2] = L7, H5 = p7[I6 + 28 >> 2], x6 = l4[I6 + 24 >> 2], ri3 && rE2(ri3), S7 = p7[I6 + 56 >> 2], rr4 = l4[I6 + 48 >> 2], ri3 = l4[I6 + 44 >> 2];
                      rk: {
                        rc: {
                          ru: {
                            rs:
                              if ((0 | rG3) != 1) {
                                a6 = w8(0), e4 = p7[rF3 >> 2];
                                rA: {
                                  rl: {
                                    i6 = l4[rF3 >> 2];
                                    rd:
                                      if ((0 | i6) != 2139156720) {
                                        if ((0 | i6) == 2140081935)
                                          break rl;
                                        f7 = 4276;
                                        rh: {
                                          if ((0 | i6) != 2141891242) {
                                            if (e4 == e4)
                                              break rh;
                                            f7 = 4268;
                                          }
                                          switch (a6 = p7[f7 >> 2], e4 = w8(NaN), l4[f7 + 4 >> 2] - 1 | 0) {
                                            case 0:
                                              break rl;
                                            case 1:
                                              break rd;
                                            default:
                                              break rA;
                                          }
                                        }
                                        if (R7 = (-1073741825 & i6) + 536870912 | 0, t3[2] = R7, a6 = u5(), !(1073741824 & i6))
                                          break rl;
                                      }
                                    e4 = w8(w8(a6 * b8) * w8(0.009999999776482582));
                                    break rA;
                                  }
                                  e4 = a6;
                                }
                                a6 = w8(0), X4 = p7[r10 + 216 >> 2];
                                rv: {
                                  rp: {
                                    i6 = l4[r10 + 216 >> 2];
                                    rm:
                                      if ((0 | i6) != 2139156720) {
                                        if ((0 | i6) == 2140081935)
                                          break rp;
                                        f7 = 4276;
                                        rN: {
                                          if ((0 | i6) != 2141891242) {
                                            if (X4 == X4)
                                              break rN;
                                            f7 = 4268;
                                          }
                                          switch (a6 = p7[f7 >> 2], X4 = w8(NaN), l4[f7 + 4 >> 2] - 1 | 0) {
                                            case 0:
                                              break rp;
                                            case 1:
                                              break rm;
                                            default:
                                              break rv;
                                          }
                                        }
                                        if (g6 = (-1073741825 & i6) + 536870912 | 0, t3[2] = g6, a6 = u5(), !(1073741824 & i6))
                                          break rp;
                                      }
                                    X4 = w8(w8(a6 * b8) * w8(0.009999999776482582));
                                    break rv;
                                  }
                                  X4 = a6;
                                }
                                a6 = w8(0), O8 = p7[r10 + 212 >> 2];
                                rw: {
                                  ry: {
                                    i6 = l4[r10 + 212 >> 2];
                                    rE:
                                      if ((0 | i6) != 2139156720) {
                                        if ((0 | i6) == 2140081935)
                                          break ry;
                                        f7 = 4276;
                                        rG: {
                                          if ((0 | i6) != 2141891242) {
                                            if (O8 == O8)
                                              break rG;
                                            f7 = 4268;
                                          }
                                          switch (a6 = p7[f7 >> 2], P5 = w8(NaN), l4[f7 + 4 >> 2] - 1 | 0) {
                                            case 0:
                                              break ry;
                                            case 1:
                                              break rE;
                                            default:
                                              break rw;
                                          }
                                        }
                                        if (Z4 = (-1073741825 & i6) + 536870912 | 0, t3[2] = Z4, a6 = u5(), !(1073741824 & i6))
                                          break ry;
                                      }
                                    P5 = w8(w8(a6 * o7) * w8(0.009999999776482582));
                                    break rw;
                                  }
                                  P5 = a6;
                                }
                                a6 = w8(0), O8 = p7[r10 + 220 >> 2];
                                rR: {
                                  rg: {
                                    i6 = l4[r10 + 220 >> 2];
                                    rZ:
                                      if ((0 | i6) != 2139156720) {
                                        if ((0 | i6) == 2140081935)
                                          break rg;
                                        f7 = 4276;
                                        rW: {
                                          if ((0 | i6) != 2141891242) {
                                            if (O8 == O8)
                                              break rW;
                                            f7 = 4268;
                                          }
                                          switch (a6 = p7[f7 >> 2], O8 = w8(NaN), l4[f7 + 4 >> 2] - 1 | 0) {
                                            case 0:
                                              break rg;
                                            case 1:
                                              break rZ;
                                            default:
                                              break rR;
                                          }
                                        }
                                        if (W4 = (-1073741825 & i6) + 536870912 | 0, t3[2] = W4, a6 = u5(), !(1073741824 & i6))
                                          break rg;
                                      }
                                    O8 = w8(w8(a6 * o7) * w8(0.009999999776482582));
                                    break rR;
                                  }
                                  O8 = a6;
                                }
                                if ((a6 = w8(((i6 = U5 >>> 0 > 1) ? e4 : P5) - rh3)) == a6 & a6 > H5 || (a6 = w8((i6 ? X4 : O8) - rh3)) == a6 & a6 < H5)
                                  break ru;
                                if (d6[l4[r10 + 568 >> 2] + 11 | 0])
                                  break rs;
                                if (a6 = H5, !l4[r10 + 552 >> 2] | z7 == w8(0))
                                  break rc;
                                e4 = p7[r10 + 32 >> 2];
                                rV: {
                                  rB: {
                                    if (e4 == e4) {
                                      a6 = e4;
                                      break rB;
                                    }
                                    if (!((a6 = p7[r10 + 28 >> 2]) > w8(0)))
                                      break rV;
                                  }
                                  if (a6 != a6) {
                                    a6 = Q4;
                                    break rc;
                                  }
                                  e4 = p7[r10 + 32 >> 2];
                                }
                                if (e4 != e4 && (a6 = H5, !((e4 = p7[r10 + 28 >> 2]) > w8(0))) || (a6 = Q4, e4 != w8(0)))
                                  break rc;
                                a6 = H5;
                                break rc;
                              }
                            a6 = Q4;
                          }
                          if (a6 != a6)
                            break rc;
                          S7 = w8(a6 - H5);
                          break rk;
                        }
                        if (!(H5 < w8(0)))
                          break rk;
                        S7 = w8(-H5);
                      }
                      if (Q4 = a6, !r82) {
                        rT: {
                          if ((0 | ri3) == (0 | rr4)) {
                            P5 = w8(0);
                            break rT;
                          }
                          for (O8 = w8(0), f7 = ri3; ; ) {
                            H5 = p7[(i6 = l4[f7 >> 2]) + 308 >> 2], a6 = ro3(i6, U5, H5, rC3);
                            rI: {
                              if (S7 < w8(0)) {
                                Y4 = l4[i6 + 552 >> 2];
                                rX: {
                                  if (!Y4) {
                                    X4 = w8(0);
                                    break rX;
                                  }
                                  if ((X4 = p7[i6 + 36 >> 2]) == X4)
                                    break rX;
                                  if (s4[i6 + 4 | 0] < 0) {
                                    X4 = w8(1);
                                    break rX;
                                  }
                                  if (X4 = w8(0), !((e4 = p7[i6 + 28 >> 2]) < w8(0)))
                                    break rX;
                                  X4 = w8(-e4);
                                }
                                if (!((e4 = w8(a6 * w8(-X4))) > w8(0) | e4 < w8(0)))
                                  break rI;
                                _8 = (e4 = ro3(i6, U5, X4 = w8(w8(w8(S7 / rn4) * e4) + a6), Q4)) != e4, P5 = w8(w8(rZ2(i6, U5, C7) + rM2(i6, U5)) + w8(rW2(i6, U5, C7) + rU2(i6, U5)));
                                rO: {
                                  if (!(_8 | P5 != P5)) {
                                    e4 = eu(e4, P5);
                                    break rO;
                                  }
                                  e4 = _8 ? P5 : e4;
                                }
                                if (X4 != X4 | e4 != e4 | e4 == X4)
                                  break rI;
                                e4 = w8(e4 - a6);
                                rL: {
                                  if (!Y4) {
                                    a6 = w8(0);
                                    break rL;
                                  }
                                  if ((a6 = p7[i6 + 36 >> 2]) == a6)
                                    break rL;
                                  if (s4[i6 + 4 | 0] < 0) {
                                    a6 = w8(1);
                                    break rL;
                                  }
                                  if (a6 = w8(0), !((X4 = p7[i6 + 28 >> 2]) < w8(0)))
                                    break rL;
                                  a6 = w8(-X4);
                                }
                                O8 = w8(O8 + e4), rn4 = w8(w8(a6 * H5) + rn4);
                                break rI;
                              }
                              if (!(S7 > w8(0)) | !l4[i6 + 552 >> 2] || (X4 = p7[i6 + 32 >> 2]) != X4 && !((X4 = p7[i6 + 28 >> 2]) > w8(0)) || !(X4 < w8(0) | X4 > w8(0)))
                                break rI;
                              _8 = (e4 = ro3(i6, U5, P5 = w8(w8(w8(S7 / z7) * X4) + a6), Q4)) != e4, H5 = w8(w8(rZ2(i6, U5, C7) + rM2(i6, U5)) + w8(rW2(i6, U5, C7) + rU2(i6, U5)));
                              r_: {
                                if (!(_8 | H5 != H5)) {
                                  e4 = eu(e4, H5);
                                  break r_;
                                }
                                e4 = _8 ? H5 : e4;
                              }
                              if (P5 != P5 | e4 != e4 | e4 == P5)
                                break rI;
                              z7 = w8(z7 - X4), O8 = w8(O8 + w8(e4 - a6));
                            }
                            if ((0 | rr4) == (0 | (f7 = f7 + 4 | 0)))
                              break;
                          }
                          for (H5 = w8(S7 - O8), rD3 = w8(H5 / rn4), rx3 = w8(H5 / z7), rK3 = !(ra3 = rw3 & (!(12 & d6[r10 + 26 | 0]) | ef2)), rN3 = l4[$6 >> 2], P5 = w8(0), _8 = ri3; ; ) {
                            f7 = l4[_8 >> 2], a6 = ro3(f7, U5, p7[f7 + 308 >> 2], rC3);
                            rF: {
                              rC: {
                                if (H5 < w8(0)) {
                                  rS: {
                                    if (!l4[f7 + 552 >> 2]) {
                                      e4 = w8(0);
                                      break rS;
                                    }
                                    if ((e4 = p7[f7 + 36 >> 2]) == e4)
                                      break rS;
                                    if (s4[f7 + 4 | 0] < 0) {
                                      e4 = w8(1);
                                      break rS;
                                    }
                                    if (e4 = w8(0), !((X4 = p7[f7 + 28 >> 2]) < w8(0)))
                                      break rS;
                                    e4 = w8(-X4);
                                  }
                                  if (X4 = a6, (e4 = w8(a6 * w8(-e4))) == w8(0))
                                    break rF;
                                  e4 = rn4 == w8(0) ? w8(a6 + e4) : w8(w8(rD3 * e4) + a6);
                                  break rC;
                                }
                                if (X4 = a6, !(H5 > w8(0)) | !l4[f7 + 552 >> 2] || (e4 = p7[f7 + 32 >> 2]) != e4 && !((e4 = p7[f7 + 28 >> 2]) > w8(0)) || !(e4 < w8(0) | e4 > w8(0)))
                                  break rF;
                                e4 = w8(w8(rx3 * e4) + a6);
                              }
                              if (i6 = (e4 = ro3(f7, U5, e4, Q4)) != e4, X4 = w8(w8(rZ2(f7, U5, C7) + rM2(f7, U5)) + w8(rW2(f7, U5, C7) + rU2(f7, U5))), !(i6 | X4 != X4)) {
                                X4 = eu(e4, X4);
                                break rF;
                              }
                              X4 = i6 ? X4 : e4;
                            }
                            e4 = rP2(f7, U5, C7), O8 = rS2(f7, U5, C7), z7 = rP2(f7, N7, C7), rq3 = rS2(f7, N7, C7), O8 = w8(e4 + O8), r43 = w8(X4 + O8), p7[I6 + 352 >> 2] = r43, l4[I6 + 344 >> 2] = 1, z7 = w8(z7 + rq3), e4 = p7[f7 + 224 >> 2];
                            rP: {
                              if (e4 == e4) {
                                l4[I6 + 348 >> 2] = 1, O8 = w8(r43 - O8), p7[I6 + 356 >> 2] = z7 + (rk3 ? w8(O8 * e4) : w8(O8 / e4)), O8 = p7[(Y4 = f7 + (rN3 << 3) | 0) + 572 >> 2], i6 = l4[Y4 + 576 >> 2], e4 = p7[Y4 + 572 >> 2];
                                break rP;
                              }
                              e4 = p7[(Y4 = f7 + (rN3 << 3) | 0) + 572 >> 2];
                              rY: {
                                rU: {
                                  rM: {
                                    rH: {
                                      rQ: {
                                        rz: {
                                          rj: {
                                            rD: {
                                              rx: {
                                                if (!rl4) {
                                                  O8 = p7[Y4 + 572 >> 2], i6 = l4[Y4 + 576 >> 2];
                                                  break rx;
                                                }
                                                O8 = p7[Y4 + 572 >> 2];
                                                rJ: {
                                                  rK: {
                                                    rq: {
                                                      r$:
                                                        switch (0 | (i6 = l4[Y4 + 576 >> 2])) {
                                                          case 0:
                                                          case 3:
                                                            break rq;
                                                          default:
                                                            break r$;
                                                        }
                                                      if (!((0 | i6) != 1 | e4 != e4)) {
                                                        if (!(ra3 & O8 < w8(0)))
                                                          break rJ;
                                                        break rK;
                                                      }
                                                      if (!(rK3 | (!(O8 < w8(0)) | ((0 | i6) != 2 | e4 != e4))))
                                                        break rK;
                                                      break rJ;
                                                    }
                                                    if (!ra3)
                                                      break rJ;
                                                  }
                                                  if ((Y4 = l4[f7 + 24 >> 2] >>> 13 & 7) || (Y4 = l4[r10 + 24 >> 2] >>> 10 & 7), (0 | Y4) != 4 || (ea(I6 + 24 | 0, f7, N7), 3 == l4[I6 + 28 >> 2]))
                                                    break rJ;
                                                  if (ee2(I6 + 360 | 0, f7, N7), 3 != l4[I6 + 364 >> 2])
                                                    break rD;
                                                }
                                                e4 = O8;
                                              }
                                              switch (0 | i6) {
                                                case 0:
                                                case 3:
                                                  break rz;
                                                default:
                                                  break rj;
                                              }
                                            }
                                            l4[I6 + 348 >> 2] = 1;
                                            break rU;
                                          }
                                          if (!((0 | i6) != 1 | e4 != e4)) {
                                            if ((e4 = O8) < w8(0))
                                              break rz;
                                            break rM;
                                          }
                                          if ((0 | i6) != 2 | e4 != e4)
                                            break rQ;
                                          if (K4 != K4)
                                            break rz;
                                          if (!(O8 < w8(0)))
                                            break rH;
                                        }
                                        l4[I6 + 348 >> 2] = ei2;
                                        break rU;
                                      }
                                      e4 = w8(NaN);
                                      r0:
                                        switch (i6 - 1 | 0) {
                                          case 1:
                                            break rH;
                                          case 0:
                                            break r0;
                                          default:
                                            break rM;
                                        }
                                      e4 = O8;
                                      break rM;
                                    }
                                    e4 = w8(w8(K4 * O8) * w8(0.009999999776482582));
                                  }
                                  e4 = w8(z7 + e4), p7[I6 + 356 >> 2] = e4, l4[I6 + 348 >> 2] = (rw3 | (0 | i6) != 2) & e4 == e4;
                                  break rY;
                                }
                                p7[I6 + 356 >> 2] = K4;
                              }
                              e4 = O8;
                            }
                            rg2(f7, U5, Q4, C7, I6 + 344 | 0, I6 + 352 | 0), rg2(f7, N7, K4, C7, I6 + 348 | 0, I6 + 356 | 0);
                            r2: {
                              r1: {
                                r4: {
                                  r3:
                                    switch (0 | i6) {
                                      case 0:
                                      case 3:
                                        break r4;
                                      default:
                                        break r3;
                                    }
                                  if (!((0 | i6) != 1 | e4 != e4)) {
                                    if (O8 < w8(0))
                                      break r4;
                                    break r1;
                                  }
                                  if ((0 | i6) != 2 | e4 != e4)
                                    break r1;
                                  if (O8 < w8(0))
                                    break r4;
                                  if (Y4 = 0, rl4)
                                    break r2;
                                }
                                if (Y4 = 0, (i6 = l4[f7 + 24 >> 2] >>> 13 & 7) || (i6 = l4[r10 + 24 >> 2] >>> 10 & 7), (0 | i6) != 4 || (ea(I6 + 24 | 0, f7, N7), 3 == l4[I6 + 28 >> 2]))
                                  break r2;
                                ee2(I6 + 360 | 0, f7, N7), Y4 = 3 != l4[I6 + 364 >> 2];
                                break r2;
                              }
                              Y4 = 0;
                            }
                            e4 = p7[I6 + 352 >> 2], O8 = p7[I6 + 356 >> 2], z7 = (i6 = U5 >>> 0 > 1) ? e4 : O8, e4 = i6 ? O8 : e4, rJ3 = l4[I6 + 344 >> 2], r33 = l4[I6 + 348 >> 2], et4 = i6 ? rJ3 : r33, rJ3 = i6 ? r33 : rJ3, i6 = (1 ^ Y4) & c6, rt4(f7, z7, e4, 3 & d6[r10 + 300 | 0], et4, rJ3, C7, J4, i6, i6 ? 4 : 7, A6, h4, v6, m6), P5 = w8(P5 + w8(X4 - a6)), i6 = d6[r10 + 300 | 0];
                            r8: {
                              r6: {
                                if (4 & i6) {
                                  Y4 = 251 & i6;
                                  break r6;
                                }
                                if (Y4 = 251 & i6, i6 = 0, !(4 & d6[f7 + 300 | 0]))
                                  break r8;
                              }
                              i6 = 4;
                            }
                            if (s4[r10 + 300 | 0] = i6 | Y4, (0 | rr4) == (0 | (_8 = _8 + 4 | 0)))
                              break;
                          }
                        }
                        S7 = w8(S7 - P5);
                      }
                      i6 = d6[r10 + 300 | 0], s4[r10 + 300 | 0] = 251 & i6 | (S7 < w8(0) ? 4 : 4 & i6), O8 = w8(rZ2(r10, U5, b8) + rM2(r10, U5)), rD3 = w8(rW2(r10, U5, b8) + rU2(r10, U5)), H5 = rv2(r10, U5, b8);
                      r5: {
                        if (!(!(S7 > w8(0)) | (0 | rG3) != 2)) {
                          P5 = w8(0), a6 = w8(0);
                          r9: {
                            r7: {
                              e4 = p7[(i6 = rF3 + (l4[r_3 >> 2] << 2) | 0) >> 2], f7 = (0 | (i6 = l4[i6 >> 2])) == 2139156720;
                              er: {
                                if (!f7) {
                                  if (_8 = (0 | i6) == 2140081935)
                                    break r7;
                                  if ((Y4 = (0 | i6) == 2141891242) | e4 != e4)
                                    break r5;
                                  if (_8)
                                    break r7;
                                  if (Y4)
                                    break r5;
                                  if (V5 = (-1073741825 & i6) + 536870912 | 0, t3[2] = V5, a6 = u5(), !(1073741824 & i6))
                                    break er;
                                }
                                a6 = w8(w8(rC3 * a6) * w8(0.009999999776482582));
                              }
                              if (a6 != a6)
                                break r5;
                              a6 = w8(0);
                              ee:
                                if (!f7) {
                                  if ((0 | i6) == 2140081935)
                                    break r7;
                                  f7 = 4276;
                                  ea: {
                                    if ((0 | i6) != 2141891242) {
                                      if (e4 == e4)
                                        break ea;
                                      f7 = 4268;
                                    }
                                    switch (a6 = p7[f7 >> 2], X4 = w8(NaN), l4[f7 + 4 >> 2] - 1 | 0) {
                                      case 0:
                                        break r7;
                                      case 1:
                                        break ee;
                                      default:
                                        break r9;
                                    }
                                  }
                                  if (B4 = (-1073741825 & i6) + 536870912 | 0, t3[2] = B4, a6 = u5(), !(1073741824 & i6))
                                    break r7;
                                }
                              X4 = w8(w8(rC3 * a6) * w8(0.009999999776482582));
                              break r9;
                            }
                            X4 = a6;
                          }
                          if ((e4 = w8(w8(w8(X4 - O8) - rD3) - w8(Q4 - S7))) != e4)
                            break r5;
                          P5 = eu(e4, w8(0));
                          break r5;
                        }
                        P5 = S7;
                      }
                      Y4 = L7 >>> 0 <= F5 >>> 0;
                      ei: {
                        if (!Y4) {
                          for (rr4 = l4[r10 + 556 >> 2], ra3 = (i6 = l4[r10 + 560 >> 2] - rr4 >> 2) >>> 0 < F5 >>> 0 ? F5 : i6, _8 = 0, i6 = F5; ; ) {
                            if ((0 | i6) == (0 | ra3))
                              break re;
                            if (f7 = l4[rr4 + (i6 << 2) >> 2], (196608 & l4[f7 + 24 >> 2]) != 131072 && (ea(rN3 = I6 + 24 | 0, f7, U5), rK3 = l4[I6 + 28 >> 2], ee2(rN3, f7, U5), _8 = (((0 | rK3) == 3) + _8 | 0) + (3 == l4[I6 + 28 >> 2]) | 0), (0 | L7) == (0 | (i6 = i6 + 1 | 0)))
                              break;
                          }
                          if (z7 = w8(0), a6 = H5, _8)
                            break ei;
                        }
                        z7 = w8(0), _8 = 0, a6 = H5;
                        en:
                          switch ((l4[r10 + 24 >> 2] >>> 4 & 7) - 1 | 0) {
                            case 0:
                              z7 = w8(P5 * w8(0.5));
                              break ei;
                            case 1:
                              z7 = P5;
                              break ei;
                            case 2:
                              if (x6 >>> 0 < 2)
                                break ei;
                              a6 = w8(H5 + w8((eo3 = w8(0), ek2 = eu(P5, w8(0)), ((eb2 = P5 != P5) ? eo3 : ek2) / w8(x6 - 1 >>> 0))));
                              break ei;
                            case 4:
                              z7 = w8(P5 / w8(x6 + 1 >>> 0)), a6 = w8(H5 + z7);
                              break ei;
                            case 3:
                              break en;
                            default:
                              break ei;
                          }
                        z7 = w8(w8(P5 * w8(0.5)) / w8(x6 >>> 0)), a6 = w8(w8(z7 + z7) + H5);
                      }
                      if (e4 = w8(O8 + z7), S7 = w8(0), x6 = rj2(r10), Y4)
                        a6 = w8(0);
                      else {
                        for (rr4 = L7 - 1 | 0, rx3 = w8(P5 / w8(0 | _8)), O8 = w8(0), X4 = w8(0), i6 = F5; ; ) {
                          if (f7 = l4[r10 + 556 >> 2], l4[r10 + 560 >> 2] - f7 >> 2 >>> 0 <= i6 >>> 0)
                            break re;
                          _8 = (f7 = l4[f7 + (i6 << 2) >> 2]) + 228 | 0, ru3(I6 + 24 | 0, _8, 320), a6 = w8(a6 - ((0 | i6) == (0 | rr4) ? H5 : w8(0))), ra3 = l4[f7 + 24 >> 2];
                          ef:
                            if (!(4194304 & ra3)) {
                              et: {
                                if ((196608 & ra3) == 131072) {
                                  if (!r52(f7, U5))
                                    break et;
                                  if (!c6)
                                    break ef;
                                  P5 = rI2(f7, U5, Q4), rn4 = rM2(r10, U5), rq3 = rP2(f7, U5, C7), p7[_8 + (l4[rA3 >> 2] << 2) >> 2] = rq3 + w8(P5 + rn4);
                                  break ef;
                                }
                                if (ea(I6 + 360 | 0, f7, U5), e4 = w8(e4 + (3 == l4[I6 + 364 >> 2] ? rx3 : w8(-0))), c6 && (ra3 = _8, _8 = l4[rA3 >> 2] << 2, p7[ra3 + _8 >> 2] = e4 + p7[_8 + (I6 + 24 | 0) >> 2]), ee2(I6 + 360 | 0, f7, U5), e4 = w8(e4 + (3 == l4[I6 + 364 >> 2] ? rx3 : w8(-0))), !er2) {
                                  e4 = w8(e4 + w8(w8(a6 + w8(rP2(f7, U5, C7) + rS2(f7, U5, C7))) + p7[I6 + 104 >> 2])), S7 = K4;
                                  break ef;
                                }
                                if (e4 = w8(e4 + w8(a6 + w8(p7[(_8 = f7 + 516 | 0) + (l4[r_3 >> 2] << 2) >> 2] + w8(rP2(f7, U5, C7) + rS2(f7, U5, C7))))), x6) {
                                  P5 = rR2(f7), rn4 = rP2(f7, 0, C7), P5 = w8(P5 + rn4), rn4 = w8(w8(p7[f7 + 520 >> 2] + w8(rP2(f7, 0, C7) + rS2(f7, 0, C7))) - P5), f7 = O8 != O8;
                                  eb: {
                                    if (!(f7 | P5 != P5)) {
                                      O8 = eu(O8, P5);
                                      break eb;
                                    }
                                    O8 = f7 ? P5 : O8;
                                  }
                                  if (!((f7 = X4 != X4) | rn4 != rn4)) {
                                    X4 = eu(X4, rn4);
                                    break ef;
                                  }
                                  X4 = f7 ? rn4 : X4;
                                  break ef;
                                }
                                if (!((P5 = w8(p7[_8 + (l4[$6 >> 2] << 2) >> 2] + w8(rP2(f7, N7, C7) + rS2(f7, N7, C7)))) != P5 | (f7 = S7 != S7))) {
                                  S7 = eu(S7, P5);
                                  break ef;
                                }
                                S7 = f7 ? P5 : S7;
                                break ef;
                              }
                              if (!c6)
                                break ef;
                              P5 = p7[(f7 = l4[rA3 >> 2] << 2) + (I6 + 24 | 0) >> 2], eb2 = f7 + _8 | 0, eo3 = w8(z7 + w8(P5 + rM2(r10, U5))), p7[eb2 >> 2] = eo3;
                            }
                          if ((0 | L7) == (0 | (i6 = i6 + 1 | 0)))
                            break;
                        }
                        a6 = w8(X4 + O8);
                      }
                      if (O8 = x6 ? a6 : S7, P5 = K4, !r92) {
                        i6 = (a6 = ro3(r10, N7, w8(rb3 + O8), rz3)) != a6, X4 = w8(w8(rZ2(r10, N7, b8) + rM2(r10, N7)) + w8(rW2(r10, N7, b8) + rU2(r10, N7)));
                        eo: {
                          if (!(i6 | X4 != X4)) {
                            a6 = eu(a6, X4);
                            break eo;
                          }
                          a6 = i6 ? X4 : a6;
                        }
                        P5 = w8(a6 - rb3);
                      }
                      i6 = (a6 = ro3(r10, N7, w8(rb3 + (r73 ? K4 : O8)), rz3)) != a6, X4 = w8(w8(rZ2(r10, N7, b8) + rM2(r10, N7)) + w8(rW2(r10, N7, b8) + rU2(r10, N7)));
                      ek: {
                        if (!(i6 | X4 != X4)) {
                          a6 = eu(a6, X4);
                          break ek;
                        }
                        a6 = i6 ? X4 : a6;
                      }
                      if (X4 = w8(a6 - rb3), !(!c6 | Y4))
                        for (; ; ) {
                          if (i6 = l4[r10 + 556 >> 2], l4[r10 + 560 >> 2] - i6 >> 2 >>> 0 <= F5 >>> 0)
                            break re;
                          i6 = l4[i6 + (F5 << 2) >> 2], f7 = l4[i6 + 24 >> 2];
                          ec:
                            if (!(4194304 & f7)) {
                              if ((196608 & f7) == 131072) {
                                if (f7 = l4[q5 >> 2], r52(i6, N7) && (a6 = w8(w8(rI2(i6, N7, K4) + rM2(r10, N7)) + rP2(i6, N7, C7)), p7[(i6 + (f7 << 2) | 0) + 228 >> 2] = a6, a6 == a6))
                                  break ec;
                                eb2 = i6 + (f7 << 2) | 0, eo3 = w8(rM2(r10, N7) + rP2(i6, N7, C7)), p7[eb2 + 228 >> 2] = eo3;
                                break ec;
                              }
                              (f7 = f7 >>> 13 & 7) || (f7 = l4[r10 + 24 >> 2] >>> 10 & 7);
                              eu: {
                                es: {
                                  eA: {
                                    if ((0 | f7) == 5) {
                                      f7 = 8 & l4[r10 + 24 >> 2] ? 5 : 1;
                                      break eA;
                                    }
                                    if ((0 | f7) != 4 || (ea(I6 + 24 | 0, i6, N7), f7 = 4, 3 == l4[I6 + 28 >> 2]))
                                      break eA;
                                    if (ee2(I6 + 360 | 0, i6, N7), _8 = l4[$6 >> 2], 3 == l4[I6 + 364 >> 2])
                                      break es;
                                    O8 = p7[(_8 = i6 + (_8 << 3) | 0) + 572 >> 2];
                                    el: {
                                      ed:
                                        switch (0 | (f7 = l4[_8 + 576 >> 2])) {
                                          case 0:
                                          case 3:
                                            break el;
                                          default:
                                            break ed;
                                        }
                                      if (S7 = p7[_8 + 572 >> 2], !((0 | f7) != 1 | S7 != S7)) {
                                        if (a6 = D6, O8 < w8(0))
                                          break el;
                                        break eu;
                                      }
                                      if (a6 = D6, !(O8 < w8(0)) & rl4 | ((0 | f7) != 2 | S7 != S7))
                                        break eu;
                                    }
                                    O8 = p7[(i6 + (l4[r_3 >> 2] << 2) | 0) + 516 >> 2], a6 = (a6 = p7[i6 + 224 >> 2]) == a6 ? w8(w8(rP2(i6, N7, C7) + rS2(i6, N7, C7)) + (rk3 ? w8(O8 * a6) : w8(O8 / a6))) : X4, p7[I6 + 360 >> 2] = a6, eb2 = I6, eo3 = w8(O8 + w8(rP2(i6, U5, C7) + rS2(i6, U5, C7))), p7[eb2 + 24 >> 2] = eo3, l4[I6 + 356 >> 2] = 1, l4[I6 + 352 >> 2] = 1, rg2(i6, U5, Q4, C7, I6 + 356 | 0, I6 + 24 | 0), rg2(i6, N7, K4, C7, I6 + 352 | 0, I6 + 360 | 0), O8 = p7[I6 + 360 >> 2], S7 = p7[I6 + 24 >> 2], a6 = (f7 = U5 >>> 0 > 1) ? O8 : S7, O8 = f7 ? S7 : O8, f7 = (0 | rp3) != 0 & (896 & l4[r10 + 24 >> 2]) != 512, rt4(i6, O8, a6, rf3, !(f7 & rk3 | O8 != O8), (!f7 | rk3) & a6 == a6, C7, J4, 1, 2, A6, h4, v6, m6), a6 = D6;
                                    break eu;
                                  }
                                  _8 = l4[$6 >> 2];
                                }
                                a6 = p7[((_8 << 2) + i6 | 0) + 516 >> 2], O8 = rP2(i6, N7, C7), S7 = rS2(i6, N7, C7), ea(I6 + 24 | 0, i6, N7), O8 = w8(P5 - w8(a6 + w8(O8 + S7)));
                                eh:
                                  if (3 == l4[I6 + 28 >> 2]) {
                                    if (ee2(I6 + 360 | 0, i6, N7), 3 != l4[I6 + 364 >> 2])
                                      break eh;
                                    a6 = w8(O8 * w8(0.5)), a6 = w8(D6 + (eo3 = w8(0), ek2 = eu(a6, w8(0)), (eb2 = a6 != a6) ? eo3 : ek2));
                                    break eu;
                                  }
                                if (ee2(I6 + 24 | 0, i6, N7), a6 = D6, 3 == l4[I6 + 28 >> 2])
                                  break eu;
                                if (ea(I6 + 24 | 0, i6, N7), 3 == l4[I6 + 28 >> 2]) {
                                  a6 = w8(D6 + (eo3 = w8(0), ek2 = eu(O8, w8(0)), (eb2 = O8 != O8) ? eo3 : ek2));
                                  break eu;
                                }
                                ev:
                                  switch (f7 - 1 | 0) {
                                    case 1:
                                      a6 = w8(D6 + w8(O8 * w8(0.5)));
                                      break eu;
                                    case 0:
                                      break eu;
                                    default:
                                      break ev;
                                  }
                                a6 = w8(D6 + O8);
                              }
                              p7[(i6 = i6 + (l4[q5 >> 2] << 2) | 0) + 228 >> 2] = a6 + w8(rX3 + p7[i6 + 228 >> 2]);
                            }
                          if ((0 | (F5 = F5 + 1 | 0)) == (0 | L7))
                            break;
                        }
                      a6 = w8((j7 ? r12 : w8(0)) + X4), i6 = rY3 != rY3, e4 = w8(rD3 + e4);
                      ep: {
                        if (!(i6 | e4 != e4)) {
                          rY3 = eu(rY3, e4);
                          break ep;
                        }
                        rY3 = i6 ? e4 : rY3;
                      }
                      if (rX3 = w8(rX3 + a6), i6 = j7 + 1 | 0, F5 = L7, !(L7 >>> 0 < rd3 >>> 0))
                        break;
                    }
                    em:
                      if (c6 && (rp3 || rj2(r10))) {
                        O8 = w8(0);
                        eN: {
                          ew:
                            if (K4 == K4) {
                              e4 = w8(K4 - rX3);
                              ey:
                                switch ((l4[r10 + 24 >> 2] >>> 7 & 7) - 2 | 0) {
                                  case 0:
                                    D6 = w8(D6 + w8(e4 * w8(0.5)));
                                    break ew;
                                  case 2:
                                    if (!(K4 > rX3))
                                      break ew;
                                    O8 = w8(e4 / w8(i6 >>> 0));
                                    break ew;
                                  case 5:
                                    if (K4 > rX3) {
                                      if (D6 = w8(D6 + w8(e4 / w8(i6 << 1 >>> 0))), i6 >>> 0 < 2)
                                        break ew;
                                      O8 = w8(e4 / w8(i6 >>> 0));
                                      break eN;
                                    }
                                    D6 = w8(D6 + w8(e4 * w8(0.5)));
                                    break ew;
                                  case 4:
                                    if (!(K4 > rX3) | i6 >>> 0 < 2)
                                      break ew;
                                    O8 = w8(e4 / w8(j7 >>> 0));
                                    break eN;
                                  case 1:
                                    break ey;
                                  default:
                                    break ew;
                                }
                              D6 = w8(D6 + e4);
                            }
                          if (!i6)
                            break em;
                        }
                        for (_8 = 0, i6 = 0, f7 = 0; ; ) {
                          if (S7 = w8(0), a6 = w8(0), e4 = w8(0), X4 = w8(0), L7 = i6, i6 >>> 0 < rd3 >>> 0) {
                            eE: {
                              for (; ; ) {
                                if (f7 = l4[r10 + 556 >> 2], l4[r10 + 560 >> 2] - f7 >> 2 >>> 0 <= L7 >>> 0)
                                  break re;
                                F5 = l4[f7 + (L7 << 2) >> 2], Y4 = l4[F5 + 24 >> 2];
                                eG:
                                  if (!(4194304 & Y4 | (196608 & Y4) == 131072)) {
                                    if (f7 = L7, l4[F5 + 548 >> 2] != (0 | _8))
                                      break eE;
                                    e4 = p7[(F5 + (l4[$6 >> 2] << 2) | 0) + 516 >> 2];
                                    eR:
                                      if (e4 >= w8(0)) {
                                        if (f7 = a6 != a6, e4 = w8(e4 + w8(rP2(F5, N7, C7) + rS2(F5, N7, C7))), !(f7 | e4 != e4)) {
                                          a6 = eu(a6, e4);
                                          break eR;
                                        }
                                        a6 = f7 ? e4 : a6;
                                      }
                                    if ((f7 = Y4 >>> 13 & 7) || (f7 = l4[r10 + 24 >> 2] >>> 10 & 7), !(8 & d6[r10 + 24 | 0]) | (0 | f7) != 5)
                                      break eG;
                                    e4 = rR2(F5), P5 = rP2(F5, 0, C7), e4 = w8(e4 + P5), P5 = w8(w8(p7[F5 + 520 >> 2] + w8(rP2(F5, 0, C7) + rS2(F5, 0, C7))) - e4), f7 = a6 != a6, F5 = X4 != X4;
                                    eg: {
                                      if (!(F5 | e4 != e4)) {
                                        X4 = eu(X4, e4);
                                        break eg;
                                      }
                                      X4 = F5 ? e4 : X4;
                                    }
                                    F5 = S7 != S7;
                                    eZ: {
                                      if (!(F5 | P5 != P5)) {
                                        S7 = eu(S7, P5);
                                        break eZ;
                                      }
                                      S7 = F5 ? P5 : S7;
                                    }
                                    if (!(f7 | (e4 = w8(X4 + S7)) != e4)) {
                                      a6 = eu(a6, e4);
                                      break eG;
                                    }
                                    a6 = f7 ? e4 : a6;
                                  }
                                if ((0 | rd3) == (0 | (L7 = L7 + 1 | 0)))
                                  break;
                              }
                              f7 = rd3;
                            }
                            e4 = a6;
                          }
                          if (P5 = w8(D6 + (_8 ? r12 : w8(0))), a6 = w8(O8 + e4), D6 = w8(P5 + a6), i6 >>> 0 < f7 >>> 0)
                            for (H5 = w8(P5 + X4); ; ) {
                              if (L7 = l4[r10 + 556 >> 2], l4[r10 + 560 >> 2] - L7 >> 2 >>> 0 <= i6 >>> 0)
                                break re;
                              F5 = l4[L7 + (i6 << 2) >> 2], L7 = l4[F5 + 24 >> 2];
                              eW:
                                if (!(4194304 & L7 | (196608 & L7) == 131072)) {
                                  (L7 = L7 >>> 13 & 7) || (L7 = l4[r10 + 24 >> 2] >>> 10 & 7);
                                  eV: {
                                    eB:
                                      switch (L7 - 1 | 0) {
                                        case 4:
                                          if (8 & d6[r10 + 24 | 0])
                                            break eV;
                                        case 0:
                                          e4 = rP2(F5, N7, C7), p7[(F5 + (l4[q5 >> 2] << 2) | 0) + 228 >> 2] = P5 + e4;
                                          break eW;
                                        case 2:
                                          e4 = rS2(F5, N7, C7), p7[(L7 = F5 + 228 | 0) + (l4[q5 >> 2] << 2) >> 2] = w8(D6 - e4) - p7[(L7 + (l4[$6 >> 2] << 2) | 0) + 288 >> 2];
                                          break eW;
                                        case 1:
                                          p7[(L7 = F5 + 228 | 0) + (l4[q5 >> 2] << 2) >> 2] = P5 + w8(w8(a6 - p7[(L7 + (l4[$6 >> 2] << 2) | 0) + 288 >> 2]) * w8(0.5));
                                          break eW;
                                        case 3:
                                          break eB;
                                        default:
                                          break eW;
                                      }
                                    e4 = rP2(F5, N7, C7), p7[(F5 + (l4[q5 >> 2] << 2) | 0) + 228 >> 2] = P5 + e4, e4 = p7[(L7 = Y4 = F5 + (l4[$6 >> 2] << 3) | 0) + 572 >> 2];
                                    eT: {
                                      eI:
                                        switch (0 | (L7 = l4[L7 + 576 >> 2])) {
                                          case 0:
                                          case 3:
                                            break eT;
                                          default:
                                            break eI;
                                        }
                                      if (X4 = p7[Y4 + 572 >> 2], !((0 | L7) != 1 | X4 != X4)) {
                                        if (e4 < w8(0))
                                          break eT;
                                        break eW;
                                      }
                                      if (!(e4 < w8(0)) & rl4 | ((0 | L7) != 2 | X4 != X4))
                                        break eW;
                                    }
                                    eX: {
                                      if (U5 >>> 0 >= 2) {
                                        S7 = a6, e4 = p7[F5 + 516 >> 2], X4 = w8(e4 + w8(rP2(F5, U5, C7) + rS2(F5, U5, C7)));
                                        break eX;
                                      }
                                      S7 = w8(p7[F5 + 520 >> 2] + w8(rP2(F5, N7, C7) + rS2(F5, N7, C7))), e4 = p7[F5 + 516 >> 2], X4 = a6;
                                    }
                                    eO: {
                                      eL: {
                                        if (!(X4 != X4 | e4 != e4)) {
                                          if (w8(y4(w8(X4 - e4))) < w8(9999999747378752e-20))
                                            break eL;
                                          break eO;
                                        }
                                        if (X4 == X4 | e4 == e4)
                                          break eO;
                                      }
                                      if (!((L7 = (e4 = p7[F5 + 520 >> 2]) != e4) | S7 != S7)) {
                                        if (!(w8(y4(w8(S7 - e4))) < w8(9999999747378752e-20)))
                                          break eO;
                                        break eW;
                                      }
                                      if (S7 == S7)
                                        break eO;
                                      if (L7)
                                        break eW;
                                    }
                                    rt4(F5, X4, S7, rf3, 1, 1, C7, J4, 1, 3, A6, h4, v6, m6);
                                    break eW;
                                  }
                                  eb2 = F5, eo3 = w8(w8(H5 - rR2(F5)) + rI2(F5, 0, K4)), p7[eb2 + 232 >> 2] = eo3;
                                }
                              if ((0 | f7) == (0 | (i6 = i6 + 1 | 0)))
                                break;
                            }
                          if (L7 = (0 | _8) != (0 | j7), _8 = _8 + 1 | 0, i6 = f7, !L7)
                            break;
                        }
                      }
                    _8 = r10 + 516 | 0, i6 = (e4 = ro3(r10, 2, r03, b8)) != e4, a6 = w8(w8(rZ2(r10, 2, b8) + rM2(r10, 2)) + w8(rW2(r10, 2, b8) + rU2(r10, 2)));
                    e_: {
                      if (!(i6 | a6 != a6)) {
                        e4 = eu(e4, a6);
                        break e_;
                      }
                      e4 = i6 ? a6 : e4;
                    }
                    p7[_8 >> 2] = e4, i6 = (e4 = ro3(r10, 0, r24, o7)) != e4, a6 = w8(w8(rZ2(r10, 0, b8) + rM2(r10, 0)) + w8(rW2(r10, 0, b8) + rU2(r10, 0)));
                    eF: {
                      if (!(i6 | a6 != a6)) {
                        e4 = eu(e4, a6);
                        break eF;
                      }
                      e4 = i6 ? a6 : e4;
                    }
                    p7[r10 + 520 >> 2] = e4;
                    eC: {
                      eS: {
                        eP:
                          if (!rG3 || !((0 | (i6 = l4[r10 + 24 >> 2] >>> 20 & 3)) == 2 | (0 | rG3) != 2)) {
                            if (i6 = (e4 = ro3(r10, U5, rY3, rC3)) != e4, a6 = w8(w8(rZ2(r10, U5, b8) + rM2(r10, U5)) + w8(rW2(r10, U5, b8) + rU2(r10, U5))), !(i6 | a6 != a6)) {
                              e4 = eu(e4, a6);
                              break eS;
                            }
                            e4 = i6 ? a6 : e4;
                            break eS;
                          }
                        if ((0 | rG3) != 2 | (0 | i6) != 2)
                          break eC;
                        i6 = (a6 = w8(rh3 + Q4)) != a6, e4 = ro3(r10, U5, rY3, rC3);
                        eY: {
                          if (!(i6 | e4 != e4)) {
                            e4 = es2(a6, e4);
                            break eY;
                          }
                          e4 = i6 ? e4 : a6;
                        }
                        if (!((i6 = e4 != e4) | rh3 != rh3)) {
                          e4 = eu(e4, rh3);
                          break eS;
                        }
                        e4 = i6 ? rh3 : e4;
                      }
                      p7[_8 + (l4[r_3 >> 2] << 2) >> 2] = e4;
                    }
                    eU: {
                      eM: {
                        eH:
                          if (!M6 || (f7 = (0 | M6) != 2, i6 = l4[r10 + 24 >> 2] >>> 20 & 3, !(f7 | (0 | i6) == 2))) {
                            if (i6 = (e4 = ro3(r10, N7, w8(rb3 + rX3), rz3)) != e4, a6 = w8(w8(rZ2(r10, N7, b8) + rM2(r10, N7)) + w8(rW2(r10, N7, b8) + rU2(r10, N7))), !(i6 | a6 != a6)) {
                              e4 = eu(e4, a6);
                              break eM;
                            }
                            e4 = i6 ? a6 : e4;
                            break eM;
                          }
                        if (f7 | (0 | i6) != 2)
                          break eU;
                        i6 = (a6 = w8(rb3 + K4)) != a6, e4 = ro3(r10, N7, w8(rb3 + rX3), rz3);
                        eQ: {
                          if (!(i6 | e4 != e4)) {
                            e4 = es2(a6, e4);
                            break eQ;
                          }
                          e4 = i6 ? e4 : a6;
                        }
                        if (!((i6 = e4 != e4) | rb3 != rb3)) {
                          e4 = eu(e4, rb3);
                          break eM;
                        }
                        e4 = i6 ? rb3 : e4;
                      }
                      p7[_8 + (l4[$6 >> 2] << 2) >> 2] = e4;
                    }
                    ez:
                      if (c6) {
                        if (i6 = l4[r10 + 560 >> 2], F5 = l4[r10 + 556 >> 2], (786432 & l4[r10 + 24 >> 2]) == 524288) {
                          for (f7 = rd3 >>> 0 <= 1 ? 1 : rd3, c6 = i6 - F5 >> 2, i6 = 0; L7 = 0, L7 = i6 >>> 0 < c6 >>> 0 ? l4[(i6 << 2) + F5 >> 2] : L7, (196608 & l4[L7 + 24 >> 2]) != 131072 && (Y4 = (L7 = L7 + 228 | 0) + (l4[q5 >> 2] << 2) | 0, j7 = l4[$6 >> 2] << 2, p7[Y4 >> 2] = w8(p7[j7 + _8 >> 2] - p7[Y4 >> 2]) - p7[(L7 + j7 | 0) + 288 >> 2]), (0 | f7) != (0 | (i6 = i6 + 1 | 0)); )
                            ;
                          F5 = l4[r10 + 556 >> 2], i6 = l4[r10 + 560 >> 2];
                        }
                        if ((0 | i6) != (0 | F5))
                          for (j7 = ((U5 >>> 0 > 1 ? rG3 : n5) | 0) != 0; ; ) {
                            c6 = l4[F5 >> 2];
                            ej:
                              if ((4390912 & l4[c6 + 24 >> 2]) == 131072) {
                                a6 = C7, Q4 = J4, d6[l4[r10 + 568 >> 2] + 21 | 0] && (Q4 = p7[r10 + 520 >> 2], a6 = p7[r10 + 516 >> 2]), n5 = l4[r10 + 24 >> 2] >>> 2 & 3;
                                eD: {
                                  ex: {
                                    if ((0 | rf3) == 2) {
                                      f7 = 0, L7 = 3;
                                      eJ:
                                        switch (n5 - 2 | 0) {
                                          case 0:
                                            break eD;
                                          case 1:
                                            break eJ;
                                          default:
                                            break ex;
                                        }
                                      L7 = 2;
                                      break eD;
                                    }
                                    if (f7 = 0, n5 >>> 0 <= 1)
                                      break ex;
                                    L7 = n5;
                                    break eD;
                                  }
                                  L7 = n5, f7 = rL3;
                                }
                                o7 = w8(rP2(c6, 2, a6) + rS2(c6, 2, a6)), O8 = rP2(c6, 0, a6), S7 = rS2(c6, 0, a6), e4 = p7[c6 + 572 >> 2];
                                eK: {
                                  eq: {
                                    e$:
                                      switch (0 | (n5 = l4[c6 + 576 >> 2])) {
                                        case 0:
                                        case 3:
                                          break eq;
                                        default:
                                          break e$;
                                      }
                                    b8 = p7[c6 + 572 >> 2];
                                    e0: {
                                      if (!((0 | n5) != 1 | b8 != b8)) {
                                        if (X4 = e4, !(e4 < w8(0)))
                                          break e0;
                                        break eq;
                                      }
                                      e2: {
                                        if (!((0 | n5) != 2 | b8 != b8)) {
                                          if (a6 != a6 | e4 < w8(0))
                                            break eq;
                                          break e2;
                                        }
                                        X4 = w8(NaN);
                                        e1:
                                          switch (n5 - 1 | 0) {
                                            case 1:
                                              break e2;
                                            case 0:
                                              break e1;
                                            default:
                                              break e0;
                                          }
                                        X4 = e4;
                                        break e0;
                                      }
                                      X4 = w8(w8(a6 * e4) * w8(0.009999999776482582));
                                    }
                                    X4 = w8(o7 + X4);
                                    break eK;
                                  }
                                  if (X4 = w8(NaN), !r52(c6, 2) || !r62(c6, 2))
                                    break eK;
                                  if (n5 = (e4 = ro3(c6, 2, w8(w8(p7[r10 + 516 >> 2] - w8(rM2(r10, 2) + rU2(r10, 2))) - w8(rI2(c6, 2, a6) + rT2(c6, 2, a6))), a6)) != e4, b8 = w8(w8(rZ2(c6, 2, a6) + rM2(c6, 2)) + w8(rW2(c6, 2, a6) + rU2(c6, 2))), !(n5 | b8 != b8)) {
                                    X4 = eu(e4, b8);
                                    break eK;
                                  }
                                  X4 = n5 ? b8 : e4;
                                }
                                S7 = w8(O8 + S7);
                                e4: {
                                  e3: {
                                    e8: {
                                      e6: {
                                        e5: {
                                          e9: {
                                            e7: {
                                              Y4 = X4 != X4, b8 = p7[c6 + 580 >> 2];
                                              ar: {
                                                ae: {
                                                  aa:
                                                    switch (0 | (n5 = l4[c6 + 584 >> 2])) {
                                                      case 0:
                                                      case 3:
                                                        break ae;
                                                      default:
                                                        break aa;
                                                    }
                                                  e4 = p7[c6 + 580 >> 2];
                                                  ai: {
                                                    if (!((0 | n5) != 1 | e4 != e4)) {
                                                      if (!((e4 = b8) < w8(0)))
                                                        break ai;
                                                      break ae;
                                                    }
                                                    an: {
                                                      if (!((0 | n5) != 2 | e4 != e4)) {
                                                        if (Q4 != Q4 | b8 < w8(0))
                                                          break ae;
                                                        break an;
                                                      }
                                                      e4 = w8(NaN);
                                                      af:
                                                        switch (n5 - 1 | 0) {
                                                          case 1:
                                                            break an;
                                                          case 0:
                                                            break af;
                                                          default:
                                                            break ai;
                                                        }
                                                      e4 = b8;
                                                      break ai;
                                                    }
                                                    e4 = w8(w8(Q4 * b8) * w8(0.009999999776482582));
                                                  }
                                                  e4 = w8(S7 + e4);
                                                  break ar;
                                                }
                                                at:
                                                  if (!(r52(c6, 0) && r62(c6, 0))) {
                                                    if (e4 = w8(NaN), X4 == X4)
                                                      break e7;
                                                    break e8;
                                                  }
                                                if (n5 = (e4 = ro3(c6, 0, w8(w8(p7[r10 + 520 >> 2] - w8(rM2(r10, 0) + rU2(r10, 0))) - w8(rI2(c6, 0, Q4) + rT2(c6, 0, Q4))), Q4)) != e4, b8 = w8(w8(rZ2(c6, 0, a6) + rM2(c6, 0)) + w8(rW2(c6, 0, a6) + rU2(c6, 0))), !(n5 | b8 != b8)) {
                                                  e4 = eu(e4, b8);
                                                  break ar;
                                                }
                                                e4 = n5 ? b8 : e4;
                                              }
                                              if ((0 | Y4) == (e4 != e4 | 0) || (O8 = p7[c6 + 224 >> 2]) != O8)
                                                break e5;
                                              if (X4 != X4) {
                                                X4 = w8(w8(w8(e4 - S7) * O8) + o7);
                                                break e5;
                                              }
                                              if (e4 == e4)
                                                break e5;
                                              break e9;
                                            }
                                            if ((O8 = p7[c6 + 224 >> 2]) != O8)
                                              break e6;
                                          }
                                          e4 = w8(S7 + w8(w8(X4 - o7) / O8));
                                        }
                                        if (X4 != X4)
                                          break e8;
                                        if (e4 == e4)
                                          break e4;
                                      }
                                      n5 = 0;
                                      break e3;
                                    }
                                    n5 = 1;
                                  }
                                  Y4 = a6 > w8(0), b8 = (x6 = n5 & j7 & L7 >>> 0 < 2) && Y4 ? a6 : X4, n5 ^= 1, rt4(c6, b8, e4, rf3, x6 && Y4 ? 2 : n5, e4 == e4, b8, e4, 0, 6, A6, h4, v6, m6), X4 = w8(p7[c6 + 516 >> 2] + eW(c6, 2, a6)), e4 = w8(p7[c6 + 520 >> 2] + eW(c6, 0, a6));
                                }
                                rt4(c6, X4, e4, rf3, 1, 1, X4, e4, 1, 1, A6, h4, v6, m6), o7 = (n5 = L7 >>> 0 < 2) ? a6 : Q4, b8 = d6[(Y4 = l4[r10 + 568 >> 2]) + 22 | 0] ? o7 : a6;
                                ab: {
                                  ao: {
                                    ak:
                                      if (!(!r62(c6, L7) || r52(c6, L7))) {
                                        x6 = l4[(L7 << 2) + 4252 >> 2] << 2, e4 = w8(w8(w8(w8(p7[x6 + _8 >> 2] - p7[(c6 + x6 | 0) + 516 >> 2]) - rU2(r10, L7)) - rS2(c6, L7, b8)) - rT2(c6, L7, n5 ? Q4 : a6));
                                        break ao;
                                      }
                                    if (!(r52(c6, L7) | (112 & l4[r10 + 24 >> 2]) != 16)) {
                                      n5 = l4[(L7 << 2) + 4252 >> 2] << 2, e4 = w8(w8(p7[n5 + _8 >> 2] - p7[(n5 + c6 | 0) + 516 >> 2]) * w8(0.5));
                                      break ao;
                                    }
                                    if (!(r52(c6, L7) | (112 & l4[r10 + 24 >> 2]) != 32)) {
                                      n5 = l4[(L7 << 2) + 4252 >> 2] << 2, e4 = w8(p7[n5 + _8 >> 2] - p7[(n5 + c6 | 0) + 516 >> 2]);
                                      break ao;
                                    }
                                    if (!d6[Y4 + 21 | 0] || !r52(c6, L7))
                                      break ab;
                                    e4 = p7[_8 + (l4[(L7 << 2) + 4252 >> 2] << 2) >> 2], e4 = w8(w8(rI2(c6, L7, e4) + rM2(r10, L7)) + rP2(c6, L7, e4));
                                  }
                                  p7[(c6 + (l4[(L7 << 2) + 4220 >> 2] << 2) | 0) + 228 >> 2] = e4;
                                }
                                ac: {
                                  au:
                                    if (!(!r62(c6, f7) || r52(c6, f7))) {
                                      n5 = l4[(f7 << 2) + 4252 >> 2] << 2, e4 = w8(w8(w8(w8(p7[n5 + _8 >> 2] - p7[(n5 + c6 | 0) + 516 >> 2]) - rU2(r10, f7)) - rS2(c6, f7, b8)) - rT2(c6, f7, o7));
                                      break ac;
                                    }
                                  as:
                                    if (!r52(c6, f7)) {
                                      if ((n5 = l4[c6 + 24 >> 2] >>> 13 & 7) || (n5 = l4[r10 + 24 >> 2] >>> 10 & 7), (0 | n5) != 2)
                                        break as;
                                      n5 = l4[(f7 << 2) + 4252 >> 2] << 2, e4 = w8(w8(p7[n5 + _8 >> 2] - p7[(n5 + c6 | 0) + 516 >> 2]) * w8(0.5));
                                      break ac;
                                    }
                                  aA:
                                    if (!r52(c6, f7)) {
                                      L7 = l4[c6 + 24 >> 2] >>> 13 & 7, n5 = l4[r10 + 24 >> 2], L7 = L7 || n5 >>> 10 & 7;
                                      al: {
                                        if (!((0 | L7) != 5 | 8 & n5)) {
                                          if ((786432 & n5) == 524288)
                                            break al;
                                          break aA;
                                        }
                                        if (((786432 & n5) == 524288 | 0) == ((0 | L7) == 3 | 0))
                                          break aA;
                                      }
                                      n5 = l4[(f7 << 2) + 4252 >> 2] << 2, e4 = w8(p7[n5 + _8 >> 2] - p7[(n5 + c6 | 0) + 516 >> 2]);
                                      break ac;
                                    }
                                  if (!d6[Y4 + 21 | 0] || !r52(c6, f7))
                                    break ej;
                                  e4 = p7[_8 + (l4[(f7 << 2) + 4252 >> 2] << 2) >> 2], e4 = w8(w8(rI2(c6, f7, e4) + rM2(r10, f7)) + rP2(c6, f7, e4));
                                }
                                p7[(c6 + (l4[(f7 << 2) + 4220 >> 2] << 2) | 0) + 228 >> 2] = e4;
                              }
                            if ((0 | (F5 = F5 + 4 | 0)) == (0 | i6))
                              break;
                          }
                        if (!((N7 | U5) & 1))
                          break ez;
                        for (f7 = 1 & N7, c6 = 1 & U5, A6 = rd3 >>> 0 <= 1 ? 1 : rd3, h4 = (N7 << 2) + 4236 | 0, v6 = (U5 << 2) + 4236 | 0, m6 = l4[r10 + 556 >> 2], N7 = l4[r10 + 560 >> 2] - m6 >> 2, i6 = 0; ; ) {
                          if ((0 | i6) == (0 | N7))
                            break re;
                          r10 = l4[m6 + (i6 << 2) >> 2];
                          ad:
                            if (!(64 & d6[r10 + 26 | 0])) {
                              if (c6 && (n5 = r10 + 228 | 0, L7 = l4[r_3 >> 2] << 2, p7[n5 + (l4[v6 >> 2] << 2) >> 2] = w8(p7[L7 + _8 >> 2] - p7[(n5 + L7 | 0) + 288 >> 2]) - p7[n5 + (l4[rA3 >> 2] << 2) >> 2]), !f7)
                                break ad;
                              r10 = r10 + 228 | 0, n5 = l4[$6 >> 2] << 2, p7[r10 + (l4[h4 >> 2] << 2) >> 2] = w8(p7[n5 + _8 >> 2] - p7[(r10 + n5 | 0) + 288 >> 2]) - p7[r10 + (l4[q5 >> 2] << 2) >> 2];
                            }
                          if ((0 | A6) == (0 | (i6 = i6 + 1 | 0)))
                            break;
                        }
                      }
                    if (!ri3)
                      break r;
                    rE2(ri3);
                    break r;
                  }
                  T5(), k7();
                }
                re3 = I6 + 384 | 0;
              }
              function rn3() {
                var r10 = 0, e4 = 0;
                B3(6952, 6953, 6954, 0, 4284, 17, 4287, 0, 4287, 0, 2528, 4289, 18), l4[(r10 = eo2(8)) >> 2] = 8, l4[r10 + 4 >> 2] = 1, g5(6952, 2873, 6, 4304, 4328, 19, 0 | r10, 1), B3(6956, 6957, 6958, 6952, 4284, 20, 4284, 21, 4284, 22, 2e3, 4289, 23), l4[(r10 = eo2(4)) >> 2] = 24, g5(6956, 2358, 2, 4336, 4344, 25, 0 | r10, 0), W3(6952, 1397, 2, 4348, 4356, 26, 27), W3(6952, 2978, 3, 4436, 4448, 28, 29), B3(6976, 6977, 6978, 0, 4284, 30, 4287, 0, 4287, 0, 2544, 4289, 31), l4[(r10 = eo2(8)) >> 2] = 8, l4[r10 + 4 >> 2] = 1, g5(6976, 3244, 2, 4456, 4344, 32, 0 | r10, 1), B3(6979, 6980, 6981, 6976, 4284, 33, 4284, 34, 4284, 35, 2023, 4289, 36), l4[(r10 = eo2(4)) >> 2] = 37, g5(6979, 2358, 2, 4464, 4344, 38, 0 | r10, 0), W3(6976, 1397, 2, 4472, 4356, 39, 40), W3(6976, 2978, 3, 4436, 4448, 28, 41), B3(6982, 6983, 6984, 0, 4284, 42, 4287, 0, 4287, 0, 2812, 4289, 43), P4(6982, 1, 4520, 4284, 44, 45), W3(6982, 2866, 1, 4520, 4284, 44, 45), W3(6982, 1128, 2, 4524, 4344, 46, 47), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 48, g5(6982, 3185, 4, 4544, 4560, 49, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 50, g5(6982, 1980, 3, 4568, 4580, 51, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 52, g5(6982, 1951, 3, 4588, 4600, 53, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 54, g5(6982, 1799, 3, 4588, 4600, 53, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 55, g5(6982, 3215, 3, 4608, 4448, 56, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 57, g5(6982, 1925, 2, 4620, 4356, 58, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 59, g5(6982, 1784, 2, 4620, 4356, 58, 0 | r10, 0), _7(6985, 1270, 4628, 60, 4289, 61), eh(1731, 0), eh(1611, 8), eh(2144, 16), eh(2454, 24), eh(2560, 32), eh(1617, 40), L6(6985), _7(6955, 2849, 4628, 62, 4289, 63), ed(2560, 0), ed(1617, 8), L6(6955), _7(6986, 2860, 4628, 64, 4289, 65), l4[(r10 = eo2(4)) >> 2] = 8, l4[(e4 = eo2(4)) >> 2] = 8, X3(6986, 2854, 7018, 4630, 66, 0 | r10, 7018, 4634, 67, 0 | e4), l4[(r10 = eo2(4)) >> 2] = 0, l4[(e4 = eo2(4)) >> 2] = 0, X3(6986, 1606, 7011, 4356, 68, 0 | r10, 7011, 4600, 69, 0 | e4), L6(6986), B3(6987, 6988, 6989, 0, 4284, 70, 4287, 0, 4287, 0, 2973, 4289, 71), P4(6987, 1, 4640, 4284, 72, 73), W3(6987, 1592, 1, 4640, 4284, 72, 73), W3(6987, 2802, 2, 4644, 4356, 74, 75), W3(6987, 1128, 2, 4652, 4344, 76, 77), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 78, g5(6987, 1752, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 80, g5(6987, 2956, 3, 4660, 4600, 81, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 82, g5(6987, 2881, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 84, g5(6987, 2334, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 86, g5(6987, 1484, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 87, g5(6987, 1355, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 88, g5(6987, 1817, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 89, g5(6987, 2823, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 90, g5(6987, 2378, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 91, g5(6987, 2163, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 92, g5(6987, 1319, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 93, g5(6987, 2412, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 94, g5(6987, 1503, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 95, g5(6987, 2235, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 96, g5(6987, 1219, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 97, g5(6987, 1136, 3, 4672, 4600, 83, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 98, g5(6987, 1158, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 100, g5(6987, 1845, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 101, g5(6987, 1464, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 102, g5(6987, 2218, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 103, g5(6987, 1195, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 104, g5(6987, 2500, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 105, g5(6987, 2590, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 106, g5(6987, 1539, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 107, g5(6987, 2249, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 108, g5(6987, 1650, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 109, g5(6987, 1427, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 110, g5(6987, 2204, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 111, g5(6987, 2608, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 112, g5(6987, 1555, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 113, g5(6987, 1670, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 114, g5(6987, 1444, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 115, g5(6987, 2566, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 116, g5(6987, 1520, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 117, g5(6987, 1624, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 118, g5(6987, 1407, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 119, g5(6987, 2304, 3, 4712, 4634, 99, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 120, g5(6987, 2092, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 121, g5(6987, 2718, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 122, g5(6987, 1574, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 123, g5(6987, 2187, 4, 4688, 4704, 85, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 124, g5(6987, 2897, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 126, g5(6987, 2346, 3, 4732, 4448, 127, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 128, g5(6987, 1371, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 129, g5(6987, 1831, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 130, g5(6987, 2836, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 131, g5(6987, 2395, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 132, g5(6987, 2175, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 133, g5(6987, 1337, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 134, g5(6987, 2422, 3, 4732, 4448, 127, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 135, g5(6987, 1858, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 137, g5(6987, 1207, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 139, g5(6987, 2514, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 140, g5(6987, 2599, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 141, g5(6987, 1660, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 142, g5(6987, 2620, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 143, g5(6987, 1683, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 144, g5(6987, 2578, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 145, g5(6987, 1637, 2, 4744, 4356, 136, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 146, g5(6987, 2319, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 147, g5(6987, 2102, 3, 4760, 4772, 148, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 149, g5(6987, 1231, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 150, g5(6987, 1147, 2, 4724, 4356, 125, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 151, g5(6987, 2729, 3, 4732, 4448, 127, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 152, g5(6987, 2194, 3, 4780, 4792, 153, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 154, g5(6987, 2985, 4, 4800, 4560, 155, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 156, g5(6987, 3006, 3, 4816, 4600, 157, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 158, g5(6987, 1292, 2, 4828, 4356, 159, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 160, g5(6987, 1387, 2, 4836, 4356, 161, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 162, g5(6987, 2997, 3, 4844, 4448, 163, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 164, g5(6987, 2913, 2, 4856, 4356, 165, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 166, g5(6987, 2933, 3, 4864, 4600, 167, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 168, g5(6987, 3308, 3, 4876, 4600, 169, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 170, g5(6987, 3306, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 171, g5(6987, 3325, 3, 4888, 4600, 172, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 173, g5(6987, 3323, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 174, g5(6987, 1118, 2, 4652, 4344, 79, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 175, g5(6987, 1110, 2, 4900, 4356, 176, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 177, g5(6987, 1243, 5, 4912, 4932, 178, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 179, g5(6987, 1736, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 180, g5(6987, 1714, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 181, g5(6987, 2148, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 182, g5(6987, 2461, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 183, g5(6987, 2632, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 184, g5(6987, 1696, 2, 4752, 4630, 138, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 185, g5(6987, 1259, 2, 4940, 4356, 186, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 187, g5(6987, 2432, 3, 4760, 4772, 148, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 188, g5(6987, 2112, 3, 4760, 4772, 148, 0 | r10, 0), l4[(r10 = eo2(8)) + 4 >> 2] = 0, l4[r10 >> 2] = 189, g5(6987, 2740, 3, 4760, 4772, 148, 0 | r10, 0);
              }
              function rf2(r10, e4, a6, i6, n5, f7, t4) {
                var b8 = 0, o7 = 0, k8 = 0, c6 = 0, u6 = 0, h4 = 0, v6 = 0, p8 = 0, w9 = 0, y5 = 0, E4 = 0, G4 = 0, R7 = 0, g6 = 0, Z4 = 0, W4 = 0, V5 = 0, B4 = 0, T6 = 0, I6 = 0;
                re3 = k8 = re3 - 80 | 0, l4[k8 + 76 >> 2] = e4, B4 = k8 + 55 | 0, R7 = k8 + 56 | 0;
                r: {
                  e: {
                    a: {
                      i: {
                        n:
                          for (; ; ) {
                            if (c6 = e4, (2147483647 ^ w9) < (0 | b8))
                              break i;
                            w9 = b8 + w9 | 0;
                            f: {
                              t: {
                                b: {
                                  if (o7 = d6[0 | (b8 = c6)])
                                    for (; ; ) {
                                      o: {
                                        e4 = 255 & o7;
                                        k: {
                                          if (!e4) {
                                            e4 = b8;
                                            break k;
                                          }
                                          if ((0 | e4) != 37)
                                            break o;
                                          for (o7 = b8; ; ) {
                                            if (37 != d6[o7 + 1 | 0]) {
                                              e4 = o7;
                                              break k;
                                            }
                                            if (b8 = b8 + 1 | 0, u6 = d6[o7 + 2 | 0], o7 = e4 = o7 + 2 | 0, (0 | u6) != 37)
                                              break;
                                          }
                                        }
                                        if ((0 | (b8 = b8 - c6 | 0)) > (0 | (V5 = 2147483647 ^ w9)))
                                          break i;
                                        if (r10 && rF2(r10, c6, b8), b8)
                                          continue n;
                                        l4[k8 + 76 >> 2] = e4, b8 = e4 + 1 | 0, E4 = -1, !eO(o7 = s4[e4 + 1 | 0]) | 36 != d6[e4 + 2 | 0] || (E4 = o7 - 48 | 0, g6 = 1, b8 = e4 + 3 | 0), l4[k8 + 76 >> 2] = b8, p8 = 0, e4 = (o7 = s4[0 | b8]) - 32 | 0;
                                        c: {
                                          if (e4 >>> 0 > 31) {
                                            u6 = b8;
                                            break c;
                                          }
                                          if (u6 = b8, !(75913 & (e4 = 1 << e4)))
                                            break c;
                                          for (; ; ) {
                                            if (u6 = b8 + 1 | 0, l4[k8 + 76 >> 2] = u6, p8 |= e4, (e4 = (o7 = s4[b8 + 1 | 0]) - 32 | 0) >>> 0 >= 32)
                                              break c;
                                            if (b8 = u6, !(75913 & (e4 = 1 << e4)))
                                              break;
                                          }
                                        }
                                        u: {
                                          if ((0 | o7) == 42) {
                                            e4 = s4[u6 + 1 | 0];
                                            s: {
                                              if (!(!eO(e4) | 36 != d6[u6 + 2 | 0])) {
                                                l4[((e4 << 2) + n5 | 0) - 192 >> 2] = 10, o7 = u6 + 3 | 0, g6 = 1, y5 = l4[((s4[u6 + 1 | 0] << 3) + i6 | 0) - 384 >> 2];
                                                break s;
                                              }
                                              if (g6)
                                                break b;
                                              if (o7 = u6 + 1 | 0, !r10) {
                                                l4[k8 + 76 >> 2] = o7, g6 = 0, y5 = 0;
                                                break u;
                                              }
                                              e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, g6 = 0, y5 = l4[e4 >> 2];
                                            }
                                            if (l4[k8 + 76 >> 2] = o7, (0 | y5) >= 0)
                                              break u;
                                            y5 = 0 - y5 | 0, p8 |= 8192;
                                            break u;
                                          }
                                          if ((0 | (y5 = ei(k8 + 76 | 0))) < 0)
                                            break i;
                                          o7 = l4[k8 + 76 >> 2];
                                        }
                                        b8 = 0, v6 = -1;
                                        A: {
                                          if (46 != d6[0 | o7]) {
                                            e4 = o7, G4 = 0;
                                            break A;
                                          }
                                          if (42 == d6[o7 + 1 | 0]) {
                                            e4 = s4[o7 + 2 | 0];
                                            l: {
                                              if (!(!eO(e4) | 36 != d6[o7 + 3 | 0])) {
                                                l4[((e4 << 2) + n5 | 0) - 192 >> 2] = 10, e4 = o7 + 4 | 0, v6 = l4[((s4[o7 + 2 | 0] << 3) + i6 | 0) - 384 >> 2];
                                                break l;
                                              }
                                              if (g6)
                                                break b;
                                              if (e4 = o7 + 2 | 0, v6 = 0, !r10)
                                                break l;
                                              o7 = l4[a6 >> 2], l4[a6 >> 2] = o7 + 4, v6 = l4[o7 >> 2];
                                            }
                                            l4[k8 + 76 >> 2] = e4, G4 = (-1 ^ v6) >>> 31 | 0;
                                            break A;
                                          }
                                          l4[k8 + 76 >> 2] = o7 + 1, v6 = ei(k8 + 76 | 0), e4 = l4[k8 + 76 >> 2], G4 = 1;
                                        }
                                        for (; ; ) {
                                          if (h4 = b8, u6 = 28, Z4 = e4, (b8 = s4[0 | e4]) - 123 >>> 0 < 4294967238)
                                            break a;
                                          if (e4 = Z4 + 1 | 0, !((b8 = d6[(b8 + N6(h4, 58) | 0) + 4895 | 0]) - 1 >>> 0 < 8))
                                            break;
                                        }
                                        l4[k8 + 76 >> 2] = e4;
                                        d: {
                                          h: {
                                            if ((0 | b8) != 27) {
                                              if (!b8)
                                                break a;
                                              if ((0 | E4) >= 0) {
                                                l4[(E4 << 2) + n5 >> 2] = b8, o7 = l4[(b8 = (E4 << 3) + i6 | 0) + 4 >> 2], l4[k8 + 64 >> 2] = l4[b8 >> 2], l4[k8 + 68 >> 2] = o7;
                                                break h;
                                              }
                                              if (!r10)
                                                break f;
                                              rN2(k8 - -64 | 0, b8, a6, t4);
                                              break d;
                                            }
                                            if ((0 | E4) >= 0)
                                              break a;
                                          }
                                          if (b8 = 0, !r10)
                                            continue n;
                                        }
                                        o7 = -65537 & p8, p8 = 8192 & p8 ? o7 : p8, E4 = 0, W4 = 1166, u6 = R7;
                                        v: {
                                          p: {
                                            m: {
                                              N: {
                                                w: {
                                                  y: {
                                                    E: {
                                                      G: {
                                                        R: {
                                                          g: {
                                                            Z: {
                                                              W: {
                                                                V: {
                                                                  B: {
                                                                    T: {
                                                                      I:
                                                                        switch (b8 = s4[0 | Z4], (b8 = h4 && (15 & b8) == 3 ? -33 & b8 : b8) - 88 | 0) {
                                                                          case 11:
                                                                            break v;
                                                                          case 9:
                                                                          case 13:
                                                                          case 14:
                                                                          case 15:
                                                                            break p;
                                                                          case 27:
                                                                            break E;
                                                                          case 12:
                                                                          case 17:
                                                                            break g;
                                                                          case 23:
                                                                            break Z;
                                                                          case 0:
                                                                          case 32:
                                                                            break W;
                                                                          case 24:
                                                                            break V;
                                                                          case 22:
                                                                            break B;
                                                                          case 29:
                                                                            break T;
                                                                          case 1:
                                                                          case 2:
                                                                          case 3:
                                                                          case 4:
                                                                          case 5:
                                                                          case 6:
                                                                          case 7:
                                                                          case 8:
                                                                          case 10:
                                                                          case 16:
                                                                          case 18:
                                                                          case 19:
                                                                          case 20:
                                                                          case 21:
                                                                          case 25:
                                                                          case 26:
                                                                          case 28:
                                                                          case 30:
                                                                          case 31:
                                                                            break t;
                                                                          default:
                                                                            break I;
                                                                        }
                                                                      X:
                                                                        switch (b8 - 65 | 0) {
                                                                          case 0:
                                                                          case 4:
                                                                          case 5:
                                                                          case 6:
                                                                            break p;
                                                                          case 2:
                                                                            break w;
                                                                          case 1:
                                                                          case 3:
                                                                            break t;
                                                                          default:
                                                                            break X;
                                                                        }
                                                                      if ((0 | b8) == 83)
                                                                        break y;
                                                                      break t;
                                                                    }
                                                                    o7 = l4[k8 + 64 >> 2], h4 = l4[k8 + 68 >> 2], b8 = 1166;
                                                                    break R;
                                                                  }
                                                                  b8 = 0;
                                                                  O:
                                                                    switch (255 & h4) {
                                                                      case 0:
                                                                      case 1:
                                                                      case 6:
                                                                        l4[l4[k8 + 64 >> 2] >> 2] = w9;
                                                                        continue n;
                                                                      case 2:
                                                                        c6 = l4[k8 + 64 >> 2], l4[c6 >> 2] = w9, l4[c6 + 4 >> 2] = w9 >> 31;
                                                                        continue n;
                                                                      case 3:
                                                                        A5[l4[k8 + 64 >> 2] >> 1] = w9;
                                                                        continue n;
                                                                      case 4:
                                                                        s4[l4[k8 + 64 >> 2]] = w9;
                                                                        continue n;
                                                                      case 7:
                                                                        break O;
                                                                      default:
                                                                        continue n;
                                                                    }
                                                                  c6 = l4[k8 + 64 >> 2], l4[c6 >> 2] = w9, l4[c6 + 4 >> 2] = w9 >> 31;
                                                                  continue n;
                                                                }
                                                                v6 = v6 >>> 0 <= 8 ? 8 : v6, p8 |= 8, b8 = 120;
                                                              }
                                                              if (c6 = R7, o7 = l4[k8 + 64 >> 2], h4 = l4[k8 + 68 >> 2], o7 | h4)
                                                                for (T6 = 32 & b8; s4[0 | (c6 = c6 - 1 | 0)] = T6 | d6[(15 & o7) + 5424 | 0], I6 = !h4 & o7 >>> 0 > 15 | (0 | h4) != 0, Z4 = h4, h4 = h4 >>> 4 | 0, o7 = (15 & Z4) << 28 | o7 >>> 4, I6; )
                                                                  ;
                                                              if (!(8 & p8) | !(l4[k8 + 64 >> 2] | l4[k8 + 68 >> 2]))
                                                                break G;
                                                              W4 = (b8 >>> 4 | 0) + 1166 | 0, E4 = 2;
                                                              break G;
                                                            }
                                                            if (b8 = R7, h4 = c6 = l4[k8 + 68 >> 2], o7 = l4[k8 + 64 >> 2], c6 | o7)
                                                              for (; s4[0 | (b8 = b8 - 1 | 0)] = 7 & o7 | 48, Z4 = !h4 & o7 >>> 0 > 7 | (0 | h4) != 0, h4 = (c6 = h4) >>> 3 | 0, o7 = (7 & c6) << 29 | o7 >>> 3, Z4; )
                                                                ;
                                                            if (c6 = b8, !(8 & p8))
                                                              break G;
                                                            v6 = (0 | (b8 = R7 - c6 | 0)) < (0 | v6) ? v6 : b8 + 1 | 0;
                                                            break G;
                                                          }
                                                          if (o7 = l4[k8 + 64 >> 2], h4 = b8 = l4[k8 + 68 >> 2], (0 | b8) < 0) {
                                                            h4 = c6 = 0 - (h4 + ((0 | o7) != 0) | 0) | 0, o7 = 0 - o7 | 0, l4[k8 + 64 >> 2] = o7, l4[k8 + 68 >> 2] = c6, E4 = 1, b8 = 1166;
                                                            break R;
                                                          }
                                                          if (2048 & p8) {
                                                            E4 = 1, b8 = 1167;
                                                            break R;
                                                          }
                                                          b8 = (E4 = 1 & p8) ? 1168 : 1166;
                                                        }
                                                        W4 = b8, c6 = rK2(o7, h4, R7);
                                                      }
                                                      if ((0 | v6) < 0 ? G4 : 0)
                                                        break i;
                                                      if (p8 = G4 ? -65537 & p8 : p8, b8 = l4[k8 + 64 >> 2], o7 = l4[k8 + 68 >> 2], !((b8 | o7) != 0 | v6)) {
                                                        c6 = R7, v6 = 0;
                                                        break t;
                                                      }
                                                      v6 = (0 | (b8 = !(b8 | o7) + (R7 - c6 | 0) | 0)) < (0 | v6) ? v6 : b8;
                                                      break t;
                                                    }
                                                    p8 = 0, u6 = (0 | (h4 = G4 = v6 >>> 0 >= 2147483647 ? 2147483647 : v6)) != 0;
                                                    L: {
                                                      _: {
                                                        b8 = c6 = (b8 = l4[k8 + 64 >> 2]) || 4208;
                                                        F: {
                                                          C: {
                                                            S:
                                                              if (!(!(3 & b8) | !h4))
                                                                for (; ; ) {
                                                                  if (!(p8 = d6[0 | b8]))
                                                                    break C;
                                                                  if (u6 = (0 | (h4 = h4 - 1 | 0)) != 0, !(3 & (b8 = b8 + 1 | 0)))
                                                                    break S;
                                                                  if (!h4)
                                                                    break;
                                                                }
                                                            if (!u6)
                                                              break _;
                                                            P: {
                                                              if (!(!d6[0 | b8] | h4 >>> 0 < 4))
                                                                for (; ; ) {
                                                                  if ((-1 ^ (u6 = l4[b8 >> 2])) & u6 - 16843009 & -2139062144)
                                                                    break P;
                                                                  if (b8 = b8 + 4 | 0, !((h4 = h4 - 4 | 0) >>> 0 > 3))
                                                                    break;
                                                                }
                                                              if (!h4)
                                                                break _;
                                                            }
                                                            u6 = 0;
                                                            break F;
                                                          }
                                                          u6 = 1;
                                                        }
                                                        for (; ; ) {
                                                          if (!u6) {
                                                            p8 = d6[0 | b8], u6 = 1;
                                                            continue;
                                                          }
                                                          if (!p8)
                                                            break L;
                                                          if (b8 = b8 + 1 | 0, !(h4 = h4 - 1 | 0))
                                                            break _;
                                                          u6 = 0;
                                                        }
                                                      }
                                                      b8 = 0;
                                                    }
                                                    if (u6 = (b8 = b8 ? b8 - c6 | 0 : G4) + c6 | 0, (0 | v6) >= 0) {
                                                      p8 = o7, v6 = b8;
                                                      break t;
                                                    }
                                                    if (p8 = o7, v6 = b8, d6[0 | u6])
                                                      break i;
                                                    break t;
                                                  }
                                                  if (v6) {
                                                    o7 = l4[k8 + 64 >> 2];
                                                    break N;
                                                  }
                                                  b8 = 0, er(r10, 32, y5, 0, p8);
                                                  break m;
                                                }
                                                l4[k8 + 12 >> 2] = 0, l4[k8 + 8 >> 2] = l4[k8 + 64 >> 2], o7 = k8 + 8 | 0, l4[k8 + 64 >> 2] = o7, v6 = -1;
                                              }
                                              b8 = 0;
                                              Y: {
                                                for (; ; ) {
                                                  if (!(c6 = l4[o7 >> 2]))
                                                    break Y;
                                                  if (!((u6 = (0 | (c6 = el2(k8 + 4 | 0, c6))) < 0) | c6 >>> 0 > v6 - b8 >>> 0)) {
                                                    if (o7 = o7 + 4 | 0, v6 >>> 0 > (b8 = b8 + c6 | 0) >>> 0)
                                                      continue;
                                                    break Y;
                                                  }
                                                  break;
                                                }
                                                if (u6)
                                                  break e;
                                              }
                                              if (u6 = 61, (0 | b8) < 0)
                                                break a;
                                              if (er(r10, 32, y5, b8, p8), !b8) {
                                                b8 = 0;
                                                break m;
                                              }
                                              for (u6 = 0, o7 = l4[k8 + 64 >> 2]; ; ) {
                                                if (!(c6 = l4[o7 >> 2]) || (u6 = (c6 = el2(k8 + 4 | 0, c6)) + u6 | 0) >>> 0 > b8 >>> 0)
                                                  break m;
                                                if (rF2(r10, k8 + 4 | 0, c6), o7 = o7 + 4 | 0, !(b8 >>> 0 > u6 >>> 0))
                                                  break;
                                              }
                                            }
                                            er(r10, 32, y5, b8, 8192 ^ p8), b8 = (0 | b8) < (0 | y5) ? y5 : b8;
                                            continue n;
                                          }
                                          if ((0 | v6) < 0 ? G4 : 0)
                                            break i;
                                          if (u6 = 61, (0 | (b8 = 0 | eY[0 | f7](r10, m5[k8 + 64 >> 3], y5, v6, p8, b8))) >= 0)
                                            continue n;
                                          break a;
                                        }
                                        s4[k8 + 55 | 0] = l4[k8 + 64 >> 2], v6 = 1, c6 = B4, p8 = o7;
                                        break t;
                                      }
                                      o7 = d6[b8 + 1 | 0], b8 = b8 + 1 | 0;
                                    }
                                  if (r10)
                                    break r;
                                  if (!g6)
                                    break f;
                                  for (b8 = 1; ; ) {
                                    if (r10 = l4[(b8 << 2) + n5 >> 2]) {
                                      if (rN2((b8 << 3) + i6 | 0, r10, a6, t4), w9 = 1, (0 | (b8 = b8 + 1 | 0)) != 10)
                                        continue;
                                      break r;
                                    }
                                    break;
                                  }
                                  if (w9 = 1, b8 >>> 0 >= 10)
                                    break r;
                                  for (; ; ) {
                                    if (l4[(b8 << 2) + n5 >> 2])
                                      break b;
                                    if ((0 | (b8 = b8 + 1 | 0)) == 10)
                                      break;
                                  }
                                  break r;
                                }
                                u6 = 28;
                                break a;
                              }
                              if ((0 | (v6 = (0 | v6) > (0 | (h4 = u6 - c6 | 0)) ? v6 : h4)) > (2147483647 ^ E4))
                                break i;
                              if (u6 = 61, (0 | V5) < (0 | (b8 = (0 | (o7 = v6 + E4 | 0)) < (0 | y5) ? y5 : o7)))
                                break a;
                              er(r10, 32, b8, o7, p8), rF2(r10, W4, E4), er(r10, 48, b8, o7, 65536 ^ p8), er(r10, 48, v6, h4, 0), rF2(r10, c6, h4), er(r10, 32, b8, o7, 8192 ^ p8);
                              continue;
                            }
                            break;
                          }
                        w9 = 0;
                        break r;
                      }
                      u6 = 61;
                    }
                    l4[1761] = u6;
                  }
                  w9 = -1;
                }
                return re3 = k8 + 80 | 0, w9;
              }
              function rt4(r10, e4, a6, i6, n5, f7, t4, b8, o7, k8, c6, u6, A6, h4) {
                var m6 = w8(0), E4 = 0, G4 = 0, R7 = 0, g6 = w8(0), Z4 = 0, W4 = 0, V5 = 0, B4 = w8(0);
                r:
                  ((l4[r10 + 312 >> 2] != (0 | h4) ? 4 & d6[r10 + 4 | 0] : 0) || (Z4 = 0, l4[r10 + 316 >> 2] != (0 | i6))) && (l4[r10 + 540 >> 2] = -1082130432, l4[r10 + 544 >> 2] = -1082130432, l4[r10 + 532 >> 2] = 0, l4[r10 + 536 >> 2] = 0, l4[r10 + 524 >> 2] = -1082130432, l4[r10 + 528 >> 2] = -1082130432, l4[r10 + 320 >> 2] = 0, Z4 = 1);
                W4 = A6 + 1 | 0;
                e: {
                  a: {
                    i: {
                      n: {
                        if (l4[r10 + 8 >> 2]) {
                          if (g6 = rP2(r10, 2, t4), B4 = rS2(r10, 2, t4), m6 = w8(rP2(r10, 0, t4) + rS2(r10, 0, t4)), A6 = r10 + 524 | 0, g6 = w8(g6 + B4), rA2(n5, e4, f7, a6, l4[r10 + 532 >> 2], p7[A6 >> 2], l4[r10 + 536 >> 2], p7[r10 + 528 >> 2], p7[r10 + 540 >> 2], p7[r10 + 544 >> 2], g6, m6, c6))
                            break i;
                          if (!(G4 = l4[r10 + 320 >> 2]))
                            break n;
                          for (E4 = r10 + 324 | 0; ; ) {
                            if (rA2(n5, e4, f7, a6, l4[(A6 = E4 + N6(R7, 24) | 0) + 8 >> 2], p7[A6 >> 2], l4[A6 + 12 >> 2], p7[A6 + 4 >> 2], p7[A6 + 16 >> 2], p7[A6 + 20 >> 2], g6, m6, c6))
                              break i;
                            if ((0 | G4) == (0 | (R7 = R7 + 1 | 0)))
                              break;
                          }
                          break n;
                        }
                        if (!o7) {
                          if (!(V5 = l4[r10 + 320 >> 2]))
                            break n;
                          for (G4 = r10 + 324 | 0; ; ) {
                            m6 = p7[(A6 = (E4 = N6(R7, 24)) + G4 | 0) >> 2];
                            f: {
                              t: {
                                if (!(m6 != m6 | e4 != e4)) {
                                  if (w8(y4(w8(m6 - e4))) < w8(9999999747378752e-20))
                                    break t;
                                  break f;
                                }
                                if (m6 == m6 | e4 == e4)
                                  break f;
                              }
                              m6 = p7[(E4 = G4 + E4 | 0) + 4 >> 2];
                              b: {
                                if (!(m6 != m6 | a6 != a6)) {
                                  if (w8(y4(w8(m6 - a6))) < w8(9999999747378752e-20))
                                    break b;
                                  break f;
                                }
                                if (m6 == m6 | a6 == a6)
                                  break f;
                              }
                              if (l4[E4 + 8 >> 2] != (0 | n5))
                                break f;
                              if (l4[E4 + 12 >> 2] == (0 | f7))
                                break i;
                            }
                            if ((0 | V5) == (0 | (R7 = R7 + 1 | 0)))
                              break;
                          }
                          break n;
                        }
                        m6 = p7[(A6 = r10 + 524 | 0) >> 2];
                        o: {
                          if (!(m6 != m6 | e4 != e4)) {
                            if (w8(y4(w8(m6 - e4))) < w8(9999999747378752e-20))
                              break o;
                            break n;
                          }
                          if (m6 == m6 | e4 == e4)
                            break n;
                        }
                        E4 = l4[r10 + 532 >> 2] == (0 | n5) && l4[r10 + 536 >> 2] == (0 | f7) ? A6 : 0, A6 = (m6 = p7[r10 + 528 >> 2]) != m6, G4 = a6 != a6;
                        k: {
                          if (A6 | G4) {
                            A6 &= G4;
                            break k;
                          }
                          A6 = w8(y4(w8(m6 - a6))) < w8(9999999747378752e-20);
                        }
                        A6 = A6 ? E4 : 0;
                        break i;
                      }
                      ri2(r10, e4, a6, i6, n5, f7, t4, b8, o7, c6, u6, W4, h4, k8), l4[r10 + 316 >> 2] = i6;
                      break a;
                    }
                    if (!(!A6 | Z4)) {
                      p7[r10 + 516 >> 2] = p7[A6 + 16 >> 2], p7[r10 + 520 >> 2] = p7[A6 + 20 >> 2], l4[(i6 = (o7 ? 12 : 16) + u6 | 0) >> 2] = l4[i6 >> 2] + 1, i6 = 0;
                      break e;
                    }
                    if (ri2(r10, e4, a6, i6, n5, f7, t4, b8, o7, c6, u6, W4, h4, k8), l4[r10 + 316 >> 2] = i6, i6 = 1, A6)
                      break e;
                  }
                  (i6 = (A6 = l4[r10 + 320 >> 2]) + 1 | 0) >>> 0 > v5[u6 + 8 >> 2] && (l4[u6 + 8 >> 2] = i6), (0 | A6) == 8 && (l4[r10 + 320 >> 2] = 0, A6 = 0), o7 ? i6 = r10 + 524 | 0 : (l4[r10 + 320 >> 2] = A6 + 1, i6 = (N6(A6, 24) + r10 | 0) + 324 | 0), l4[i6 + 12 >> 2] = f7, l4[i6 + 8 >> 2] = n5, p7[i6 + 4 >> 2] = a6, p7[i6 >> 2] = e4, p7[i6 + 16 >> 2] = p7[r10 + 516 >> 2], p7[i6 + 20 >> 2] = p7[r10 + 520 >> 2], i6 = 1;
                }
                c:
                  if (o7) {
                    if (n5 = l4[r10 + 520 >> 2], l4[r10 + 244 >> 2] = l4[r10 + 516 >> 2], l4[r10 + 248 >> 2] = n5, f7 = 1 | (n5 = d6[r10 + 4 | 0]), s4[r10 + 4 | 0] = f7, !(4 & n5))
                      break c;
                    s4[r10 + 4 | 0] = 251 & f7;
                  }
                return l4[r10 + 312 >> 2] = h4, i6;
              }
              function rb2(r10) {
                r10 |= 0;
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = 0, k8 = 0, c6 = 0, u6 = 0;
                b8 = 8;
                r:
                  if (!(r10 >>> 0 > 4294967239)) {
                    e: {
                      for (; ; ) {
                        b8 = b8 >>> 0 <= 8 ? 8 : b8, f7 = e4 = l4[1731], n5 = l4[1730], r10 = r10 >>> 0 <= 8 ? 8 : r10 + 3 & -4;
                        a: {
                          if (r10 >>> 0 <= 127) {
                            t4 = (r10 >>> 3 | 0) - 1 | 0;
                            break a;
                          }
                          if (i6 = E3(r10), t4 = ((r10 >>> 29 - i6 ^ 4) - (i6 << 2) | 0) + 110 | 0, r10 >>> 0 <= 4095)
                            break a;
                          t4 = (i6 = ((r10 >>> 30 - i6 ^ 2) - (i6 << 1) | 0) + 71 | 0) >>> 0 >= 63 ? 63 : i6;
                        }
                        if (a6 = 31 & t4, (63 & t4) >>> 0 >= 32 ? (i6 = 0, e4 = e4 >>> a6 | 0) : (i6 = e4 >>> a6 | 0, e4 = ((1 << a6) - 1 & e4) << 32 - a6 | n5 >>> a6), e4 | i6) {
                          for (; ; ) {
                            n5 = i6;
                            i: {
                              if (e4 | i6) {
                                o7 = (a6 = i6 - 1 | 0) + 1 | 0, f7 = a6, f7 = (0 | (a6 = e4 - 1 | 0)) != -1 ? o7 : f7, a6 = 63 - (i6 = (0 | (i6 = E3(i6 ^ f7))) == 32 ? E3(e4 ^ a6) + 32 | 0 : i6) | 0, ra2 = 0 - (i6 >>> 0 > 63) | 0;
                                break i;
                              }
                              ra2 = 0, a6 = 64;
                            }
                            a6 = 31 & (f7 = a6), (63 & f7) >>> 0 >= 32 ? (i6 = 0, e4 = n5 >>> a6 | 0) : (i6 = n5 >>> a6 | 0, e4 = ((1 << a6) - 1 & n5) << 32 - a6 | e4 >>> a6), o7 = e4, e4 = l4[(a6 = (t4 = f7 + t4 | 0) << 4) + 5896 >> 2], f7 = a6 + 5888 | 0;
                            n: {
                              if ((0 | e4) != (0 | f7)) {
                                if (n5 = rp2(e4, b8, r10))
                                  break r;
                                n5 = l4[e4 + 4 >> 2], l4[n5 + 8 >> 2] = l4[e4 + 8 >> 2], l4[l4[e4 + 8 >> 2] + 4 >> 2] = n5, l4[e4 + 8 >> 2] = f7, n5 = a6 + 5892 | 0, l4[e4 + 4 >> 2] = l4[n5 >> 2], l4[n5 >> 2] = e4, l4[l4[e4 + 4 >> 2] + 8 >> 2] = e4, t4 = t4 + 1 | 0, e4 = (1 & i6) << 31 | o7 >>> 1, i6 = i6 >>> 1 | 0;
                                break n;
                              }
                              k8 = l4[1731], n5 = 31 & (e4 = f7 = 63 & t4), e4 >>> 0 >= 32 ? (e4 = 0, a6 = -1 >>> n5 | 0) : a6 = (e4 = -1 >>> n5 | 0) | (1 << n5) - 1 << 32 - n5, a6 &= -2, n5 = 31 & f7, f7 >>> 0 >= 32 ? (e4 = a6 << n5, a6 = 0) : (e4 = (1 << n5) - 1 & a6 >>> 32 - n5 | e4 << n5, a6 <<= n5), c6 = a6, n5 = e4, e4 = 31 & (a6 = f7 = 0 - t4 & 63), a6 >>> 0 >= 32 ? (e4 = -1 << e4, a6 = 0) : e4 = (a6 = -1 << e4) | (1 << e4) - 1 & -1 >>> 32 - e4, u6 = -2 & a6, a6 = 31 & f7, f7 >>> 0 >= 32 ? (f7 = 0, e4 = e4 >>> a6 | 0) : (f7 = e4 >>> a6 | 0, e4 = ((1 << a6) - 1 & e4) << 32 - a6 | u6 >>> a6), e4 |= c6, ra2 = n5 | f7, l4[1730] = l4[1730] & e4, l4[1731] = ra2 & k8, e4 = 1 ^ o7;
                            }
                            if (!(e4 | i6))
                              break;
                          }
                          f7 = l4[1731], n5 = l4[1730];
                        }
                        f: {
                          if (n5 | f7) {
                            i6 = l4[(e4 = (a6 = 63 - ((0 | (i6 = E3(f7))) == 32 ? E3(n5) + 32 | 0 : i6) | 0) << 4) + 5896 >> 2];
                            t:
                              if (!(!f7 & n5 >>> 0 < 1073741824)) {
                                if (t4 = 99, (0 | (e4 = e4 + 5888 | 0)) == (0 | i6))
                                  break t;
                                for (; ; ) {
                                  if (!t4)
                                    break t;
                                  if (n5 = rp2(i6, b8, r10))
                                    break r;
                                  if (t4 = t4 - 1 | 0, i6 = l4[i6 + 8 >> 2], (0 | e4) == (0 | i6))
                                    break;
                                }
                                i6 = e4;
                              }
                            if (rd2(r10 + 48 | 0))
                              break f;
                            if (!i6 || (0 | (e4 = (a6 << 4) + 5888 | 0)) == (0 | i6))
                              break e;
                            for (; ; ) {
                              if (n5 = rp2(i6, b8, r10))
                                break r;
                              if (i6 = l4[i6 + 8 >> 2], (0 | e4) == (0 | i6))
                                break;
                            }
                            break e;
                          }
                          if (!rd2(r10 + 48 | 0))
                            break e;
                        }
                        if (n5 = 0, b8 - 1 & b8)
                          break r;
                        if (!(r10 >>> 0 <= 4294967239))
                          break;
                      }
                      break r;
                    }
                    n5 = 0;
                  }
                return 0 | n5;
              }
              function ro3(r10, e4, a6, i6) {
                var n5, f7, b8, o7, k8 = w8(0), c6 = w8(0), s5 = 0, A6 = w8(0);
                r: {
                  e: {
                    a: {
                      i: {
                        n: {
                          f: {
                            if (e4 >>> 0 <= 1) {
                              c6 = p7[r10 + 212 >> 2], e4 = l4[r10 + 212 >> 2];
                              t:
                                if ((0 | e4) != 2139156720) {
                                  if ((0 | e4) == 2140081935)
                                    break f;
                                  s5 = 4276;
                                  b: {
                                    if ((0 | e4) != 2141891242) {
                                      if (c6 == c6)
                                        break b;
                                      s5 = 4268;
                                    }
                                    switch (k8 = p7[s5 >> 2], c6 = w8(NaN), l4[s5 + 4 >> 2] - 1 | 0) {
                                      case 0:
                                        break f;
                                      case 1:
                                        break t;
                                      default:
                                        break n;
                                    }
                                  }
                                  if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, k8 = u5(), !(1073741824 & e4))
                                    break f;
                                }
                              c6 = w8(w8(k8 * i6) * w8(0.009999999776482582));
                              break n;
                            }
                            c6 = p7[r10 + 208 >> 2];
                            o: {
                              k: {
                                e4 = l4[r10 + 208 >> 2];
                                c:
                                  if ((0 | e4) != 2139156720) {
                                    if ((0 | e4) == 2140081935)
                                      break k;
                                    s5 = 4276;
                                    u: {
                                      if ((0 | e4) != 2141891242) {
                                        if (c6 == c6)
                                          break u;
                                        s5 = 4268;
                                      }
                                      switch (k8 = p7[s5 >> 2], c6 = w8(NaN), l4[s5 + 4 >> 2] - 1 | 0) {
                                        case 0:
                                          break k;
                                        case 1:
                                          break c;
                                        default:
                                          break o;
                                      }
                                    }
                                    if (f7 = (-1073741825 & e4) + 536870912 | 0, t3[2] = f7, k8 = u5(), !(1073741824 & e4))
                                      break k;
                                  }
                                c6 = w8(w8(k8 * i6) * w8(0.009999999776482582));
                                break o;
                              }
                              c6 = k8;
                            }
                            k8 = w8(0), A6 = p7[r10 + 216 >> 2], r10 = l4[r10 + 216 >> 2];
                            s:
                              if ((0 | r10) != 2139156720) {
                                if ((0 | r10) == 2140081935)
                                  break a;
                                e4 = 4276;
                                A: {
                                  if ((0 | r10) != 2141891242) {
                                    if (A6 == A6)
                                      break A;
                                    e4 = 4268;
                                  }
                                  switch (k8 = p7[e4 >> 2], l4[e4 + 4 >> 2] - 1 | 0) {
                                    case 1:
                                      break s;
                                    case 0:
                                      break i;
                                    default:
                                      break e;
                                  }
                                }
                                if (b8 = (-1073741825 & r10) + 536870912 | 0, t3[2] = b8, k8 = u5(), !(1073741824 & r10))
                                  break i;
                              }
                            k8 = w8(w8(k8 * i6) * w8(0.009999999776482582));
                            break i;
                          }
                          c6 = k8;
                        }
                        k8 = w8(0), A6 = p7[r10 + 220 >> 2], r10 = l4[r10 + 220 >> 2];
                        l:
                          if ((0 | r10) != 2139156720) {
                            if ((0 | r10) == 2140081935)
                              break a;
                            e4 = 4276;
                            d: {
                              if ((0 | r10) != 2141891242) {
                                if (A6 == A6)
                                  break d;
                                e4 = 4268;
                              }
                              switch (k8 = p7[e4 >> 2], l4[e4 + 4 >> 2] - 1 | 0) {
                                case 1:
                                  break l;
                                case 0:
                                  break i;
                                default:
                                  break e;
                              }
                            }
                            if (o7 = (-1073741825 & r10) + 536870912 | 0, t3[2] = o7, k8 = u5(), !(1073741824 & r10))
                              break i;
                          }
                        k8 = w8(w8(k8 * i6) * w8(0.009999999776482582));
                      }
                      if (!(k8 >= w8(0)))
                        break e;
                    }
                    if (a6 > k8)
                      break r;
                  }
                  if (!(c6 >= w8(0)))
                    return a6;
                  k8 = a6 < c6 ? c6 : a6;
                }
                return k8;
              }
              function rk2(r10, e4) {
                var a6 = 0, i6 = 0;
                for (l4[r10 + 8 >> 2] = 0, l4[r10 + 12 >> 2] = 0, A5[r10 + 4 >> 1] = 1, l4[r10 >> 2] = 0, l4[r10 + 16 >> 2] = 0, l4[r10 + 20 >> 2] = 0, l4[r10 + 24 >> 2] = 0, l4[r10 + 36 >> 2] = 2143289344, l4[r10 + 40 >> 2] = 2141891242, l4[r10 + 28 >> 2] = 2143289344, l4[r10 + 32 >> 2] = 2143289344, i6 = ry2(r10 + 44 | 0, 0, 36); l4[i6 + (a6 << 2) >> 2] = 2143289344, (0 | (a6 = a6 + 1 | 0)) != 9; )
                  ;
                for (a6 = 0, i6 = ry2(r10 + 80 | 0, 0, 36); l4[i6 + (a6 << 2) >> 2] = 2143289344, (0 | (a6 = a6 + 1 | 0)) != 9; )
                  ;
                for (a6 = 0, i6 = ry2(r10 + 116 | 0, 0, 36); l4[i6 + (a6 << 2) >> 2] = 2143289344, (0 | (a6 = a6 + 1 | 0)) != 9; )
                  ;
                for (a6 = 0, i6 = ry2(r10 + 152 | 0, 0, 36); l4[i6 + (a6 << 2) >> 2] = 2143289344, (0 | (a6 = a6 + 1 | 0)) != 9; )
                  ;
                for (a6 = 0, l4[r10 + 196 >> 2] = 0, l4[(i6 = r10 + 188 | 0) >> 2] = 0, l4[i6 + 4 >> 2] = 0; l4[i6 + (a6 << 2) >> 2] = 2143289344, (0 | (a6 = a6 + 1 | 0)) != 3; )
                  ;
                for (l4[r10 + 24 >> 2] = 4224, l4[r10 + 224 >> 2] = 2143289344, l4[r10 + 216 >> 2] = 2143289344, l4[r10 + 220 >> 2] = 2143289344, l4[r10 + 208 >> 2] = 2143289344, l4[r10 + 212 >> 2] = 2143289344, l4[r10 + 200 >> 2] = 2141891242, l4[r10 + 204 >> 2] = 2141891242, ry2(r10 + 228 | 0, 0, 288), l4[r10 + 244 >> 2] = 2143289344, l4[r10 + 248 >> 2] = 2143289344, ry2(r10 + 252 | 0, 0, 49), l4[r10 + 308 >> 2] = 2143289344, i6 = r10 + 516 | 0, a6 = r10 + 324 | 0; l4[a6 + 16 >> 2] = -1082130432, l4[a6 + 20 >> 2] = -1082130432, l4[a6 + 8 >> 2] = 0, l4[a6 + 12 >> 2] = 0, l4[a6 >> 2] = -1082130432, l4[a6 + 4 >> 2] = -1082130432, (0 | i6) != (0 | (a6 = a6 + 24 | 0)); )
                  ;
                return l4[r10 + 548 >> 2] = 0, l4[r10 + 552 >> 2] = 0, l4[r10 + 516 >> 2] = 2143289344, l4[r10 + 520 >> 2] = 2143289344, l4[r10 + 572 >> 2] = 2143289344, l4[r10 + 576 >> 2] = 0, l4[r10 + 568 >> 2] = e4, l4[r10 + 540 >> 2] = -1082130432, l4[r10 + 544 >> 2] = -1082130432, l4[r10 + 532 >> 2] = 0, l4[r10 + 536 >> 2] = 0, l4[r10 + 524 >> 2] = -1082130432, l4[r10 + 528 >> 2] = -1082130432, l4[r10 + 556 >> 2] = 0, l4[r10 + 560 >> 2] = 0, l4[r10 + 564 >> 2] = 0, l4[r10 + 580 >> 2] = 2143289344, l4[r10 + 584 >> 2] = 0, d6[e4 + 10 | 0] && (l4[r10 + 24 >> 2] = 4616, s4[r10 + 4 | 0] = 128 | d6[r10 + 4 | 0]), r10;
              }
              function rc2(r10) {
                var e4, a6, i6 = 0, n5 = 0, f7 = w8(0), b8 = w8(0), o7 = w8(0), k8 = 0, c6 = 0, s5 = 0, A6 = 0, d7 = 0, h4 = 0, v6 = 0, m6 = 0, N7 = 0;
                for (l4[(k8 = re3 - 16 | 0) + 8 >> 2] = 0, l4[k8 + 12 >> 2] = 1, d7 = r10 + 200 | 0, h4 = r10 + 572 | 0, v6 = r10 + 208 | 0, m6 = r10 + 216 | 0, r10 = 0; ; ) {
                  N7 = r10, c6 = (A6 = l4[(k8 + 8 | 0) + (r10 << 2) >> 2]) << 2, f7 = p7[(r10 = m6 + c6 | 0) >> 2];
                  r: {
                    e: {
                      a: {
                        i: {
                          n: {
                            f:
                              if (!(!((s5 = (0 | (i6 = l4[r10 >> 2])) == 2139156720) | (0 | i6) == 2140081935 | (0 | i6) == 2141891242) & f7 != f7)) {
                                b8 = p7[(r10 = c6 + v6 | 0) >> 2], n5 = l4[r10 >> 2];
                                t: {
                                  b: {
                                    if ((0 | n5) != 2139156720) {
                                      if (o7 = w8(NaN), r10 = 3, (0 | n5) == 2141891242)
                                        break t;
                                      if ((0 | n5) != 2140081935)
                                        break b;
                                      o7 = w8(0), r10 = 1;
                                      break t;
                                    }
                                    o7 = w8(0), r10 = 2;
                                    break t;
                                  }
                                  if (r10 = 0, b8 != b8)
                                    break t;
                                  e4 = (-1073741825 & n5) + 536870912 | 0, t3[2] = e4, o7 = u5(), r10 = 1073741824 & n5 ? 2 : 1;
                                }
                                n5 = r10;
                                o: {
                                  k: {
                                    if (!s5) {
                                      if (b8 = w8(NaN), r10 = 3, (0 | i6) == 2141891242)
                                        break o;
                                      if ((0 | i6) != 2140081935)
                                        break k;
                                      b8 = w8(0), r10 = 1;
                                      break o;
                                    }
                                    b8 = w8(0), r10 = 2;
                                    break o;
                                  }
                                  if (r10 = 0, f7 != f7)
                                    break o;
                                  a6 = (-1073741825 & i6) + 536870912 | 0, t3[2] = a6, b8 = u5(), r10 = 1073741824 & i6 ? 2 : 1;
                                }
                                if ((0 | n5) != (0 | r10) | !(!r10 | b8 != b8 & o7 != o7 | w8(y4(w8(b8 - o7))) < w8(9999999747378752e-20)))
                                  break f;
                                if (r10 = 0, s5)
                                  break n;
                                if ((0 | i6) == 2140081935)
                                  break e;
                                if ((0 | i6) == 2141891242)
                                  break a;
                                if (f7 != f7)
                                  break i;
                                r10 = (-1073741825 & i6) + 536870912 | 0, i6 = 1073741824 & i6 ? 2 : 1;
                                break r;
                              }
                            if (r10 = 0, f7 = p7[(i6 = c6 + d7 | 0) >> 2], (0 | (i6 = l4[i6 >> 2])) == 2139156720)
                              break n;
                            if ((0 | i6) == 2140081935)
                              break e;
                            if ((0 | i6) == 2141891242)
                              break a;
                            if (f7 != f7)
                              break i;
                            r10 = (-1073741825 & i6) + 536870912 | 0, i6 = 1073741824 & i6 ? 2 : 1;
                            break r;
                          }
                          i6 = 2;
                          break r;
                        }
                        r10 = 2143289344, i6 = 0;
                        break r;
                      }
                      r10 = 2143289344, i6 = 3;
                      break r;
                    }
                    i6 = 1;
                  }
                  if (l4[(n5 = (A6 << 3) + h4 | 0) + 4 >> 2] = i6, l4[n5 >> 2] = r10, r10 = 1, 1 & N7)
                    break;
                }
              }
              function ru3(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0;
                if (a6 >>> 0 >= 512)
                  return x5(0 | r10, 0 | e4, 0 | a6), r10;
                n5 = r10 + a6 | 0;
                r: {
                  if (!((r10 ^ e4) & 3)) {
                    e: {
                      if (!(3 & r10) || !a6) {
                        a6 = r10;
                        break e;
                      }
                      for (a6 = r10; ; ) {
                        if (s4[0 | a6] = d6[0 | e4], e4 = e4 + 1 | 0, !(3 & (a6 = a6 + 1 | 0)))
                          break e;
                        if (!(a6 >>> 0 < n5 >>> 0))
                          break;
                      }
                    }
                    i6 = -4 & n5;
                    a:
                      if (!(i6 >>> 0 < 64) && !((f7 = i6 + -64 | 0) >>> 0 < a6 >>> 0))
                        for (; l4[a6 >> 2] = l4[e4 >> 2], l4[a6 + 4 >> 2] = l4[e4 + 4 >> 2], l4[a6 + 8 >> 2] = l4[e4 + 8 >> 2], l4[a6 + 12 >> 2] = l4[e4 + 12 >> 2], l4[a6 + 16 >> 2] = l4[e4 + 16 >> 2], l4[a6 + 20 >> 2] = l4[e4 + 20 >> 2], l4[a6 + 24 >> 2] = l4[e4 + 24 >> 2], l4[a6 + 28 >> 2] = l4[e4 + 28 >> 2], l4[a6 + 32 >> 2] = l4[e4 + 32 >> 2], l4[a6 + 36 >> 2] = l4[e4 + 36 >> 2], l4[a6 + 40 >> 2] = l4[e4 + 40 >> 2], l4[a6 + 44 >> 2] = l4[e4 + 44 >> 2], l4[a6 + 48 >> 2] = l4[e4 + 48 >> 2], l4[a6 + 52 >> 2] = l4[e4 + 52 >> 2], l4[a6 + 56 >> 2] = l4[e4 + 56 >> 2], l4[a6 + 60 >> 2] = l4[e4 + 60 >> 2], e4 = e4 - -64 | 0, f7 >>> 0 >= (a6 = a6 - -64 | 0) >>> 0; )
                          ;
                    if (a6 >>> 0 >= i6 >>> 0)
                      break r;
                    for (; l4[a6 >> 2] = l4[e4 >> 2], e4 = e4 + 4 | 0, i6 >>> 0 > (a6 = a6 + 4 | 0) >>> 0; )
                      ;
                    break r;
                  }
                  if (n5 >>> 0 < 4 || (i6 = n5 - 4 | 0) >>> 0 < r10 >>> 0) {
                    a6 = r10;
                    break r;
                  }
                  for (a6 = r10; s4[0 | a6] = d6[0 | e4], s4[a6 + 1 | 0] = d6[e4 + 1 | 0], s4[a6 + 2 | 0] = d6[e4 + 2 | 0], s4[a6 + 3 | 0] = d6[e4 + 3 | 0], e4 = e4 + 4 | 0, i6 >>> 0 >= (a6 = a6 + 4 | 0) >>> 0; )
                    ;
                }
                if (a6 >>> 0 < n5 >>> 0)
                  for (; s4[0 | a6] = d6[0 | e4], e4 = e4 + 1 | 0, (0 | n5) != (0 | (a6 = a6 + 1 | 0)); )
                    ;
                return r10;
              }
              function rs3(r10, e4, a6, i6, n5) {
                var f7, b8, o7 = w8(0), k8 = 0, c6 = w8(0), s5 = w8(0), A6 = 0, d7 = 0, h4 = w8(0), v6 = w8(0), m6 = 0;
                if (!(d7 = (c6 = w8(a6 - i6)) != c6)) {
                  a6 = w8(0), o7 = p7[(k8 = (e4 << 2) + r10 | 0) + 208 >> 2];
                  r: {
                    e: {
                      k8 = l4[k8 + 208 >> 2];
                      a: {
                        i:
                          if ((0 | k8) != 2139156720) {
                            if ((0 | k8) == 2140081935)
                              break e;
                            A6 = 4276;
                            n: {
                              if ((0 | k8) != 2141891242) {
                                if (o7 == o7)
                                  break n;
                                A6 = 4268;
                              }
                              switch (a6 = p7[A6 >> 2], l4[A6 + 4 >> 2] - 1 | 0) {
                                case 0:
                                  break a;
                                case 1:
                                  break i;
                                default:
                                  break r;
                              }
                            }
                            if (f7 = (-1073741825 & k8) + 536870912 | 0, t3[2] = f7, a6 = u5(), !(1073741824 & k8))
                              break a;
                          }
                        a6 = w8(w8(a6 * n5) * w8(0.009999999776482582));
                      }
                      if (a6 == a6)
                        break e;
                      break r;
                    }
                    s5 = w8(a6 - i6);
                  }
                  a6 = w8(0), o7 = p7[(r10 = (e4 << 2) + r10 | 0) + 216 >> 2];
                  f: {
                    t: {
                      e4 = l4[r10 + 216 >> 2];
                      b: {
                        o:
                          if ((0 | e4) != 2139156720) {
                            if ((0 | e4) == 2140081935)
                              break t;
                            r10 = 4276;
                            k: {
                              if ((0 | e4) != 2141891242) {
                                if (o7 == o7)
                                  break k;
                                r10 = 4268;
                              }
                              switch (a6 = p7[r10 >> 2], o7 = w8(34028234663852886e22), l4[r10 + 4 >> 2] - 1 | 0) {
                                case 0:
                                  break b;
                                case 1:
                                  break o;
                                default:
                                  break f;
                              }
                            }
                            if (b8 = (-1073741825 & e4) + 536870912 | 0, t3[2] = b8, a6 = u5(), !(1073741824 & e4))
                              break b;
                          }
                        a6 = w8(w8(a6 * n5) * w8(0.009999999776482582));
                      }
                      if (a6 == a6)
                        break t;
                      o7 = w8(34028234663852886e22);
                      break f;
                    }
                    o7 = w8(a6 - i6);
                  }
                  if (h4 = c6, v6 = es2(c6, o7), !((r10 = (a6 = o7 != o7 | d7 ? h4 : v6) != a6) | s5 != s5))
                    return eu(a6, s5);
                  c6 = r10 ? s5 : a6;
                }
                return c6;
              }
              function rA2(r10, e4, a6, i6, n5, f7, t4, b8, o7, k8, c6, u6, s5) {
                var A6 = w8(0), l5 = w8(0), d7 = 0, h4 = 0, v6 = w8(0), m6 = w8(0), N7 = w8(0), E4 = 0, G4 = 0;
                if (o7 < w8(0) | k8 < w8(0))
                  r10 = 0;
                else {
                  v6 = f7, m6 = e4, N7 = i6, l5 = b8;
                  r:
                    if (s5) {
                      if (A6 = p7[s5 + 16 >> 2], l5 = b8, A6 == w8(0))
                        break r;
                      m6 = rH2(+e4, E4 = +A6, 0, 0), N7 = rH2(+i6, E4, 0, 0), v6 = rH2(+f7, E4, 0, 0), l5 = rH2(+b8, E4, 0, 0);
                    }
                  A6 = l5, s5 = 0;
                  e:
                    if ((0 | r10) == (0 | n5)) {
                      if ((G4 = v6 != v6) | (s5 = m6 != m6)) {
                        s5 &= G4;
                        break e;
                      }
                      s5 = w8(y4(w8(v6 - m6))) < w8(9999999747378752e-20);
                    }
                  G4 = s5;
                  a:
                    if ((0 | a6) == (0 | t4)) {
                      if ((d7 = A6 != A6) | (s5 = N7 != N7)) {
                        d7 &= s5;
                        break a;
                      }
                      d7 = w8(y4(w8(A6 - N7))) < w8(9999999747378752e-20);
                    }
                  h4 = 1, s5 = 1;
                  i:
                    if (!G4) {
                      e4 = w8(e4 - c6);
                      n:
                        if ((0 | r10) != 1) {
                          if (!((r10 = (0 | r10) != 2) | n5)) {
                            if (!(e4 >= o7))
                              break n;
                            break i;
                          }
                          if (s5 = 0, !(e4 < f7) | (r10 | (0 | n5) != 2 | (e4 != e4 | f7 != f7 | o7 != o7)) || (s5 = 1, e4 >= o7))
                            break i;
                        }
                      if ((n5 = e4 != e4) | (r10 = o7 != o7)) {
                        s5 = r10 & n5;
                        break i;
                      }
                      s5 = w8(y4(w8(e4 - o7))) < w8(9999999747378752e-20);
                    }
                  f:
                    if (!d7) {
                      e4 = w8(i6 - u6);
                      t:
                        if ((0 | a6) != 1) {
                          if (!((r10 = (0 | a6) != 2) | t4)) {
                            if (!(e4 >= k8))
                              break t;
                            break f;
                          }
                          if (h4 = 0, !(e4 < b8) | (r10 | (0 | t4) != 2 | (e4 != e4 | b8 != b8 | k8 != k8)) || (h4 = 1, e4 >= k8))
                            break f;
                        }
                      if ((a6 = e4 != e4) | (r10 = k8 != k8)) {
                        h4 = r10 & a6;
                        break f;
                      }
                      h4 = w8(y4(w8(e4 - k8))) < w8(9999999747378752e-20);
                    }
                  r10 = s5 & h4;
                }
                return r10;
              }
              function rl3(r10) {
                var e4, a6, i6, n5 = 0, f7 = 0, b8 = 0, k8 = 0, c6 = 0, u6 = 0, s5 = 0, A6 = 0;
                if (e4 = +r10, o6[0] = e4, c6 = 0 | t3[1], b8 = 0 | t3[0], (0 | (k8 = c6 >>> 20 & 2047)) == 2047)
                  return (r10 *= 1) / r10;
                if (!(n5 = b8 << 1) & (0 | (u6 = c6 << 1 | b8 >>> 31)) == 2145386496 | u6 >>> 0 < 2145386496)
                  return !n5 & (0 | u6) == 2145386496 ? 0 * r10 : r10;
                r: {
                  if (!k8) {
                    if (k8 = 0, f7 = b8 << 12, (0 | (n5 = c6 << 12 | b8 >>> 20)) > 0 | (0 | n5) >= 0)
                      for (; k8 = k8 - 1 | 0, n5 = n5 << 1 | f7 >>> 31, f7 <<= 1, (0 | n5) > 0 | (0 | n5) >= 0; )
                        ;
                    f7 = 31 & (n5 = 1 - k8 | 0), (63 & n5) >>> 0 >= 32 ? (n5 = b8 << f7, b8 = 0) : (n5 = (1 << f7) - 1 & b8 >>> 32 - f7 | c6 << f7, b8 <<= f7);
                    break r;
                  }
                  n5 = 1048575 & c6 | 1048576;
                }
                if (f7 = b8, (0 | k8) > 1023) {
                  for (; ; ) {
                    e:
                      if (!((0 | (b8 = n5 + -1048576 | 0)) < 0) && !((n5 = b8) | f7))
                        return 0 * r10;
                    if (n5 = n5 << 1 | f7 >>> 31, f7 <<= 1, !((0 | (k8 = k8 - 1 | 0)) > 1023))
                      break;
                  }
                  k8 = 1023;
                }
                a:
                  if (!((0 | (b8 = n5 + -1048576 | 0)) < 0) && !((n5 = b8) | f7))
                    return 0 * r10;
                if ((0 | n5) == 1048575 | n5 >>> 0 < 1048575)
                  for (; k8 = k8 - 1 | 0, b8 = n5 >>> 0 < 524288, u6 = n5 << 1 | f7 >>> 31, f7 <<= 1, n5 = u6, b8; )
                    ;
                return A6 = -2147483648 & c6, u6 = n5 + -1048576 | k8 << 20, s5 = f7, c6 = n5, s5 = f7, f7 = 31 & (b8 = 1 - k8 | 0), (63 & b8) >>> 0 >= 32 ? (n5 = 0, b8 = c6 >>> f7 | 0) : (n5 = c6 >>> f7 | 0, b8 = ((1 << f7) - 1 & c6) << 32 - f7 | s5 >>> f7), a6 = ((f7 = (0 | k8) > 0) ? s5 : b8) | 0, t3[0] = a6, i6 = (f7 ? u6 : n5) | A6, t3[1] = i6, +o6[0];
              }
              function rd2(r10) {
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0, f7 = 0;
                a6 = (i6 = l4[1396]) + (e4 = r10 + 7 & -8) | 0;
                r: {
                  e:
                    if (!((a6 >>> 0 <= i6 >>> 0 ? e4 : 0) || a6 >>> 0 > eU() << 16 >>> 0 && !(0 | D5(0 | a6)))) {
                      l4[1396] = a6;
                      break r;
                    }
                  l4[1761] = 48, i6 = -1;
                }
                if ((0 | i6) != -1) {
                  l4[(a6 = (e4 = r10 + i6 | 0) - 16 | 0) + 12 >> 2] = 16, l4[a6 >> 2] = 16, f7 = (r10 = l4[1728]) ? l4[r10 + 8 >> 2] : 0;
                  a: {
                    i: {
                      if ((0 | f7) == (0 | i6)) {
                        if (n5 = i6 - (-2 & l4[i6 - 4 >> 2]) | 0, f7 = l4[n5 - 4 >> 2], l4[r10 + 8 >> 2] = e4, e4 = -16, !(1 & s4[((r10 = n5 - (-2 & f7) | 0) + l4[r10 >> 2] | 0) - 4 | 0]))
                          break i;
                        e4 = l4[r10 + 4 >> 2], l4[e4 + 8 >> 2] = l4[r10 + 8 >> 2], l4[l4[r10 + 8 >> 2] + 4 >> 2] = e4, a6 = a6 - r10 | 0, l4[r10 >> 2] = a6;
                        break a;
                      }
                      l4[i6 + 12 >> 2] = 16, l4[i6 >> 2] = 16, l4[i6 + 8 >> 2] = e4, l4[i6 + 4 >> 2] = r10, l4[1728] = i6, e4 = 16;
                    }
                    a6 = a6 - (r10 = e4 + i6 | 0) | 0, l4[r10 >> 2] = a6;
                  }
                  l4[((-4 & a6) + r10 | 0) - 4 >> 2] = 1 | a6, e4 = l4[r10 >> 2] - 8 | 0;
                  n: {
                    if (e4 >>> 0 <= 127) {
                      a6 = (e4 >>> 3 | 0) - 1 | 0;
                      break n;
                    }
                    if (n5 = E3(e4), a6 = ((e4 >>> 29 - n5 ^ 4) - (n5 << 2) | 0) + 110 | 0, e4 >>> 0 <= 4095)
                      break n;
                    a6 = (a6 = ((e4 >>> 30 - n5 ^ 2) - (n5 << 1) | 0) + 71 | 0) >>> 0 >= 63 ? 63 : a6;
                  }
                  e4 = a6 << 4, l4[r10 + 4 >> 2] = e4 + 5888, e4 = e4 + 5896 | 0, l4[r10 + 8 >> 2] = l4[e4 >> 2], l4[e4 >> 2] = r10, l4[l4[r10 + 8 >> 2] + 4 >> 2] = r10, e4 = l4[1730], n5 = l4[1731], r10 = 31 & a6, (63 & a6) >>> 0 >= 32 ? (a6 = 1 << r10, f7 = 0) : a6 = (f7 = 1 << r10) - 1 & 1 >>> 32 - r10, l4[1730] = f7 | e4, l4[1731] = a6 | n5;
                }
                return (0 | i6) != -1;
              }
              function rh2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = 0, k8 = 0, c6 = 0, u6 = 0;
                r: {
                  e: {
                    a: {
                      i: {
                        n: {
                          f: {
                            t: {
                              b: {
                                o: {
                                  k: {
                                    if (e4) {
                                      if (!a6)
                                        break k;
                                      break o;
                                    }
                                    ra2 = 0, r10 = (r10 >>> 0) / (a6 >>> 0) | 0;
                                    break r;
                                  }
                                  if (!r10)
                                    break b;
                                  break t;
                                }
                                if (!(a6 - 1 & a6))
                                  break f;
                                t4 = 0 - (f7 = (E3(a6) + 33 | 0) - E3(e4) | 0) | 0;
                                break i;
                              }
                              ra2 = 0, r10 = (e4 >>> 0) / 0 | 0;
                              break r;
                            }
                            if ((i6 = 32 - E3(e4) | 0) >>> 0 < 31)
                              break n;
                            break a;
                          }
                          if ((0 | a6) == 1)
                            break e;
                          a6 = 31 & (f7 = a6 ? 31 - E3(a6 - 1 ^ a6) | 0 : 32), (63 & f7) >>> 0 >= 32 ? r10 = e4 >>> a6 | 0 : (i6 = e4 >>> a6 | 0, r10 = ((1 << a6) - 1 & e4) << 32 - a6 | r10 >>> a6), ra2 = i6;
                          break r;
                        }
                        f7 = i6 + 1 | 0, t4 = 63 - i6 | 0;
                      }
                      if (n5 = 31 & (i6 = 63 & f7), i6 >>> 0 >= 32 ? (i6 = 0, b8 = e4 >>> n5 | 0) : (i6 = e4 >>> n5 | 0, b8 = ((1 << n5) - 1 & e4) << 32 - n5 | r10 >>> n5), t4 &= 63, n5 = 31 & t4, t4 >>> 0 >= 32 ? (e4 = r10 << n5, r10 = 0) : (e4 = (1 << n5) - 1 & r10 >>> 32 - n5 | e4 << n5, r10 <<= n5), f7)
                        for (u6 = (0 | (t4 = a6 - 1 | 0)) == -1 ? -1 : 0; k8 = a6 & (n5 = u6 - ((o7 = i6 << 1 | b8 >>> 31) + ((i6 = b8 << 1 | e4 >>> 31) >>> 0 > t4 >>> 0) | 0) >> 31), b8 = i6 - k8 | 0, i6 = o7 - (i6 >>> 0 < k8 >>> 0) | 0, e4 = e4 << 1 | r10 >>> 31, r10 = c6 | r10 << 1, c6 = 1 & n5, f7 = f7 - 1 | 0; )
                          ;
                      ra2 = e4 << 1 | r10 >>> 31, r10 = c6 | r10 << 1;
                      break r;
                    }
                    r10 = 0, e4 = 0;
                  }
                  ra2 = e4;
                }
                return r10;
              }
              function rv2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = w8(0);
                r: {
                  e: {
                    a: {
                      if ((-2 & e4) == 2) {
                        if (e4 = l4[r10 + 188 >> 2], f7 = p7[r10 + 188 >> 2], (0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | f7 == f7 || (e4 = l4[r10 + 196 >> 2], f7 = p7[r10 + 196 >> 2], (0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | f7 == f7))
                          break a;
                        break e;
                      }
                      if (e4 = l4[r10 + 192 >> 2], f7 = p7[r10 + 192 >> 2], (0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | f7 == f7 || (f7 = p7[r10 + 196 >> 2], (0 | (e4 = l4[r10 + 196 >> 2])) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242))
                        break a;
                      if (f7 != f7)
                        break e;
                    }
                    f7 = w8(0);
                    i: {
                      n:
                        if ((0 | e4) != 2139156720) {
                          if ((0 | e4) == 2140081935)
                            break r;
                          r10 = 4276;
                          f: {
                            if ((0 | e4) != 2141891242) {
                              if (i6 = e4, t3[2] = i6, (f7 = u5()) == f7)
                                break f;
                              r10 = 4268;
                            }
                            switch (f7 = p7[r10 >> 2], b8 = w8(NaN), l4[r10 + 4 >> 2] - 1 | 0) {
                              case 0:
                                break r;
                              case 1:
                                break n;
                              default:
                                break i;
                            }
                          }
                          if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & e4))
                            break r;
                        }
                      b8 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                    }
                    return b8;
                  }
                  f7 = w8(0);
                }
                return f7;
              }
              function rp2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0;
                if (n5 = ((i6 = r10 + 4 | 0) + e4 | 0) - 1 & 0 - e4, e4 = l4[r10 >> 2], n5 + a6 >>> 0 <= (e4 + r10 | 0) - 4 >>> 0) {
                  f7 = l4[r10 + 4 >> 2], l4[f7 + 8 >> 2] = l4[r10 + 8 >> 2], l4[l4[r10 + 8 >> 2] + 4 >> 2] = f7, (0 | i6) != (0 | n5) && (n5 = n5 - i6 | 0, f7 = r10 - (-2 & l4[r10 - 4 >> 2]) | 0, i6 = n5 + l4[f7 >> 2] | 0, l4[f7 >> 2] = i6, l4[(f7 + (-4 & i6) | 0) - 4 >> 2] = i6, r10 = r10 + n5 | 0, e4 = e4 - n5 | 0, l4[r10 >> 2] = e4);
                  r: {
                    if (a6 + 24 >>> 0 <= e4 >>> 0) {
                      i6 = (r10 + a6 | 0) + 8 | 0, e4 = (e4 - a6 | 0) - 8 | 0, l4[i6 >> 2] = e4, l4[(i6 + (-4 & e4) | 0) - 4 >> 2] = 1 | e4, n5 = l4[i6 >> 2] - 8 | 0;
                      e: {
                        if (n5 >>> 0 <= 127) {
                          e4 = (n5 >>> 3 | 0) - 1 | 0;
                          break e;
                        }
                        if (f7 = E3(n5), e4 = ((n5 >>> 29 - f7 ^ 4) - (f7 << 2) | 0) + 110 | 0, n5 >>> 0 <= 4095)
                          break e;
                        e4 = (e4 = ((n5 >>> 30 - f7 ^ 2) - (f7 << 1) | 0) + 71 | 0) >>> 0 >= 63 ? 63 : e4;
                      }
                      n5 = e4 << 4, l4[i6 + 4 >> 2] = n5 + 5888, n5 = n5 + 5896 | 0, l4[i6 + 8 >> 2] = l4[n5 >> 2], l4[n5 >> 2] = i6, l4[l4[i6 + 8 >> 2] + 4 >> 2] = i6, n5 = l4[1730], f7 = l4[1731], i6 = 31 & e4, (63 & e4) >>> 0 >= 32 ? (e4 = 1 << i6, i6 = 0) : (e4 = (t4 = 1 << i6) - 1 & 1 >>> 32 - i6, i6 = t4), l4[1730] = i6 | n5, l4[1731] = e4 | f7, e4 = a6 + 8 | 0, l4[r10 >> 2] = e4, l4[((-4 & e4) + r10 | 0) - 4 >> 2] = e4;
                      break r;
                    }
                    l4[(r10 + e4 | 0) - 4 >> 2] = e4;
                  }
                  r10 = r10 + 4 | 0;
                } else
                  r10 = 0;
                return r10;
              }
              function rm2(r10, e4, a6) {
                var i6 = 0, n5 = 0;
                r:
                  if ((0 | r10) != (0 | e4)) {
                    if (e4 - (n5 = r10 + a6 | 0) >>> 0 <= 0 - (a6 << 1) >>> 0)
                      return ru3(r10, e4, a6);
                    i6 = (r10 ^ e4) & 3;
                    e: {
                      a: {
                        if (r10 >>> 0 < e4 >>> 0) {
                          if (i6) {
                            i6 = r10;
                            break e;
                          }
                          if (!(3 & r10)) {
                            i6 = r10;
                            break a;
                          }
                          for (i6 = r10; ; ) {
                            if (!a6)
                              break r;
                            if (s4[0 | i6] = d6[0 | e4], e4 = e4 + 1 | 0, a6 = a6 - 1 | 0, !(3 & (i6 = i6 + 1 | 0)))
                              break;
                          }
                          break a;
                        }
                        i:
                          if (!i6) {
                            if (3 & n5)
                              for (; ; ) {
                                if (!a6)
                                  break r;
                                if (s4[0 | (i6 = (a6 = a6 - 1 | 0) + r10 | 0)] = d6[e4 + a6 | 0], !(3 & i6))
                                  break;
                              }
                            if (a6 >>> 0 <= 3)
                              break i;
                            for (; l4[(a6 = a6 - 4 | 0) + r10 >> 2] = l4[e4 + a6 >> 2], a6 >>> 0 > 3; )
                              ;
                          }
                        if (!a6)
                          break r;
                        for (; s4[(a6 = a6 - 1 | 0) + r10 | 0] = d6[e4 + a6 | 0], a6; )
                          ;
                        break r;
                      }
                      if (a6 >>> 0 <= 3)
                        break e;
                      for (; l4[i6 >> 2] = l4[e4 >> 2], e4 = e4 + 4 | 0, i6 = i6 + 4 | 0, (a6 = a6 - 4 | 0) >>> 0 > 3; )
                        ;
                    }
                    if (!a6)
                      break r;
                    for (; s4[0 | i6] = d6[0 | e4], i6 = i6 + 1 | 0, e4 = e4 + 1 | 0, a6 = a6 - 1 | 0; )
                      ;
                  }
                return r10;
              }
              function rN2(r10, e4, a6, i6) {
                r:
                  switch (e4 - 9 | 0) {
                    case 0:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, l4[r10 >> 2] = l4[e4 >> 2];
                      return;
                    case 6:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, e4 = A5[e4 >> 1], l4[r10 >> 2] = e4, l4[r10 + 4 >> 2] = e4 >> 31;
                      return;
                    case 7:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, l4[r10 >> 2] = h3[e4 >> 1], l4[r10 + 4 >> 2] = 0;
                      return;
                    case 8:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, e4 = s4[0 | e4], l4[r10 >> 2] = e4, l4[r10 + 4 >> 2] = e4 >> 31;
                      return;
                    case 9:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, l4[r10 >> 2] = d6[0 | e4], l4[r10 + 4 >> 2] = 0;
                      return;
                    case 16:
                      e4 = l4[a6 >> 2] + 7 & -8, l4[a6 >> 2] = e4 + 8, m5[r10 >> 3] = m5[e4 >> 3];
                      return;
                    case 17:
                      eY[0 | i6](r10, a6);
                    default:
                      return;
                    case 1:
                    case 4:
                    case 14:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, e4 = l4[e4 >> 2], l4[r10 >> 2] = e4, l4[r10 + 4 >> 2] = e4 >> 31;
                      return;
                    case 2:
                    case 5:
                    case 11:
                    case 15:
                      e4 = l4[a6 >> 2], l4[a6 >> 2] = e4 + 4, l4[r10 >> 2] = l4[e4 >> 2], l4[r10 + 4 >> 2] = 0;
                      return;
                    case 3:
                    case 10:
                    case 12:
                    case 13:
                      break r;
                  }
                e4 = l4[a6 >> 2] + 7 & -8, l4[a6 >> 2] = e4 + 8, a6 = l4[e4 + 4 >> 2], l4[r10 >> 2] = l4[e4 >> 2], l4[r10 + 4 >> 2] = a6;
              }
              function rw2() {
                rr3(7004, 3018), $5(7005, 2479, 1, 1, 0), V4(7006, 2139, 1, -128, 127), V4(7007, 2132, 1, -128, 127), V4(7008, 2130, 1, 0, 255), V4(7009, 1286, 2, -32768, 32767), V4(7010, 1277, 2, 0, 65535), V4(7011, 1315, 4, -2147483648, 2147483647), V4(7012, 1306, 4, 0, -1), V4(7013, 2658, 4, -2147483648, 2147483647), V4(7014, 2649, 4, 0, -1), eV(7015, 1776, -2147483648, 2147483647), eV(7016, 1775, 0, -1), C6(7017, 1769, 4), C6(7018, 2966, 8), S6(7019, 2676), S6(7020, 3835), O7(7021, 4, 2663), O7(7022, 2, 2688), O7(7023, 4, 2703), q4(7024, 2484), Z3(7025, 0, 3766), Z3(7026, 0, 3868), Z3(7027, 1, 3796), Z3(7028, 2, 3398), Z3(7029, 3, 3429), Z3(7030, 4, 3469), Z3(7031, 5, 3498), Z3(7032, 4, 3905), Z3(7033, 5, 3935), Z3(7026, 0, 3600), Z3(7027, 1, 3567), Z3(7028, 2, 3666), Z3(7029, 3, 3632), Z3(7030, 4, 3733), Z3(7031, 5, 3699), Z3(7034, 6, 3536), Z3(7035, 7, 3974);
              }
              function ry2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0;
                r:
                  if (a6) {
                    if (s4[0 | r10] = e4, s4[(i6 = r10 + a6 | 0) - 1 | 0] = e4, a6 >>> 0 < 3 || (s4[r10 + 2 | 0] = e4, s4[r10 + 1 | 0] = e4, s4[i6 - 3 | 0] = e4, s4[i6 - 2 | 0] = e4, a6 >>> 0 < 7) || (s4[r10 + 3 | 0] = e4, s4[i6 - 4 | 0] = e4, a6 >>> 0 < 9) || (n5 = (i6 = 0 - r10 & 3) + r10 | 0, e4 = N6(255 & e4, 16843009), l4[n5 >> 2] = e4, l4[(a6 = (i6 = a6 - i6 & -4) + n5 | 0) - 4 >> 2] = e4, i6 >>> 0 < 9) || (l4[n5 + 8 >> 2] = e4, l4[n5 + 4 >> 2] = e4, l4[a6 - 8 >> 2] = e4, l4[a6 - 12 >> 2] = e4, i6 >>> 0 < 25) || (l4[n5 + 24 >> 2] = e4, l4[n5 + 20 >> 2] = e4, l4[n5 + 16 >> 2] = e4, l4[n5 + 12 >> 2] = e4, l4[a6 - 16 >> 2] = e4, l4[a6 - 20 >> 2] = e4, l4[a6 - 24 >> 2] = e4, l4[a6 - 28 >> 2] = e4, (a6 = i6 - (t4 = 4 & n5 | 24) | 0) >>> 0 < 32))
                      break r;
                    for (i6 = r9(e4, 0, 1, 1), f7 = ra2, e4 = n5 + t4 | 0; l4[e4 + 24 >> 2] = i6, l4[e4 + 28 >> 2] = f7, l4[e4 + 16 >> 2] = i6, l4[e4 + 20 >> 2] = f7, l4[e4 + 8 >> 2] = i6, l4[e4 + 12 >> 2] = f7, l4[e4 >> 2] = i6, l4[e4 + 4 >> 2] = f7, e4 = e4 + 32 | 0, (a6 = a6 - 32 | 0) >>> 0 > 31; )
                      ;
                  }
                return r10;
              }
              function rE2(r10) {
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0, f7 = 0;
                if (r10 |= 0) {
                  a6 = n5 = l4[(e4 = r10 - 4 | 0) >> 2], i6 = e4, (0 | (r10 = -2 & (f7 = l4[r10 - 8 >> 2]))) != (0 | f7) && (a6 = l4[(i6 = e4 - r10 | 0) + 4 >> 2], l4[a6 + 8 >> 2] = l4[i6 + 8 >> 2], l4[l4[i6 + 8 >> 2] + 4 >> 2] = a6, a6 = r10 + n5 | 0), (0 | (e4 = l4[(r10 = e4 + n5 | 0) >> 2])) != l4[(r10 + e4 | 0) - 4 >> 2] && (n5 = l4[r10 + 4 >> 2], l4[n5 + 8 >> 2] = l4[r10 + 8 >> 2], l4[l4[r10 + 8 >> 2] + 4 >> 2] = n5, a6 = e4 + a6 | 0), l4[i6 >> 2] = a6, l4[((-4 & a6) + i6 | 0) - 4 >> 2] = 1 | a6, e4 = l4[i6 >> 2] - 8 | 0;
                  r: {
                    if (e4 >>> 0 <= 127) {
                      r10 = (e4 >>> 3 | 0) - 1 | 0;
                      break r;
                    }
                    if (a6 = E3(e4), r10 = ((e4 >>> 29 - a6 ^ 4) - (a6 << 2) | 0) + 110 | 0, e4 >>> 0 <= 4095)
                      break r;
                    r10 = (r10 = ((e4 >>> 30 - a6 ^ 2) - (a6 << 1) | 0) + 71 | 0) >>> 0 >= 63 ? 63 : r10;
                  }
                  e4 = r10 << 4, l4[i6 + 4 >> 2] = e4 + 5888, e4 = e4 + 5896 | 0, l4[i6 + 8 >> 2] = l4[e4 >> 2], l4[e4 >> 2] = i6, l4[l4[i6 + 8 >> 2] + 4 >> 2] = i6, e4 = l4[1730], a6 = l4[1731], i6 = 31 & r10, (63 & r10) >>> 0 >= 32 ? (r10 = 1 << i6, n5 = 0) : r10 = (n5 = 1 << i6) - 1 & 1 >>> 32 - i6, l4[1730] = n5 | e4, l4[1731] = r10 | a6;
                }
              }
              function rG2(r10, e4, a6, i6, n5) {
                var f7 = 0, t4 = 0, b8 = 0, o7 = 0;
                re3 = f7 = re3 - 208 | 0, l4[f7 + 204 >> 2] = a6, ry2(a6 = f7 + 160 | 0, 0, 40), l4[f7 + 200 >> 2] = l4[f7 + 204 >> 2];
                r: {
                  if ((0 | rf2(0, e4, f7 + 200 | 0, f7 + 80 | 0, a6, i6, n5)) < 0) {
                    n5 = -1;
                    break r;
                  }
                  o7 = l4[r10 + 76 >> 2] >= 0, t4 = l4[r10 >> 2], l4[r10 + 72 >> 2] <= 0 && (l4[r10 >> 2] = -33 & t4);
                  e: {
                    a: {
                      i: {
                        if (!l4[r10 + 48 >> 2]) {
                          l4[r10 + 48 >> 2] = 80, l4[r10 + 28 >> 2] = 0, l4[r10 + 16 >> 2] = 0, l4[r10 + 20 >> 2] = 0, b8 = l4[r10 + 44 >> 2], l4[r10 + 44 >> 2] = f7;
                          break i;
                        }
                        if (l4[r10 + 16 >> 2])
                          break a;
                      }
                      if (a6 = -1, ef(r10))
                        break e;
                    }
                    a6 = rf2(r10, e4, f7 + 200 | 0, f7 + 80 | 0, f7 + 160 | 0, i6, n5);
                  }
                  if (b8 && (eY[l4[r10 + 36 >> 2]](r10, 0, 0), l4[r10 + 48 >> 2] = 0, l4[r10 + 44 >> 2] = b8, l4[r10 + 28 >> 2] = 0, e4 = l4[r10 + 20 >> 2], l4[r10 + 16 >> 2] = 0, l4[r10 + 20 >> 2] = 0, a6 = e4 ? a6 : -1), e4 = r10, r10 = l4[r10 >> 2], l4[e4 >> 2] = r10 | 32 & t4, n5 = 32 & r10 ? -1 : a6, !o7)
                    break r;
                }
                return re3 = f7 + 208 | 0, n5;
              }
              function rR2(r10) {
                var e4 = 0, a6 = w8(0), i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = w8(0), c6 = 0;
                re3 = f7 = re3 - 16 | 0, e4 = l4[r10 + 12 >> 2];
                r: {
                  if (e4) {
                    o7 = p7[r10 + 520 >> 2], a6 = p7[r10 + 516 >> 2];
                    e: {
                      if (32 & d6[r10 + 4 | 0]) {
                        a6 = w8(eY[0 | e4](r10, a6, o7, 0));
                        break e;
                      }
                      a6 = w8(eY[0 | e4](r10, a6, o7));
                    }
                    if (a6 == a6)
                      break r;
                    l4[f7 >> 2] = 3340, rB2(r10, f7), eX(), k7();
                  }
                  a: {
                    i: {
                      if (t4 = l4[r10 + 556 >> 2], e4 = l4[r10 + 560 >> 2], (0 | t4) != (0 | e4)) {
                        for (c6 = (e4 = e4 - t4 >> 2) >>> 0 <= 1 ? 1 : e4; ; ) {
                          if (n5 = l4[(b8 << 2) + t4 >> 2], !l4[n5 + 548 >> 2]) {
                            if ((196608 & (e4 = l4[n5 + 24 >> 2])) != 131072) {
                              if ((e4 = e4 >>> 13 & 7) || (e4 = l4[r10 + 24 >> 2] >>> 10 & 7), 2 & d6[n5 + 4 | 0] | (8 & d6[r10 + 24 | 0] ? (0 | e4) == 5 : 0))
                                break i;
                              i6 = i6 || n5;
                            }
                            if ((0 | c6) != (0 | (b8 = b8 + 1 | 0)))
                              continue;
                          }
                          break;
                        }
                        if (i6)
                          break a;
                      }
                      a6 = p7[r10 + 520 >> 2];
                      break r;
                    }
                    i6 = n5;
                  }
                  a6 = w8(rR2(i6) + p7[i6 + 232 >> 2]);
                }
                return re3 = f7 + 16 | 0, a6;
              }
              function rg2(r10, e4, a6, i6, n5, f7) {
                var b8, o7 = 0, k8 = w8(0), c6 = 0, s5 = w8(0);
                k8 = p7[(o7 = (l4[(e4 << 2) + 4252 >> 2] << 2) + r10 | 0) + 216 >> 2];
                r: {
                  e: {
                    o7 = l4[o7 + 216 >> 2];
                    a:
                      if ((0 | o7) != 2139156720) {
                        if ((0 | o7) == 2140081935)
                          break e;
                        c6 = 4276;
                        i: {
                          if ((0 | o7) != 2141891242) {
                            if (k8 == k8)
                              break i;
                            c6 = 4268;
                          }
                          switch (s5 = p7[c6 >> 2], k8 = w8(NaN), l4[c6 + 4 >> 2] - 1 | 0) {
                            case 0:
                              break e;
                            case 1:
                              break a;
                            default:
                              break r;
                          }
                        }
                        if (b8 = (-1073741825 & o7) + 536870912 | 0, t3[2] = b8, s5 = u5(), !(1073741824 & o7))
                          break e;
                      }
                    k8 = w8(w8(s5 * a6) * w8(0.009999999776482582));
                    break r;
                  }
                  k8 = s5;
                }
                i6 = w8(k8 + w8(rP2(r10, e4, i6) + rS2(r10, e4, i6)));
                n: {
                  f: {
                    t:
                      switch (l4[n5 >> 2]) {
                        case 1:
                        case 2:
                          a6 = p7[f7 >> 2], i6 = i6 != i6 ? a6 : a6 < i6 ? a6 : i6;
                          break f;
                        case 0:
                          break t;
                        default:
                          break n;
                      }
                    if (i6 != i6)
                      break n;
                    l4[n5 >> 2] = 2;
                  }
                  p7[f7 >> 2] = i6;
                }
              }
              function rZ2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = w8(0), o7 = 0, k8 = w8(0);
                r10 = r10 + 116 | 0, o7 = l4[(e4 << 2) + 4220 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    e4 = rX2(r10, 4, o7, 2140081935);
                    break r;
                  }
                  e4 = rY2(r10, o7, 2140081935);
                }
                e: {
                  a: {
                    i: {
                      n:
                        if ((0 | e4) != 2139156720) {
                          if ((0 | e4) == 2140081935)
                            break e;
                          r10 = 4276;
                          f: {
                            if ((0 | e4) != 2141891242) {
                              if (i6 = e4, t3[2] = i6, (f7 = u5()) == f7)
                                break f;
                              r10 = 4268;
                            }
                            switch (f7 = p7[r10 >> 2], b8 = w8(NaN), l4[r10 + 4 >> 2] - 1 | 0) {
                              case 0:
                                break i;
                              case 1:
                                break n;
                              default:
                                break a;
                            }
                          }
                          if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & e4))
                            break i;
                        }
                      f7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                    }
                    if (f7 >= w8(0))
                      return f7;
                    if (b8 = f7, f7 < w8(0))
                      break e;
                  }
                  k8 = b8 == b8 ? b8 : w8(0);
                }
                return k8;
              }
              function rW2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = w8(0), o7 = 0, k8 = w8(0);
                r10 = r10 + 116 | 0, o7 = l4[(e4 << 2) + 4236 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    e4 = rX2(r10, 5, o7, 2140081935);
                    break r;
                  }
                  e4 = rY2(r10, o7, 2140081935);
                }
                e: {
                  a: {
                    i: {
                      n:
                        if ((0 | e4) != 2139156720) {
                          if ((0 | e4) == 2140081935)
                            break e;
                          r10 = 4276;
                          f: {
                            if ((0 | e4) != 2141891242) {
                              if (i6 = e4, t3[2] = i6, (f7 = u5()) == f7)
                                break f;
                              r10 = 4268;
                            }
                            switch (f7 = p7[r10 >> 2], b8 = w8(NaN), l4[r10 + 4 >> 2] - 1 | 0) {
                              case 0:
                                break i;
                              case 1:
                                break n;
                              default:
                                break a;
                            }
                          }
                          if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & e4))
                            break i;
                        }
                      f7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                    }
                    if (f7 >= w8(0))
                      return f7;
                    if (b8 = f7, f7 < w8(0))
                      break e;
                  }
                  k8 = b8 == b8 ? b8 : w8(0);
                }
                return k8;
              }
              function rV2(r10, e4, a6, i6, n5, f7) {
                var t4 = 0;
                r: {
                  e: {
                    if (r10) {
                      a: {
                        if (255 & e4) {
                          f7 = 0 | eY[0 | r10](a6, i6, n5, f7);
                          break a;
                        }
                        f7 = 0 | eY[0 | r10](a6, i6, n5);
                      }
                      if (f7)
                        break e;
                    }
                    if (l4[(e4 = ru3(f7 = eo2(588), a6, 552)) + 564 >> 2] = 0, l4[e4 + 556 >> 2] = 0, l4[e4 + 560 >> 2] = 0, n5 = l4[a6 + 556 >> 2], i6 = l4[a6 + 560 >> 2], (0 | n5) != (0 | i6)) {
                      if ((0 | (t4 = i6 - n5 | 0)) < 0)
                        break r;
                      for (r10 = eo2(t4), l4[e4 + 556 >> 2] = r10, l4[e4 + 564 >> 2] = r10 + t4; l4[r10 >> 2] = l4[n5 >> 2], r10 = r10 + 4 | 0, (0 | i6) != (0 | (n5 = n5 + 4 | 0)); )
                        ;
                      l4[e4 + 560 >> 2] = r10;
                    }
                    r10 = l4[a6 + 572 >> 2], l4[e4 + 568 >> 2] = l4[a6 + 568 >> 2], l4[e4 + 572 >> 2] = r10, l4[e4 + 584 >> 2] = l4[a6 + 584 >> 2], r10 = l4[a6 + 580 >> 2], l4[e4 + 576 >> 2] = l4[a6 + 576 >> 2], l4[e4 + 580 >> 2] = r10, l4[e4 + 552 >> 2] = 0;
                  }
                  return f7;
                }
                T5(), k7();
              }
              function rB2(r10, e4) {
                var a6 = 0, i6 = 0, n5 = 0;
                re3 = n5 = re3 - 16 | 0, l4[n5 + 12 >> 2] = e4;
                r: {
                  e: {
                    if (!r10) {
                      e4 = l4[n5 + 12 >> 2];
                      break e;
                    }
                    if (e4 = l4[n5 + 12 >> 2], !(a6 = l4[r10 + 568 >> 2]))
                      break e;
                    if (i6 = l4[a6 + 4 >> 2], d6[a6 + 9 | 0]) {
                      eY[0 | i6](a6, r10, 5, 0, 4215, e4);
                      break r;
                    }
                    eY[0 | i6](a6, r10, 5, 4215, e4);
                    break r;
                  }
                  a: {
                    if (!d6[6936]) {
                      A5[(a6 = eo2(28)) + 20 >> 1] = 0, l4[a6 + 16 >> 2] = 1065353216, A5[a6 + 10 >> 1] = 0, A5[a6 + 12 >> 1] = 0, l4[a6 >> 2] = 0, l4[a6 + 24 >> 2] = 0, s4[a6 + 9 | 0] = 0, i6 = 1, l4[a6 + 4 >> 2] = 1, s4[a6 + 22 | 0] = 0, l4[1733] = a6, s4[6936] = 1, l4[1732] = l4[1732] + 1;
                      break a;
                    }
                    if (a6 = l4[1733], i6 = l4[a6 + 4 >> 2], !d6[a6 + 9 | 0])
                      break a;
                    eY[0 | i6](a6, r10, 5, 0, 4215, e4);
                    break r;
                  }
                  eY[0 | i6](a6, r10, 5, 4215, e4);
                }
                re3 = n5 + 16 | 0;
              }
              function rT2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = 0, o7 = w8(0);
                r10 = r10 + 80 | 0, b8 = l4[(e4 << 2) + 4236 >> 2];
                r: {
                  e: {
                    if ((-2 & e4) == 2) {
                      e4 = rX2(r10, 5, b8, 2140081935);
                      break e;
                    }
                    e4 = rY2(r10, b8, 2140081935);
                  }
                  a: {
                    i:
                      if ((0 | e4) != 2139156720) {
                        if ((0 | e4) == 2140081935)
                          break r;
                        r10 = 4276;
                        n: {
                          if ((0 | e4) != 2141891242) {
                            if (i6 = e4, t3[2] = i6, (f7 = u5()) == f7)
                              break n;
                            r10 = 4268;
                          }
                          switch (f7 = p7[r10 >> 2], o7 = w8(NaN), l4[r10 + 4 >> 2] - 1 | 0) {
                            case 0:
                              break r;
                            case 1:
                              break i;
                            default:
                              break a;
                          }
                        }
                        if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & e4))
                          break r;
                      }
                    o7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                  }
                  return o7;
                }
                return f7;
              }
              function rI2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = 0, o7 = w8(0);
                r10 = r10 + 80 | 0, b8 = l4[(e4 << 2) + 4220 >> 2];
                r: {
                  e: {
                    if ((-2 & e4) == 2) {
                      e4 = rX2(r10, 4, b8, 2140081935);
                      break e;
                    }
                    e4 = rY2(r10, b8, 2140081935);
                  }
                  a: {
                    i:
                      if ((0 | e4) != 2139156720) {
                        if ((0 | e4) == 2140081935)
                          break r;
                        r10 = 4276;
                        n: {
                          if ((0 | e4) != 2141891242) {
                            if (i6 = e4, t3[2] = i6, (f7 = u5()) == f7)
                              break n;
                            r10 = 4268;
                          }
                          switch (f7 = p7[r10 >> 2], o7 = w8(NaN), l4[r10 + 4 >> 2] - 1 | 0) {
                            case 0:
                              break r;
                            case 1:
                              break i;
                            default:
                              break a;
                          }
                        }
                        if (n5 = (-1073741825 & e4) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & e4))
                          break r;
                      }
                    o7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                  }
                  return o7;
                }
                return f7;
              }
              function rX2(r10, e4, a6, i6) {
                var n5 = w8(0);
                n5 = p7[(e4 = (e4 << 2) + r10 | 0) >> 2], e4 = l4[e4 >> 2];
                r:
                  if (!((0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | n5 == n5)) {
                    if (n5 = p7[(e4 = (a6 << 2) + r10 | 0) >> 2], (0 | (e4 = l4[e4 >> 2])) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | n5 == n5 || (e4 = l4[r10 + 24 >> 2], n5 = p7[r10 + 24 >> 2], (0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | n5 == n5) || (n5 = p7[r10 + 32 >> 2], !((0 | (r10 = l4[r10 + 32 >> 2])) == 2139156720 | (0 | r10) == 2140081935 | (0 | r10) == 2141891242) && (e4 = i6, n5 != n5)))
                      break r;
                    e4 = r10;
                  }
                return e4;
              }
              function rO2(r10, e4, a6, i6, n5) {
                var f7 = 0, t4 = 0, b8 = w8(0), o7 = 0;
                f7 = 2, t4 = l4[r10 + 24 >> 2] >>> 2 & 3;
                r: {
                  e: {
                    a: {
                      if (!(!l4[r10 + 552 >> 2] | (0 | e4) != 2)) {
                        e4 = 0, f7 = 3;
                        i:
                          switch (t4 - 2 | 0) {
                            case 0:
                              break r;
                            case 1:
                              break i;
                            default:
                              break a;
                          }
                        f7 = 2;
                        break r;
                      }
                      if (e4 = 0, t4 >>> 0 > 1)
                        break e;
                    }
                    e4 = f7;
                  }
                  f7 = t4;
                }
                a6 = ey(r10, f7, a6), i6 = ey(r10, e4, i6), b8 = rP2(r10, f7, n5), p7[(t4 = r10 + 228 | 0) + (l4[(o7 = f7 << 2) + 4220 >> 2] << 2) >> 2] = a6 + b8, b8 = rS2(r10, f7, n5), p7[t4 + (l4[o7 + 4236 >> 2] << 2) >> 2] = a6 + b8, a6 = rP2(r10, e4, n5), p7[t4 + (l4[(f7 = e4 << 2) + 4220 >> 2] << 2) >> 2] = i6 + a6, a6 = rS2(r10, e4, n5), p7[t4 + (l4[f7 + 4236 >> 2] << 2) >> 2] = i6 + a6;
              }
              function rL2(r10) {
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0;
                if (r10 |= 0) {
                  if (e4 = l4[r10 >> 2], (a6 = l4[e4 + 552 >> 2]) && (rq2(a6, e4), l4[e4 + 552 >> 2] = 0), i6 = l4[e4 + 560 >> 2], a6 = l4[e4 + 556 >> 2], (0 | i6) != (0 | a6))
                    for (n5 = (i6 = i6 - a6 >> 2) >>> 0 <= 1 ? 1 : i6, i6 = 0; l4[l4[a6 + (i6 << 2) >> 2] + 552 >> 2] = 0, (0 | n5) != (0 | (i6 = i6 + 1 | 0)); )
                      ;
                  l4[e4 + 560 >> 2] = a6, r_2(e4 + 556 | 0), (a6 = l4[e4 + 556 >> 2]) && (l4[e4 + 560 >> 2] = a6, rE2(a6)), rE2(e4), e4 = l4[r10 + 8 >> 2], l4[r10 + 8 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4), e4 = l4[r10 + 4 >> 2], l4[r10 + 4 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4), rE2(r10);
                }
              }
              function r_2(r10) {
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0, f7 = 0;
                re3 = n5 = re3 - 32 | 0, e4 = l4[r10 >> 2], a6 = l4[r10 + 4 >> 2] - e4 >> 2;
                r:
                  if (!(a6 >>> 0 >= l4[r10 + 8 >> 2] - e4 >> 2 >>> 0)) {
                    if (a6 = en2(n5 + 8 | 0, a6, a6, r10 + 8 | 0), e4 = l4[r10 >> 2], i6 = l4[r10 + 4 >> 2] - e4 | 0, i6 = rm2(l4[a6 + 4 >> 2] - i6 | 0, e4, i6), e4 = l4[r10 >> 2], l4[r10 >> 2] = i6, l4[a6 + 4 >> 2] = e4, i6 = l4[r10 + 4 >> 2], l4[r10 + 4 >> 2] = l4[a6 + 8 >> 2], l4[a6 + 8 >> 2] = i6, f7 = l4[r10 + 8 >> 2], l4[r10 + 8 >> 2] = l4[a6 + 12 >> 2], l4[a6 >> 2] = e4, l4[a6 + 12 >> 2] = f7, (0 | e4) != (0 | i6) && (l4[a6 + 8 >> 2] = i6 + ((e4 - i6 | 0) + 3 & -4)), !e4)
                      break r;
                    rE2(e4);
                  }
                re3 = n5 + 32 | 0;
              }
              function rF2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0;
                if (!(32 & d6[0 | r10]))
                  r: {
                    i6 = e4, r10 = l4[(e4 = r10) + 16 >> 2];
                    e: {
                      if (!r10) {
                        if (ef(e4))
                          break e;
                        r10 = l4[e4 + 16 >> 2];
                      }
                      if (f7 = l4[e4 + 20 >> 2], r10 - f7 >>> 0 < a6 >>> 0) {
                        eY[l4[e4 + 36 >> 2]](e4, i6, a6);
                        break r;
                      }
                      a:
                        if (!(l4[e4 + 80 >> 2] < 0)) {
                          for (r10 = a6; ; ) {
                            if (n5 = r10, !r10)
                              break a;
                            if (10 == d6[i6 + (r10 = n5 - 1 | 0) | 0])
                              break;
                          }
                          if (eY[l4[e4 + 36 >> 2]](e4, i6, n5) >>> 0 < n5 >>> 0)
                            break e;
                          i6 = i6 + n5 | 0, a6 = a6 - n5 | 0, f7 = l4[e4 + 20 >> 2];
                        }
                      ru3(f7, i6, a6), l4[e4 + 20 >> 2] = l4[e4 + 20 >> 2] + a6;
                    }
                  }
              }
              function rC2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0;
                re3 = i6 = re3 - 16 | 0, n5 = r10 + 24 | 0, eY[0 | e4](i6 + 8 | 0, n5), f7 = l4[i6 + 12 >> 2];
                r:
                  if ((l4[l4[i6 + 8 >> 2] >> 2] & 7 << f7) >> f7 != (0 | a6))
                    for (eY[0 | e4](i6 + 8 | 0, n5), n5 = e4 = l4[i6 + 8 >> 2], f7 = l4[e4 >> 2], e4 = l4[i6 + 12 >> 2], l4[n5 >> 2] = f7 & (7 << e4 ^ -1) | (7 & a6) << e4; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
                re3 = i6 + 16 | 0;
              }
              function rS2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = 0;
                r10 = r10 + 44 | 0, b8 = l4[(e4 << 2) + 4236 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 5, b8, 2140081935);
                    break r;
                  }
                  r10 = rY2(r10, b8, 2140081935);
                }
                e: {
                  if ((0 | r10) != 2139156720) {
                    if ((0 | r10) == 2140081935 | (0 | r10) == 2141891242)
                      break e;
                    if (i6 = r10, t3[2] = i6, (f7 = u5()) != f7)
                      return w8(NaN);
                    if (n5 = (-1073741825 & r10) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & r10))
                      break e;
                  }
                  f7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                }
                return f7;
              }
              function rP2(r10, e4, a6) {
                var i6, n5, f7 = w8(0), b8 = 0;
                r10 = r10 + 44 | 0, b8 = l4[(e4 << 2) + 4220 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 4, b8, 2140081935);
                    break r;
                  }
                  r10 = rY2(r10, b8, 2140081935);
                }
                e: {
                  if ((0 | r10) != 2139156720) {
                    if ((0 | r10) == 2140081935 | (0 | r10) == 2141891242)
                      break e;
                    if (i6 = r10, t3[2] = i6, (f7 = u5()) != f7)
                      return w8(NaN);
                    if (n5 = (-1073741825 & r10) + 536870912 | 0, t3[2] = n5, f7 = u5(), !(1073741824 & r10))
                      break e;
                  }
                  f7 = w8(w8(f7 * a6) * w8(0.009999999776482582));
                }
                return f7;
              }
              function rY2(r10, e4, a6) {
                var i6 = w8(0);
                i6 = p7[(e4 = (e4 << 2) + r10 | 0) >> 2], e4 = l4[e4 >> 2];
                r:
                  if (!((0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | i6 == i6)) {
                    if (e4 = l4[r10 + 28 >> 2], i6 = p7[r10 + 28 >> 2], (0 | e4) == 2139156720 | (0 | e4) == 2140081935 | (0 | e4) == 2141891242 | i6 == i6 || (i6 = p7[r10 + 32 >> 2], !((0 | (r10 = l4[r10 + 32 >> 2])) == 2139156720 | (0 | r10) == 2140081935 | (0 | r10) == 2141891242) && (e4 = a6, i6 != i6)))
                      break r;
                    e4 = r10;
                  }
                return e4;
              }
              function rU2(r10, e4) {
                var a6, i6, n5 = w8(0), f7 = 0;
                r10 = r10 + 152 | 0, f7 = l4[(e4 << 2) + 4236 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 5, f7, 2140081935);
                    break r;
                  }
                  r10 = rY2(r10, f7, 2140081935);
                }
                n5 = w8(0);
                e:
                  if ((0 | r10) != 2139156720) {
                    if (n5 = w8(0), (0 | r10) == 2140081935)
                      break e;
                    a:
                      if ((0 | r10) != 2141891242 && (a6 = r10, t3[2] = a6, (n5 = u5()) == n5)) {
                        i6 = (-1073741825 & r10) + 536870912 | 0, t3[2] = i6, n5 = u5();
                        break e;
                      }
                    n5 = w8(NaN);
                  }
                return eu(n5, w8(0));
              }
              function rM2(r10, e4) {
                var a6, i6, n5 = w8(0), f7 = 0;
                r10 = r10 + 152 | 0, f7 = l4[(e4 << 2) + 4220 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 4, f7, 2140081935);
                    break r;
                  }
                  r10 = rY2(r10, f7, 2140081935);
                }
                n5 = w8(0);
                e:
                  if ((0 | r10) != 2139156720) {
                    if (n5 = w8(0), (0 | r10) == 2140081935)
                      break e;
                    a:
                      if ((0 | r10) != 2141891242 && (a6 = r10, t3[2] = a6, (n5 = u5()) == n5)) {
                        i6 = (-1073741825 & r10) + 536870912 | 0, t3[2] = i6, n5 = u5();
                        break e;
                      }
                    n5 = w8(NaN);
                  }
                return eu(n5, w8(0));
              }
              function rH2(r10, e4, a6, i6) {
                var n5 = 0, f7 = 0, t4 = 0;
                r10 *= e4, t4 = (n5 = (n5 = rl3(r10)) < 0 ? n5 + 1 : n5) != n5;
                r: {
                  if (!(!(1e-4 > y4(n5)) | t4)) {
                    r10 -= n5;
                    break r;
                  }
                  e: {
                    if (n5 != n5) {
                      r10 -= n5;
                      break e;
                    }
                    if (r10 -= n5, !(1e-4 > y4(n5 + -1)))
                      break e;
                    r10 += 1;
                    break r;
                  }
                  if (a6) {
                    r10 += 1;
                    break r;
                  }
                  if (i6)
                    break r;
                  f7 = 0;
                  a:
                    if (!t4) {
                      if (f7 = 1, n5 > 0.5)
                        break a;
                      f7 = 1e-4 > y4(n5 + -0.5) ? 1 : 0;
                    }
                  r10 += f7;
                }
                return r10 != r10 | e4 != e4 ? w8(NaN) : w8(r10 / e4);
              }
              function rQ2(r10) {
                var e4 = w8(0), a6 = 0, i6 = w8(0);
                a6 = 0;
                r:
                  if ((196608 & l4[r10 + 24 >> 2]) != 131072) {
                    e:
                      if (l4[r10 + 552 >> 2]) {
                        e4 = p7[r10 + 32 >> 2];
                        a:
                          if ((e4 == e4 || (e4 = p7[r10 + 28 >> 2]) > w8(0)) && (a6 = 1, e4 != w8(0)))
                            break r;
                        if ((e4 = p7[r10 + 36 >> 2]) == e4)
                          break e;
                        if (s4[r10 + 4 | 0] < 0) {
                          e4 = w8(1);
                          break e;
                        }
                        if (e4 = w8(0), !((i6 = p7[r10 + 28 >> 2]) < w8(0)))
                          break e;
                        e4 = w8(-i6);
                      }
                    a6 = e4 != w8(0);
                  }
                return a6;
              }
              function rz2(r10, e4) {
                var a6 = w8(0);
                r: {
                  if ((0 | e4) != 2139156720) {
                    if ((0 | e4) != 2140081935) {
                      if ((0 | e4) != 2141891242)
                        break r;
                      l4[r10 >> 2] = 2143289344, l4[r10 + 4 >> 2] = 3;
                      return;
                    }
                    l4[r10 >> 2] = 0, l4[r10 + 4 >> 2] = 1;
                    return;
                  }
                  l4[r10 >> 2] = 0, l4[r10 + 4 >> 2] = 2;
                  return;
                }
                if (t3[2] = e4, (a6 = u5()) != a6) {
                  l4[r10 >> 2] = 2143289344, l4[r10 + 4 >> 2] = 0;
                  return;
                }
                l4[r10 + 4 >> 2] = 1073741824 & e4 ? 2 : 1, l4[r10 >> 2] = (-1073741825 & e4) + 536870912;
              }
              function rj2(r10) {
                var e4 = 0, a6 = 0, i6 = 0;
                a6 = l4[r10 + 24 >> 2];
                r:
                  if (8 & a6) {
                    if (e4 = 1, (7168 & a6) == 5120 || (e4 = 0, i6 = l4[r10 + 560 >> 2], a6 = l4[r10 + 556 >> 2], (0 | i6) == (0 | a6)))
                      break r;
                    for (i6 = (r10 = i6 - a6 >> 2) >>> 0 <= 1 ? 1 : r10, r10 = 0; ; ) {
                      if (e4 = (196608 & (e4 = l4[l4[a6 + (r10 << 2) >> 2] + 24 >> 2])) != 131072 & (57344 & e4) == 40960)
                        break r;
                      if ((0 | i6) == (0 | (r10 = r10 + 1 | 0)))
                        break;
                    }
                  }
                return e4;
              }
              function rD2(r10) {
                var e4, a6 = 0, i6 = w8(0);
                a6 = 2143289344;
                r:
                  if (!(w8(y4(r10)) == w8(1 / 0) | r10 != r10 || (a6 = 2139156720, r10 < w8(10842021724855044e-35) & r10 > w8(-10842021724855044e-35) | r10 == w8(0)))) {
                    c5(r10), e4 = -2147483648 & t3[2] | 1602224127, t3[2] = e4, i6 = u5(), c5(r10 > w8(18446742974197924e3) ? i6 : r10 < w8(-18446742974197924e3) ? i6 : r10), a6 = t3[2] - 536870912 | 1073741824;
                  }
                return a6;
              }
              function rx2(r10) {
                var e4, a6 = 0, i6 = w8(0);
                a6 = 2143289344;
                r:
                  if (!(w8(y4(r10)) == w8(1 / 0) | r10 != r10 || (a6 = 2140081935, r10 < w8(10842021724855044e-35) & r10 > w8(-10842021724855044e-35) | r10 == w8(0)))) {
                    c5(r10), e4 = -2147483648 & t3[2] | 1610612735, t3[2] = e4, i6 = u5(), c5(r10 > w8(36893485948395848e3) ? i6 : r10 < w8(-36893485948395848e3) ? i6 : r10), a6 = t3[2] - 536870912 | 0;
                  }
                return a6;
              }
              function rJ2(r10, e4) {
                r: {
                  if (e4) {
                    e4 = ev(l4[e4 >> 2]);
                    break r;
                  }
                  e: {
                    if (d6[6936]) {
                      e4 = l4[1733];
                      break e;
                    }
                    A5[(e4 = eo2(28)) + 20 >> 1] = 0, l4[e4 + 16 >> 2] = 1065353216, A5[e4 + 10 >> 1] = 0, A5[e4 + 12 >> 1] = 0, l4[e4 >> 2] = 0, l4[e4 + 24 >> 2] = 0, s4[e4 + 9 | 0] = 0, l4[e4 + 4 >> 2] = 1, s4[e4 + 22 | 0] = 0, l4[1733] = e4, s4[6936] = 1, l4[1732] = l4[1732] + 1;
                  }
                  e4 = ev(e4);
                }
                return l4[r10 + 4 >> 2] = 0, l4[r10 + 8 >> 2] = 0, l4[r10 >> 2] = e4, l4[e4 >> 2] = r10, r10;
              }
              function rK2(r10, e4, a6) {
                var i6 = 0, n5 = 0, f7 = 0;
                r: {
                  if (!e4) {
                    i6 = r10;
                    break r;
                  }
                  for (; r10 = r9(i6 = rh2(r10, e4, 10), n5 = ra2, 246, 0) + r10 | 0, s4[0 | (a6 = a6 - 1 | 0)] = 48 | r10, f7 = e4 >>> 0 > 9, r10 = i6, e4 = n5, f7; )
                    ;
                }
                if (i6)
                  for (; a6 = a6 - 1 | 0, r10 = (i6 >>> 0) / 10 | 0, s4[0 | a6] = N6(r10, 246) + i6 | 48, e4 = i6 >>> 0 > 9, i6 = r10, e4; )
                    ;
                return a6;
              }
              function rq2(r10, e4) {
                var a6 = 0, i6 = 0;
                r: {
                  e:
                    if (a6 = l4[r10 + 556 >> 2], i6 = l4[r10 + 560 >> 2], (0 | a6) != (0 | i6)) {
                      for (; ; ) {
                        if (l4[a6 >> 2] == (0 | e4))
                          break e;
                        if ((0 | i6) == (0 | (a6 = a6 + 4 | 0)))
                          break;
                      }
                      break r;
                    }
                  if ((0 | a6) == (0 | i6))
                    break r;
                  return e4 = a6 + 4 | 0, rm2(a6, e4, i6 - e4 | 0), l4[r10 + 560 >> 2] = i6 - 4, 1;
                }
                return 0;
              }
              function r$2(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 184 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 184 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r02(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 192 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 192 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r23(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 176 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 176 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r1(r10, e4) {
                var a6 = 0, i6 = 0, n5 = 0;
                r:
                  if (l4[(a6 = r10 + 24 | 0) + 16 >> 2] != (0 | e4))
                    for (i6 = 0 | eY[9](a6), n5 = e4, l4[i6 + 16 >> 2] = n5; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r42(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 56 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 56 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r32(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 92 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 92 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r8(r10, e4, a6) {
                var i6 = 0;
                r:
                  if (l4[((i6 = r10 + 24 | 0) + (e4 << 2) | 0) + 20 >> 2] != (0 | a6))
                    for (l4[((e4 << 2) + i6 | 0) + 20 >> 2] = a6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }
              function r62(r10, e4) {
                var a6, i6 = 0, n5 = w8(0);
                r10 = r10 + 80 | 0, i6 = l4[(e4 << 2) + 4236 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 5, i6, 2143289344);
                    break r;
                  }
                  r10 = rY2(r10, i6, 2143289344);
                }
                return (0 | r10) == 2139156720 | (0 | r10) == 2140081935 | (0 | r10) == 2141891242 ? r10 = 1 : (a6 = r10, t3[2] = a6, r10 = (n5 = u5()) == n5), r10;
              }
              function r52(r10, e4) {
                var a6, i6 = 0, n5 = w8(0);
                r10 = r10 + 80 | 0, i6 = l4[(e4 << 2) + 4220 >> 2];
                r: {
                  if ((-2 & e4) == 2) {
                    r10 = rX2(r10, 4, i6, 2143289344);
                    break r;
                  }
                  r10 = rY2(r10, i6, 2143289344);
                }
                return (0 | r10) == 2139156720 | (0 | r10) == 2140081935 | (0 | r10) == 2141891242 ? r10 = 1 : (a6 = r10, t3[2] = a6, r10 = (n5 = u5()) == n5), r10;
              }
              function r9(r10, e4, a6, i6) {
                var n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = 0, k8 = 0;
                return k8 = N6(n5 = a6 >>> 16 | 0, f7 = r10 >>> 16 | 0), n5 = (65535 & (f7 = ((o7 = N6(t4 = 65535 & a6, b8 = 65535 & r10)) >>> 16 | 0) + N6(f7, t4) | 0)) + N6(n5, b8) | 0, ra2 = (N6(e4, a6) + k8 | 0) + N6(r10, i6) + (f7 >>> 16) + (n5 >>> 16) | 0, 65535 & o7 | n5 << 16;
              }
              function r72(r10, e4) {
                var a6 = 0, i6 = 0, n5 = 0;
                re3 = i6 = re3 - 16 | 0, n5 = -17 & (a6 = d6[r10 + 4 | 0]), s4[r10 + 4 | 0] = n5;
                r: {
                  if (e4) {
                    if (l4[r10 + 560 >> 2] != l4[r10 + 556 >> 2])
                      break r;
                    a6 = 8 | n5;
                  } else
                    a6 &= 231;
                  l4[r10 + 8 >> 2] = e4, s4[r10 + 4 | 0] = a6, re3 = i6 + 16 | 0;
                  return;
                }
                l4[i6 >> 2] = 4059, rB2(r10, i6), eX(), k7();
              }
              function er(r10, e4, a6, i6, n5) {
                var f7 = 0;
                if (re3 = f7 = re3 - 256 | 0, !(73728 & n5 | (0 | a6) <= (0 | i6))) {
                  if (ry2(f7, 255 & e4, (a6 = (i6 = a6 - i6 | 0) >>> 0 < 256) ? i6 : 256), !a6)
                    for (; rF2(r10, f7, 256), (i6 = i6 - 256 | 0) >>> 0 > 255; )
                      ;
                  rF2(r10, f7, i6);
                }
                re3 = f7 + 256 | 0;
              }
              function ee2(r10, e4, a6) {
                var i6 = 0, n5 = w8(0);
                r:
                  ((-2 & a6) != 2 || (n5 = p7[(i6 = e4 - -64 | 0) >> 2], !((0 | (i6 = l4[i6 >> 2])) == 2139156720 | (0 | i6) == 2140081935 | (0 | i6) == 2141891242 | n5 == n5))) && (i6 = l4[((l4[(a6 << 2) + 4236 >> 2] << 2) + e4 | 0) + 44 >> 2]);
                rz2(r10, i6);
              }
              function ea(r10, e4, a6) {
                var i6 = 0, n5 = w8(0);
                r:
                  ((-2 & a6) != 2 || (i6 = l4[e4 + 60 >> 2], n5 = p7[e4 + 60 >> 2], !((0 | i6) == 2139156720 | (0 | i6) == 2140081935 | (0 | i6) == 2141891242 | n5 == n5))) && (i6 = l4[((l4[(a6 << 2) + 4220 >> 2] << 2) + e4 | 0) + 44 >> 2]);
                rz2(r10, i6);
              }
              function ei(r10) {
                var e4 = 0, a6 = 0, i6 = 0;
                for (i6 = l4[r10 >> 2]; ; ) {
                  if (eO(a6 = s4[0 | i6])) {
                    i6 = i6 + 1 | 0, l4[r10 >> 2] = i6, e4 = e4 >>> 0 <= 214748364 ? (0 | (a6 = a6 - 48 | 0)) > (2147483647 ^ (e4 = N6(e4, 10))) ? -1 : a6 + e4 | 0 : -1;
                    continue;
                  }
                  break;
                }
                return e4;
              }
              function en2(r10, e4, a6, i6) {
                var n5 = 0;
                l4[r10 + 12 >> 2] = 0, l4[r10 + 16 >> 2] = i6;
                r: {
                  if (e4) {
                    if (e4 >>> 0 >= 1073741824)
                      break r;
                    n5 = eo2(e4 << 2);
                  }
                  return l4[r10 >> 2] = n5, a6 = (a6 << 2) + n5 | 0, l4[r10 + 8 >> 2] = a6, l4[r10 + 12 >> 2] = (e4 << 2) + n5, l4[r10 + 4 >> 2] = a6, r10;
                }
                eP(), k7();
              }
              function ef(r10) {
                var e4 = 0;
                return (e4 = l4[r10 + 72 >> 2], l4[r10 + 72 >> 2] = e4 - 1 | e4, 8 & (e4 = l4[r10 >> 2])) ? (l4[r10 >> 2] = 32 | e4, -1) : (l4[r10 + 4 >> 2] = 0, l4[r10 + 8 >> 2] = 0, e4 = l4[r10 + 44 >> 2], l4[r10 + 28 >> 2] = e4, l4[r10 + 20 >> 2] = e4, l4[r10 + 16 >> 2] = e4 + l4[r10 + 48 >> 2], 0);
              }
              function et3(r10, e4, a6, i6) {
                r10 |= 0, e4 |= 0, a6 |= 0, i6 |= 0;
                var n5 = 0;
                n5 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (n5 = l4[n5 + l4[e4 >> 2] >> 2]), eY[0 | n5](e4, a6, i6);
              }
              function eb(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0;
                return i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), 0 | eY[0 | i6](e4, a6);
              }
              function eo2(r10) {
                var e4 = 0;
                r10 = r10 || 1;
                r: {
                  for (; ; ) {
                    if (e4 = rb2(r10))
                      break r;
                    if (e4 = l4[2022]) {
                      eY[0 | e4]();
                      continue;
                    }
                    break;
                  }
                  T5(), k7();
                }
                return e4;
              }
              function ek(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0;
                i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), eY[0 | i6](e4, a6);
              }
              function ec2(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                return a6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (a6 = l4[a6 + l4[e4 >> 2] >> 2]), 0 | eY[0 | a6](e4);
              }
              function eu(r10, e4) {
                return (c5(r10), (2147483647 & t3[2]) >>> 0 <= 2139095040) ? (c5(e4), (2147483647 & t3[2]) >>> 0 > 2139095040) ? r10 : w8(R6(r10, e4)) : e4;
              }
              function es2(r10, e4) {
                return (c5(r10), (2147483647 & t3[2]) >>> 0 <= 2139095040) ? (c5(e4), (2147483647 & t3[2]) >>> 0 > 2139095040) ? r10 : w8(G3(r10, e4)) : e4;
              }
              function eA(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                return re3 = a6 = re3 - 16 | 0, l4[a6 + 8 >> 2] = e4, r10 = 0 | eY[0 | r10](a6 + 8 | 0), I5(l4[a6 + 8 >> 2]), re3 = a6 + 16 | 0, 0 | r10;
              }
              function el2(r10, e4) {
                if (!r10)
                  return 0;
                r: {
                  if (!((-128 & e4) == 57216 | e4 >>> 0 <= 127)) {
                    l4[1761] = 25, r10 = -1;
                    break r;
                  }
                  s4[0 | r10] = e4, r10 = 1;
                }
                return r10;
              }
              function ed(r10, e4) {
                var a6 = 0, i6 = 0;
                l4[(a6 = eo2(4)) >> 2] = e4, l4[(i6 = eo2(4)) >> 2] = e4, X3(6955, 0 | r10, 7018, 4630, 192, 0 | a6, 7018, 4634, 193, 0 | i6);
              }
              function eh(r10, e4) {
                var a6 = 0, i6 = 0;
                l4[(a6 = eo2(4)) >> 2] = e4, l4[(i6 = eo2(4)) >> 2] = e4, X3(6985, 0 | r10, 7018, 4630, 190, 0 | a6, 7018, 4634, 191, 0 | i6);
              }
              function ev(r10) {
                var e4 = 0, a6 = 0;
                return re3 = e4 = re3 - 16 | 0, a6 = rk2(eo2(588), r10), r10 || (l4[e4 >> 2] = 2759, rB2(0, e4), eX(), k7()), re3 = e4 + 16 | 0, a6;
              }
              function ep(r10, e4) {
                var a6 = 0;
                r: {
                  if (1 & s4[6964]) {
                    a6 = l4[1740];
                    break r;
                  }
                  a6 = 0 | F4(1, 4400), s4[6964] = 1, l4[1740] = a6;
                }
                Q3(0 | a6, 0 | r10, 0 | e4, 0);
              }
              function em(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                a6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (a6 = l4[a6 + l4[e4 >> 2] >> 2]), eY[0 | a6](e4);
              }
              function eN(r10) {
                return l4[(r10 |= 0) >> 2] = 4508, d6[r10 + 4 | 0] && ep(l4[r10 + 8 >> 2], 1758), I5(l4[r10 + 8 >> 2]), 0 | r10;
              }
              function ew(r10) {
                return l4[(r10 |= 0) >> 2] = 4388, d6[r10 + 4 | 0] && ep(l4[r10 + 8 >> 2], 1758), I5(l4[r10 + 8 >> 2]), 0 | r10;
              }
              function ey(r10, e4, a6) {
                return r52(r10, e4) ? rI2(r10, e4, a6) : ((a6 = rT2(r10, e4, a6)) == a6 && (a6 = w8(-a6)), a6);
              }
              function eE(r10) {
                var e4 = 0;
                (r10 |= 0) && ((e4 = l4[r10 >> 2]) && rE2(e4), l4[1732] = l4[1732] - 1, rE2(r10));
              }
              function eG(r10, e4, a6) {
                e4 |= 0, a6 = +a6, m5[l4[(r10 |= 0) >> 2] + e4 >> 3] = a6;
              }
              function eR(r10, e4) {
                return e4 |= 0, +m5[l4[(r10 |= 0) >> 2] + e4 >> 3];
              }
              function eg(r10) {
                (r10 |= 0) && eY[l4[l4[r10 >> 2] + 4 >> 2]](r10);
              }
              function eZ(r10) {
                return r10 ? (l4[1761] = r10, -1) : 0;
              }
              function eW(r10, e4, a6) {
                return w8(rP2(r10, e4, a6) + rS2(r10, e4, a6));
              }
              function eV(r10, e4, a6, i6) {
                j6(0 | r10, 0 | e4, 8, 0, 0 | a6, -1, 0 | i6);
              }
              function eB(r10, e4) {
                e4 |= 0, eY[l4[(r10 |= 0) >> 2]](e4);
              }
              function eT(r10) {
                return 0 | eY[0 | (r10 |= 0)]();
              }
              function eI(r10, e4) {
                e4 |= 0, eY[0 | (r10 |= 0)](e4);
              }
              function eX() {
                eY[l4[1470]](), eP(), k7();
              }
              function eO(r10) {
                return r10 - 48 >>> 0 < 10;
              }
              function eL(r10) {
                (r10 |= 0) && rE2(r10);
              }
              function e_(r10) {
                return 0 | (r10 |= 0);
              }
              function eF(r10) {
                s4[(r10 |= 0) + 4 | 0] = 1;
              }
              function eC(r10) {
                k7();
              }
              function eS() {
                eP(), k7();
              }
              function eP() {
                T5(), k7();
              }
              n4(e3 = d6, 1024, "T25seSBsZWFmIG5vZGVzIHdpdGggY3VzdG9tIG1lYXN1cmUgZnVuY3Rpb25zc2hvdWxkIG1hbnVhbGx5IG1hcmsgdGhlbXNlbHZlcyBhcyBkaXJ0eQBpc0RpcnR5AG1hcmtEaXJ0eQBkZXN0cm95AHNldERpc3BsYXkAZ2V0RGlzcGxheQBzZXRGbGV4AC0rICAgMFgweAAtMFgrMFggMFgtMHgrMHggMHgAc2V0RmxleEdyb3cAZ2V0RmxleEdyb3cAc2V0T3ZlcmZsb3cAZ2V0T3ZlcmZsb3cAY2FsY3VsYXRlTGF5b3V0AGdldENvbXB1dGVkTGF5b3V0AHVuc2lnbmVkIHNob3J0AGdldENoaWxkQ291bnQAdW5zaWduZWQgaW50AHNldEp1c3RpZnlDb250ZW50AGdldEp1c3RpZnlDb250ZW50AHNldEFsaWduQ29udGVudABnZXRBbGlnbkNvbnRlbnQAZ2V0UGFyZW50AGltcGxlbWVudABzZXRNYXhIZWlnaHRQZXJjZW50AHNldEhlaWdodFBlcmNlbnQAc2V0TWluSGVpZ2h0UGVyY2VudABzZXRGbGV4QmFzaXNQZXJjZW50AHNldFBvc2l0aW9uUGVyY2VudABzZXRNYXJnaW5QZXJjZW50AHNldE1heFdpZHRoUGVyY2VudABzZXRXaWR0aFBlcmNlbnQAc2V0TWluV2lkdGhQZXJjZW50AHNldFBhZGRpbmdQZXJjZW50AGNyZWF0ZURlZmF1bHQAdW5pdAByaWdodABoZWlnaHQAc2V0TWF4SGVpZ2h0AGdldE1heEhlaWdodABzZXRIZWlnaHQAZ2V0SGVpZ2h0AHNldE1pbkhlaWdodABnZXRNaW5IZWlnaHQAZ2V0Q29tcHV0ZWRIZWlnaHQAZ2V0Q29tcHV0ZWRSaWdodABsZWZ0AGdldENvbXB1dGVkTGVmdAByZXNldABfX2Rlc3RydWN0AGZsb2F0AHVpbnQ2NF90AHVzZVdlYkRlZmF1bHRzAHNldFVzZVdlYkRlZmF1bHRzAHNldEFsaWduSXRlbXMAZ2V0QWxpZ25JdGVtcwBzZXRGbGV4QmFzaXMAZ2V0RmxleEJhc2lzAENhbm5vdCBnZXQgbGF5b3V0IHByb3BlcnRpZXMgb2YgbXVsdGktZWRnZSBzaG9ydGhhbmRzAHVzZUxlZ2FjeVN0cmV0Y2hCZWhhdmlvdXIAc2V0VXNlTGVnYWN5U3RyZXRjaEJlaGF2aW91cgBzZXRQb2ludFNjYWxlRmFjdG9yAE1lYXN1cmVDYWxsYmFja1dyYXBwZXIARGlydGllZENhbGxiYWNrV3JhcHBlcgBDYW5ub3QgcmVzZXQgYSBub2RlIHN0aWxsIGF0dGFjaGVkIHRvIGEgb3duZXIAc2V0Qm9yZGVyAGdldEJvcmRlcgBnZXRDb21wdXRlZEJvcmRlcgB1bnNpZ25lZCBjaGFyAHRvcABnZXRDb21wdXRlZFRvcABzZXRGbGV4V3JhcABnZXRGbGV4V3JhcABzZXRHYXAAZ2V0R2FwACVwAHNldEhlaWdodEF1dG8Ac2V0RmxleEJhc2lzQXV0bwBzZXRNYXJnaW5BdXRvAHNldFdpZHRoQXV0bwBTY2FsZSBmYWN0b3Igc2hvdWxkIG5vdCBiZSBsZXNzIHRoYW4gemVybwBzZXRBc3BlY3RSYXRpbwBnZXRBc3BlY3RSYXRpbwBzZXRQb3NpdGlvbgBnZXRQb3NpdGlvbgBub3RpZnlPbkRlc3RydWN0aW9uAHNldEZsZXhEaXJlY3Rpb24AZ2V0RmxleERpcmVjdGlvbgBzZXRNYXJnaW4AZ2V0TWFyZ2luAGdldENvbXB1dGVkTWFyZ2luAG5hbgBib3R0b20AZ2V0Q29tcHV0ZWRCb3R0b20AYm9vbABlbXNjcmlwdGVuOjp2YWwAc2V0RmxleFNocmluawBnZXRGbGV4U2hyaW5rAE1lYXN1cmVDYWxsYmFjawBEaXJ0aWVkQ2FsbGJhY2sAd2lkdGgAc2V0TWF4V2lkdGgAZ2V0TWF4V2lkdGgAc2V0V2lkdGgAZ2V0V2lkdGgAc2V0TWluV2lkdGgAZ2V0TWluV2lkdGgAZ2V0Q29tcHV0ZWRXaWR0aAB1bnNpZ25lZCBsb25nAHN0ZDo6d3N0cmluZwBzdGQ6OnN0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwBzZXRQYWRkaW5nAGdldFBhZGRpbmcAZ2V0Q29tcHV0ZWRQYWRkaW5nAFRyaWVkIHRvIGNvbnN0cnVjdCBZR05vZGUgd2l0aCBudWxsIGNvbmZpZwBjcmVhdGVXaXRoQ29uZmlnAGluZgBzZXRBbGlnblNlbGYAZ2V0QWxpZ25TZWxmAFNpemUAdmFsdWUAVmFsdWUAY3JlYXRlAG1lYXN1cmUAc2V0UG9zaXRpb25UeXBlAGdldFBvc2l0aW9uVHlwZQBpc1JlZmVyZW5jZUJhc2VsaW5lAHNldElzUmVmZXJlbmNlQmFzZWxpbmUAY29weVN0eWxlAGRvdWJsZQBOb2RlAGV4dGVuZABpbnNlcnRDaGlsZABnZXRDaGlsZAByZW1vdmVDaGlsZAB2b2lkAGF2YWlsYWJsZUhlaWdodCBpcyBpbmRlZmluaXRlIHNvIGhlaWdodE1lYXN1cmVNb2RlIG11c3QgYmUgWUdNZWFzdXJlTW9kZVVuZGVmaW5lZABhdmFpbGFibGVXaWR0aCBpcyBpbmRlZmluaXRlIHNvIHdpZHRoTWVhc3VyZU1vZGUgbXVzdCBiZSBZR01lYXN1cmVNb2RlVW5kZWZpbmVkAHNldEV4cGVyaW1lbnRhbEZlYXR1cmVFbmFibGVkAGlzRXhwZXJpbWVudGFsRmVhdHVyZUVuYWJsZWQAZGlydGllZABDYW5ub3QgcmVzZXQgYSBub2RlIHdoaWNoIHN0aWxsIGhhcyBjaGlsZHJlbiBhdHRhY2hlZAB1bnNldE1lYXN1cmVGdW5jAHVuc2V0RGlydGllZEZ1bmMARXhwZWN0IGN1c3RvbSBiYXNlbGluZSBmdW5jdGlvbiB0byBub3QgcmV0dXJuIE5hTgBOQU4ASU5GAGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGZsb2F0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQxNl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MzJfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8Y2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgY2hhcj4Ac3RkOjpiYXNpY19zdHJpbmc8dW5zaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2lnbmVkIGNoYXI+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGxvbmc+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGRvdWJsZT4AQ2hpbGQgYWxyZWFkeSBoYXMgYSBvd25lciwgaXQgbXVzdCBiZSByZW1vdmVkIGZpcnN0LgBDYW5ub3Qgc2V0IG1lYXN1cmUgZnVuY3Rpb246IE5vZGVzIHdpdGggbWVhc3VyZSBmdW5jdGlvbnMgY2Fubm90IGhhdmUgY2hpbGRyZW4uAENhbm5vdCBhZGQgY2hpbGQ6IE5vZGVzIHdpdGggbWVhc3VyZSBmdW5jdGlvbnMgY2Fubm90IGhhdmUgY2hpbGRyZW4uAChudWxsKQAlcwoAAAEAAAADAAAAAAAAAAIAAAADAAAAAQAAAAIAAAAAAAAAAQAAAAE="), n4(e3, 4270, "wH8AAAAAAADAfwMAAABpaQB2AHZp"), n4(e3, 4304, "KxsAACkbAABpGwAAYxsAAGkbAABjGwAAaWlpZmlmaQBcGwAALBsAAHZpaQAtGwAAcBsAAGlpaQ=="), n4(e3, 4368, "wwAAAMQAAADF"), n4(e3, 4388, "wwAAAMYAAADHAAAAXBs="), n4(e3, 4416, "KxsAAGkbAABjGwAAaRsAAGMbAABwGwAAaxsAAHAbAABpaWlpAAAAAFwbAABBGwAAXBsAAEMbAABEGwAAcBs="), n4(e3, 4488, "yAAAAMkAAADK"), n4(e3, 4508, "yAAAAMsAAADHAAAARxsAAFwbAABHGw=="), n4(e3, 4544, "XBsAAEcbAABjGwAAXRsAAHZpaWlpAAAAXBsAAEcbAABpGwAAdmlpZgAAAABcGwAARxsAAF0bAAB2aWlpAAAAAF0bAABIGwAAYxsAAF0bAABHGwAAaQBkaWkAdmlpZAAATBsAAEwbAABHGwAAXBsAAEwbAABcGwAATBsAAEsbAABcGwAATBsAAGMbAAAAAAAAXBsAAEwbAABjGwAAahsAAHZpaWlkAAAAXBsAAEwbAABqGwAAYxsAAE0bAABKGwAATRsAAGMbAABKGwAATRsAAGobAABNGwAAahsAAE0bAABjGwAAZGlpaQAAAABpGwAATBsAAGMbAABmaWlpAAAAAFwbAABMGwAATBsAAGQbAABcGwAATBsAAEwbAABkGwAATRsAAEwbAABMGwAATBsAAEwbAABkGwAAXRsAAEwbAABcGwAATBsAAF0bAABcGwAATBsAACkbAABcGwAATBsAAEEbAABdGwAATRsAAAAAAABcGwAATBsAAGobAABqGwAAYxsAAHZpaWRkaQAASRsAAE0b"), n4(e3, 4960, "GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="), n4(e3, 5041, "DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"), n4(e3, 5099, "DA=="), n4(e3, 5111, "EwAAAAATAAAAAAkMAAAAAAAMAAAM"), n4(e3, 5157, "EA=="), n4(e3, 5169, "DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"), n4(e3, 5215, "Eg=="), n4(e3, 5227, "EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"), n4(e3, 5282, "GgAAABoaGgAAAAAAAAk="), n4(e3, 5331, "FA=="), n4(e3, 5343, "FwAAAAAXAAAAAAkUAAAAAAAUAAAU"), n4(e3, 5389, "Fg=="), n4(e3, 5401, "FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"), n4(e3, 5476, "0Q=="), n4(e3, 5516, "//////////8="), n4(e3, 5584, "oB8BAAAAAAAF"), n4(e3, 5604, "zA=="), n4(e3, 5628, "zQAAAM4AAACEGw=="), n4(e3, 5652, "Ag=="), n4(e3, 5668, "//////////8="), n4(e3, 5736, "BQ=="), n4(e3, 5748, "zw=="), n4(e3, 5772, "zQAAANAAAACYGwAAAAQ="), n4(e3, 5796, "AQ=="), n4(e3, 5812, "/////wo="), n4(e3, 5880, "0g==");
              var eY = ((a5 = [null, function(r10, e4, a6, i6, n5) {
                var f7, t4, b8, o7, k8, c6;
                return (i6 |= 0, n5 |= 0, (a6 |= 0) ? (0 | a6) != 5 : 0) ? 0 | rG2(f7 = 5736, t4 = i6, b8 = n5, 2, 3) : 0 | rG2(o7 = 5592, k8 = i6, c6 = n5, 2, 3);
              }, function(r10, e4, a6, i6, n5, f7) {
                r10 |= 0, e4 = +e4, a6 |= 0, i6 |= 0, n5 |= 0, f7 |= 0;
                var b8, k8, c6 = 0, u6 = 0, A6 = 0, h4 = 0, v6 = 0, p8 = 0, m6 = 0, w9 = 0, E4 = 0, G4 = 0, R7 = 0, g6 = 0, Z4 = 0, W4 = 0, V5 = 0, B4 = 0, T6 = 0, I6 = 0, X4 = 0;
                re3 = m6 = re3 - 560 | 0, l4[m6 + 44 >> 2] = 0, b8 = +e4, o6[0] = b8, c6 = 0 | t3[1], t3[0];
                r: {
                  if ((0 | c6) < 0) {
                    Z4 = 1, I6 = 1176, k8 = +(e4 = -e4), o6[0] = k8, c6 = 0 | t3[1], t3[0];
                    break r;
                  }
                  if (2048 & n5) {
                    Z4 = 1, I6 = 1179;
                    break r;
                  }
                  I6 = (Z4 = 1 & n5) ? 1182 : 1177, X4 = !Z4;
                }
                e: {
                  if ((2146435072 & c6) == 2146435072) {
                    er(r10, 32, a6, c6 = Z4 + 3 | 0, -65537 & n5), rF2(r10, I6, Z4), i6 = 32 & f7, rF2(r10, e4 != e4 ? i6 ? 2450 : 3390 : i6 ? 2819 : 3394, 3), er(r10, 32, a6, c6, 8192 ^ n5), w9 = (0 | a6) < (0 | c6) ? c6 : a6;
                    break e;
                  }
                  V5 = m6 + 16 | 0;
                  a: {
                    i: {
                      n: {
                        if (e4 = function r11(e5, a7) {
                          var i7, n6, f8, b9 = 0, k9 = 0, c7 = 0;
                          if (i7 = +e5, o6[0] = i7, k9 = 0 | t3[1], c7 = 0 | t3[0], (0 | (b9 = k9 >>> 20 & 2047)) != 2047) {
                            if (!b9)
                              return 0 == e5 ? b9 = 0 : (e5 = r11(18446744073709552e3 * e5, a7), b9 = l4[a7 >> 2] + -64 | 0), l4[a7 >> 2] = b9, e5;
                            l4[a7 >> 2] = b9 - 1022, n6 = 0 | c7, t3[0] = n6, f8 = -2146435073 & k9 | 1071644672, t3[1] = f8, e5 = +o6[0];
                          }
                          return e5;
                        }(e4, m6 + 44 | 0), 0 != (e4 += e4)) {
                          if (c6 = l4[m6 + 44 >> 2], l4[m6 + 44 >> 2] = c6 - 1, (0 | (B4 = 32 | f7)) != 97)
                            break n;
                          break a;
                        }
                        if ((0 | (B4 = 32 | f7)) == 97)
                          break a;
                        v6 = l4[m6 + 44 >> 2], p8 = (0 | i6) < 0 ? 6 : i6;
                        break i;
                      }
                      v6 = c6 - 29 | 0, l4[m6 + 44 >> 2] = v6, e4 *= 268435456, p8 = (0 | i6) < 0 ? 6 : i6;
                    }
                    for (u6 = R7 = (m6 + 48 | 0) + ((0 | v6) >= 0 ? 288 : 0) | 0; i6 = e4 < 4294967296 & e4 >= 0 ? ~~e4 >>> 0 : 0, l4[u6 >> 2] = i6, u6 = u6 + 4 | 0, 0 != (e4 = (e4 - +(i6 >>> 0)) * 1e9); )
                      ;
                    f: {
                      if ((0 | v6) <= 0) {
                        i6 = v6, c6 = u6, A6 = R7;
                        break f;
                      }
                      for (A6 = R7, i6 = v6; ; ) {
                        E4 = (0 | i6) >= 29 ? 29 : i6, c6 = u6 - 4 | 0;
                        t:
                          if (!(A6 >>> 0 > c6 >>> 0)) {
                            for (i6 = 0; h4 = l4[c6 >> 2], T6 = i6, i6 = 31 & E4, (63 & E4) >>> 0 >= 32 ? (w9 = h4 << i6, i6 = 0) : (w9 = (1 << i6) - 1 & h4 >>> 32 - i6, i6 = h4 << i6), T6 = T6 + i6 | 0, h4 = w9 + G4 | 0, h4 = r9(i6 = rh2(T6, i6 >>> 0 > T6 >>> 0 ? h4 + 1 | 0 : h4, 1e9), ra2, -1e9, 0) + T6 | 0, l4[c6 >> 2] = h4, A6 >>> 0 <= (c6 = c6 - 4 | 0) >>> 0; )
                              ;
                            if (!i6)
                              break t;
                            l4[(A6 = A6 - 4 | 0) >> 2] = i6;
                          }
                        for (; c6 = u6, A6 >>> 0 < c6 >>> 0 && !l4[(u6 = c6 - 4 | 0) >> 2]; )
                          ;
                        if (i6 = l4[m6 + 44 >> 2] - E4 | 0, l4[m6 + 44 >> 2] = i6, u6 = c6, !((0 | i6) > 0))
                          break;
                      }
                    }
                    if ((0 | i6) < 0)
                      for (W4 = ((p8 + 25 >>> 0) / 9 | 0) + 1 | 0, G4 = (0 | B4) == 102; ; ) {
                        w9 = (0 | (i6 = 0 - i6 | 0)) >= 9 ? 9 : i6;
                        b: {
                          if (c6 >>> 0 <= A6 >>> 0) {
                            u6 = l4[A6 >> 2];
                            break b;
                          }
                          for (E4 = 1e9 >>> w9 | 0, h4 = -1 << w9 ^ -1, i6 = 0, u6 = A6; T6 = i6, i6 = l4[u6 >> 2], l4[u6 >> 2] = T6 + (i6 >>> w9 | 0), i6 = N6(E4, i6 & h4), (u6 = u6 + 4 | 0) >>> 0 < c6 >>> 0; )
                            ;
                          if (u6 = l4[A6 >> 2], !i6)
                            break b;
                          l4[c6 >> 2] = i6, c6 = c6 + 4 | 0;
                        }
                        if (i6 = w9 + l4[m6 + 44 >> 2] | 0, l4[m6 + 44 >> 2] = i6, A6 = (!u6 << 2) + A6 | 0, u6 = G4 ? R7 : A6, c6 = c6 - u6 >> 2 > (0 | W4) ? u6 + (W4 << 2) | 0 : c6, !((0 | i6) < 0))
                          break;
                      }
                    i6 = 0;
                    o:
                      if (!(c6 >>> 0 <= A6 >>> 0)) {
                        if (i6 = N6(R7 - A6 >> 2, 9), u6 = 10, (h4 = l4[A6 >> 2]) >>> 0 < 10)
                          break o;
                        for (; i6 = i6 + 1 | 0, u6 = N6(u6, 10), h4 >>> 0 >= u6 >>> 0; )
                          ;
                      }
                    if ((0 | (u6 = (p8 - ((0 | B4) != 102 ? i6 : 0) | 0) - ((0 | B4) == 103 & (0 | p8) != 0) | 0)) < (N6(c6 - R7 >> 2, 9) - 9 | 0)) {
                      if (h4 = (0 | (E4 = u6 + 9216 | 0)) / 9 | 0, v6 = ((((0 | v6) < 0 ? 4 : 292) + m6 | 0) + (h4 << 2) | 0) - 4048 | 0, u6 = 10, (0 | (w9 = E4 + N6(h4, -9) | 0)) <= 7)
                        for (; u6 = N6(u6, 10), (0 | (w9 = w9 + 1 | 0)) != 8; )
                          ;
                      W4 = ((E4 = l4[v6 >> 2]) >>> 0) / (u6 >>> 0) | 0, G4 = N6(W4, u6), h4 = v6 + 4 | 0;
                      k:
                        if (!((0 | E4) == (0 | G4) & (0 | h4) == (0 | c6))) {
                          E4 = E4 - G4 | 0;
                          c:
                            (1 & W4 || (e4 = 9007199254740992, !(!(1 & s4[v6 - 4 | 0]) | ((0 | u6) != 1e9 | A6 >>> 0 >= v6 >>> 0)))) && (e4 = 9007199254740994);
                          if (g6 = (0 | c6) == (0 | h4) ? 1 : 1.5, g6 = (h4 = u6 >>> 1 | 0) >>> 0 > E4 >>> 0 ? 0.5 : (0 | h4) == (0 | E4) ? g6 : 1.5, 45 != d6[0 | I6] | X4 || (g6 = -g6, e4 = -e4), l4[v6 >> 2] = G4, e4 + g6 == e4)
                            break k;
                          if (i6 = u6 + G4 | 0, l4[v6 >> 2] = i6, i6 >>> 0 >= 1e9)
                            for (; l4[v6 >> 2] = 0, (v6 = v6 - 4 | 0) >>> 0 < A6 >>> 0 && (l4[(A6 = A6 - 4 | 0) >> 2] = 0), i6 = l4[v6 >> 2] + 1 | 0, l4[v6 >> 2] = i6, i6 >>> 0 > 999999999; )
                              ;
                          if (i6 = N6(R7 - A6 >> 2, 9), u6 = 10, (h4 = l4[A6 >> 2]) >>> 0 < 10)
                            break k;
                          for (; i6 = i6 + 1 | 0, u6 = N6(u6, 10), h4 >>> 0 >= u6 >>> 0; )
                            ;
                        }
                      c6 = c6 >>> 0 > (u6 = v6 + 4 | 0) >>> 0 ? u6 : c6;
                    }
                    for (; h4 = c6, !(E4 = c6 >>> 0 <= A6 >>> 0) && !l4[(c6 = h4 - 4 | 0) >> 2]; )
                      ;
                    u: {
                      if ((0 | B4) != 103) {
                        v6 = 8 & n5;
                        break u;
                      }
                      if (p8 = ((c6 = (0 | (u6 = p8 || 1)) > (0 | i6) & (0 | i6) > -5) ? -1 ^ i6 : -1) + u6 | 0, f7 = (c6 ? -1 : -2) + f7 | 0, v6 = 8 & n5)
                        break u;
                      c6 = -9;
                      s:
                        if (!E4 && (v6 = l4[h4 - 4 >> 2])) {
                          if (w9 = 10, c6 = 0, (v6 >>> 0) % 10 | 0)
                            break s;
                          for (; u6 = c6, c6 = c6 + 1 | 0, w9 = N6(w9, 10), !((v6 >>> 0) % (w9 >>> 0) | 0); )
                            ;
                          c6 = -1 ^ u6;
                        }
                      if (u6 = N6(h4 - R7 >> 2, 9), (-33 & f7) == 70) {
                        v6 = 0, p8 = (0 | (c6 = (0 | (c6 = (c6 + u6 | 0) - 9 | 0)) > 0 ? c6 : 0)) > (0 | p8) ? p8 : c6;
                        break u;
                      }
                      v6 = 0, p8 = (0 | (c6 = (0 | (c6 = ((i6 + u6 | 0) + c6 | 0) - 9 | 0)) > 0 ? c6 : 0)) > (0 | p8) ? p8 : c6;
                    }
                    if (w9 = -1, (((E4 = v6 | p8) ? 2147483645 : 2147483646) | 0) < (0 | p8))
                      break e;
                    G4 = (((0 | E4) != 0) + p8 | 0) + 1 | 0, u6 = -33 & f7;
                    A: {
                      if ((0 | u6) == 70) {
                        if ((2147483647 ^ G4) < (0 | i6))
                          break e;
                        c6 = (0 | i6) > 0 ? i6 : 0;
                        break A;
                      }
                      if (c6 = rK2(((c6 = i6 >> 31) ^ i6) - c6 | 0, 0, V5), (V5 - c6 | 0) <= 1)
                        for (; s4[0 | (c6 = c6 - 1 | 0)] = 48, (V5 - c6 | 0) < 2; )
                          ;
                      if (s4[0 | (W4 = c6 - 2 | 0)] = f7, s4[c6 - 1 | 0] = (0 | i6) < 0 ? 45 : 43, (0 | (c6 = V5 - W4 | 0)) > (2147483647 ^ G4))
                        break e;
                    }
                    if ((0 | (i6 = c6 + G4 | 0)) > (2147483647 ^ Z4))
                      break e;
                    er(r10, 32, a6, G4 = i6 + Z4 | 0, n5), rF2(r10, I6, Z4), er(r10, 48, a6, G4, 65536 ^ n5);
                    l: {
                      d: {
                        h: {
                          if ((0 | u6) == 70) {
                            for (i6 = 8 | (f7 = m6 + 16 | 0), v6 = 9 | f7, A6 = u6 = A6 >>> 0 > R7 >>> 0 ? R7 : A6; ; ) {
                              c6 = rK2(l4[A6 >> 2], 0, v6);
                              v: {
                                if ((0 | u6) != (0 | A6)) {
                                  if (m6 + 16 >>> 0 >= c6 >>> 0)
                                    break v;
                                  for (; s4[0 | (c6 = c6 - 1 | 0)] = 48, m6 + 16 >>> 0 < c6 >>> 0; )
                                    ;
                                  break v;
                                }
                                if ((0 | c6) != (0 | v6))
                                  break v;
                                s4[m6 + 24 | 0] = 48, c6 = i6;
                              }
                              if (rF2(r10, c6, v6 - c6 | 0), !(R7 >>> 0 >= (A6 = A6 + 4 | 0) >>> 0))
                                break;
                            }
                            if (E4 && rF2(r10, 4206, 1), (0 | p8) <= 0 | A6 >>> 0 >= h4 >>> 0)
                              break h;
                            for (; ; ) {
                              if ((c6 = rK2(l4[A6 >> 2], 0, v6)) >>> 0 > m6 + 16 >>> 0)
                                for (; s4[0 | (c6 = c6 - 1 | 0)] = 48, m6 + 16 >>> 0 < c6 >>> 0; )
                                  ;
                              if (rF2(r10, c6, (0 | p8) >= 9 ? 9 : p8), c6 = p8 - 9 | 0, h4 >>> 0 <= (A6 = A6 + 4 | 0) >>> 0)
                                break d;
                              if (i6 = (0 | p8) > 9, p8 = c6, !i6)
                                break;
                            }
                            break d;
                          }
                          p:
                            if (!((0 | p8) < 0))
                              for (R7 = A6 >>> 0 < h4 >>> 0 ? h4 : A6 + 4 | 0, i6 = 8 | (f7 = m6 + 16 | 0), h4 = 9 | f7, u6 = A6; ; ) {
                                c6 = rK2(l4[u6 >> 2], 0, h4), (0 | h4) == (0 | c6) && (s4[m6 + 24 | 0] = 48, c6 = i6);
                                m: {
                                  if ((0 | u6) != (0 | A6)) {
                                    if (m6 + 16 >>> 0 >= c6 >>> 0)
                                      break m;
                                    for (; s4[0 | (c6 = c6 - 1 | 0)] = 48, m6 + 16 >>> 0 < c6 >>> 0; )
                                      ;
                                    break m;
                                  }
                                  if (rF2(r10, c6, 1), c6 = c6 + 1 | 0, !(v6 | p8))
                                    break m;
                                  rF2(r10, 4206, 1);
                                }
                                if (f7 = h4 - c6 | 0, rF2(r10, c6, (0 | f7) > (0 | p8) ? p8 : f7), p8 = p8 - f7 | 0, R7 >>> 0 <= (u6 = u6 + 4 | 0) >>> 0)
                                  break p;
                                if (!((0 | p8) >= 0))
                                  break;
                              }
                          er(r10, 48, p8 + 18 | 0, 18, 0), rF2(r10, W4, V5 - W4 | 0);
                          break l;
                        }
                        c6 = p8;
                      }
                      er(r10, 48, c6 + 9 | 0, 9, 0);
                    }
                    er(r10, 32, a6, G4, 8192 ^ n5), w9 = (0 | a6) < (0 | G4) ? G4 : a6;
                    break e;
                  }
                  v6 = (f7 << 26 >> 31 & 9) + I6 | 0;
                  N:
                    if (!(i6 >>> 0 > 11)) {
                      for (c6 = 12 - i6 | 0, g6 = 16; g6 *= 16, c6 = c6 - 1 | 0; )
                        ;
                      if (45 == d6[0 | v6]) {
                        e4 = -(g6 + (-e4 - g6));
                        break N;
                      }
                      e4 = e4 + g6 - g6;
                    }
                  for (R7 = 2 | Z4, A6 = 32 & f7, c6 = (u6 = l4[m6 + 44 >> 2]) >> 31, c6 = rK2((c6 ^ u6) - c6 | 0, 0, V5), (0 | V5) == (0 | c6) && (s4[m6 + 15 | 0] = 48, c6 = m6 + 15 | 0), s4[0 | (p8 = c6 - 2 | 0)] = f7 + 15, s4[c6 - 1 | 0] = (0 | u6) < 0 ? 45 : 43, c6 = 8 & n5, u6 = m6 + 16 | 0; f7 = u6, h4 = 2147483648 > y4(e4) ? ~~e4 : -2147483648, s4[0 | u6] = A6 | d6[h4 + 5424 | 0], !(c6 | (0 | i6) > 0) & 0 == (e4 = (e4 - +(0 | h4)) * 16) | ((u6 = f7 + 1 | 0) - (m6 + 16 | 0) | 0) != 1 || (s4[f7 + 1 | 0] = 46, u6 = f7 + 2 | 0), 0 != e4; )
                    ;
                  if (w9 = -1, (2147483645 - (f7 = (c6 = V5 - p8 | 0) + R7 | 0) | 0) < (0 | i6))
                    break e;
                  w: {
                    y:
                      if (i6 && !(((A6 = u6 - (m6 + 16 | 0) | 0) - 2 | 0) >= (0 | i6))) {
                        i6 = i6 + 2 | 0;
                        break w;
                      }
                    i6 = A6 = u6 - (m6 + 16 | 0) | 0;
                  }
                  er(r10, 32, a6, f7 = i6 + f7 | 0, n5), rF2(r10, v6, R7), er(r10, 48, a6, f7, 65536 ^ n5), rF2(r10, m6 + 16 | 0, A6), er(r10, 48, i6 - A6 | 0, 0, 0), rF2(r10, p8, c6), er(r10, 32, a6, f7, 8192 ^ n5), w9 = (0 | a6) < (0 | f7) ? f7 : a6;
                }
                return re3 = m6 + 560 | 0, 0 | w9;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6, n5 = 0, f7 = 0, b8 = 0, k8 = 0, c6 = 0, u6 = 0, s5 = 0, A6 = 0, d7 = 0, h4 = 0, v6 = 0, p8 = 0, N7 = 0, w9 = 0, y5 = 0, E4 = 0;
                n5 = e4, e4 = l4[e4 >> 2] + 7 & -8, l4[n5 >> 2] = e4 + 16, N7 = r10, s5 = l4[e4 >> 2], f7 = l4[e4 + 4 >> 2], v6 = r10 = l4[e4 + 12 >> 2], re3 = c6 = re3 - 32 | 0, r10 &= 2147483647, u6 = r10, b8 = r10 - 1006698496 | 0, r10 = r10 - 1140785152 | 0, e4 = n5 = l4[e4 + 8 >> 2];
                r: {
                  if ((0 | b8) == (0 | r10) & e4 >>> 0 < e4 >>> 0 | r10 >>> 0 > b8 >>> 0) {
                    if (n5 = v6 << 4 | (r10 = n5) >>> 28, e4 = r10 << 4 | f7 >>> 28, r10 = n5, (0 | (f7 &= 268435455)) == 134217728 & (0 | s5) != 0 | f7 >>> 0 > 134217728) {
                      r10 = r10 + 1073741824 | 0, r10 = (e4 = e4 + 1 | 0) ? r10 : r10 + 1 | 0;
                      break r;
                    }
                    if (r10 = r10 + 1073741824 | 0, s5 | (0 | f7) != 134217728)
                      break r;
                    r10 = (e4 = (f7 = 1 & e4) + e4 | 0) >>> 0 < f7 >>> 0 ? r10 + 1 | 0 : r10;
                    break r;
                  }
                  if (!(!e4 & (0 | u6) == 2147418112 ? !(f7 | s5) : u6 >>> 0 < 2147418112)) {
                    n5 = v6 << 4 | (r10 = n5) >>> 28, e4 = r10 << 4 | f7 >>> 28, r10 = 524287 & n5 | 2146959360;
                    break r;
                  }
                  if (e4 = 0, r10 = 2146435072, u6 >>> 0 > 1140785151 || (r10 = 0, (p8 = u6 >>> 16 | 0) >>> 0 < 15249))
                    break r;
                  e4 = s5, r10 = f7, u6 = b8 = 65535 & v6 | 65536, h4 = n5, k8 = n5, A6 = p8 - 15233 | 0;
                  e: {
                    if (64 & A6) {
                      n5 = e4, e4 = 31 & (b8 = A6 + -64 | 0), (63 & b8) >>> 0 >= 32 ? (r10 = n5 << e4, k8 = 0) : (r10 = (1 << e4) - 1 & n5 >>> 32 - e4 | r10 << e4, k8 = n5 << e4), b8 = r10, e4 = 0, r10 = 0;
                      break e;
                    }
                    if (!A6)
                      break e;
                    d7 = k8, k8 = 31 & A6, (63 & A6) >>> 0 >= 32 ? (n5 = d7 << k8, k8 = 0) : (n5 = (1 << k8) - 1 & d7 >>> 32 - k8 | b8 << k8, k8 = d7 << k8), b8 = n5, w9 = k8, d7 = e4, k8 = 31 & (n5 = 64 - A6 | 0), (63 & n5) >>> 0 >= 32 ? (n5 = 0, e4 = r10 >>> k8 | 0) : (n5 = r10 >>> k8 | 0, e4 = ((1 << k8) - 1 & r10) << 32 - k8 | d7 >>> k8), k8 = w9 | e4, b8 |= n5, e4 = 31 & A6, (63 & A6) >>> 0 >= 32 ? (n5 = d7 << e4, e4 = 0) : (n5 = (1 << e4) - 1 & d7 >>> 32 - e4 | r10 << e4, e4 = d7 << e4), r10 = n5;
                  }
                  l4[c6 + 16 >> 2] = e4, l4[c6 + 20 >> 2] = r10, l4[c6 + 24 >> 2] = k8, l4[c6 + 28 >> 2] = b8, e4 = 15361 - p8 | 0;
                  a: {
                    if (64 & e4) {
                      f7 = h4, r10 = 31 & (e4 = e4 + -64 | 0), (63 & e4) >>> 0 >= 32 ? (n5 = 0, s5 = u6 >>> r10 | 0) : (n5 = u6 >>> r10 | 0, s5 = ((1 << r10) - 1 & u6) << 32 - r10 | f7 >>> r10), f7 = n5, h4 = 0, u6 = 0;
                      break a;
                    }
                    if (!e4)
                      break a;
                    b8 = h4, n5 = 31 & (r10 = 64 - e4 | 0), (63 & r10) >>> 0 >= 32 ? (r10 = b8 << n5, k8 = 0) : (r10 = (1 << n5) - 1 & b8 >>> 32 - n5 | u6 << n5, k8 = b8 << n5), b8 = s5, s5 = 31 & e4, (63 & e4) >>> 0 >= 32 ? (n5 = 0, b8 = f7 >>> s5 | 0) : (n5 = f7 >>> s5 | 0, b8 = ((1 << s5) - 1 & f7) << 32 - s5 | b8 >>> s5), s5 = k8 | b8, f7 = r10 | n5, b8 = h4, n5 = 31 & e4, (63 & e4) >>> 0 >= 32 ? (r10 = 0, h4 = u6 >>> n5 | 0) : (r10 = u6 >>> n5 | 0, h4 = ((1 << n5) - 1 & u6) << 32 - n5 | b8 >>> n5), u6 = r10;
                  }
                  if (l4[c6 >> 2] = s5, l4[c6 + 4 >> 2] = f7, l4[c6 + 8 >> 2] = h4, l4[c6 + 12 >> 2] = u6, e4 = l4[c6 + 8 >> 2], r10 = l4[c6 + 12 >> 2] << 4 | e4 >>> 28, e4 <<= 4, n5 = l4[c6 >> 2], e4 = (u6 = l4[c6 + 4 >> 2]) >>> 28 | e4, (0 | (f7 = 268435455 & u6)) == 134217728 & (0 | (n5 |= (l4[c6 + 16 >> 2] | l4[c6 + 24 >> 2] | (l4[c6 + 20 >> 2] | l4[c6 + 28 >> 2])) != 0)) != 0 | f7 >>> 0 > 134217728) {
                    r10 = (e4 = e4 + 1 | 0) ? r10 : r10 + 1 | 0;
                    break r;
                  }
                  if (n5 | (0 | f7) != 134217728)
                    break r;
                  r10 = (n5 = e4) >>> 0 > (e4 = e4 + (1 & e4) | 0) >>> 0 ? r10 + 1 | 0 : r10;
                }
                re3 = c6 + 32 | 0, a6 = 0 | e4, t3[0] = a6, i6 = -2147483648 & v6 | r10, t3[1] = i6, y5 = N7, E4 = +o6[0], m5[y5 >> 3] = E4;
              }, e_, function(r10, e4) {
                e4 |= 0, l4[(r10 |= 0) + 4 >> 2] = 7, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                e4 |= 0, l4[(r10 |= 0) + 4 >> 2] = 10, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                e4 |= 0, l4[(r10 |= 0) + 4 >> 2] = 13, l4[r10 >> 2] = e4;
              }, e_, e_, e_, e_, e_, e_, function(r10, e4, a6, i6, n5, f7) {
                r10 |= 0, e4 |= 0, a6 = w8(a6), i6 |= 0, n5 = w8(n5), f7 |= 0;
                var t4 = 0;
                re3 = t4 = re3 - 16 | 0, e4 = l4[l4[e4 >> 2] + 4 >> 2], eY[l4[l4[e4 >> 2] + 8 >> 2]](t4, e4, a6, i6, n5, f7), p7[r10 >> 2] = m5[t4 >> 3], p7[r10 + 4 >> 2] = m5[t4 + 8 >> 3], re3 = t4 + 16 | 0;
              }, function(r10) {
                r10 |= 0, r10 = l4[l4[r10 >> 2] + 8 >> 2], eY[l4[l4[r10 >> 2] + 8 >> 2]](r10);
              }, rn3, function(r10) {
                return 6952;
              }, eg, function(r10, e4, a6, i6, n5, f7) {
                r10 |= 0, e4 |= 0, a6 = w8(a6), i6 |= 0, n5 = w8(n5), f7 |= 0;
                var t4 = 0, b8 = 0;
                return re3 = t4 = re3 - 16 | 0, b8 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (b8 = l4[b8 + l4[e4 >> 2] >> 2]), eY[0 | b8](t4, e4, a6, i6, n5, f7), r10 = eo2(16), e4 = l4[t4 + 12 >> 2], l4[r10 + 8 >> 2] = l4[t4 + 8 >> 2], l4[r10 + 12 >> 2] = e4, e4 = l4[t4 + 4 >> 2], l4[r10 >> 2] = l4[t4 >> 2], l4[r10 + 4 >> 2] = e4, re3 = t4 + 16 | 0, 0 | r10;
              }, function(r10) {
                return 6956;
              }, e_, e_, eg, eF, eB, eA, function(r10) {
                r10 |= 0;
                var e4 = 0;
                return s4[(e4 = eo2(12)) + 4 | 0] = 0, l4[e4 + 8 >> 2] = l4[r10 >> 2], l4[r10 >> 2] = 0, l4[e4 >> 2] = 4368, 0 | e4;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0;
                if (re3 = i6 = re3 - 32 | 0, (n5 = l4[e4 >> 2]) >>> 0 < 2147483632) {
                  r: {
                    e: {
                      if (n5 >>> 0 >= 11) {
                        t4 = eo2(f7 = (15 | n5) + 1 | 0), l4[i6 + 16 >> 2] = -2147483648 | f7, l4[i6 + 8 >> 2] = t4, l4[i6 + 12 >> 2] = n5, f7 = n5 + t4 | 0;
                        break e;
                      }
                      if (s4[i6 + 19 | 0] = n5, f7 = (t4 = i6 + 8 | 0) + n5 | 0, !n5)
                        break r;
                    }
                    ru3(t4, e4 + 4 | 0, n5);
                  }
                  return s4[0 | f7] = 0, l4[i6 >> 2] = a6, eY[0 | r10](i6 + 24 | 0, i6 + 8 | 0, i6), U4(l4[i6 + 24 >> 2]), r10 = l4[i6 + 24 >> 2], I5(0 | r10), I5(l4[i6 >> 2]), s4[i6 + 19 | 0] < 0 && rE2(l4[i6 + 8 >> 2]), re3 = i6 + 32 | 0, 0 | r10;
                }
                T5(), k7();
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0;
                i6 = r10, n5 = 0 | Y3((s4[e4 + 11 | 0] < 0 ? l4[e4 >> 2] : e4) | 0, 6956, l4[a6 >> 2]), l4[i6 >> 2] = n5;
              }, function(r10) {
                return 6976;
              }, eg, em, function(r10) {
                return 6979;
              }, e_, e_, eg, eF, eB, eA, function(r10) {
                r10 |= 0;
                var e4 = 0;
                return s4[(e4 = eo2(12)) + 4 | 0] = 0, l4[e4 + 8 >> 2] = l4[r10 >> 2], l4[r10 >> 2] = 0, l4[e4 >> 2] = 4488, 0 | e4;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0;
                i6 = r10, n5 = 0 | Y3((s4[e4 + 11 | 0] < 0 ? l4[e4 >> 2] : e4) | 0, 6979, l4[a6 >> 2]), l4[i6 >> 2] = n5;
              }, function(r10) {
                return 6982;
              }, eE, eT, function() {
                var r10 = 0, e4 = 0;
                return e4 = eo2(4), A5[(r10 = eo2(28)) + 20 >> 1] = 0, l4[r10 + 16 >> 2] = 1065353216, A5[r10 + 10 >> 1] = 0, A5[r10 + 12 >> 1] = 0, l4[r10 >> 2] = 0, l4[r10 + 24 >> 2] = 0, s4[r10 + 9 | 0] = 0, l4[r10 + 4 >> 2] = 1, s4[r10 + 22 | 0] = 0, l4[1732] = l4[1732] + 1, l4[e4 >> 2] = r10, 0 | e4;
              }, eI, eE, function(r10, e4, a6) {
                e4 |= 0, a6 |= 0, s4[(l4[(r10 |= 0) >> 2] + e4 | 0) + 20 | 0] = a6;
              }, et3, function(r10, e4) {
                r10 |= 0, e4 = w8(e4);
                var a6 = 0, i6 = 0, n5 = 0;
                if (re3 = a6 = re3 - 16 | 0, r10 = l4[r10 >> 2], !(e4 >= w8(0))) {
                  l4[a6 >> 2] = 2262, re3 = i6 = re3 - 16 | 0, l4[i6 + 12 >> 2] = a6;
                  r:
                    if (!r10) {
                      if (d6[6936]) {
                        r10 = l4[1733];
                        break r;
                      }
                      A5[(r10 = eo2(28)) + 20 >> 1] = 0, l4[r10 + 16 >> 2] = 1065353216, A5[r10 + 10 >> 1] = 0, A5[r10 + 12 >> 1] = 0, l4[r10 >> 2] = 0, l4[r10 + 24 >> 2] = 0, s4[r10 + 9 | 0] = 0, l4[r10 + 4 >> 2] = 1, s4[r10 + 22 | 0] = 0, l4[1733] = r10, s4[6936] = 1, l4[1732] = l4[1732] + 1;
                    }
                  n5 = l4[r10 + 4 >> 2];
                  e: {
                    if (d6[r10 + 9 | 0]) {
                      eY[0 | n5](r10, 0, 5, 0, 4215, a6);
                      break e;
                    }
                    eY[0 | n5](r10, 0, 5, 4215, a6);
                  }
                  re3 = i6 + 16 | 0, eX(), k7();
                }
                p7[r10 + 16 >> 2] = e4 == w8(0) ? w8(0) : e4, re3 = a6 + 16 | 0;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 = w8(a6);
                var i6 = 0;
                i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), eY[0 | i6](e4, a6);
              }, function(r10, e4) {
                e4 |= 0, s4[l4[(r10 |= 0) >> 2] + 11 | 0] = e4;
              }, ek, function(r10, e4) {
                e4 |= 0, s4[l4[(r10 |= 0) >> 2] + 10 | 0] = e4;
              }, function(r10, e4) {
                return e4 |= 0, d6[(l4[(r10 |= 0) >> 2] + e4 | 0) + 20 | 0];
              }, eb, function(r10) {
                return d6[l4[(r10 |= 0) >> 2] + 11 | 0];
              }, ec2, function(r10) {
                return d6[l4[(r10 |= 0) >> 2] + 10 | 0];
              }, function() {
                return 0 | ry2(eo2(48), 0, 48);
              }, eL, function() {
                var r10 = 0;
                return l4[(r10 = eo2(16)) >> 2] = 0, l4[r10 + 4 >> 2] = 0, l4[r10 + 8 >> 2] = 0, l4[r10 + 12 >> 2] = 0, 0 | r10;
              }, eL, function() {
                var r10 = 0;
                return l4[(r10 = eo2(16)) + 8 >> 2] = 0, l4[r10 + 12 >> 2] = 0, l4[r10 >> 2] = 0, 0 | r10;
              }, eL, eR, eG, function(r10, e4) {
                return e4 |= 0, l4[l4[(r10 |= 0) >> 2] + e4 >> 2];
              }, function(r10, e4, a6) {
                e4 |= 0, a6 |= 0, l4[l4[(r10 |= 0) >> 2] + e4 >> 2] = a6;
              }, function(r10) {
                return 6987;
              }, rL2, eT, function() {
                return 0 | rJ2(eo2(12), 0);
              }, function(r10, e4) {
                return e4 |= 0, 0 | eY[0 | (r10 |= 0)](e4);
              }, function(r10) {
                return r10 |= 0, 0 | rJ2(eo2(12), r10);
              }, eI, rL2, function(r10) {
                r10 |= 0;
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0;
                re3 = i6 = re3 - 624 | 0, e4 = l4[r10 + 4 >> 2], l4[r10 + 4 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4), e4 = l4[r10 + 8 >> 2], l4[r10 + 8 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4);
                r: {
                  if (r10 = l4[r10 >> 2], l4[r10 + 560 >> 2] == l4[r10 + 556 >> 2]) {
                    if (l4[r10 + 552 >> 2])
                      break r;
                    r_2(r10 + 556 | 0), n5 = s4[r10 + 4 | 0], e4 = rk2(i6 + 32 | 0, l4[r10 + 568 >> 2]), a6 = l4[e4 + 4 >> 2], l4[r10 >> 2] = l4[e4 >> 2], l4[r10 + 4 >> 2] = a6, a6 = l4[e4 + 20 >> 2], l4[r10 + 16 >> 2] = l4[e4 + 16 >> 2], l4[r10 + 20 >> 2] = a6, a6 = l4[e4 + 12 >> 2], l4[r10 + 8 >> 2] = l4[e4 + 8 >> 2], l4[r10 + 12 >> 2] = a6, ru3(r10 + 24 | 0, e4 + 24 | 0, 204), ru3(r10 + 228 | 0, e4 + 228 | 0, 328), (a6 = l4[r10 + 556 >> 2]) && (l4[r10 + 560 >> 2] = a6, rE2(a6)), l4[r10 + 556 >> 2] = l4[e4 + 556 >> 2], l4[r10 + 560 >> 2] = l4[e4 + 560 >> 2], l4[r10 + 564 >> 2] = l4[e4 + 564 >> 2], l4[r10 + 584 >> 2] = l4[e4 + 584 >> 2], a6 = l4[e4 + 580 >> 2], l4[r10 + 576 >> 2] = l4[e4 + 576 >> 2], l4[r10 + 580 >> 2] = a6, a6 = l4[e4 + 572 >> 2], l4[r10 + 568 >> 2] = l4[e4 + 568 >> 2], l4[r10 + 572 >> 2] = a6, (0 | n5) < 0 && (s4[r10 + 4 | 0] = 128 | d6[r10 + 4 | 0], l4[r10 + 24 >> 2] = -909 & l4[r10 + 24 >> 2] | 520), re3 = i6 + 624 | 0;
                    return;
                  }
                  l4[i6 + 16 >> 2] = 3252, rB2(r10, i6 + 16 | 0), eX(), k7();
                }
                l4[i6 >> 2] = 2046, rB2(r10, i6), eX(), k7();
              }, em, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6, n5 = 0, f7 = w8(0), b8 = 0, o7 = 0, k8 = w8(0), c6 = 0, A6 = 0, h4 = 0, v6 = w8(0);
                r: {
                  A6 = l4[e4 >> 2], e4 = l4[r10 >> 2];
                  e:
                    if (!((l4[A6 + 24 >> 2] ^ l4[e4 + 24 >> 2]) & 8388607)) {
                      v6 = p7[A6 + 40 >> 2], b8 = l4[A6 + 40 >> 2], f7 = p7[e4 + 40 >> 2];
                      a: {
                        i: {
                          if ((0 | (n5 = l4[e4 + 40 >> 2])) != 2139156720) {
                            if (k8 = w8(NaN), r10 = 3, (0 | n5) == 2141891242)
                              break a;
                            if ((0 | n5) != 2140081935)
                              break i;
                            k8 = w8(0), r10 = 1;
                            break a;
                          }
                          r10 = 2;
                          break a;
                        }
                        if (r10 = 0, f7 != f7)
                          break a;
                        a6 = (-1073741825 & n5) + 536870912 | 0, t3[2] = a6, k8 = u5(), r10 = 1073741824 & n5 ? 2 : 1;
                      }
                      n: {
                        f: {
                          if ((0 | b8) != 2139156720) {
                            if (f7 = w8(NaN), n5 = 3, (0 | b8) == 2141891242)
                              break n;
                            if ((0 | b8) != 2140081935)
                              break f;
                            f7 = w8(0), n5 = 1;
                            break n;
                          }
                          f7 = w8(0), n5 = 2;
                          break n;
                        }
                        if (n5 = 0, v6 != v6)
                          break n;
                        i6 = (-1073741825 & b8) + 536870912 | 0, t3[2] = i6, f7 = u5(), n5 = 1073741824 & b8 ? 2 : 1;
                      }
                      if ((0 | n5) != (0 | r10) | !(!r10 | k8 != k8 & f7 != f7 | w8(y4(w8(k8 - f7))) < w8(9999999747378752e-20)) || (n5 = e4 + 44 | 0, o7 = A6 + 44 | 0, l4[n5 >> 2] != l4[o7 >> 2]))
                        break e;
                      r10 = 0;
                      t: {
                        for (; ; ) {
                          if (b8 = r10, (0 | (r10 = r10 + 1 | 0)) == 9)
                            break t;
                          if (l4[(c6 = r10 << 2) + n5 >> 2] != l4[o7 + c6 >> 2])
                            break;
                        }
                        if (b8 >>> 0 < 8)
                          break e;
                      }
                      if (n5 = e4 + 80 | 0, o7 = A6 + 80 | 0, l4[n5 >> 2] != l4[o7 >> 2])
                        break e;
                      r10 = 0;
                      b: {
                        for (; ; ) {
                          if (b8 = r10, (0 | (r10 = r10 + 1 | 0)) == 9)
                            break b;
                          if (l4[(c6 = r10 << 2) + n5 >> 2] != l4[o7 + c6 >> 2])
                            break;
                        }
                        if (b8 >>> 0 < 8)
                          break e;
                      }
                      if (n5 = e4 + 116 | 0, o7 = A6 + 116 | 0, l4[n5 >> 2] != l4[o7 >> 2])
                        break e;
                      r10 = 0;
                      o: {
                        for (; ; ) {
                          if (b8 = r10, (0 | (r10 = r10 + 1 | 0)) == 9)
                            break o;
                          if (l4[(c6 = r10 << 2) + n5 >> 2] != l4[o7 + c6 >> 2])
                            break;
                        }
                        if (b8 >>> 0 < 8)
                          break e;
                      }
                      if (n5 = e4 + 152 | 0, o7 = A6 + 152 | 0, l4[n5 >> 2] != l4[o7 >> 2])
                        break e;
                      r10 = 0;
                      k: {
                        for (; ; ) {
                          if (b8 = r10, (0 | (r10 = r10 + 1 | 0)) == 9)
                            break k;
                          if (l4[(c6 = r10 << 2) + n5 >> 2] != l4[o7 + c6 >> 2])
                            break;
                        }
                        if (b8 >>> 0 < 8)
                          break e;
                      }
                      if (n5 = e4 + 188 | 0, o7 = A6 + 188 | 0, l4[n5 >> 2] != l4[o7 >> 2])
                        break e;
                      r10 = 0;
                      c: {
                        for (; ; ) {
                          if (b8 = r10, (0 | (r10 = r10 + 1 | 0)) == 3)
                            break c;
                          if (l4[(c6 = r10 << 2) + n5 >> 2] != l4[o7 + c6 >> 2])
                            break;
                        }
                        if (b8 >>> 0 < 2)
                          break e;
                      }
                      for (c6 = A6 + 200 | 0, h4 = e4 + 200 | 0, r10 = 0, b8 = 1; ; ) {
                        u:
                          if (r10 <<= 2, n5 = l4[r10 + c6 >> 2], o7 = l4[r10 + h4 >> 2], b8 && (b8 = 0, r10 = 1, (0 | n5) == (0 | o7)))
                            continue;
                        break;
                      }
                      if ((0 | n5) != (0 | o7))
                        break e;
                      for (c6 = A6 + 208 | 0, h4 = e4 + 208 | 0, r10 = 0, b8 = 1; ; ) {
                        s:
                          if (r10 <<= 2, n5 = l4[r10 + c6 >> 2], o7 = l4[r10 + h4 >> 2], b8 && (b8 = 0, r10 = 1, (0 | n5) == (0 | o7)))
                            continue;
                        break;
                      }
                      if ((0 | n5) != (0 | o7))
                        break e;
                      for (c6 = A6 + 216 | 0, h4 = e4 + 216 | 0, r10 = 0, b8 = 1; ; ) {
                        A:
                          if (r10 <<= 2, n5 = l4[r10 + c6 >> 2], o7 = l4[r10 + h4 >> 2], b8 && (b8 = 0, r10 = 1, (0 | n5) == (0 | o7)))
                            continue;
                        break;
                      }
                      if ((0 | n5) != (0 | o7) || (r10 = (k8 = p7[A6 + 28 >> 2]) != k8, f7 = p7[e4 + 28 >> 2], (0 | r10) == (f7 == f7 | 0) | !(r10 | f7 != f7) & f7 != k8) || (f7 = p7[e4 + 32 >> 2], k8 = p7[A6 + 32 >> 2], (f7 == f7 | 0) == (k8 != k8 | 0) | f7 == f7 & f7 != k8) || (r10 = (k8 = p7[A6 + 36 >> 2]) != k8, f7 = p7[e4 + 36 >> 2], (0 | r10) == (f7 == f7 | 0) | !r10 & f7 != k8))
                        break e;
                      if (r10 = 0, (f7 = p7[e4 + 224 >> 2]) != f7 && (r10 = 1, (k8 = p7[A6 + 224 >> 2]) != k8) || (k8 = f7, f7 = p7[A6 + 224 >> 2], k8 == f7 | f7 != f7 & r10))
                        break r;
                    }
                  for (ru3(e4 + 24 | 0, A6 + 24 | 0, 204); ; ) {
                    if (4 & (r10 = d6[e4 + 4 | 0]))
                      break r;
                    if (s4[e4 + 4 | 0] = 4 | r10, (r10 = l4[e4 + 20 >> 2]) && eY[0 | r10](e4), l4[e4 + 308 >> 2] = 2143289344, !(e4 = l4[e4 + 552 >> 2]))
                      break;
                  }
                }
              }, ek, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 16 & 3) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -196609 & a6 | e4 << 16 & 196608; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, ek, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r42(l4[(r10 |= 0) >> 2], e4, rx2(w8(a6)));
              }, function(r10, e4, a6, i6) {
                r10 |= 0, e4 |= 0, a6 |= 0, i6 = +i6;
                var n5 = 0;
                n5 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (n5 = l4[n5 + l4[e4 >> 2] >> 2]), eY[0 | n5](e4, a6, i6);
              }, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r42(l4[(r10 |= 0) >> 2], e4, rD2(w8(a6)));
              }, function(r10, e4) {
                e4 |= 0, rC2(l4[(r10 |= 0) >> 2], 5, e4);
              }, function(r10, e4) {
                e4 |= 0, rC2(l4[(r10 |= 0) >> 2], 6, e4);
              }, function(r10, e4) {
                e4 |= 0, rC2(l4[(r10 |= 0) >> 2], 7, e4);
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 2 & 3) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -13 & a6 | e4 << 2 & 12; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 18 & 3) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -786433 & a6 | e4 << 18 & 786432; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 4 & 7) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -113 & a6 | e4 << 4 & 112; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r8(l4[(r10 |= 0) >> 2], e4, rx2(w8(a6)));
              }, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r8(l4[(r10 |= 0) >> 2], e4, rD2(w8(a6)));
              }, function(r10, e4) {
                e4 |= 0, r8(l4[(r10 |= 0) >> 2], e4, 2141891242);
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 20 & 3) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -3145729 & a6 | e4 << 20 & 3145728; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (r10 = l4[r10 >> 2], ((a6 = l4[r10 + 24 >> 2]) >>> 22 & 1) != (0 | e4))
                    for (l4[r10 + 24 >> 2] = -4194305 & a6 | e4 << 22 & 4194304; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                r10 |= 0, e4 = +e4;
                var a6 = 0, i6 = w8(0), n5 = w8(0);
                r:
                  if (i6 = w8(e4), n5 = p7[(r10 = l4[r10 >> 2]) + 28 >> 2], !(i6 == n5 | i6 != i6 & n5 != n5))
                    for (p7[r10 + 28 >> 2] = i6; ; ) {
                      if (4 & (a6 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | a6, (a6 = l4[r10 + 20 >> 2]) && eY[0 | a6](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 = +a6;
                var i6 = 0;
                i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), eY[0 | i6](e4, a6);
              }, function(r10, e4) {
                e4 = +e4, r1(l4[(r10 |= 0) >> 2], rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r1(l4[(r10 |= 0) >> 2], rD2(w8(e4)));
              }, function(r10) {
                r1(l4[(r10 |= 0) >> 2], 2141891242);
              }, function(r10, e4) {
                r10 |= 0, e4 = +e4;
                var a6 = 0, i6 = w8(0), n5 = w8(0);
                r:
                  if (i6 = w8(e4), n5 = p7[(r10 = l4[r10 >> 2]) + 32 >> 2], !(i6 == n5 | i6 != i6 & n5 != n5))
                    for (p7[r10 + 32 >> 2] = i6; ; ) {
                      if (4 & (a6 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | a6, (a6 = l4[r10 + 20 >> 2]) && eY[0 | a6](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                r10 |= 0, e4 = +e4;
                var a6 = 0, i6 = w8(0), n5 = w8(0);
                r:
                  if (i6 = w8(e4), n5 = p7[(r10 = l4[r10 >> 2]) + 36 >> 2], !(i6 == n5 | i6 != i6 & n5 != n5))
                    for (p7[r10 + 36 >> 2] = i6; ; ) {
                      if (4 & (a6 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | a6, (a6 = l4[r10 + 20 >> 2]) && eY[0 | a6](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4) {
                e4 = +e4, r23(l4[(r10 |= 0) >> 2], 0, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r23(l4[(r10 |= 0) >> 2], 0, rD2(w8(e4)));
              }, function(r10) {
                r23(l4[(r10 |= 0) >> 2], 0, 2141891242);
              }, function(r10, e4) {
                e4 = +e4, r23(l4[(r10 |= 0) >> 2], 1, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r23(l4[(r10 |= 0) >> 2], 1, rD2(w8(e4)));
              }, function(r10) {
                r23(l4[(r10 |= 0) >> 2], 1, 2141891242);
              }, function(r10, e4) {
                e4 = +e4, r$2(l4[(r10 |= 0) >> 2], 0, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r$2(l4[(r10 |= 0) >> 2], 0, rD2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r$2(l4[(r10 |= 0) >> 2], 1, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r$2(l4[(r10 |= 0) >> 2], 1, rD2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r02(l4[(r10 |= 0) >> 2], 0, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r02(l4[(r10 |= 0) >> 2], 0, rD2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r02(l4[(r10 |= 0) >> 2], 1, rx2(w8(e4)));
              }, function(r10, e4) {
                e4 = +e4, r02(l4[(r10 |= 0) >> 2], 1, rD2(w8(e4)));
              }, function(r10, e4) {
                r10 |= 0, e4 = +e4;
                var a6 = 0, i6 = w8(0), n5 = w8(0);
                r:
                  if (i6 = w8(e4), n5 = p7[(r10 = l4[r10 >> 2]) + 224 >> 2], !(i6 == n5 | i6 != i6 & n5 != n5))
                    for (p7[r10 + 224 >> 2] = i6; ; ) {
                      if (4 & (a6 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | a6, (a6 = l4[r10 + 20 >> 2]) && eY[0 | a6](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 = +a6;
                var i6 = 0, n5 = 0;
                r:
                  if (e4 = (r10 = l4[r10 >> 2]) + (e4 << 2) | 0, (0 | (n5 = l4[e4 + 152 >> 2])) != (0 | (i6 = rx2(w8(a6)))))
                    for (l4[e4 + 152 >> 2] = i6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r32(l4[(r10 |= 0) >> 2], e4, rx2(w8(a6)));
              }, function(r10, e4, a6) {
                e4 |= 0, a6 = +a6, r32(l4[(r10 |= 0) >> 2], e4, rD2(w8(a6)));
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 = +a6;
                var i6 = 0, n5 = 0;
                r:
                  if (e4 = (r10 = l4[r10 >> 2]) + (e4 << 2) | 0, (0 | (n5 = l4[e4 + 188 >> 2])) != (0 | (i6 = rx2(w8(a6)))))
                    for (l4[e4 + 188 >> 2] = i6; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, function(r10) {
                return 3 & h3[l4[(r10 |= 0) >> 2] + 26 >> 1];
              }, ec2, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6, n5 = 0, f7 = 0, b8 = w8(0);
                n5 = 2, b8 = p7[(e4 = l4[e4 >> 2] + (a6 << 2) | 0) + 80 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 80 >> 2])) != 2139156720) {
                      if (f7 = NaN, (0 | e4) == 2141891242) {
                        n5 = 3;
                        break r;
                      }
                      if ((0 | e4) != 2140081935)
                        break e;
                      f7 = 0, n5 = 1;
                    }
                    break r;
                  }
                  if (b8 != b8) {
                    n5 = 0;
                    break r;
                  }
                  n5 = 1073741824 & e4 ? 2 : 1, f7 = +(i6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = i6, u5());
                }
                m5[r10 + 8 >> 3] = f7, l4[r10 >> 2] = n5;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0;
                return re3 = i6 = re3 - 16 | 0, n5 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (n5 = l4[n5 + l4[e4 >> 2] >> 2]), eY[0 | n5](i6, e4, a6), r10 = eo2(16), e4 = l4[i6 + 12 >> 2], l4[r10 + 8 >> 2] = l4[i6 + 8 >> 2], l4[r10 + 12 >> 2] = e4, e4 = l4[i6 + 4 >> 2], l4[r10 >> 2] = l4[i6 >> 2], l4[r10 + 4 >> 2] = e4, re3 = i6 + 16 | 0, 0 | r10;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 7 & 7;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 10 & 7;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 13 & 7;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 2 & 3;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 18 & 3;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 4 & 7;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6, n5 = 0, f7 = 0, b8 = w8(0);
                n5 = 2, b8 = p7[(e4 = l4[e4 >> 2] + (a6 << 2) | 0) + 44 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 44 >> 2])) != 2139156720) {
                      if (f7 = NaN, (0 | e4) == 2141891242) {
                        n5 = 3;
                        break r;
                      }
                      if ((0 | e4) != 2140081935)
                        break e;
                      f7 = 0, n5 = 1;
                    }
                    break r;
                  }
                  if (b8 != b8) {
                    n5 = 0;
                    break r;
                  }
                  n5 = 1073741824 & e4 ? 2 : 1, f7 = +(i6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = i6, u5());
                }
                m5[r10 + 8 >> 3] = f7, l4[r10 >> 2] = n5;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = w8(0), f7 = w8(0);
                n5 = w8(NaN), f7 = p7[(e4 = l4[e4 >> 2]) + 40 >> 2], e4 = l4[e4 + 40 >> 2], i6 = 3;
                r:
                  if ((0 | e4) != 2141891242) {
                    if ((0 | e4) == 2140081935) {
                      n5 = w8(0), i6 = 1;
                      break r;
                    }
                    if ((0 | e4) == 2139156720) {
                      n5 = w8(0), i6 = 2;
                      break r;
                    }
                    if (i6 = 0, f7 != f7)
                      break r;
                    a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, n5 = u5(), i6 = 1073741824 & e4 ? 2 : 1;
                  }
                l4[r10 >> 2] = i6, m5[r10 + 8 >> 3] = n5;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0, i6 = 0;
                return re3 = a6 = re3 - 16 | 0, i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), eY[0 | i6](a6, e4), r10 = eo2(16), e4 = l4[a6 + 12 >> 2], l4[r10 + 8 >> 2] = l4[a6 + 8 >> 2], l4[r10 + 12 >> 2] = e4, e4 = l4[a6 + 4 >> 2], l4[r10 >> 2] = l4[a6 >> 2], l4[r10 + 4 >> 2] = e4, re3 = a6 + 16 | 0, 0 | r10;
              }, function(r10) {
                r10 |= 0;
                var e4 = w8(0);
                return +((e4 = p7[l4[r10 >> 2] + 32 >> 2]) == e4 ? e4 : w8(0));
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                return a6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (a6 = l4[a6 + l4[e4 >> 2] >> 2]), +eY[0 | a6](e4);
              }, function(r10) {
                r10 |= 0;
                var e4 = w8(0);
                return (e4 = p7[(r10 = l4[r10 >> 2]) + 36 >> 2]) != e4 && (e4 = d6[l4[r10 + 568 >> 2] + 10 | 0] ? w8(1) : w8(0)), +e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 200 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 200 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 204 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 204 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 208 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 208 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 212 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 212 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 216 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 216 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = 0, f7 = w8(0);
                f7 = p7[(e4 = l4[e4 >> 2]) + 220 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 220 >> 2])) != 2139156720) {
                      if (n5 = NaN, i6 = 3, (0 | e4) == 2141891242)
                        break r;
                      if ((0 | e4) != 2140081935)
                        break e;
                      n5 = 0, i6 = 1;
                      break r;
                    }
                    i6 = 2;
                    break r;
                  }
                  if (i6 = 0, f7 != f7)
                    break r;
                  n5 = +(a6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = a6, u5()), i6 = 1073741824 & e4 ? 2 : 1;
                }
                e4 = i6, m5[r10 + 8 >> 3] = n5, l4[r10 >> 2] = e4;
              }, function(r10) {
                r10 |= 0;
                var e4 = w8(0);
                return +((e4 = p7[l4[r10 >> 2] + 224 >> 2]) != e4 ? w8(NaN) : e4);
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = 0, n5 = w8(0);
                n5 = p7[(r10 = l4[r10 >> 2] + (e4 << 2) | 0) + 152 >> 2];
                r: {
                  e:
                    if (!((0 | (r10 = l4[r10 + 152 >> 2])) == 2139156720 | (0 | r10) == 2140081935)) {
                      if (i6 = NaN, (0 | r10) == 2141891242 | n5 != n5)
                        break r;
                      if ((0 | r10) == 2139156720)
                        break e;
                      return +(a6 = (-1073741825 & r10) + 536870912 | 0, t3[2] = a6, u5());
                    }
                  i6 = 0;
                }
                return +i6;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0;
                return i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), +eY[0 | i6](e4, a6);
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 20 & 3;
              }, function(r10) {
                return l4[l4[(r10 |= 0) >> 2] + 24 >> 2] >>> 22 & 1;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6, n5 = 0, f7 = 0, b8 = w8(0);
                n5 = 2, b8 = p7[(e4 = l4[e4 >> 2] + (a6 << 2) | 0) + 116 >> 2];
                r: {
                  e: {
                    if ((0 | (e4 = l4[e4 + 116 >> 2])) != 2139156720) {
                      if (f7 = NaN, (0 | e4) == 2141891242) {
                        n5 = 3;
                        break r;
                      }
                      if ((0 | e4) != 2140081935)
                        break e;
                      f7 = 0, n5 = 1;
                    }
                    break r;
                  }
                  if (b8 != b8) {
                    n5 = 0;
                    break r;
                  }
                  n5 = 1073741824 & e4 ? 2 : 1, f7 = +(i6 = (-1073741825 & e4) + 536870912 | 0, t3[2] = i6, u5());
                }
                m5[r10 + 8 >> 3] = f7, l4[r10 >> 2] = n5;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6, i6 = w8(0), n5 = w8(0);
                n5 = p7[(r10 = l4[r10 >> 2] + (e4 << 2) | 0) + 188 >> 2];
                r: {
                  e:
                    if (!((0 | (r10 = l4[r10 + 188 >> 2])) == 2139156720 | (0 | r10) == 2140081935)) {
                      if (i6 = w8(NaN), (0 | r10) == 2141891242 | n5 != n5)
                        break r;
                      if ((0 | r10) == 2139156720)
                        break e;
                      return w8((a6 = (-1073741825 & r10) + 536870912 | 0, t3[2] = a6, u5()));
                    }
                  i6 = w8(0);
                }
                return w8(i6);
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0;
                return i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), w8(w8(eY[0 | i6](e4, a6)));
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = 0, c6 = 0, u6 = 0, A6 = 0, h4 = 0;
                re3 = b8 = re3 - 80 | 0, r10 = l4[r10 >> 2];
                r: {
                  e: {
                    if (o7 = l4[e4 >> 2], !l4[o7 + 552 >> 2]) {
                      if (l4[r10 + 8 >> 2])
                        break e;
                      t4 = (e4 = l4[r10 + 556 >> 2]) + (a6 << 2) | 0, i6 = l4[r10 + 560 >> 2], f7 = l4[(n5 = r10 + 564 | 0) >> 2];
                      a: {
                        if (i6 >>> 0 < f7 >>> 0) {
                          if ((0 | i6) == (0 | t4)) {
                            l4[t4 >> 2] = o7, l4[r10 + 560 >> 2] = t4 + 4;
                            break a;
                          }
                          if (a6 = i6, e4 = i6 - 4 | 0, i6 >>> 0 > e4 >>> 0)
                            for (; l4[a6 >> 2] = l4[e4 >> 2], a6 = a6 + 4 | 0, i6 >>> 0 > (e4 = e4 + 4 | 0) >>> 0; )
                              ;
                          l4[r10 + 560 >> 2] = a6, (0 | (e4 = t4 + 4 | 0)) != (0 | i6) && (e4 = i6 - e4 | 0, rm2(i6 - (-4 & e4) | 0, t4, e4)), l4[t4 >> 2] = o7;
                          break a;
                        }
                        if ((i6 = (i6 - e4 >> 2) + 1 | 0) >>> 0 >= 1073741824)
                          break r;
                        f7 = (e4 = f7 - e4 | 0) >>> 1 | 0, a6 = l4[(n5 = en2(b8 + 32 | 0, e4 >>> 0 >= 2147483644 ? 1073741823 : i6 >>> 0 < f7 >>> 0 ? f7 : i6, a6, n5)) + 8 >> 2];
                        i:
                          if ((0 | a6) == l4[n5 + 12 >> 2]) {
                            if (e4 = l4[n5 + 4 >> 2], i6 = l4[n5 >> 2], e4 >>> 0 > i6 >>> 0) {
                              a6 = rm2(c6 = (i6 = -(((e4 - i6 >> 2) + 1 | 0) / 2) << 2) + e4 | 0, f7 = e4, e4 = a6 - e4 | 0) + e4 | 0, l4[n5 + 8 >> 2] = a6, l4[n5 + 4 >> 2] = i6 + l4[n5 + 4 >> 2];
                              break i;
                            }
                            f7 = en2(b8 + 56 | 0, e4 = (0 | a6) == (0 | i6) ? 1 : a6 - i6 >> 1, e4 >>> 2 | 0, l4[n5 + 16 >> 2]), i6 = l4[f7 + 8 >> 2], e4 = l4[n5 + 4 >> 2], a6 = l4[n5 + 8 >> 2];
                            n: {
                              if ((0 | e4) == (0 | a6)) {
                                a6 = i6, i6 = e4;
                                break n;
                              }
                              for (a6 = (a6 - e4 | 0) + i6 | 0; l4[i6 >> 2] = l4[e4 >> 2], e4 = e4 + 4 | 0, (0 | (i6 = i6 + 4 | 0)) != (0 | a6); )
                                ;
                              e4 = l4[n5 + 8 >> 2], i6 = l4[n5 + 4 >> 2];
                            }
                            if (c6 = l4[n5 >> 2], l4[n5 >> 2] = l4[f7 >> 2], l4[f7 >> 2] = c6, l4[n5 + 4 >> 2] = l4[f7 + 4 >> 2], l4[f7 + 4 >> 2] = i6, l4[n5 + 8 >> 2] = a6, l4[f7 + 8 >> 2] = e4, u6 = l4[n5 + 12 >> 2], l4[n5 + 12 >> 2] = l4[f7 + 12 >> 2], l4[f7 + 12 >> 2] = u6, (0 | e4) != (0 | i6) && (l4[f7 + 8 >> 2] = ((i6 - e4 | 0) + 3 & -4) + e4), !c6)
                              break i;
                            rE2(c6), a6 = l4[n5 + 8 >> 2];
                          }
                        if (l4[a6 >> 2] = o7, l4[n5 + 8 >> 2] = l4[n5 + 8 >> 2] + 4, e4 = l4[r10 + 556 >> 2], a6 = t4 - e4 | 0, A6 = n5, h4 = rm2(l4[n5 + 4 >> 2] - a6 | 0, e4, a6), l4[A6 + 4 >> 2] = h4, i6 = l4[r10 + 560 >> 2] - t4 | 0, t4 = rm2(l4[n5 + 8 >> 2], t4, i6), e4 = l4[r10 + 556 >> 2], l4[r10 + 556 >> 2] = l4[n5 + 4 >> 2], l4[n5 + 4 >> 2] = e4, a6 = l4[r10 + 560 >> 2], l4[r10 + 560 >> 2] = i6 + t4, l4[n5 + 8 >> 2] = a6, i6 = l4[r10 + 564 >> 2], l4[r10 + 564 >> 2] = l4[n5 + 12 >> 2], l4[n5 >> 2] = e4, l4[n5 + 12 >> 2] = i6, (0 | e4) != (0 | a6) && (l4[n5 + 8 >> 2] = a6 + ((e4 - a6 | 0) + 3 & -4)), !e4)
                          break a;
                        rE2(e4);
                      }
                      for (l4[o7 + 552 >> 2] = r10; !(4 & (e4 = d6[r10 + 4 | 0])) && (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, r10 = l4[r10 + 552 >> 2]); )
                        ;
                      re3 = b8 + 80 | 0;
                      return;
                    }
                    l4[b8 + 16 >> 2] = 4006, rB2(r10, b8 + 16 | 0), eX(), k7();
                  }
                  l4[b8 >> 2] = 4139, rB2(r10, b8), eX(), k7();
                }
                T5(), k7();
              }, et3, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0, i6 = 0, n5 = 0, f7 = 0;
                re3 = n5 = re3 - 320 | 0, r10 = l4[r10 >> 2];
                r:
                  if (l4[r10 + 560 >> 2] != l4[r10 + 556 >> 2]) {
                    if (i6 = l4[e4 >> 2], e4 = l4[i6 + 552 >> 2], !rq2(r10, i6))
                      break r;
                    if ((0 | r10) == (0 | e4)) {
                      for (l4[(e4 = a6 = ry2(n5, 0, 288)) + 16 >> 2] = 2143289344, l4[e4 + 20 >> 2] = 2143289344, ry2(e4 + 24 | 0, 0, 49), l4[e4 + 80 >> 2] = 2143289344, f7 = e4 + 288 | 0, e4 = e4 + 96 | 0; l4[e4 + 16 >> 2] = -1082130432, l4[e4 + 20 >> 2] = -1082130432, l4[e4 + 8 >> 2] = 0, l4[e4 + 12 >> 2] = 0, l4[e4 >> 2] = -1082130432, l4[e4 + 4 >> 2] = -1082130432, (0 | f7) != (0 | (e4 = e4 + 24 | 0)); )
                        ;
                      l4[a6 + 312 >> 2] = -1082130432, l4[a6 + 316 >> 2] = -1082130432, l4[a6 + 304 >> 2] = 0, l4[a6 + 308 >> 2] = 0, l4[a6 + 296 >> 2] = -1082130432, l4[a6 + 300 >> 2] = -1082130432, l4[a6 + 288 >> 2] = 2143289344, l4[a6 + 292 >> 2] = 2143289344, ru3(i6 + 228 | 0, a6, 320), l4[i6 + 552 >> 2] = 0;
                    }
                    for (; ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
                  }
                re3 = n5 + 320 | 0;
              }, ek, function(r10) {
                return r10 |= 0, r10 = l4[r10 >> 2], l4[r10 + 560 >> 2] - l4[r10 + 556 >> 2] >> 2;
              }, ec2, function(r10) {
                return (r10 |= 0, r10 = l4[l4[r10 >> 2] + 552 >> 2]) ? l4[r10 >> 2] : 0;
              }, ec2, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0, i6 = 0;
                a6 = l4[r10 >> 2], r10 = l4[a6 + 556 >> 2];
                r:
                  !(l4[a6 + 560 >> 2] - r10 >> 2 >>> 0 <= e4 >>> 0) && (r10 = l4[r10 + (e4 << 2) >> 2]) && (i6 = l4[r10 >> 2]);
                return 0 | i6;
              }, eb, function(r10) {
                return (2 & d6[l4[(r10 |= 0) >> 2] + 4 | 0]) >>> 1 | 0;
              }, ec2, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                r:
                  if (((2 & (a6 = d6[(r10 = l4[r10 >> 2]) + 4 | 0])) >>> 1 | 0) != (0 | e4))
                    for (s4[r10 + 4 | 0] = 253 & a6 | (e4 ? 2 : 0); ; ) {
                      if (4 & (e4 = d6[r10 + 4 | 0]))
                        break r;
                      if (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, !(r10 = l4[r10 + 552 >> 2]))
                        break;
                    }
              }, ek, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                a6 = l4[r10 + 4 >> 2], l4[r10 + 4 >> 2] = e4, a6 && eY[l4[l4[a6 >> 2] + 4 >> 2]](a6), r72(l4[r10 >> 2], 14);
              }, ek, function(r10) {
                r10 |= 0;
                var e4 = 0;
                e4 = l4[r10 + 4 >> 2], l4[r10 + 4 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4), r72(l4[r10 >> 2], 0);
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                a6 = l4[r10 + 8 >> 2], l4[r10 + 8 >> 2] = e4, a6 && eY[l4[l4[a6 >> 2] + 4 >> 2]](a6), l4[l4[r10 >> 2] + 20 >> 2] = 15;
              }, ek, function(r10) {
                r10 |= 0;
                var e4 = 0;
                e4 = l4[r10 + 8 >> 2], l4[r10 + 8 >> 2] = 0, e4 && eY[l4[l4[e4 >> 2] + 4 >> 2]](e4), l4[l4[r10 >> 2] + 20 >> 2] = 0;
              }, function(r10) {
                r10 |= 0;
                var e4 = 0, a6 = 0;
                if (re3 = a6 = re3 - 16 | 0, r10 = l4[r10 >> 2], l4[r10 + 8 >> 2]) {
                  for (; !(4 & (e4 = d6[r10 + 4 | 0])) && (s4[r10 + 4 | 0] = 4 | e4, (e4 = l4[r10 + 20 >> 2]) && eY[0 | e4](r10), l4[r10 + 308 >> 2] = 2143289344, r10 = l4[r10 + 552 >> 2]); )
                    ;
                  re3 = a6 + 16 | 0;
                  return;
                }
                l4[a6 >> 2] = 1024, rB2(r10, a6), eX(), k7();
              }, function(r10) {
                return (4 & d6[l4[(r10 |= 0) >> 2] + 4 | 0]) >>> 2 | 0;
              }, ec2, function(r10, e4, a6, i6) {
                r10 |= 0, e4 = +e4, a6 = +a6, i6 |= 0;
                var n5, f7, b8, o7, k8 = w8(0), c6 = w8(0), s5 = 0, A6 = w8(0), h4 = 0, v6 = w8(0), m6 = 0, N7 = w8(0), E4 = 0;
                re3 = E4 = re3 + -64 | 0, s5 = l4[r10 >> 2], ry2(E4 + 8 | 0, 0, 56), l4[1735] = l4[1735] + 1, rc2(s5), A6 = w8(e4), c6 = p7[s5 + 572 >> 2];
                r: {
                  e: {
                    a:
                      switch (0 | (r10 = l4[s5 + 576 >> 2])) {
                        case 0:
                        case 3:
                          break e;
                        default:
                          break a;
                      }
                    k8 = p7[s5 + 572 >> 2];
                    i: {
                      if (!((0 | r10) != 1 | k8 != k8)) {
                        if (!((k8 = c6) < w8(0)))
                          break i;
                        break e;
                      }
                      n: {
                        if (!((0 | r10) != 2 | k8 != k8)) {
                          if (A6 != A6 | c6 < w8(0))
                            break e;
                          break n;
                        }
                        k8 = w8(NaN);
                        f:
                          switch (r10 - 1 | 0) {
                            case 1:
                              break n;
                            case 0:
                              break f;
                            default:
                              break i;
                          }
                        k8 = c6;
                        break i;
                      }
                      k8 = w8(w8(c6 * A6) * w8(0.009999999776482582));
                    }
                    N7 = w8(k8 + w8(rP2(s5, 2, A6) + rS2(s5, 2, A6))), m6 = 1;
                    break r;
                  }
                  k8 = w8(0), c6 = p7[s5 + 216 >> 2];
                  t: {
                    b: {
                      r10 = l4[s5 + 216 >> 2];
                      o: {
                        k:
                          if ((0 | r10) != 2139156720) {
                            if ((0 | r10) == 2140081935)
                              break t;
                            m6 = 4276;
                            c: {
                              if ((0 | r10) != 2141891242) {
                                if (c6 == c6)
                                  break c;
                                m6 = 4268;
                              }
                              switch (k8 = p7[m6 >> 2], l4[m6 + 4 >> 2] - 1 | 0) {
                                case 0:
                                  break o;
                                case 1:
                                  break k;
                                default:
                                  break b;
                              }
                            }
                            if (n5 = (-1073741825 & r10) + 536870912 | 0, t3[2] = n5, k8 = u5(), !(1073741824 & r10))
                              break o;
                          }
                        k8 = w8(w8(k8 * A6) * w8(0.009999999776482582));
                      }
                      if (k8 != k8)
                        break b;
                      k8 = w8(0);
                      u:
                        if ((0 | r10) != 2139156720) {
                          if ((0 | r10) == 2140081935)
                            break t;
                          h4 = 4276;
                          s: {
                            if ((0 | r10) != 2141891242) {
                              if (c6 == c6)
                                break s;
                              h4 = 4268;
                            }
                            switch (k8 = p7[h4 >> 2], N7 = w8(NaN), m6 = 2, l4[h4 + 4 >> 2] - 1 | 0) {
                              case 1:
                                break u;
                              case 0:
                                break t;
                              default:
                                break r;
                            }
                          }
                          if (f7 = (-1073741825 & r10) + 536870912 | 0, t3[2] = f7, k8 = u5(), !(1073741824 & r10))
                            break t;
                        }
                      N7 = w8(w8(k8 * A6) * w8(0.009999999776482582)), m6 = 2;
                      break r;
                    }
                    m6 = A6 == A6, N7 = A6;
                    break r;
                  }
                  m6 = 2, N7 = k8;
                }
                v6 = w8(a6), c6 = p7[s5 + 580 >> 2];
                A: {
                  l: {
                    d:
                      switch (0 | (r10 = l4[s5 + 584 >> 2])) {
                        case 0:
                        case 3:
                          break l;
                        default:
                          break d;
                      }
                    k8 = p7[s5 + 580 >> 2];
                    h: {
                      if (!((0 | r10) != 1 | k8 != k8)) {
                        if (!((k8 = c6) < w8(0)))
                          break h;
                        break l;
                      }
                      v: {
                        if (!((0 | r10) != 2 | k8 != k8)) {
                          if (v6 != v6 | c6 < w8(0))
                            break l;
                          break v;
                        }
                        k8 = w8(NaN);
                        p:
                          switch (r10 - 1 | 0) {
                            case 1:
                              break v;
                            case 0:
                              break p;
                            default:
                              break h;
                          }
                        k8 = c6;
                        break h;
                      }
                      k8 = w8(w8(c6 * v6) * w8(0.009999999776482582));
                    }
                    c6 = w8(k8 + w8(rP2(s5, 0, A6) + rS2(s5, 0, A6))), r10 = 1;
                    break A;
                  }
                  k8 = w8(0), c6 = p7[s5 + 220 >> 2];
                  m: {
                    N: {
                      r10 = l4[s5 + 220 >> 2];
                      w: {
                        y:
                          if ((0 | r10) != 2139156720) {
                            if ((0 | r10) == 2140081935)
                              break m;
                            h4 = 4276;
                            E: {
                              if ((0 | r10) != 2141891242) {
                                if (c6 == c6)
                                  break E;
                                h4 = 4268;
                              }
                              switch (k8 = p7[h4 >> 2], l4[h4 + 4 >> 2] - 1 | 0) {
                                case 0:
                                  break w;
                                case 1:
                                  break y;
                                default:
                                  break N;
                              }
                            }
                            if (b8 = (-1073741825 & r10) + 536870912 | 0, t3[2] = b8, k8 = u5(), !(1073741824 & r10))
                              break w;
                          }
                        k8 = w8(w8(k8 * v6) * w8(0.009999999776482582));
                      }
                      if (k8 != k8)
                        break N;
                      k8 = w8(0);
                      G:
                        if ((0 | r10) != 2139156720) {
                          if ((0 | r10) == 2140081935)
                            break m;
                          h4 = 4276;
                          R: {
                            if ((0 | r10) != 2141891242) {
                              if (c6 == c6)
                                break R;
                              h4 = 4268;
                            }
                            switch (k8 = p7[h4 >> 2], c6 = w8(NaN), r10 = 2, l4[h4 + 4 >> 2] - 1 | 0) {
                              case 0:
                                break m;
                              case 1:
                                break G;
                              default:
                                break A;
                            }
                          }
                          if (o7 = (-1073741825 & r10) + 536870912 | 0, t3[2] = o7, k8 = u5(), !(1073741824 & r10))
                            break m;
                        }
                      c6 = w8(w8(k8 * v6) * w8(0.009999999776482582)), r10 = 2;
                      break A;
                    }
                    r10 = v6 == v6, c6 = v6;
                    break A;
                  }
                  r10 = 2, c6 = k8;
                }
                rt4(s5, N7, c6, i6, m6, r10, A6, v6, 1, 0, l4[s5 + 568 >> 2], E4 + 8 | 0, 0, l4[1735]) && (rO2(s5, 3 & d6[s5 + 300 | 0], A6, v6, A6), function r11(e5, a7, i7, n6) {
                  var f8 = 0, t4 = 0, b9 = 0, o8 = 0, k9 = 0, c7 = 0, u6 = 0, s6 = 0, A7 = 0, h5 = 0, v7 = 0, m7 = w8(0), N8 = w8(0), E5 = w8(0), G4 = 0, R7 = w8(0);
                  r:
                    if (0 != a7) {
                      if (m7 = p7[e5 + 248 >> 2], N8 = p7[e5 + 244 >> 2], E5 = p7[e5 + 232 >> 2], s6 = +p7[e5 + 228 >> 2], f8 = (b9 = 8 & d6[e5 + 4 | 0]) >>> 3 | 0, G4 = e5, R7 = rH2(s6, a7, 0, f8), p7[G4 + 228 >> 2] = R7, A7 = +E5, G4 = e5, R7 = rH2(A7, a7, 0, f8), p7[G4 + 232 >> 2] = R7, f8 = (k9 = rl3((h5 = +N8) * a7)) != k9, t4 = (c7 = rl3((v7 = +m7) * a7)) != c7, i7 = s6 + i7, o8 = f8 | (o8 = 1e-4 > y4(k9)) ? !o8 | f8 : !(1e-4 > y4(k9 + -1)), f8 = (0 | b9) != 0, G4 = e5, R7 = w8(rH2(i7 + h5, a7, o8 & f8, !o8 & f8) - rH2(i7, a7, 0, f8)), p7[G4 + 244 >> 2] = R7, n6 = A7 + n6, t4 = t4 | (b9 = 1e-4 > y4(c7)) ? !b9 | t4 : !(1e-4 > y4(c7 + -1)), G4 = e5, R7 = w8(rH2(n6 + v7, a7, f8 & t4, !t4 & f8) - rH2(n6, a7, 0, f8)), p7[G4 + 248 >> 2] = R7, f8 = l4[e5 + 560 >> 2], t4 = l4[e5 + 556 >> 2], (0 | f8) == (0 | t4))
                        break r;
                      for (t4 = (f8 = f8 - t4 >> 2) >>> 0 <= 1 ? 1 : f8; f8 = l4[e5 + 556 >> 2], f8 = l4[e5 + 560 >> 2] - f8 >> 2 >>> 0 > u6 >>> 0 ? l4[f8 + (u6 << 2) >> 2] : 0, r11(f8, a7, i7, n6), (0 | t4) != (0 | (u6 = u6 + 1 | 0)); )
                        ;
                    }
                }(s5, +p7[l4[s5 + 568 >> 2] + 16 >> 2], 0, 0)), re3 = E4 - -64 | 0;
              }, function(r10, e4, a6, i6, n5) {
                r10 |= 0, e4 |= 0, a6 = +a6, i6 = +i6, n5 |= 0;
                var f7 = 0;
                f7 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (f7 = l4[f7 + l4[e4 >> 2] >> 2]), eY[0 | f7](e4, a6, i6, n5);
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 228 >> 2];
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 236 >> 2];
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 232 >> 2];
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 240 >> 2];
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 244 >> 2];
              }, function(r10) {
                return +p7[l4[(r10 |= 0) >> 2] + 248 >> 2];
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0, e4 = l4[e4 >> 2], m5[r10 >> 3] = p7[e4 + 228 >> 2], m5[r10 + 8 >> 3] = p7[e4 + 236 >> 2], m5[r10 + 16 >> 3] = p7[e4 + 232 >> 2], m5[r10 + 24 >> 3] = p7[e4 + 240 >> 2], m5[r10 + 32 >> 3] = p7[e4 + 244 >> 2], m5[r10 + 40 >> 3] = p7[e4 + 248 >> 2];
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0, i6 = 0;
                return re3 = a6 = re3 - 48 | 0, i6 = l4[r10 >> 2], e4 = ((r10 = l4[r10 + 4 >> 2]) >> 1) + e4 | 0, 1 & r10 && (i6 = l4[i6 + l4[e4 >> 2] >> 2]), eY[0 | i6](a6, e4), r10 = ru3(eo2(48), a6, 48), re3 = a6 + 48 | 0, 0 | r10;
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                if (re3 = a6 = re3 - 16 | 0, r10 = l4[r10 >> 2], (0 | e4) < 6) {
                  re3 = a6 + 16 | 0;
                  r: {
                    e:
                      switch (e4 - 4 | 0) {
                        case 0:
                          if (e4 = r10 + 260 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 252 | 0;
                          break r;
                        case 1:
                          if (e4 = r10 + 252 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 260 | 0;
                          break r;
                        default:
                          break e;
                      }
                    e4 = (r10 + (e4 << 2) | 0) + 252 | 0;
                  }
                  return +p7[e4 >> 2];
                }
                l4[a6 >> 2] = 1871, rB2(r10, a6), eX(), k7();
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                if (re3 = a6 = re3 - 16 | 0, r10 = l4[r10 >> 2], (0 | e4) < 6) {
                  re3 = a6 + 16 | 0;
                  r: {
                    e:
                      switch (e4 - 4 | 0) {
                        case 0:
                          if (e4 = r10 + 276 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 268 | 0;
                          break r;
                        case 1:
                          if (e4 = r10 + 268 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 276 | 0;
                          break r;
                        default:
                          break e;
                      }
                    e4 = (r10 + (e4 << 2) | 0) + 268 | 0;
                  }
                  return +p7[e4 >> 2];
                }
                l4[a6 >> 2] = 1871, rB2(r10, a6), eX(), k7();
              }, function(r10, e4) {
                r10 |= 0, e4 |= 0;
                var a6 = 0;
                if (re3 = a6 = re3 - 16 | 0, r10 = l4[r10 >> 2], (0 | e4) < 6) {
                  re3 = a6 + 16 | 0;
                  r: {
                    e:
                      switch (e4 - 4 | 0) {
                        case 0:
                          if (e4 = r10 + 292 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 284 | 0;
                          break r;
                        case 1:
                          if (e4 = r10 + 284 | 0, (3 & d6[r10 + 300 | 0]) == 2)
                            break r;
                          e4 = r10 + 292 | 0;
                          break r;
                        default:
                          break e;
                      }
                    e4 = (r10 + (e4 << 2) | 0) + 284 | 0;
                  }
                  return +p7[e4 >> 2];
                }
                l4[a6 >> 2] = 1871, rB2(r10, a6), eX(), k7();
              }, eR, eG, eR, eG, rw2, ew, function(r10) {
                rE2(ew(r10 |= 0));
              }, function(r10, e4, a6, i6, n5, f7) {
                r10 |= 0, e4 |= 0, a6 = w8(a6), i6 |= 0, n5 = w8(n5), f7 |= 0;
                var t4 = 0, b8 = 0, o7 = 0;
                re3 = t4 = re3 - 48 | 0, o7 = l4[e4 + 8 >> 2];
                r: {
                  if (1 & s4[6972]) {
                    e4 = l4[1742];
                    break r;
                  }
                  e4 = 0 | F4(5, 4416), s4[6972] = 1, l4[1742] = e4;
                }
                l4[t4 + 40 >> 2] = f7, p7[t4 + 32 >> 2] = n5, l4[t4 + 24 >> 2] = i6, p7[t4 + 16 >> 2] = a6, b8 = +H4(0 | e4, 0 | o7, 2873, t4 + 12 | 0, t4 + 16 | 0);
                e: {
                  if (b8 < 4294967296 & b8 >= 0) {
                    e4 = ~~b8 >>> 0;
                    break e;
                  }
                  e4 = 0;
                }
                i6 = l4[t4 + 12 >> 2], f7 = l4[e4 + 4 >> 2], l4[r10 >> 2] = l4[e4 >> 2], l4[r10 + 4 >> 2] = f7, f7 = l4[e4 + 12 >> 2], l4[r10 + 8 >> 2] = l4[e4 + 8 >> 2], l4[r10 + 12 >> 2] = f7, M5(0 | i6), re3 = t4 + 48 | 0;
              }, eC, eS, eN, function(r10) {
                rE2(eN(r10 |= 0));
              }, function(r10) {
                ep(l4[(r10 |= 0) + 8 >> 2], 3244);
              }, eC, function(r10) {
                return 0 | K3(l4[(r10 |= 0) + 60 >> 2]);
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0, o7 = 0, k8 = 0;
                re3 = i6 = re3 - 32 | 0, n5 = l4[r10 + 28 >> 2], l4[i6 + 16 >> 2] = n5, f7 = l4[r10 + 20 >> 2], l4[i6 + 28 >> 2] = a6, l4[i6 + 24 >> 2] = e4, e4 = f7 - n5 | 0, l4[i6 + 20 >> 2] = e4, f7 = e4 + a6 | 0, o7 = 2, e4 = i6 + 16 | 0;
                r: {
                  for (; ; ) {
                    e: {
                      a: {
                        i: {
                          if (!eZ(0 | J3(l4[r10 + 60 >> 2], 0 | e4, 0 | o7, i6 + 12 | 0))) {
                            if ((0 | (t4 = l4[i6 + 12 >> 2])) == (0 | f7))
                              break i;
                            if ((0 | t4) >= 0)
                              break a;
                            break e;
                          }
                          if ((0 | f7) != -1)
                            break e;
                        }
                        e4 = l4[r10 + 44 >> 2], l4[r10 + 28 >> 2] = e4, l4[r10 + 20 >> 2] = e4, l4[r10 + 16 >> 2] = e4 + l4[r10 + 48 >> 2], r10 = a6;
                        break r;
                      }
                      n5 = ((k8 = (b8 = l4[e4 + 4 >> 2]) >>> 0 < t4 >>> 0) << 3) + e4 | 0, b8 = t4 - (k8 ? b8 : 0) | 0, l4[n5 >> 2] = b8 + l4[n5 >> 2], l4[(e4 = (k8 ? 12 : 4) + e4 | 0) >> 2] = l4[e4 >> 2] - b8, f7 = f7 - t4 | 0, o7 = o7 - k8 | 0, e4 = n5;
                      continue;
                    }
                    break;
                  }
                  if (l4[r10 + 28 >> 2] = 0, l4[r10 + 16 >> 2] = 0, l4[r10 + 20 >> 2] = 0, l4[r10 >> 2] = 32 | l4[r10 >> 2], r10 = 0, (0 | o7) == 2)
                    break r;
                  r10 = a6 - l4[e4 + 4 >> 2] | 0;
                }
                return re3 = i6 + 32 | 0, 0 | r10;
              }, function(r10, e4, a6, i6) {
                r10 |= 0, e4 |= 0, a6 |= 0, i6 |= 0;
                var n5 = 0;
                return re3 = n5 = re3 - 16 | 0, r10 = eZ(0 | z6(l4[r10 + 60 >> 2], 0 | e4, 0 | a6, 255 & i6, n5 + 8 | 0)), re3 = n5 + 16 | 0, ra2 = r10 ? -1 : l4[n5 + 12 >> 2], (r10 ? -1 : l4[n5 + 8 >> 2]) | 0;
              }, function(r10) {
                return 0;
              }, function(r10, e4, a6, i6) {
                return ra2 = 0, 0;
              }, function(r10, e4, a6) {
                r10 |= 0, e4 |= 0, a6 |= 0;
                var i6 = 0, n5 = 0, f7 = 0, t4 = 0, b8 = 0;
                return n5 = l4[r10 + 84 >> 2], f7 = l4[n5 >> 2], i6 = l4[n5 + 4 >> 2], b8 = l4[r10 + 28 >> 2], t4 = l4[r10 + 20 >> 2] - b8 | 0, (t4 = i6 >>> 0 < t4 >>> 0 ? i6 : t4) && (ru3(f7, b8, t4), f7 = t4 + l4[n5 >> 2] | 0, l4[n5 >> 2] = f7, i6 = l4[n5 + 4 >> 2] - t4 | 0, l4[n5 + 4 >> 2] = i6), (i6 = a6 >>> 0 > i6 >>> 0 ? i6 : a6) && (ru3(f7, e4, i6), f7 = i6 + l4[n5 >> 2] | 0, l4[n5 >> 2] = f7, l4[n5 + 4 >> 2] = l4[n5 + 4 >> 2] - i6), s4[0 | f7] = 0, e4 = l4[r10 + 44 >> 2], l4[r10 + 28 >> 2] = e4, l4[r10 + 20 >> 2] = e4, 0 | a6;
              }, eS]).set = function(r10, e4) {
                this[r10] = e4;
              }, a5.get = function(r10) {
                return this[r10];
              }, a5);
              function eU() {
                return b7.byteLength / 65536 | 0;
              }
              return { E: function() {
                for (var r10 = 0, e4 = 0, a6 = 0; a6 = (e4 = r10 << 4) + 5888 | 0, l4[e4 + 5892 >> 2] = a6, l4[e4 + 5896 >> 2] = a6, (0 | (r10 = r10 + 1 | 0)) != 64; )
                  ;
                rd2(48), l4[1736] = 16, l4[1737] = 0, rn3(), l4[1737] = l4[1748], l4[1748] = 6944, l4[1749] = 194, l4[1750] = 0, rw2(), l4[1750] = l4[1748], l4[1748] = 6996;
              }, F: function(r10) {
                r10 |= 0;
                var e4 = 0, a6 = 0, i6 = 0, n5 = 0, f7 = 0;
                re3 = a6 = re3 - 96 | 0, l4[a6 >> 2] = r10, re3 = i6 = re3 - 16 | 0, l4[i6 + 12 >> 2] = a6, re3 = r10 = re3 - 144 | 0, r10 = ru3(r10, 5440, 144), e4 = f7 = a6 + 16 | 0, l4[r10 + 44 >> 2] = e4, l4[r10 + 20 >> 2] = e4, n5 = (n5 = -2 - e4 | 0) >>> 0 >= 2147483647 ? 2147483647 : n5, l4[r10 + 48 >> 2] = n5, e4 = e4 + n5 | 0, l4[r10 + 28 >> 2] = e4, l4[r10 + 16 >> 2] = e4, rG2(r10, 2201, a6, 0, 0), n5 && (s4[(e4 = l4[r10 + 20 >> 2]) - ((0 | e4) == l4[r10 + 16 >> 2]) | 0] = 0), re3 = r10 + 144 | 0, re3 = i6 + 16 | 0, r10 = f7;
                r: {
                  if (3 & r10)
                    for (; ; ) {
                      if (!d6[0 | r10])
                        break r;
                      if (!(3 & (r10 = r10 + 1 | 0)))
                        break;
                    }
                  for (; e4 = r10, r10 = r10 + 4 | 0, !((-1 ^ (i6 = l4[e4 >> 2])) & i6 - 16843009 & -2139062144); )
                    ;
                  for (; e4 = (r10 = e4) + 1 | 0, d6[0 | r10]; )
                    ;
                }
                return r10 = (e4 = rb2(r10 = (r10 - f7 | 0) + 1 | 0)) ? ru3(e4, f7, r10) : 0, re3 = a6 + 96 | 0, 0 | r10;
              }, G: function() {
                var r10 = 0;
                if (r10 = l4[1748])
                  for (; eY[l4[r10 >> 2]](), r10 = l4[r10 + 4 >> 2]; )
                    ;
              }, H: rb2, I: eY, J: rE2, K: function(r10, e4, a6, i6, n5) {
                return e4 |= 0, a6 |= 0, i6 |= 0, n5 |= 0, 0 | eY[0 | (r10 |= 0)](e4, a6, i6, n5);
              } };
            }(r6);
          }(r5);
        }
        Object.assign(u4, n3), n3 = null, u4.wasmBinary && (l3 = u4.wasmBinary), u4.noExitRuntime;
        var c4 = Error;
        l3 = [];
        var u4, s3, A4, l3, d5, h2 = false;
        function v4(r5, e3, a4) {
          a4 = e3 + a4;
          for (var i4 = ""; !(e3 >= a4); ) {
            var n4 = r5[e3++];
            if (!n4)
              break;
            if (128 & n4) {
              var f5 = 63 & r5[e3++];
              if (192 == (224 & n4))
                i4 += String.fromCharCode((31 & n4) << 6 | f5);
              else {
                var t3 = 63 & r5[e3++];
                65536 > (n4 = 224 == (240 & n4) ? (15 & n4) << 12 | f5 << 6 | t3 : (7 & n4) << 18 | f5 << 12 | t3 << 6 | 63 & r5[e3++]) ? i4 += String.fromCharCode(n4) : (n4 -= 65536, i4 += String.fromCharCode(55296 | n4 >> 10, 56320 | 1023 & n4));
              }
            } else
              i4 += String.fromCharCode(n4);
          }
          return i4;
        }
        function p6() {
          var r5 = d5.buffer;
          u4.HEAP8 = N5 = new Int8Array(r5), u4.HEAP16 = y3 = new Int16Array(r5), u4.HEAP32 = G2 = new Int32Array(r5), u4.HEAPU8 = w7 = new Uint8Array(r5), u4.HEAPU16 = E2 = new Uint16Array(r5), u4.HEAPU32 = R5 = new Uint32Array(r5), u4.HEAPF32 = g4 = new Float32Array(r5), u4.HEAPF64 = Z2 = new Float64Array(r5);
        }
        var m4 = u4.INITIAL_MEMORY || 16777216;
        65536 <= m4 || O6("INITIAL_MEMORY should be larger than STACK_SIZE, was " + m4 + "! (STACK_SIZE=65536)"), d5 = u4.wasmMemory ? u4.wasmMemory : new function() {
          this.buffer = new ArrayBuffer(m4 / 65536 * 65536);
        }(), p6(), m4 = d5.buffer.byteLength;
        var N5, w7, y3, E2, G2, R5, g4, Z2, W2, V3 = [], B2 = [], T4 = [], I4 = 0, X2 = null;
        function O6(r5) {
          throw u4.onAbort && u4.onAbort(r5), b5(r5 = "Aborted(" + r5 + ")"), h2 = true, A4(r5 = new c4(r5 + ". Build with -sASSERTIONS for more info.")), r5;
        }
        function L5(r5) {
          return r5.startsWith("data:application/octet-stream;base64,");
        }
        if (!L5(a3 = "yoga-asm.wasm")) {
          var _6 = a3;
          a3 = u4.locateFile ? u4.locateFile(_6, f4) : f4 + _6;
        }
        function F3(r5) {
          for (; 0 < r5.length; )
            r5.shift()(u4);
        }
        function C5(r5) {
          if (void 0 === r5)
            return "_unknown";
          var e3 = (r5 = r5.replace(/[^a-zA-Z0-9_]/g, "$")).charCodeAt(0);
          return 48 <= e3 && 57 >= e3 ? "_" + r5 : r5;
        }
        function S5(r5, e3) {
          return r5 = C5(r5), function() {
            return e3.apply(this, arguments);
          };
        }
        var P3 = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }], Y2 = [];
        function U3(r5) {
          var e3 = Error, a4 = S5(r5, function(e4) {
            this.name = r5, this.message = e4, void 0 !== (e4 = Error(e4).stack) && (this.stack = this.toString() + "\n" + e4.replace(/^Error(:[^\n]*)?\n/, ""));
          });
          return a4.prototype = Object.create(e3.prototype), a4.prototype.constructor = a4, a4.prototype.toString = function() {
            return void 0 === this.message ? this.name : this.name + ": " + this.message;
          }, a4;
        }
        var M4 = void 0;
        function H3(r5) {
          throw new M4(r5);
        }
        var Q2 = (r5) => (r5 || H3("Cannot use deleted val. handle = " + r5), P3[r5].value), z5 = (r5) => {
          switch (r5) {
            case void 0:
              return 1;
            case null:
              return 2;
            case true:
              return 3;
            case false:
              return 4;
            default:
              var e3 = Y2.length ? Y2.pop() : P3.length;
              return P3[e3] = { fa: 1, value: r5 }, e3;
          }
        }, j5 = void 0, D4 = void 0;
        function x4(r5) {
          for (var e3 = ""; w7[r5]; )
            e3 += D4[w7[r5++]];
          return e3;
        }
        var J2 = [];
        function K2() {
          for (; J2.length; ) {
            var r5 = J2.pop();
            r5.L.Z = false, r5.delete();
          }
        }
        var q3 = void 0, $4 = {};
        function rr2(r5, e3) {
          for (void 0 === e3 && H3("ptr should not be undefined"); r5.P; )
            e3 = r5.aa(e3), r5 = r5.P;
          return e3;
        }
        var re2 = {};
        function ra(r5) {
          var e3 = x4(r5 = rq(r5));
          return r0(r5), e3;
        }
        function ri(r5, e3) {
          var a4 = re2[r5];
          return void 0 === a4 && H3(e3 + " has unknown type " + ra(r5)), a4;
        }
        function rn2() {
        }
        var rf = false;
        function rt3(r5) {
          --r5.count.value, 0 === r5.count.value && (r5.S ? r5.T.V(r5.S) : r5.O.M.V(r5.N));
        }
        var rb = {}, ro2 = void 0;
        function rk(r5) {
          throw new ro2(r5);
        }
        function rc(r5, e3) {
          return e3.O && e3.N || rk("makeClassHandle requires ptr and ptrType"), !!e3.T != !!e3.S && rk("Both smartPtrType and smartPtr must be specified"), e3.count = { value: 1 }, ru2(Object.create(r5, { L: { value: e3 } }));
        }
        function ru2(r5) {
          return "undefined" == typeof FinalizationRegistry ? (ru2 = (r6) => r6, r5) : (rf = new FinalizationRegistry((r6) => {
            rt3(r6.L);
          }), ru2 = (r6) => {
            var e3 = r6.L;
            return e3.S && rf.register(r6, { L: e3 }, r6), r6;
          }, rn2 = (r6) => {
            rf.unregister(r6);
          }, ru2(r5));
        }
        var rs2 = {};
        function rA(r5) {
          for (; r5.length; ) {
            var e3 = r5.pop();
            r5.pop()(e3);
          }
        }
        function rl2(r5) {
          return this.fromWireType(G2[r5 >> 2]);
        }
        var rd = {}, rh = {};
        function rv(r5, e3, a4) {
          function i4(e4) {
            (e4 = a4(e4)).length !== r5.length && rk("Mismatched type converter count");
            for (var i5 = 0; i5 < r5.length; ++i5)
              rm(r5[i5], e4[i5]);
          }
          r5.forEach(function(r6) {
            rh[r6] = e3;
          });
          var n4 = Array(e3.length), f5 = [], t3 = 0;
          e3.forEach((r6, e4) => {
            re2.hasOwnProperty(r6) ? n4[e4] = re2[r6] : (f5.push(r6), rd.hasOwnProperty(r6) || (rd[r6] = []), rd[r6].push(() => {
              n4[e4] = re2[r6], ++t3 === f5.length && i4(n4);
            }));
          }), 0 === f5.length && i4(n4);
        }
        function rp(r5) {
          switch (r5) {
            case 1:
              return 0;
            case 2:
              return 1;
            case 4:
              return 2;
            case 8:
              return 3;
            default:
              throw TypeError("Unknown type size: " + r5);
          }
        }
        function rm(r5, e3, a4 = {}) {
          if (!("argPackAdvance" in e3))
            throw TypeError("registerType registeredInstance requires argPackAdvance");
          var i4 = e3.name;
          if (r5 || H3('type "' + i4 + '" must have a positive integer typeid pointer'), re2.hasOwnProperty(r5)) {
            if (a4.ta)
              return;
            H3("Cannot register type '" + i4 + "' twice");
          }
          re2[r5] = e3, delete rh[r5], rd.hasOwnProperty(r5) && (e3 = rd[r5], delete rd[r5], e3.forEach((r6) => r6()));
        }
        function rN(r5) {
          H3(r5.L.O.M.name + " instance already deleted");
        }
        function rw() {
        }
        function ry(r5, e3, a4) {
          if (void 0 === r5[e3].R) {
            var i4 = r5[e3];
            r5[e3] = function() {
              return r5[e3].R.hasOwnProperty(arguments.length) || H3("Function '" + a4 + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + r5[e3].R + ")!"), r5[e3].R[arguments.length].apply(this, arguments);
            }, r5[e3].R = [], r5[e3].R[i4.Y] = i4;
          }
        }
        function rE(r5, e3, a4, i4, n4, f5, t3, b6) {
          this.name = r5, this.constructor = e3, this.W = a4, this.V = i4, this.P = n4, this.oa = f5, this.aa = t3, this.ma = b6, this.ia = [];
        }
        function rG(r5, e3, a4) {
          for (; e3 !== a4; )
            e3.aa || H3("Expected null or instance of " + a4.name + ", got an instance of " + e3.name), r5 = e3.aa(r5), e3 = e3.P;
          return r5;
        }
        function rR(r5, e3) {
          return null === e3 ? (this.da && H3("null is not a valid " + this.name), 0) : (e3.L || H3('Cannot pass "' + rL(e3) + '" as a ' + this.name), e3.L.N || H3("Cannot pass deleted object as a pointer of type " + this.name), rG(e3.L.N, e3.L.O.M, this.M));
        }
        function rg(r5, e3) {
          if (null === e3) {
            if (this.da && H3("null is not a valid " + this.name), this.ca) {
              var a4 = this.ea();
              return null !== r5 && r5.push(this.V, a4), a4;
            }
            return 0;
          }
          if (e3.L || H3('Cannot pass "' + rL(e3) + '" as a ' + this.name), e3.L.N || H3("Cannot pass deleted object as a pointer of type " + this.name), !this.ba && e3.L.O.ba && H3("Cannot convert argument of type " + (e3.L.T ? e3.L.T.name : e3.L.O.name) + " to parameter type " + this.name), a4 = rG(e3.L.N, e3.L.O.M, this.M), this.ca)
            switch (void 0 === e3.L.S && H3("Passing raw pointer to smart pointer is illegal"), this.Aa) {
              case 0:
                e3.L.T === this ? a4 = e3.L.S : H3("Cannot convert argument of type " + (e3.L.T ? e3.L.T.name : e3.L.O.name) + " to parameter type " + this.name);
                break;
              case 1:
                a4 = e3.L.S;
                break;
              case 2:
                if (e3.L.T === this)
                  a4 = e3.L.S;
                else {
                  var i4 = e3.clone();
                  a4 = this.wa(a4, z5(function() {
                    i4.delete();
                  })), null !== r5 && r5.push(this.V, a4);
                }
                break;
              default:
                H3("Unsupporting sharing policy");
            }
          return a4;
        }
        function rZ(r5, e3) {
          return null === e3 ? (this.da && H3("null is not a valid " + this.name), 0) : (e3.L || H3('Cannot pass "' + rL(e3) + '" as a ' + this.name), e3.L.N || H3("Cannot pass deleted object as a pointer of type " + this.name), e3.L.O.ba && H3("Cannot convert argument of type " + e3.L.O.name + " to parameter type " + this.name), rG(e3.L.N, e3.L.O.M, this.M));
        }
        function rW(r5, e3, a4, i4) {
          this.name = r5, this.M = e3, this.da = a4, this.ba = i4, this.ca = false, this.V = this.wa = this.ea = this.ja = this.Aa = this.va = void 0, void 0 !== e3.P ? this.toWireType = rg : (this.toWireType = i4 ? rR : rZ, this.U = null);
        }
        function rV(r5, e3) {
          var a4, i4, n4 = (r5 = x4(r5)).includes("j") ? (a4 = r5, i4 = [], function() {
            if (i4.length = 0, Object.assign(i4, arguments), a4.includes("j")) {
              var r6 = u4["dynCall_" + a4];
              r6 = i4 && i4.length ? r6.apply(null, [e3].concat(i4)) : r6.call(null, e3);
            } else
              r6 = W2.get(e3).apply(null, i4);
            return r6;
          }) : W2.get(e3);
          return "function" != typeof n4 && H3("unknown function pointer with signature " + r5 + ": " + e3), n4;
        }
        var rB = void 0;
        function rT(r5, e3) {
          var a4 = [], i4 = {};
          throw e3.forEach(function r6(e4) {
            i4[e4] || re2[e4] || (rh[e4] ? rh[e4].forEach(r6) : (a4.push(e4), i4[e4] = true));
          }), new rB(r5 + ": " + a4.map(ra).join([", "]));
        }
        function rI(r5, e3, a4, i4, n4) {
          var f5 = e3.length;
          2 > f5 && H3("argTypes array size mismatch! Must at least get return value and 'this' types!");
          var t3 = null !== e3[1] && null !== a4, b6 = false;
          for (a4 = 1; a4 < e3.length; ++a4)
            if (null !== e3[a4] && void 0 === e3[a4].U) {
              b6 = true;
              break;
            }
          var o6 = "void" !== e3[0].name, k7 = f5 - 2, c5 = Array(k7), u5 = [], s4 = [];
          return function() {
            if (arguments.length !== k7 && H3("function " + r5 + " called with " + arguments.length + " arguments, expected " + k7 + " args!"), s4.length = 0, u5.length = t3 ? 2 : 1, u5[0] = n4, t3) {
              var a5 = e3[1].toWireType(s4, this);
              u5[1] = a5;
            }
            for (var f6 = 0; f6 < k7; ++f6)
              c5[f6] = e3[f6 + 2].toWireType(s4, arguments[f6]), u5.push(c5[f6]);
            if (f6 = i4.apply(null, u5), b6)
              rA(s4);
            else
              for (var A5 = t3 ? 1 : 2; A5 < e3.length; A5++) {
                var l4 = 1 === A5 ? a5 : c5[A5 - 2];
                null !== e3[A5].U && e3[A5].U(l4);
              }
            return o6 ? e3[0].fromWireType(f6) : void 0;
          };
        }
        function rX(r5, e3) {
          for (var a4 = [], i4 = 0; i4 < r5; i4++)
            a4.push(R5[e3 + 4 * i4 >> 2]);
          return a4;
        }
        function rO(r5) {
          4 < r5 && 0 == --P3[r5].fa && (P3[r5] = void 0, Y2.push(r5));
        }
        function rL(r5) {
          if (null === r5)
            return "null";
          var e3 = typeof r5;
          return "object" === e3 || "array" === e3 || "function" === e3 ? r5.toString() : "" + r5;
        }
        function r_(r5, e3) {
          for (var a4 = "", i4 = 0; !(i4 >= e3 / 2); ++i4) {
            var n4 = y3[r5 + 2 * i4 >> 1];
            if (0 == n4)
              break;
            a4 += String.fromCharCode(n4);
          }
          return a4;
        }
        function rF(r5, e3, a4) {
          if (void 0 === a4 && (a4 = 2147483647), 2 > a4)
            return 0;
          a4 -= 2;
          var i4 = e3;
          a4 = a4 < 2 * r5.length ? a4 / 2 : r5.length;
          for (var n4 = 0; n4 < a4; ++n4)
            y3[e3 >> 1] = r5.charCodeAt(n4), e3 += 2;
          return y3[e3 >> 1] = 0, e3 - i4;
        }
        function rC(r5) {
          return 2 * r5.length;
        }
        function rS(r5, e3) {
          for (var a4 = 0, i4 = ""; !(a4 >= e3 / 4); ) {
            var n4 = G2[r5 + 4 * a4 >> 2];
            if (0 == n4)
              break;
            ++a4, 65536 <= n4 ? (n4 -= 65536, i4 += String.fromCharCode(55296 | n4 >> 10, 56320 | 1023 & n4)) : i4 += String.fromCharCode(n4);
          }
          return i4;
        }
        function rP(r5, e3, a4) {
          if (void 0 === a4 && (a4 = 2147483647), 4 > a4)
            return 0;
          var i4 = e3;
          a4 = i4 + a4 - 4;
          for (var n4 = 0; n4 < r5.length; ++n4) {
            var f5 = r5.charCodeAt(n4);
            if (55296 <= f5 && 57343 >= f5 && (f5 = 65536 + ((1023 & f5) << 10) | 1023 & r5.charCodeAt(++n4)), G2[e3 >> 2] = f5, (e3 += 4) + 4 > a4)
              break;
          }
          return G2[e3 >> 2] = 0, e3 - i4;
        }
        function rY(r5) {
          for (var e3 = 0, a4 = 0; a4 < r5.length; ++a4) {
            var i4 = r5.charCodeAt(a4);
            55296 <= i4 && 57343 >= i4 && ++a4, e3 += 4;
          }
          return e3;
        }
        var rU = {};
        function rM(r5) {
          var e3 = rU[r5];
          return void 0 === e3 ? x4(r5) : e3;
        }
        var rH = [], rQ = [], rz = [null, [], []];
        M4 = u4.BindingError = U3("BindingError"), u4.count_emval_handles = function() {
          for (var r5 = 0, e3 = 5; e3 < P3.length; ++e3)
            void 0 !== P3[e3] && ++r5;
          return r5;
        }, u4.get_first_emval = function() {
          for (var r5 = 5; r5 < P3.length; ++r5)
            if (void 0 !== P3[r5])
              return P3[r5];
          return null;
        }, j5 = u4.PureVirtualError = U3("PureVirtualError");
        for (var rj = Array(256), rD = 0; 256 > rD; ++rD)
          rj[rD] = String.fromCharCode(rD);
        D4 = rj, u4.getInheritedInstanceCount = function() {
          return Object.keys($4).length;
        }, u4.getLiveInheritedInstances = function() {
          var r5, e3 = [];
          for (r5 in $4)
            $4.hasOwnProperty(r5) && e3.push($4[r5]);
          return e3;
        }, u4.flushPendingDeletes = K2, u4.setDelayFunction = function(r5) {
          q3 = r5, J2.length && q3 && q3(K2);
        }, ro2 = u4.InternalError = U3("InternalError"), rw.prototype.isAliasOf = function(r5) {
          if (!(this instanceof rw && r5 instanceof rw))
            return false;
          var e3 = this.L.O.M, a4 = this.L.N, i4 = r5.L.O.M;
          for (r5 = r5.L.N; e3.P; )
            a4 = e3.aa(a4), e3 = e3.P;
          for (; i4.P; )
            r5 = i4.aa(r5), i4 = i4.P;
          return e3 === i4 && a4 === r5;
        }, rw.prototype.clone = function() {
          if (this.L.N || rN(this), this.L.$)
            return this.L.count.value += 1, this;
          var r5 = ru2, e3 = Object, a4 = e3.create, i4 = Object.getPrototypeOf(this), n4 = this.L;
          return r5 = r5(a4.call(e3, i4, { L: { value: { count: n4.count, Z: n4.Z, $: n4.$, N: n4.N, O: n4.O, S: n4.S, T: n4.T } } })), r5.L.count.value += 1, r5.L.Z = false, r5;
        }, rw.prototype.delete = function() {
          this.L.N || rN(this), this.L.Z && !this.L.$ && H3("Object already scheduled for deletion"), rn2(this), rt3(this.L), this.L.$ || (this.L.S = void 0, this.L.N = void 0);
        }, rw.prototype.isDeleted = function() {
          return !this.L.N;
        }, rw.prototype.deleteLater = function() {
          return this.L.N || rN(this), this.L.Z && !this.L.$ && H3("Object already scheduled for deletion"), J2.push(this), 1 === J2.length && q3 && q3(K2), this.L.Z = true, this;
        }, rW.prototype.pa = function(r5) {
          return this.ja && (r5 = this.ja(r5)), r5;
        }, rW.prototype.ga = function(r5) {
          this.V && this.V(r5);
        }, rW.prototype.argPackAdvance = 8, rW.prototype.readValueFromPointer = rl2, rW.prototype.deleteObject = function(r5) {
          null !== r5 && r5.delete();
        }, rW.prototype.fromWireType = function(r5) {
          function e3() {
            return this.ca ? rc(this.M.W, { O: this.va, N: i4, T: this, S: r5 }) : rc(this.M.W, { O: this, N: r5 });
          }
          var a4, i4 = this.pa(r5);
          if (!i4)
            return this.ga(r5), null;
          var n4 = $4[rr2(this.M, i4)];
          if (void 0 !== n4)
            return 0 === n4.L.count.value ? (n4.L.N = i4, n4.L.S = r5, n4.clone()) : (n4 = n4.clone(), this.ga(r5), n4);
          if (!(n4 = rb[n4 = this.M.oa(i4)]))
            return e3.call(this);
          n4 = this.ba ? n4.ka : n4.pointerType;
          var f5 = function r6(e4, a5, i5) {
            return a5 === i5 ? e4 : void 0 === i5.P ? null : null === (e4 = r6(e4, a5, i5.P)) ? null : i5.ma(e4);
          }(i4, this.M, n4.M);
          return null === f5 ? e3.call(this) : this.ca ? rc(n4.M.W, { O: n4, N: f5, T: this, S: r5 }) : rc(n4.M.W, { O: n4, N: f5 });
        }, rB = u4.UnboundTypeError = U3("UnboundTypeError");
        var rx = "function" == typeof atob ? atob : function(r5) {
          var e3 = "", a4 = 0;
          r5 = r5.replace(/[^A-Za-z0-9\+\/=]/g, "");
          do {
            var i4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r5.charAt(a4++)), n4 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r5.charAt(a4++)), f5 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r5.charAt(a4++)), t3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(r5.charAt(a4++));
            i4 = i4 << 2 | n4 >> 4, n4 = (15 & n4) << 4 | f5 >> 2;
            var b6 = (3 & f5) << 6 | t3;
            e3 += String.fromCharCode(i4), 64 !== f5 && (e3 += String.fromCharCode(n4)), 64 !== t3 && (e3 += String.fromCharCode(b6));
          } while (a4 < r5.length);
          return e3;
        }, rJ = { q: function(r5, e3, a4) {
          r5 = x4(r5), e3 = ri(e3, "wrapper"), a4 = Q2(a4);
          var i4 = [].slice, n4 = e3.M, f5 = n4.W, t3 = n4.P.W, b6 = n4.P.constructor;
          for (var o6 in r5 = S5(r5, function() {
            n4.P.ia.forEach(function(r6) {
              if (this[r6] === t3[r6])
                throw new j5("Pure virtual function " + r6 + " must be implemented in JavaScript");
            }.bind(this)), Object.defineProperty(this, "__parent", { value: f5 }), this.__construct.apply(this, i4.call(arguments));
          }), f5.__construct = function() {
            this === f5 && H3("Pass correct 'this' to __construct");
            var r6 = b6.implement.apply(void 0, [this].concat(i4.call(arguments)));
            rn2(r6);
            var e4 = r6.L;
            r6.notifyOnDestruction(), e4.$ = true, Object.defineProperties(this, { L: { value: e4 } }), ru2(this), r6 = rr2(n4, r6 = e4.N), $4.hasOwnProperty(r6) ? H3("Tried to register registered instance: " + r6) : $4[r6] = this;
          }, f5.__destruct = function() {
            this === f5 && H3("Pass correct 'this' to __destruct"), rn2(this);
            var r6 = this.L.N;
            r6 = rr2(n4, r6), $4.hasOwnProperty(r6) ? delete $4[r6] : H3("Tried to unregister unregistered instance: " + r6);
          }, r5.prototype = Object.create(f5), a4)
            r5.prototype[o6] = a4[o6];
          return z5(r5);
        }, k: function(r5) {
          var e3 = rs2[r5];
          delete rs2[r5];
          var a4 = e3.ea, i4 = e3.V, n4 = e3.ha;
          rv([r5], n4.map((r6) => r6.sa).concat(n4.map((r6) => r6.ya)), (r6) => {
            var f5 = {};
            return n4.forEach((e4, a5) => {
              var i5 = r6[a5], t3 = e4.qa, b6 = e4.ra, o6 = r6[a5 + n4.length], k7 = e4.xa, c5 = e4.za;
              f5[e4.na] = { read: (r7) => i5.fromWireType(t3(b6, r7)), write: (r7, e5) => {
                var a6 = [];
                k7(c5, r7, o6.toWireType(a6, e5)), rA(a6);
              } };
            }), [{ name: e3.name, fromWireType: function(r7) {
              var e4, a5 = {};
              for (e4 in f5)
                a5[e4] = f5[e4].read(r7);
              return i4(r7), a5;
            }, toWireType: function(r7, e4) {
              for (var n5 in f5)
                if (!(n5 in e4))
                  throw TypeError('Missing field:  "' + n5 + '"');
              var t3 = a4();
              for (n5 in f5)
                f5[n5].write(t3, e4[n5]);
              return null !== r7 && r7.push(i4, t3), t3;
            }, argPackAdvance: 8, readValueFromPointer: rl2, U: i4 }];
          });
        }, w: function() {
        }, C: function(r5, e3, a4, i4, n4) {
          var f5 = rp(a4);
          rm(r5, { name: e3 = x4(e3), fromWireType: function(r6) {
            return !!r6;
          }, toWireType: function(r6, e4) {
            return e4 ? i4 : n4;
          }, argPackAdvance: 8, readValueFromPointer: function(r6) {
            if (1 === a4)
              var i5 = N5;
            else if (2 === a4)
              i5 = y3;
            else if (4 === a4)
              i5 = G2;
            else
              throw TypeError("Unknown boolean type size: " + e3);
            return this.fromWireType(i5[r6 >> f5]);
          }, U: null });
        }, f: function(r5, e3, a4, i4, n4, f5, t3, b6, o6, k7, c5, s4, A5) {
          c5 = x4(c5), f5 = rV(n4, f5), b6 && (b6 = rV(t3, b6)), k7 && (k7 = rV(o6, k7)), A5 = rV(s4, A5);
          var l4, d6 = C5(c5);
          l4 = function() {
            rT("Cannot construct " + c5 + " due to unbound types", [i4]);
          }, u4.hasOwnProperty(d6) ? (H3("Cannot register public name '" + d6 + "' twice"), ry(u4, d6, d6), u4.hasOwnProperty(void 0) && H3("Cannot register multiple overloads of a function with the same number of arguments (undefined)!"), u4[d6].R[void 0] = l4) : u4[d6] = l4, rv([r5, e3, a4], i4 ? [i4] : [], function(e4) {
            if (e4 = e4[0], i4)
              var a5, n5 = e4.M, t4 = n5.W;
            else
              t4 = rw.prototype;
            e4 = S5(d6, function() {
              if (Object.getPrototypeOf(this) !== o7)
                throw new M4("Use 'new' to construct " + c5);
              if (void 0 === s5.X)
                throw new M4(c5 + " has no accessible constructor");
              var r6 = s5.X[arguments.length];
              if (void 0 === r6)
                throw new M4("Tried to invoke ctor of " + c5 + " with invalid number of parameters (" + arguments.length + ") - expected (" + Object.keys(s5.X).toString() + ") parameters instead!");
              return r6.apply(this, arguments);
            });
            var o7 = Object.create(t4, { constructor: { value: e4 } });
            e4.prototype = o7;
            var s5 = new rE(c5, e4, o7, A5, n5, f5, b6, k7);
            n5 = new rW(c5, s5, true, false), t4 = new rW(c5 + "*", s5, false, false);
            var l5 = new rW(c5 + " const*", s5, false, true);
            return rb[r5] = { pointerType: t4, ka: l5 }, a5 = e4, u4.hasOwnProperty(d6) || rk("Replacing nonexistant public symbol"), u4[d6] = a5, u4[d6].Y = void 0, [n5, t4, l5];
          });
        }, d: function(r5, e3, a4, i4, n4, f5, t3) {
          var b6 = rX(a4, i4);
          e3 = x4(e3), f5 = rV(n4, f5), rv([], [r5], function(r6) {
            function i5() {
              rT("Cannot call " + n5 + " due to unbound types", b6);
            }
            var n5 = (r6 = r6[0]).name + "." + e3;
            e3.startsWith("@@") && (e3 = Symbol[e3.substring(2)]);
            var o6 = r6.M.constructor;
            return void 0 === o6[e3] ? (i5.Y = a4 - 1, o6[e3] = i5) : (ry(o6, e3, n5), o6[e3].R[a4 - 1] = i5), rv([], b6, function(r7) {
              return r7 = rI(n5, [r7[0], null].concat(r7.slice(1)), null, f5, t3), void 0 === o6[e3].R ? (r7.Y = a4 - 1, o6[e3] = r7) : o6[e3].R[a4 - 1] = r7, [];
            }), [];
          });
        }, p: function(r5, e3, a4, i4, n4, f5) {
          0 < e3 || O6();
          var t3 = rX(e3, a4);
          n4 = rV(i4, n4), rv([], [r5], function(r6) {
            var a5 = "constructor " + (r6 = r6[0]).name;
            if (void 0 === r6.M.X && (r6.M.X = []), void 0 !== r6.M.X[e3 - 1])
              throw new M4("Cannot register multiple constructors with identical number of parameters (" + (e3 - 1) + ") for class '" + r6.name + "'! Overload resolution is currently only performed using the parameter count, not actual type info!");
            return r6.M.X[e3 - 1] = () => {
              rT("Cannot construct " + r6.name + " due to unbound types", t3);
            }, rv([], t3, function(i5) {
              return i5.splice(1, 0, null), r6.M.X[e3 - 1] = rI(a5, i5, null, n4, f5), [];
            }), [];
          });
        }, b: function(r5, e3, a4, i4, n4, f5, t3, b6) {
          var o6 = rX(a4, i4);
          e3 = x4(e3), f5 = rV(n4, f5), rv([], [r5], function(r6) {
            function i5() {
              rT("Cannot call " + n5 + " due to unbound types", o6);
            }
            var n5 = (r6 = r6[0]).name + "." + e3;
            e3.startsWith("@@") && (e3 = Symbol[e3.substring(2)]), b6 && r6.M.ia.push(e3);
            var k7 = r6.M.W, c5 = k7[e3];
            return void 0 === c5 || void 0 === c5.R && c5.className !== r6.name && c5.Y === a4 - 2 ? (i5.Y = a4 - 2, i5.className = r6.name, k7[e3] = i5) : (ry(k7, e3, n5), k7[e3].R[a4 - 2] = i5), rv([], o6, function(i6) {
              return i6 = rI(n5, i6, r6, f5, t3), void 0 === k7[e3].R ? (i6.Y = a4 - 2, k7[e3] = i6) : k7[e3].R[a4 - 2] = i6, [];
            }), [];
          });
        }, B: function(r5, e3) {
          rm(r5, { name: e3 = x4(e3), fromWireType: function(r6) {
            var e4 = Q2(r6);
            return rO(r6), e4;
          }, toWireType: function(r6, e4) {
            return z5(e4);
          }, argPackAdvance: 8, readValueFromPointer: rl2, U: null });
        }, n: function(r5, e3, a4) {
          a4 = rp(a4), rm(r5, { name: e3 = x4(e3), fromWireType: function(r6) {
            return r6;
          }, toWireType: function(r6, e4) {
            return e4;
          }, argPackAdvance: 8, readValueFromPointer: function(r6, e4) {
            switch (e4) {
              case 2:
                return function(r7) {
                  return this.fromWireType(g4[r7 >> 2]);
                };
              case 3:
                return function(r7) {
                  return this.fromWireType(Z2[r7 >> 3]);
                };
              default:
                throw TypeError("Unknown float type: " + r6);
            }
          }(e3, a4), U: null });
        }, e: function(r5, e3, a4, i4, n4) {
          e3 = x4(e3), -1 === n4 && (n4 = 4294967295), n4 = rp(a4);
          var f5 = (r6) => r6;
          if (0 === i4) {
            var t3 = 32 - 8 * a4;
            f5 = (r6) => r6 << t3 >>> t3;
          }
          a4 = e3.includes("unsigned") ? function(r6, e4) {
            return e4 >>> 0;
          } : function(r6, e4) {
            return e4;
          }, rm(r5, { name: e3, fromWireType: f5, toWireType: a4, argPackAdvance: 8, readValueFromPointer: function(r6, e4, a5) {
            switch (e4) {
              case 0:
                return a5 ? function(r7) {
                  return N5[r7];
                } : function(r7) {
                  return w7[r7];
                };
              case 1:
                return a5 ? function(r7) {
                  return y3[r7 >> 1];
                } : function(r7) {
                  return E2[r7 >> 1];
                };
              case 2:
                return a5 ? function(r7) {
                  return G2[r7 >> 2];
                } : function(r7) {
                  return R5[r7 >> 2];
                };
              default:
                throw TypeError("Unknown integer type: " + r6);
            }
          }(e3, n4, 0 !== i4), U: null });
        }, c: function(r5, e3, a4) {
          function i4(r6) {
            r6 >>= 2;
            var e4 = R5;
            return new n4(e4.buffer, e4[r6 + 1], e4[r6]);
          }
          var n4 = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array][e3];
          rm(r5, { name: a4 = x4(a4), fromWireType: i4, argPackAdvance: 8, readValueFromPointer: i4 }, { ta: true });
        }, o: function(r5, e3) {
          var a4 = "std::string" === (e3 = x4(e3));
          rm(r5, { name: e3, fromWireType: function(r6) {
            var e4 = R5[r6 >> 2], i4 = r6 + 4;
            if (a4)
              for (var n4 = i4, f5 = 0; f5 <= e4; ++f5) {
                var t3 = i4 + f5;
                if (f5 == e4 || 0 == w7[t3]) {
                  if (n4 = n4 ? v4(w7, n4, t3 - n4) : "", void 0 === b6)
                    var b6 = n4;
                  else
                    b6 += "\0" + n4;
                  n4 = t3 + 1;
                }
              }
            else {
              for (f5 = 0, b6 = Array(e4); f5 < e4; ++f5)
                b6[f5] = String.fromCharCode(w7[i4 + f5]);
              b6 = b6.join("");
            }
            return r0(r6), b6;
          }, toWireType: function(r6, e4) {
            e4 instanceof ArrayBuffer && (e4 = new Uint8Array(e4));
            var i4, n4 = "string" == typeof e4;
            if (n4 || e4 instanceof Uint8Array || e4 instanceof Uint8ClampedArray || e4 instanceof Int8Array || H3("Cannot pass non-string to std::string"), a4 && n4) {
              var f5 = 0;
              for (i4 = 0; i4 < e4.length; ++i4) {
                var t3 = e4.charCodeAt(i4);
                127 >= t3 ? f5++ : 2047 >= t3 ? f5 += 2 : 55296 <= t3 && 57343 >= t3 ? (f5 += 4, ++i4) : f5 += 3;
              }
              i4 = f5;
            } else
              i4 = e4.length;
            if (t3 = (f5 = r$(4 + i4 + 1)) + 4, R5[f5 >> 2] = i4, a4 && n4) {
              if (n4 = t3, t3 = i4 + 1, i4 = w7, 0 < t3) {
                t3 = n4 + t3 - 1;
                for (var b6 = 0; b6 < e4.length; ++b6) {
                  var o6 = e4.charCodeAt(b6);
                  if (55296 <= o6 && 57343 >= o6 && (o6 = 65536 + ((1023 & o6) << 10) | 1023 & e4.charCodeAt(++b6)), 127 >= o6) {
                    if (n4 >= t3)
                      break;
                    i4[n4++] = o6;
                  } else {
                    if (2047 >= o6) {
                      if (n4 + 1 >= t3)
                        break;
                      i4[n4++] = 192 | o6 >> 6;
                    } else {
                      if (65535 >= o6) {
                        if (n4 + 2 >= t3)
                          break;
                        i4[n4++] = 224 | o6 >> 12;
                      } else {
                        if (n4 + 3 >= t3)
                          break;
                        i4[n4++] = 240 | o6 >> 18, i4[n4++] = 128 | o6 >> 12 & 63;
                      }
                      i4[n4++] = 128 | o6 >> 6 & 63;
                    }
                    i4[n4++] = 128 | 63 & o6;
                  }
                }
                i4[n4] = 0;
              }
            } else if (n4)
              for (n4 = 0; n4 < i4; ++n4)
                255 < (b6 = e4.charCodeAt(n4)) && (r0(t3), H3("String has UTF-16 code units that do not fit in 8 bits")), w7[t3 + n4] = b6;
            else
              for (n4 = 0; n4 < i4; ++n4)
                w7[t3 + n4] = e4[n4];
            return null !== r6 && r6.push(r0, f5), f5;
          }, argPackAdvance: 8, readValueFromPointer: rl2, U: function(r6) {
            r0(r6);
          } });
        }, j: function(r5, e3, a4) {
          if (a4 = x4(a4), 2 === e3)
            var i4 = r_, n4 = rF, f5 = rC, t3 = () => E2, b6 = 1;
          else
            4 === e3 && (i4 = rS, n4 = rP, f5 = rY, t3 = () => R5, b6 = 2);
          rm(r5, { name: a4, fromWireType: function(r6) {
            for (var a5, n5 = R5[r6 >> 2], f6 = t3(), o6 = r6 + 4, k7 = 0; k7 <= n5; ++k7) {
              var c5 = r6 + 4 + k7 * e3;
              (k7 == n5 || 0 == f6[c5 >> b6]) && (o6 = i4(o6, c5 - o6), void 0 === a5 ? a5 = o6 : a5 += "\0" + o6, o6 = c5 + e3);
            }
            return r0(r6), a5;
          }, toWireType: function(r6, i5) {
            "string" != typeof i5 && H3("Cannot pass non-string to C++ string type " + a4);
            var t4 = f5(i5), o6 = r$(4 + t4 + e3);
            return R5[o6 >> 2] = t4 >> b6, n4(i5, o6 + 4, t4 + e3), null !== r6 && r6.push(r0, o6), o6;
          }, argPackAdvance: 8, readValueFromPointer: rl2, U: function(r6) {
            r0(r6);
          } });
        }, l: function(r5, e3, a4, i4, n4, f5) {
          rs2[r5] = { name: x4(e3), ea: rV(a4, i4), V: rV(n4, f5), ha: [] };
        }, i: function(r5, e3, a4, i4, n4, f5, t3, b6, o6, k7) {
          rs2[r5].ha.push({ na: x4(e3), sa: a4, qa: rV(i4, n4), ra: f5, ya: t3, xa: rV(b6, o6), za: k7 });
        }, D: function(r5, e3) {
          rm(r5, { ua: true, name: e3 = x4(e3), argPackAdvance: 0, fromWireType: function() {
          }, toWireType: function() {
          } });
        }, t: function(r5, e3, a4, i4, n4) {
          r5 = rH[r5], e3 = Q2(e3), a4 = rM(a4);
          var f5 = [];
          return R5[i4 >> 2] = z5(f5), r5(e3, a4, f5, n4);
        }, u: function(r5, e3, a4, i4) {
          r5 = rH[r5], r5(e3 = Q2(e3), a4 = rM(a4), null, i4);
        }, h: rO, m: function(r5, e3) {
          var a4, i4, n4 = function(r6, e4) {
            for (var a5 = Array(r6), i5 = 0; i5 < r6; ++i5)
              a5[i5] = ri(R5[e4 + 4 * i5 >> 2], "parameter " + i5);
            return a5;
          }(r5, e3), f5 = n4[0], t3 = rQ[e3 = f5.name + "_$" + n4.slice(1).map(function(r6) {
            return r6.name;
          }).join("_") + "$"];
          if (void 0 !== t3)
            return t3;
          var b6 = Array(r5 - 1);
          return a4 = (e4, a5, i5, t4) => {
            for (var o6 = 0, k7 = 0; k7 < r5 - 1; ++k7)
              b6[k7] = n4[k7 + 1].readValueFromPointer(t4 + o6), o6 += n4[k7 + 1].argPackAdvance;
            for (k7 = 0, e4 = e4[a5].apply(e4, b6); k7 < r5 - 1; ++k7)
              n4[k7 + 1].la && n4[k7 + 1].la(b6[k7]);
            if (!f5.ua)
              return f5.toWireType(i5, e4);
          }, i4 = rH.length, rH.push(a4), t3 = i4, rQ[e3] = t3;
        }, r: function(r5) {
          4 < r5 && (P3[r5].fa += 1);
        }, s: function(r5) {
          rA(Q2(r5)), rO(r5);
        }, g: function() {
          O6("");
        }, y: function(r5, e3, a4) {
          w7.copyWithin(r5, e3, e3 + a4);
        }, x: function(r5) {
          var e3 = w7.length;
          if (2147483648 < (r5 >>>= 0))
            return false;
          for (var a4 = 1; 4 >= a4; a4 *= 2) {
            var i4 = e3 * (1 + 0.2 / a4);
            i4 = Math.min(i4, r5 + 100663296);
            var n4 = Math, f5 = n4.min;
            i4 = Math.max(r5, i4), i4 += (65536 - i4 % 65536) % 65536;
            r: {
              var t3 = d5.buffer;
              try {
                d5.grow(f5.call(n4, 2147483648, i4) - t3.byteLength + 65535 >>> 16), p6();
                var b6 = 1;
                break r;
              } catch (r6) {
              }
              b6 = void 0;
            }
            if (b6)
              return true;
          }
          return false;
        }, A: function() {
          return 52;
        }, v: function() {
          return 70;
        }, z: function(r5, e3, a4, i4) {
          for (var n4 = 0, f5 = 0; f5 < a4; f5++) {
            var o6 = R5[e3 >> 2], k7 = R5[e3 + 4 >> 2];
            e3 += 8;
            for (var c5 = 0; c5 < k7; c5++) {
              var u5 = w7[o6 + c5], s4 = rz[r5];
              0 === u5 || 10 === u5 ? ((1 === r5 ? t2 : b5)(v4(s4, 0)), s4.length = 0) : s4.push(u5);
            }
            n4 += k7;
          }
          return R5[i4 >> 2] = n4, 0;
        }, a: d5 }, rK = function() {
          function r5(r6) {
            u4.asm = r6.exports, W2 = u4.asm.I, B2.unshift(u4.asm.E), I4--, u4.monitorRunDependencies && u4.monitorRunDependencies(I4), 0 == I4 && X2 && (r6 = X2, X2 = null, r6());
          }
          var e3 = { a: rJ };
          if (I4++, u4.monitorRunDependencies && u4.monitorRunDependencies(I4), u4.instantiateWasm)
            try {
              return u4.instantiateWasm(e3, r5);
            } catch (r6) {
              b5("Module.instantiateWasm callback failed with error: " + r6), A4(r6);
            }
          return e3 = function(r6) {
            var e4 = a3;
            try {
              try {
                if (e4 == a3 && l3)
                  new Uint8Array(l3);
                else {
                  if (L5(e4)) {
                    try {
                      var i4 = rx(e4.slice(37)), n4 = new Uint8Array(i4.length);
                      for (e4 = 0; e4 < i4.length; ++e4)
                        n4[e4] = i4.charCodeAt(e4);
                      var f5 = n4;
                    } catch (r7) {
                      throw Error("Converting base64 string to bytes failed.");
                    }
                    var t3 = f5;
                  } else
                    t3 = void 0;
                  if (!t3)
                    throw "sync fetching of the wasm failed: you can preload it to Module['wasmBinary'] manually, or emcc.py will do that for you when generating HTML (but not JS)";
                }
              } catch (r7) {
                O6(r7);
              }
              var c5 = new o5(), u5 = new k6(r6);
            } catch (e5) {
              throw b5("failed to compile wasm module: " + (r6 = e5.toString())), (r6.includes("imported Memory") || r6.includes("memory import")) && b5("Memory size incompatibility issues may be due to changing INITIAL_MEMORY at runtime to something too large. Use ALLOW_MEMORY_GROWTH to allow any size memory (and also make sure not to set INITIAL_MEMORY at runtime to something smaller than it was at compile time)."), e5;
            }
            return [u5, c5];
          }(e3), r5(e3[0]), u4.asm;
        }(), rq = u4.___getTypeName = rK.F;
        u4.__embind_initialize_bindings = rK.G;
        var r$ = rK.H, r0 = rK.J;
        function r22() {
          function r5() {
            if (!i3 && (i3 = true, u4.calledRun = true, !h2)) {
              if (F3(B2), s3(u4), u4.onRuntimeInitialized && u4.onRuntimeInitialized(), u4.postRun)
                for ("function" == typeof u4.postRun && (u4.postRun = [u4.postRun]); u4.postRun.length; ) {
                  var r6 = u4.postRun.shift();
                  T4.unshift(r6);
                }
              F3(T4);
            }
          }
          if (!(0 < I4)) {
            if (u4.preRun)
              for ("function" == typeof u4.preRun && (u4.preRun = [u4.preRun]); u4.preRun.length; )
                !function() {
                  var r6 = u4.preRun.shift();
                  V3.unshift(r6);
                }();
            F3(V3), 0 < I4 || (u4.setStatus ? (u4.setStatus("Running..."), setTimeout(function() {
              setTimeout(function() {
                u4.setStatus("");
              }, 1), r5();
            }, 1)) : r5());
          }
        }
        if (u4.dynCall_jiji = rK.K, X2 = function r5() {
          i3 || r22(), i3 || (X2 = r5);
        }, u4.preInit)
          for ("function" == typeof u4.preInit && (u4.preInit = [u4.preInit]); 0 < u4.preInit.length; )
            u4.preInit.pop()();
        return r22(), e2;
      };
    })();
  }
});

// ../../node_modules/satori/dist/index.js
async function Qu() {
  let e2 = await Promise.resolve().then(() => (init_asm(), asm_exports));
  return e2.default ? e2.default() : e2();
}
async function Le() {
  return gr || (gr = await (await Promise.resolve().then(() => (To(), ko))).getYogaModule()), gr;
}
function en(e2) {
  if (/\.\D?$/.test(e2))
    throw new Error("The dot should be followed by a number");
  if (/^[+-]{2}/.test(e2))
    throw new Error("Only one leading +/- is allowed");
  if (il(e2) > 1)
    throw new Error("Only one dot is allowed");
  if (/%$/.test(e2)) {
    this.type = "percentage", this.value = Zr(e2), this.unit = "%";
    return;
  }
  var t2 = sl(e2);
  if (!t2) {
    this.type = "number", this.value = Zr(e2);
    return;
  }
  this.type = ul(t2), this.value = Zr(e2.substr(0, e2.length - t2.length)), this.unit = t2;
}
function ze(e2) {
  return new en(e2);
}
function il(e2) {
  var t2 = e2.match(/\./g);
  return t2 ? t2.length : 0;
}
function Zr(e2) {
  var t2 = parseFloat(e2);
  if (isNaN(t2))
    throw new Error("Invalid number: " + e2);
  return t2;
}
function sl(e2) {
  var t2 = e2.match(/\D+$/), n3 = t2 && t2[0];
  if (n3 && ol.indexOf(n3) === -1)
    throw new Error("Invalid unit: " + n3);
  return n3;
}
function vr(e2, t2) {
  return Object.fromEntries(e2.map((n3) => [n3, t2]));
}
function ul(e2) {
  return al[e2] || "length";
}
function on(e2) {
  let t2 = typeof e2;
  return !(t2 === "number" || t2 === "bigint" || t2 === "string" || t2 === "boolean");
}
function Io(e2) {
  return /^class\s/.test(e2.toString());
}
function Ro(e2) {
  return "dangerouslySetInnerHTML" in e2;
}
function Lo(e2) {
  let t2 = typeof e2 > "u" ? [] : [].concat(e2).flat(1 / 0), n3 = [];
  for (let r4 = 0; r4 < t2.length; r4++) {
    let i3 = t2[r4];
    typeof i3 > "u" || typeof i3 == "boolean" || i3 === null || (typeof i3 == "number" && (i3 = String(i3)), typeof i3 == "string" && n3.length && typeof n3[n3.length - 1] == "string" ? n3[n3.length - 1] += i3 : n3.push(i3));
  }
  return n3;
}
function be(e2, t2, n3, r4, i3 = false) {
  if (typeof e2 == "number")
    return e2;
  try {
    if (e2 = e2.trim(), /[ /\(,]/.test(e2))
      return;
    if (e2 === String(+e2))
      return +e2;
    let s3 = new ze(e2);
    if (s3.type === "length")
      switch (s3.unit) {
        case "em":
          return s3.value * t2;
        case "rem":
          return s3.value * 16;
        case "vw":
          return ~~(s3.value * r4._viewportWidth / 100);
        case "vh":
          return ~~(s3.value * r4._viewportHeight / 100);
        default:
          return s3.value;
      }
    else if (s3.type === "angle")
      switch (s3.unit) {
        case "deg":
          return s3.value;
        case "rad":
          return s3.value * 180 / Math.PI;
        default:
          return s3.value;
      }
    else if (s3.type === "percentage" && i3)
      return s3.value / 100 * n3;
  } catch {
  }
}
function gt(e2, t2) {
  return [e2[0] * t2[0] + e2[2] * t2[1], e2[1] * t2[0] + e2[3] * t2[1], e2[0] * t2[2] + e2[2] * t2[3], e2[1] * t2[2] + e2[3] * t2[3], e2[0] * t2[4] + e2[2] * t2[5] + e2[4], e2[1] * t2[4] + e2[3] * t2[5] + e2[5]];
}
function ce(e2, t2, n3, r4) {
  let i3 = t2[e2];
  if (typeof i3 > "u") {
    if (r4 && typeof e2 < "u")
      throw new Error(`Invalid value for CSS property "${r4}". Allowed values: ${Object.keys(t2).map((s3) => `"${s3}"`).join(" | ")}. Received: "${e2}".`);
    i3 = n3;
  }
  return i3;
}
function de(e2, t2, n3) {
  if (!tn || !rn) {
    if (!(typeof Intl < "u" && "Segmenter" in Intl))
      throw new Error("Intl.Segmenter does not exist, please use import a polyfill.");
    tn = new Intl.Segmenter(n3, { granularity: "word" }), rn = new Intl.Segmenter(n3, { granularity: "grapheme" });
  }
  return t2 === "word" ? [...tn.segment(e2)].map((r4) => r4.segment) : [...rn.segment(e2)].map((r4) => r4.segment);
}
function R2(e2, t2, n3) {
  let r4 = "";
  for (let [i3, s3] of Object.entries(t2))
    typeof s3 < "u" && (r4 += ` ${i3}="${s3}"`);
  return n3 ? `<${e2}${r4}>${n3}</${e2}>` : `<${e2}${r4}/>`;
}
function Co(e2 = 20) {
  let t2 = /* @__PURE__ */ new Map();
  function n3(i3, s3) {
    if (t2.size >= e2) {
      let o5 = t2.keys().next().value;
      t2.delete(o5);
    }
    t2.set(i3, s3);
  }
  function r4(i3) {
    if (!t2.has(i3))
      return;
    let o5 = t2.get(i3);
    return t2.delete(i3), t2.set(i3, o5), o5;
  }
  return { set: n3, get: r4 };
}
function nn(e2, t2) {
  if (!e2)
    return "";
  if (Array.isArray(e2))
    return e2.map((a3) => nn(a3, t2)).join("");
  if (typeof e2 != "object")
    return String(e2);
  let n3 = e2.type;
  if (n3 === "text")
    throw new Error("<text> nodes are not currently supported, please convert them to <path>");
  let { children: r4, style: i3, ...s3 } = e2.props || {}, o5 = (i3 == null ? void 0 : i3.color) || t2;
  return `<${n3}${Object.entries(s3).map(([a3, u4]) => (typeof u4 == "string" && u4.toLowerCase() === "currentcolor" && (u4 = o5), ` ${Do[a3] || a3}="${u4}"`)).join("")}>${nn(r4, o5)}</${n3}>`;
}
function vt(e2) {
  return e2 ? e2.split(/[, ]/).filter(Boolean).map(Number) : null;
}
function Fo(e2, t2) {
  let { viewBox: n3, viewbox: r4, width: i3, height: s3, className: o5, style: a3, children: u4, ...l3 } = e2.props || {};
  n3 ||= r4, l3.xmlns = "http://www.w3.org/2000/svg";
  let f4 = (a3 == null ? void 0 : a3.color) || t2, d5 = vt(n3), g4 = d5 ? d5[3] / d5[2] : null;
  return i3 = i3 || g4 && s3 ? s3 / g4 : null, s3 = s3 || g4 && i3 ? i3 * g4 : null, l3.width = i3, l3.height = s3, n3 && (l3.viewBox = n3), `data:image/svg+xml;utf8,${`<svg ${Object.entries(l3).map(([h2, p6]) => (typeof p6 == "string" && p6.toLowerCase() === "currentcolor" && (p6 = f4), ` ${Do[h2] || h2}="${p6}"`)).join("")}>${nn(u4, f4)}</svg>`.replace(fl2, encodeURIComponent)}`;
}
function No(e2) {
  return typeof e2 == "string";
}
function Mo(e2, t2) {
  if (t2)
    return { words: de(e2, "grapheme"), requiredBreaks: [] };
  let n3 = new $557adaaeb0c7885f$exports(e2), r4 = 0, i3 = n3.nextBreak(), s3 = [], o5 = [false];
  for (; i3; ) {
    let a3 = e2.slice(r4, i3.position);
    s3.push(a3), i3.required ? o5.push(true) : o5.push(false), r4 = i3.position, i3 = n3.nextBreak();
  }
  return { words: s3, requiredBreaks: o5 };
}
function an(e2) {
  let t2 = {};
  for (let n3 in e2)
    cl.has(n3) && (t2[n3] = e2[n3]);
  return t2;
}
function pl(e2, t2) {
  try {
    let n3 = new ze(e2);
    switch (n3.unit) {
      case "px":
        return { absolute: n3.value };
      case "em":
        return { absolute: n3.value * t2 };
      case "rem":
        return { absolute: n3.value * 16 };
      case "%":
        return { relative: n3.value };
      default:
        return {};
    }
  } catch {
    return {};
  }
}
function un(e2, t2, n3) {
  switch (e2) {
    case "top":
      return { yRelative: 0 };
    case "left":
      return { xRelative: 0 };
    case "right":
      return { xRelative: 100 };
    case "bottom":
      return { yRelative: 100 };
    case "center":
      return {};
    default: {
      let r4 = pl(e2, t2);
      return r4.absolute ? { [n3 ? "xAbsolute" : "yAbsolute"]: r4.absolute } : r4.relative ? { [n3 ? "xRelative" : "yRelative"]: r4.relative } : {};
    }
  }
}
function ln(e2, t2) {
  if (typeof e2 == "number")
    return { xAbsolute: e2 };
  let n3;
  try {
    n3 = (0, import_postcss_value_parser.default)(e2).nodes.filter((r4) => r4.type === "word").map((r4) => r4.value);
  } catch {
    return {};
  }
  return n3.length === 1 ? un(n3[0], t2, true) : n3.length === 2 ? ((n3[0] === "top" || n3[0] === "bottom" || n3[1] === "left" || n3[1] === "right") && n3.reverse(), { ...un(n3[0], t2, true), ...un(n3[1], t2, false) }) : {};
}
function yl(e2, t2, n3, r4) {
  return e2 === "textDecoration" && !n3.includes(t2.textDecorationColor) && (t2.textDecorationColor = r4), t2;
}
function bt(e2, t2) {
  return typeof t2 == "number" ? vl.has(e2) ? bl.has(e2) ? t2 : String(t2) : t2 + "px" : t2;
}
function xl(e2, t2, n3) {
  if (e2 === "lineHeight")
    return { lineHeight: bt(e2, t2) };
  if (e2 === "fontFamily")
    return { fontFamily: t2.split(",").map((r4) => r4.trim().replace(/(^['"])|(['"]$)/g, "").toLocaleLowerCase()) };
  if (e2 === "borderRadius") {
    if (typeof t2 != "string" || !t2.includes("/"))
      return;
    let [r4, i3] = t2.split("/"), s3 = (0, import_css_to_react_native.getStylesForProperty)(e2, r4, true), o5 = (0, import_css_to_react_native.getStylesForProperty)(e2, i3, true);
    for (let a3 in s3)
      o5[a3] = bt(e2, s3[a3]) + " " + bt(e2, o5[a3]);
    return o5;
  }
  if (/^border(Top|Right|Bottom|Left)?$/.test(e2)) {
    let r4 = (0, import_css_to_react_native.getStylesForProperty)("border", t2, true);
    r4.borderWidth === 1 && !String(t2).includes("1px") && (r4.borderWidth = 3), r4.borderColor === "black" && !String(t2).includes("black") && (r4.borderColor = n3);
    let i3 = { Width: bt(e2 + "Width", r4.borderWidth), Style: ce(r4.borderStyle, { solid: "solid", dashed: "dashed" }, "solid", e2 + "Style"), Color: r4.borderColor }, s3 = {};
    for (let o5 of e2 === "border" ? ["Top", "Right", "Bottom", "Left"] : [e2.slice(6)])
      for (let a3 in i3)
        s3["border" + o5 + a3] = i3[a3];
    return s3;
  }
  if (e2 === "boxShadow") {
    if (!t2)
      throw new Error('Invalid `boxShadow` value: "' + t2 + '".');
    return { [e2]: typeof t2 == "string" ? (0, import_css_box_shadow.parse)(t2) : t2 };
  }
  if (e2 === "transform") {
    if (typeof t2 != "string")
      throw new Error("Invalid `transform` value.");
    let r4 = {}, i3 = t2.replace(/(-?[\d.]+%)/g, (o5, a3) => {
      let u4 = ~~(Math.random() * 1e9);
      return r4[u4] = a3, u4 + "px";
    }), s3 = (0, import_css_to_react_native.getStylesForProperty)("transform", i3, true);
    for (let o5 of s3.transform)
      for (let a3 in o5)
        r4[o5[a3]] && (o5[a3] = r4[o5[a3]]);
    return s3;
  }
  if (e2 === "background")
    return t2 = t2.toString().trim(), /^(linear-gradient|radial-gradient|url)\(/.test(t2) ? (0, import_css_to_react_native.getStylesForProperty)("backgroundImage", t2, true) : (0, import_css_to_react_native.getStylesForProperty)("background", t2, true);
}
function Wo(e2) {
  return e2 === "transform" ? " Only absolute lengths such as `10px` are supported." : "";
}
function Bo(e2) {
  if (typeof e2 == "string" && qo.test(e2.trim()))
    return e2.trim().replace(qo, (t2, n3, r4, i3, s3) => `rgba(${n3}, ${r4}, ${i3}, ${s3})`);
  if (typeof e2 == "object" && e2 !== null) {
    for (let t2 in e2)
      e2[t2] = Bo(e2[t2]);
    return e2;
  }
  return e2;
}
function br(e2, t2) {
  let n3 = {};
  if (e2) {
    let i3 = wl(e2.color, t2.color);
    n3.color = i3;
    for (let s3 in e2) {
      if (s3.startsWith("_")) {
        n3[s3] = e2[s3];
        continue;
      }
      if (s3 === "color")
        continue;
      let o5 = (0, import_css_to_react_native.getPropertyName)(s3), a3 = Sl(e2[s3], i3);
      try {
        let u4 = xl(o5, a3, i3) || yl(o5, (0, import_css_to_react_native.getStylesForProperty)(o5, bt(o5, a3), true), a3, i3);
        Object.assign(n3, u4);
      } catch (u4) {
        throw new Error(u4.message + (u4.message.includes(a3) ? `
  ` + Wo(o5) : `
  in CSS rule \`${o5}: ${a3}\`.${Wo(o5)}`));
      }
    }
  }
  if (n3.backgroundImage) {
    let { backgrounds: i3 } = (0, import_css_background_parser.parseElementStyle)(n3);
    n3.backgroundImage = i3;
  }
  let r4 = typeof n3.fontSize == "number" ? n3.fontSize : t2.fontSize;
  if (typeof r4 == "string")
    try {
      let i3 = new ze(r4);
      switch (i3.unit) {
        case "em":
          r4 = i3.value * t2.fontSize;
          break;
        case "rem":
          r4 = i3.value * 16;
          break;
      }
    } catch {
      r4 = 16;
    }
  typeof n3.fontSize < "u" && (n3.fontSize = r4), n3.transformOrigin && (n3.transformOrigin = ln(n3.transformOrigin, r4));
  for (let i3 in n3) {
    let s3 = n3[i3];
    if (i3 === "lineHeight")
      typeof s3 == "string" && (s3 = n3[i3] = be(s3, r4, r4, t2, true) / r4);
    else {
      if (typeof s3 == "string") {
        let o5 = be(s3, r4, r4, t2);
        typeof o5 < "u" && (n3[i3] = o5), s3 = n3[i3];
      }
      if (typeof s3 == "string" || typeof s3 == "object") {
        let o5 = Bo(s3);
        o5 && (n3[i3] = o5), s3 = n3[i3];
      }
    }
    if (i3 === "opacity" && (s3 = n3[i3] = s3 * t2.opacity), i3 === "transform") {
      let o5 = s3;
      for (let a3 of o5) {
        let u4 = Object.keys(a3)[0], l3 = a3[u4], f4 = typeof l3 == "string" ? be(l3, r4, r4, t2) ?? l3 : l3;
        a3[u4] = f4;
      }
    }
  }
  return n3;
}
function wl(e2, t2) {
  return e2 && e2.toLowerCase() !== "currentcolor" ? e2 : t2;
}
function _l(e2, t2) {
  return e2.replace(/currentcolor/ig, t2);
}
function Sl(e2, t2) {
  return No(e2) && (e2 = _l(e2, t2)), e2;
}
function Uo(e2) {
  let t2 = new DataView(e2), n3 = 4, r4 = t2.byteLength;
  for (; n3 < r4; ) {
    let i3 = t2.getUint16(n3, false);
    if (i3 > r4)
      throw new TypeError("Invalid JPEG");
    let s3 = t2.getUint8(i3 + 1 + n3);
    if (s3 === 192 || s3 === 193 || s3 === 194)
      return [t2.getUint16(i3 + 7 + n3, false), t2.getUint16(i3 + 5 + n3, false)];
    n3 += i3 + 2;
  }
  throw new TypeError("Invalid JPEG");
}
function zo(e2) {
  let t2 = new Uint8Array(e2.slice(6, 10));
  return [t2[0] | t2[1] << 8, t2[2] | t2[3] << 8];
}
function Go(e2) {
  let t2 = new DataView(e2);
  return [t2.getUint16(18, false), t2.getUint16(22, false)];
}
function El(e2) {
  let t2 = "", n3 = new Uint8Array(e2);
  for (let r4 = 0; r4 < n3.byteLength; r4++)
    t2 += String.fromCharCode(n3[r4]);
  return btoa(t2);
}
function Pl(e2) {
  let t2 = atob(e2), n3 = t2.length, r4 = new Uint8Array(n3);
  for (let i3 = 0; i3 < n3; i3++)
    r4[i3] = t2.charCodeAt(i3);
  return r4.buffer;
}
function jo(e2, t2) {
  let n3 = t2.match(/<svg[^>]*>/)[0], r4 = n3.match(/viewBox=['"](.+)['"]/), i3 = r4 ? vt(r4[1]) : null, s3 = n3.match(/width=['"](\d*\.\d+|\d+)['"]/), o5 = n3.match(/height=['"](\d*\.\d+|\d+)['"]/);
  if (!i3 && (!s3 || !o5))
    throw new Error(`Failed to parse SVG from ${e2}: missing "viewBox"`);
  let a3 = i3 ? [i3[2], i3[3]] : [+s3[1], +o5[1]], u4 = a3[0] / a3[1];
  return s3 && o5 ? [+s3[1], +o5[1]] : s3 ? [+s3[1], +s3[1] / u4] : o5 ? [+o5[1] * u4, +o5[1]] : [a3[0], a3[1]];
}
async function _r(e2) {
  if (!e2)
    throw new Error("Image source is not provided.");
  if ((e2.startsWith('"') && e2.endsWith('"') || e2.startsWith("'") && e2.endsWith("'")) && (e2 = e2.slice(1, -1)), e2.startsWith("data:")) {
    let r4;
    try {
      r4 = /data:(?<imageType>[a-z/+]+)(;(?<encodingType>base64|utf8))?,(?<dataString>.*)/g.exec(e2).groups;
    } catch {
      return console.warn("Image data URI resolved without size:" + e2), [e2];
    }
    let { imageType: i3, encodingType: s3, dataString: o5 } = r4;
    if (i3 === dn) {
      let a3 = s3 === "base64" ? atob(o5) : decodeURIComponent(o5.replace(/ /g, "%20")), u4 = s3 === "base64" ? e2 : `data:image/svg+xml;base64,${btoa(a3)}`, l3 = jo(e2, a3);
      return [u4, ...l3];
    } else if (s3 === "base64") {
      let a3, u4 = Pl(o5);
      switch (i3) {
        case yr:
          a3 = Go(u4);
          break;
        case wr:
          a3 = zo(u4);
          break;
        case xr:
          a3 = Uo(u4);
          break;
      }
      return [e2, ...a3];
    } else
      return console.warn("Image data URI resolved without size:" + e2), [e2];
  }
  if (!globalThis.fetch)
    throw new Error("`fetch` is required to be polyfilled to load images.");
  if (cn.has(e2))
    return cn.get(e2);
  let t2 = fn.get(e2);
  if (t2)
    return t2;
  let n3 = new Promise((r4, i3) => {
    fetch(e2).then((s3) => {
      let o5 = s3.headers.get("content-type");
      return o5 === "image/svg+xml" || o5 === "application/svg+xml" ? s3.text() : s3.arrayBuffer();
    }).then((s3) => {
      if (typeof s3 == "string")
        try {
          let l3 = `data:image/svg+xml;base64,${btoa(s3)}`, f4 = jo(e2, s3);
          fn.set(e2, [l3, ...f4]), r4([l3, ...f4]);
          return;
        } catch (l3) {
          throw new Error(`Failed to parse SVG image: ${l3.message}`);
        }
      let o5, a3 = Al(new Uint8Array(s3));
      switch (a3) {
        case yr:
          o5 = Go(s3);
          break;
        case wr:
          o5 = zo(s3);
          break;
        case xr:
          o5 = Uo(s3);
          break;
      }
      if (!Ol.includes(a3))
        throw new Error(`Unsupported image type: ${a3 || "unknown"}`);
      let u4 = `data:${a3};base64,${El(s3)}`;
      fn.set(e2, [u4, ...o5]), r4([u4, ...o5]);
    }).catch((s3) => {
      i3(new Error(`Can't load image ${e2}: ` + s3.message));
    });
  });
  return cn.set(e2, n3), n3;
}
function Al(e2) {
  return [255, 216, 255].every((t2, n3) => e2[n3] === t2) ? xr : [137, 80, 78, 71, 13, 10, 26, 10].every((t2, n3) => e2[n3] === t2) ? yr : [71, 73, 70, 56].every((t2, n3) => e2[n3] === t2) ? wr : [82, 73, 70, 70, 0, 0, 0, 0, 87, 69, 66, 80].every((t2, n3) => !t2 || e2[n3] === t2) ? Tl : [60, 63, 120, 109, 108].every((t2, n3) => e2[n3] === t2) ? dn : [0, 0, 0, 0, 102, 116, 121, 112, 97, 118, 105, 102].every((t2, n3) => !t2 || e2[n3] === t2) ? kl : null;
}
async function pn(e2, t2, n3, r4, i3) {
  let s3 = await Le(), o5 = { ...n3, ...br($o[t2], n3), ...br(r4, n3) };
  if (t2 === "img") {
    let [a3, u4, l3] = await _r(i3.src);
    if (u4 === void 0 && l3 === void 0) {
      if (i3.width === void 0 || i3.height === void 0)
        throw new Error("Image size cannot be determined. Please provide the width and height of the image.");
      u4 = parseInt(i3.width), l3 = parseInt(i3.height);
    }
    let f4 = l3 / u4, d5 = (o5.borderLeftWidth || 0) + (o5.borderRightWidth || 0) + (o5.paddingLeft || 0) + (o5.paddingRight || 0), g4 = (o5.borderTopWidth || 0) + (o5.borderBottomWidth || 0) + (o5.paddingTop || 0) + (o5.paddingBottom || 0), h2 = o5.width || i3.width, p6 = o5.height || i3.height, v4 = typeof h2 != "string" && typeof p6 != "string";
    typeof h2 == "number" && v4 && (h2 -= d5), typeof p6 == "number" && v4 && (p6 -= g4), h2 === void 0 && p6 === void 0 ? (h2 = u4, p6 = l3) : h2 === void 0 ? typeof p6 == "number" ? h2 = p6 / f4 : e2.setAspectRatio(1 / f4) : p6 === void 0 && (typeof h2 == "number" ? p6 = h2 * f4 : e2.setAspectRatio(1 / f4)), o5.width = v4 ? h2 + d5 : h2, o5.height = v4 ? p6 + g4 : p6, o5.__src = a3;
  }
  if (t2 === "svg") {
    let a3 = i3.viewBox || i3.viewbox, u4 = vt(a3), l3 = u4 ? u4[3] / u4[2] : null, { width: f4, height: d5 } = i3;
    typeof f4 > "u" && d5 ? l3 == null ? f4 = 0 : typeof d5 == "string" && d5.endsWith("%") ? f4 = parseInt(d5) / l3 + "%" : (d5 = be(d5, n3.fontSize, 1, n3), f4 = d5 / l3) : typeof d5 > "u" && f4 ? l3 == null ? f4 = 0 : typeof f4 == "string" && f4.endsWith("%") ? d5 = parseInt(f4) * l3 + "%" : (f4 = be(f4, n3.fontSize, 1, n3), d5 = f4 * l3) : (typeof f4 < "u" && (f4 = be(f4, n3.fontSize, 1, n3) || f4), typeof d5 < "u" && (d5 = be(d5, n3.fontSize, 1, n3) || d5), f4 ||= u4 == null ? void 0 : u4[2], d5 ||= u4 == null ? void 0 : u4[3]), !o5.width && f4 && (o5.width = f4), !o5.height && d5 && (o5.height = d5);
  }
  return e2.setDisplay(ce(o5.display, { flex: s3.DISPLAY_FLEX, none: s3.DISPLAY_NONE }, s3.DISPLAY_FLEX, "display")), e2.setAlignContent(ce(o5.alignContent, { stretch: s3.ALIGN_STRETCH, center: s3.ALIGN_CENTER, "flex-start": s3.ALIGN_FLEX_START, "flex-end": s3.ALIGN_FLEX_END, "space-between": s3.ALIGN_SPACE_BETWEEN, "space-around": s3.ALIGN_SPACE_AROUND, baseline: s3.ALIGN_BASELINE, normal: s3.ALIGN_AUTO }, s3.ALIGN_AUTO, "alignContent")), e2.setAlignItems(ce(o5.alignItems, { stretch: s3.ALIGN_STRETCH, center: s3.ALIGN_CENTER, "flex-start": s3.ALIGN_FLEX_START, "flex-end": s3.ALIGN_FLEX_END, baseline: s3.ALIGN_BASELINE, normal: s3.ALIGN_AUTO }, s3.ALIGN_STRETCH, "alignItems")), e2.setAlignSelf(ce(o5.alignSelf, { stretch: s3.ALIGN_STRETCH, center: s3.ALIGN_CENTER, "flex-start": s3.ALIGN_FLEX_START, "flex-end": s3.ALIGN_FLEX_END, baseline: s3.ALIGN_BASELINE, normal: s3.ALIGN_AUTO }, s3.ALIGN_AUTO, "alignSelf")), e2.setJustifyContent(ce(o5.justifyContent, { center: s3.JUSTIFY_CENTER, "flex-start": s3.JUSTIFY_FLEX_START, "flex-end": s3.JUSTIFY_FLEX_END, "space-between": s3.JUSTIFY_SPACE_BETWEEN, "space-around": s3.JUSTIFY_SPACE_AROUND }, s3.JUSTIFY_FLEX_START, "justifyContent")), e2.setFlexDirection(ce(o5.flexDirection, { row: s3.FLEX_DIRECTION_ROW, column: s3.FLEX_DIRECTION_COLUMN, "row-reverse": s3.FLEX_DIRECTION_ROW_REVERSE, "column-reverse": s3.FLEX_DIRECTION_COLUMN_REVERSE }, s3.FLEX_DIRECTION_ROW, "flexDirection")), e2.setFlexWrap(ce(o5.flexWrap, { wrap: s3.WRAP_WRAP, nowrap: s3.WRAP_NO_WRAP, "wrap-reverse": s3.WRAP_WRAP_REVERSE }, s3.WRAP_NO_WRAP, "flexWrap")), typeof e2.setGap < "u" && typeof e2.getGap < "u" && (typeof o5.gap < "u" && e2.setGap(s3.GUTTER_ALL, o5.gap), typeof o5.rowGap < "u" && e2.setGap(s3.GUTTER_ROW, o5.rowGap), typeof o5.columnGap < "u" && e2.setGap(s3.GUTTER_COLUMN, o5.columnGap)), typeof o5.flexBasis < "u" && e2.setFlexBasis(o5.flexBasis), e2.setFlexGrow(typeof o5.flexGrow > "u" ? 0 : o5.flexGrow), e2.setFlexShrink(typeof o5.flexShrink > "u" ? 0 : o5.flexShrink), typeof o5.maxHeight < "u" && e2.setMaxHeight(o5.maxHeight), typeof o5.maxWidth < "u" && e2.setMaxWidth(o5.maxWidth), typeof o5.minHeight < "u" && e2.setMinHeight(o5.minHeight), typeof o5.minWidth < "u" && e2.setMinWidth(o5.minWidth), e2.setOverflow(ce(o5.overflow, { visible: s3.OVERFLOW_VISIBLE, hidden: s3.OVERFLOW_HIDDEN }, s3.OVERFLOW_VISIBLE, "overflow")), e2.setMargin(s3.EDGE_TOP, o5.marginTop || 0), e2.setMargin(s3.EDGE_BOTTOM, o5.marginBottom || 0), e2.setMargin(s3.EDGE_LEFT, o5.marginLeft || 0), e2.setMargin(s3.EDGE_RIGHT, o5.marginRight || 0), e2.setBorder(s3.EDGE_TOP, o5.borderTopWidth || 0), e2.setBorder(s3.EDGE_BOTTOM, o5.borderBottomWidth || 0), e2.setBorder(s3.EDGE_LEFT, o5.borderLeftWidth || 0), e2.setBorder(s3.EDGE_RIGHT, o5.borderRightWidth || 0), e2.setPadding(s3.EDGE_TOP, o5.paddingTop || 0), e2.setPadding(s3.EDGE_BOTTOM, o5.paddingBottom || 0), e2.setPadding(s3.EDGE_LEFT, o5.paddingLeft || 0), e2.setPadding(s3.EDGE_RIGHT, o5.paddingRight || 0), e2.setPositionType(ce(o5.position, { absolute: s3.POSITION_TYPE_ABSOLUTE, relative: s3.POSITION_TYPE_RELATIVE }, s3.POSITION_TYPE_RELATIVE, "position")), typeof o5.top < "u" && e2.setPosition(s3.EDGE_TOP, o5.top), typeof o5.bottom < "u" && e2.setPosition(s3.EDGE_BOTTOM, o5.bottom), typeof o5.left < "u" && e2.setPosition(s3.EDGE_LEFT, o5.left), typeof o5.right < "u" && e2.setPosition(s3.EDGE_RIGHT, o5.right), typeof o5.height < "u" ? e2.setHeight(o5.height) : e2.setHeightAuto(), typeof o5.width < "u" ? e2.setWidth(o5.width) : e2.setWidthAuto(), [o5, an(o5)];
}
function Il(e2, t2, n3) {
  let r4 = [...Vo];
  for (let i3 of e2) {
    let s3 = Object.keys(i3)[0], o5 = i3[s3];
    if (typeof o5 == "string")
      if (s3 === "translateX")
        o5 = parseFloat(o5) / 100 * t2, i3[s3] = o5;
      else if (s3 === "translateY")
        o5 = parseFloat(o5) / 100 * n3, i3[s3] = o5;
      else
        throw new Error(`Invalid transform: "${s3}: ${o5}".`);
    let a3 = o5, u4 = [...Vo];
    switch (s3) {
      case "translateX":
        u4[4] = a3;
        break;
      case "translateY":
        u4[5] = a3;
        break;
      case "scale":
        u4[0] = a3, u4[3] = a3;
        break;
      case "scaleX":
        u4[0] = a3;
        break;
      case "scaleY":
        u4[3] = a3;
        break;
      case "rotate": {
        let l3 = a3 * Math.PI / 180, f4 = Math.cos(l3), d5 = Math.sin(l3);
        u4[0] = f4, u4[1] = d5, u4[2] = -d5, u4[3] = f4;
        break;
      }
      case "skewX":
        u4[2] = Math.tan(a3 * Math.PI / 180);
        break;
      case "skewY":
        u4[1] = Math.tan(a3 * Math.PI / 180);
        break;
    }
    r4 = gt(u4, r4);
  }
  e2.splice(0, e2.length), e2.push(...r4), e2.__resolved = true;
}
function yt({ left: e2, top: t2, width: n3, height: r4 }, i3, s3, o5) {
  let a3;
  i3.__resolved || Il(i3, n3, r4);
  let u4 = i3;
  if (s3)
    a3 = u4;
  else {
    let l3 = (o5 == null ? void 0 : o5.xAbsolute) ?? ((o5 == null ? void 0 : o5.xRelative) ?? 50) * n3 / 100, f4 = (o5 == null ? void 0 : o5.yAbsolute) ?? ((o5 == null ? void 0 : o5.yRelative) ?? 50) * r4 / 100, d5 = e2 + l3, g4 = t2 + f4;
    a3 = gt([1, 0, 0, 1, d5, g4], gt(u4, [1, 0, 0, 1, -d5, -g4])), u4.__parent && (a3 = gt(u4.__parent, a3)), u4.splice(0, 6, ...a3);
  }
  return `matrix(${a3.map((l3) => l3.toFixed(2)).join(",")})`;
}
function Ho({ left: e2, top: t2, width: n3, height: r4, isInheritingTransform: i3 }, s3) {
  let o5 = "", a3 = 1;
  return s3.transform && (o5 = yt({ left: e2, top: t2, width: n3, height: r4 }, s3.transform, i3, s3.transformOrigin)), s3.opacity !== void 0 && (a3 = +s3.opacity), { matrix: o5, opacity: a3 };
}
function hn({ id: e2, content: t2, filter: n3, left: r4, top: i3, width: s3, height: o5, matrix: a3, opacity: u4, image: l3, clipPathId: f4, debug: d5, shape: g4, decorationShape: h2 }, p6) {
  let v4 = "";
  if (d5 && (v4 = R2("rect", { x: r4, y: i3 - o5, width: s3, height: o5, fill: "transparent", stroke: "#575eff", "stroke-width": 1, transform: a3 || void 0, "clip-path": f4 ? `url(#${f4})` : void 0 })), l3) {
    let b5 = { href: l3, x: r4, y: i3, width: s3, height: o5, transform: a3 || void 0, "clip-path": f4 ? `url(#${f4})` : void 0, style: p6.filter ? `filter:${p6.filter}` : void 0 };
    return [(n3 ? `${n3}<g filter="url(#satori_s-${e2})">` : "") + R2("image", { ...b5, opacity: u4 !== 1 ? u4 : void 0 }) + (h2 || "") + (n3 ? "</g>" : "") + v4, ""];
  }
  let _6 = { x: r4, y: i3, width: s3, height: o5, "font-weight": p6.fontWeight, "font-style": p6.fontStyle, "font-size": p6.fontSize, "font-family": p6.fontFamily, "letter-spacing": p6.letterSpacing || void 0, transform: a3 || void 0, "clip-path": f4 ? `url(#${f4})` : void 0, style: p6.filter ? `filter:${p6.filter}` : void 0 };
  return [(n3 ? `${n3}<g filter="url(#satori_s-${e2})">` : "") + R2("text", { ..._6, fill: p6.color, opacity: u4 !== 1 ? u4 : void 0 }, t2) + (h2 || "") + (n3 ? "</g>" : "") + v4, g4 ? R2("text", _6, t2) : ""];
}
function Rl(e2, t2, n3) {
  return e2.replace(/([MA])([0-9.-]+),([0-9.-]+)/g, function(r4, i3, s3, o5) {
    return i3 + (parseFloat(s3) + t2) + "," + (parseFloat(o5) + n3);
  });
}
function Yo({ id: e2, width: t2, height: n3 }, r4) {
  if (!r4.shadowColor || !r4.shadowOffset || typeof r4.shadowRadius > "u")
    return "";
  let i3 = r4.shadowRadius * r4.shadowRadius / 4, s3 = Math.min(r4.shadowOffset.width - i3, 0), o5 = Math.max(r4.shadowOffset.width + i3 + t2, t2), a3 = Math.min(r4.shadowOffset.height - i3, 0), u4 = Math.max(r4.shadowOffset.height + i3 + n3, n3);
  return `<defs><filter id="satori_s-${e2}" x="${s3 / t2 * 100}%" y="${a3 / n3 * 100}%" width="${(o5 - s3) / t2 * 100}%" height="${(u4 - a3) / n3 * 100}%"><feDropShadow dx="${r4.shadowOffset.width}" dy="${r4.shadowOffset.height}" stdDeviation="${r4.shadowRadius / 2}" flood-color="${r4.shadowColor}" flood-opacity="1"/></filter></defs>`;
}
function Xo({ width: e2, height: t2, shape: n3, opacity: r4, id: i3 }, s3) {
  if (!s3.boxShadow)
    return null;
  let o5 = "", a3 = "";
  for (let u4 = s3.boxShadow.length - 1; u4 >= 0; u4--) {
    let l3 = "", f4 = s3.boxShadow[u4];
    f4.spreadRadius && f4.inset && (f4.spreadRadius = -f4.spreadRadius);
    let d5 = f4.blurRadius * f4.blurRadius / 4 + (f4.spreadRadius || 0), g4 = Math.min(-d5 - (f4.inset ? f4.offsetX : 0), 0), h2 = Math.max(d5 + e2 - (f4.inset ? f4.offsetX : 0), e2), p6 = Math.min(-d5 - (f4.inset ? f4.offsetY : 0), 0), v4 = Math.max(d5 + t2 - (f4.inset ? f4.offsetY : 0), t2), _6 = `satori_s-${i3}-${u4}`, b5 = `satori_ms-${i3}-${u4}`, y3 = f4.spreadRadius ? n3.replace('stroke-width="0"', `stroke-width="${f4.spreadRadius * 2}"`) : n3;
    l3 += R2("mask", { id: b5, maskUnits: "userSpaceOnUse" }, R2("rect", { x: 0, y: 0, width: s3._viewportWidth, height: s3._viewportHeight, fill: f4.inset ? "#000" : "#fff" }) + y3.replace('fill="#fff"', f4.inset ? 'fill="#fff"' : 'fill="#000"').replace('stroke="#fff"', ""));
    let S5 = y3.replace(/d="([^"]+)"/, (E2, T4) => 'd="' + Rl(T4, f4.offsetX, f4.offsetY) + '"').replace(/x="([^"]+)"/, (E2, T4) => 'x="' + (parseFloat(T4) + f4.offsetX) + '"').replace(/y="([^"]+)"/, (E2, T4) => 'y="' + (parseFloat(T4) + f4.offsetY) + '"');
    f4.spreadRadius && f4.spreadRadius < 0 && (l3 += R2("mask", { id: b5 + "-neg", maskUnits: "userSpaceOnUse" }, S5.replace('stroke="#fff"', 'stroke="#000"').replace(/stroke-width="[^"]+"/, `stroke-width="${-f4.spreadRadius * 2}"`))), f4.spreadRadius && f4.spreadRadius < 0 && (S5 = R2("g", { mask: `url(#${b5}-neg)` }, S5)), l3 += R2("defs", {}, R2("filter", { id: _6, x: `${g4 / e2 * 100}%`, y: `${p6 / t2 * 100}%`, width: `${(h2 - g4) / e2 * 100}%`, height: `${(v4 - p6) / t2 * 100}%` }, R2("feGaussianBlur", { stdDeviation: f4.blurRadius / 2, result: "b" }) + R2("feFlood", { "flood-color": f4.color, in: "SourceGraphic", result: "f" }) + R2("feComposite", { in: "f", in2: "b", operator: f4.inset ? "out" : "in" }))) + R2("g", { mask: `url(#${b5})`, filter: `url(#${_6})`, opacity: r4 }, S5), f4.inset ? a3 += l3 : o5 += l3;
  }
  return [o5, a3];
}
function mn({ width: e2, left: t2, top: n3, ascender: r4, clipPathId: i3 }, s3) {
  let { textDecorationColor: o5, textDecorationStyle: a3, textDecorationLine: u4, fontSize: l3 } = s3;
  if (!u4 || u4 === "none")
    return "";
  let f4 = Math.max(1, l3 * 0.1), d5 = u4 === "line-through" ? n3 + r4 * 0.5 : u4 === "underline" ? n3 + r4 * 1.1 : n3, g4 = a3 === "dashed" ? `${f4 * 1.2} ${f4 * 2}` : a3 === "dotted" ? `0 ${f4 * 2}` : void 0;
  return R2("line", { x1: t2, y1: d5, x2: t2 + e2, y2: d5, stroke: o5, "stroke-width": f4, "stroke-dasharray": g4, "stroke-linecap": a3 === "dotted" ? "round" : "square", "clip-path": i3 ? `url(#${i3})` : void 0 });
}
async function* gn(e2, t2) {
  var _o;
  let n3 = await Le(), { parentStyle: r4, inheritedStyle: i3, parent: s3, font: o5, id: a3, isInheritingTransform: u4, debug: l3, embedFont: f4, graphemeImages: d5, locale: g4, canLoadAdditionalAssets: h2 } = t2, { textAlign: p6, textOverflow: v4, whiteSpace: _6, wordBreak: b5, lineHeight: y3, filter: S5, _inheritedBackgroundClipTextPath: E2 } = r4;
  r4.textTransform === "uppercase" ? e2 = e2.toLocaleUpperCase(g4) : r4.textTransform === "lowercase" ? e2 = e2.toLocaleLowerCase(g4) : r4.textTransform === "capitalize" && (e2 = de(e2, "word", g4).map(($4) => de($4, "grapheme", g4).map((U3, B2) => B2 === 0 ? U3.toLocaleUpperCase(g4) : U3).join("")).join(""));
  let T4 = ["pre", "pre-wrap", "pre-line"].includes(_6), D4 = !["pre", "pre-wrap"].includes(_6);
  T4 || (e2 = e2.replace(/\n/g, " ")), D4 && (e2 = e2.replace(/[ ]+/g, " "), e2 = e2.trim());
  let F3 = b5 === "break-word", C5 = b5 === "break-all", { words: W2, requiredBreaks: z5 } = Mo(e2, C5), X2 = n3.Node.create();
  X2.setAlignItems(n3.ALIGN_BASELINE), X2.setJustifyContent(ce(r4.textAlign, { left: n3.JUSTIFY_FLEX_START, right: n3.JUSTIFY_FLEX_END, center: n3.JUSTIFY_CENTER, justify: n3.JUSTIFY_SPACE_BETWEEN, start: n3.JUSTIFY_FLEX_START, end: n3.JUSTIFY_FLEX_END }, n3.JUSTIFY_FLEX_START, "textAlign")), s3.insertChild(X2, s3.getChildCount());
  let H3 = r4.fontSize, M4 = o5.getEngine(H3, y3, r4, g4), re2 = h2 ? de(e2, "grapheme").filter(($4) => !M4.has($4)) : [];
  yield re2.map(($4) => ({ word: $4, locale: g4 })), re2.length && (M4 = o5.getEngine(H3, y3, r4, g4));
  let G2 = [], oe2 = [], ge2 = [], I4 = [], q3 = /* @__PURE__ */ new Map();
  function Y2($4) {
    if (q3.has($4))
      return q3.get($4);
    let U3 = M4.measure($4, r4);
    return q3.set($4, U3), U3;
  }
  function N5($4) {
    let U3 = 0, B2 = false;
    for (let le2 of $4)
      d5 && d5[le2] ? (U3 += r4.fontSize, B2 = true) : U3 += Y2(le2);
    return { width: U3, isImage: B2 };
  }
  let Oe2 = ($4) => {
    if ($4.length === 0)
      return { originWidth: 0, endingSpacesWidth: 0, isImage: false };
    let { width: U3, isImage: B2 } = N5(de($4, "grapheme")), { width: le2 } = N5(de($4.trimEnd(), "grapheme"));
    return { originWidth: U3, endingSpacesWidth: U3 - le2, isImage: B2 };
  }, Ne2 = [], qu = 0;
  for (let $4 = 0; $4 < W2.length; $4++) {
    let U3 = W2[$4], B2 = false, le2 = d5 && d5[U3];
    _6 === "pre" ? B2 = z5[$4] : _6 !== "nowrap" && (le2 || z5[$4]) && (B2 = true), B2 ? (_6 === "nowrap" && (qu += N5(Ne2).width + r4.fontSize), Ne2 = []) : (!sn.includes(U3[0]) || !Ne2.length) && Ne2.push(U3 === `
` ? " " : U3);
  }
  typeof r4.flexShrink > "u" && s3.setFlexShrink(1), X2.setMeasureFunc(($4) => {
    let U3 = 0, B2 = 0, le2 = 0, Ye2 = -1, We2 = 0, ne2 = 0, se2 = 0;
    G2 = [], ge2 = [0];
    for (let Ee2 = 0; Ee2 < W2.length; Ee2++) {
      let Z2 = W2[Ee2], Xe2 = T4 && z5[Ee2], ve2 = 0, qe2 = 0, { originWidth: ot2, endingSpacesWidth: Be2, isImage: ae2 } = Oe2(Z2);
      ve2 = ot2, qe2 = Be2, Xe2 && ne2 === 0 && (ne2 = M4.height(Z2));
      let fe2 = ",.!?:-@)>]}%#".indexOf(Z2[0]) < 0, Ue2 = !B2, ht = Ee2 && fe2 && B2 + ve2 > $4 + qe2 && _6 !== "nowrap" && _6 !== "pre";
      if (F3 && ve2 > $4 && (!B2 || ht || Xe2)) {
        let dr = de(Z2, "grapheme");
        W2.splice(Ee2, 1, "", ...dr), B2 > 0 && (G2.push(B2), oe2.push(se2), U3++, We2 += ne2, B2 = 0, ne2 = 0, se2 = 0, ge2.push(1), Ye2 = -1);
        continue;
      }
      if (Xe2 || ht)
        D4 && Z2 === " " && (ve2 = 0), G2.push(B2), oe2.push(se2), U3++, We2 += ne2, B2 = ve2, ne2 = ve2 ? M4.height(Z2) : 0, se2 = ve2 ? M4.baseline(Z2) : 0, ge2.push(1), Ye2 = -1, Xe2 || (le2 = Math.max(le2, $4));
      else {
        B2 += ve2;
        let dr = M4.height(Z2);
        dr > ne2 && (ne2 = dr, se2 = M4.baseline(Z2)), Ue2 && ge2[ge2.length - 1]++;
      }
      Ue2 && Ye2++, le2 = Math.max(le2, B2), I4[Ee2] = { y: We2, x: B2 - ve2, width: ae2 ? ot2 - Be2 : ve2, line: U3, lineIndex: Ye2 };
    }
    return B2 && (U3++, G2.push(B2), oe2.push(se2), We2 += ne2), { width: le2, height: We2 };
  });
  let [Bu, Uu] = yield, Yr = "", sr = "", Me2 = i3._inheritedClipPathId, mo2 = i3._inheritedMaskId, { left: go, top: vo, width: ar, height: bo } = X2.getComputedLayout(), Xr = s3.getComputedWidth() - s3.getComputedPadding(n3.EDGE_LEFT) - s3.getComputedPadding(n3.EDGE_RIGHT) - s3.getComputedBorder(n3.EDGE_LEFT) - s3.getComputedBorder(n3.EDGE_RIGHT), nt2 = Bu + go, it2 = Uu + vo, { matrix: Re2, opacity: ur } = Ho({ left: go, top: vo, width: ar, height: bo, isInheritingTransform: u4 }, r4), lr = "";
  r4.textShadowOffset && (lr = Yo({ width: ar, height: bo, id: a3 }, { shadowColor: r4.textShadowColor, shadowOffset: r4.textShadowOffset, shadowRadius: r4.textShadowRadius }));
  let pt2 = "", fr = "", yo = "", Qr = -1, xo = v4 === "ellipsis" ? N5(["\u2026"]).width : 0, zu = v4 === "ellipsis" ? N5([" "]).width : 0, cr = {}, $e2 = null, wo = 0;
  for (let $4 = 0; $4 < W2.length; $4++) {
    let U3 = I4[$4];
    if (!U3)
      continue;
    let B2 = W2[$4], le2 = null, Ye2 = false, We2 = d5 ? d5[de(B2, "grapheme")[0]] : null, ne2 = U3.y, se2 = U3.x, Ee2 = U3.width, Z2 = U3.line;
    if (Z2 === Qr)
      continue;
    let Xe2 = false;
    if (G2.length > 1) {
      let ae2 = ar - G2[Z2];
      if (p6 === "right" || p6 === "end")
        se2 += ae2;
      else if (p6 === "center")
        se2 += ae2 / 2;
      else if (p6 === "justify" && Z2 < G2.length - 1) {
        let fe2 = ge2[Z2];
        se2 += (fe2 > 1 ? ae2 / (fe2 - 1) : 0) * U3.lineIndex, Xe2 = true;
      }
    }
    if (cr[Z2] || (cr[Z2] = [se2, Xe2 ? ar : G2[Z2]]), v4 === "ellipsis" && G2[Z2] > Xr && U3.x + Ee2 + xo + zu > Xr) {
      let ae2 = de(B2, "grapheme", g4), fe2 = "", Ue2 = 0;
      for (let ht of ae2) {
        let Kr = U3.x + N5([fe2 + ht]).width;
        if (fe2 && Kr + xo > Xr)
          break;
        fe2 += ht, Ue2 = Kr;
      }
      B2 = fe2 + "\u2026", Qr = Z2, cr[Z2][1] = Ue2, Ye2 = true;
    }
    let ve2 = oe2[Z2], qe2 = M4.baseline(B2), ot2 = M4.height(B2), Be2 = ve2 - qe2;
    if (We2)
      ne2 += 0;
    else if (f4) {
      if (!sn.includes(B2) && W2[$4 + 1] && !d5[de(W2[$4 + 1], "grapheme")[0]] && I4[$4 + 1] && ne2 === I4[$4 + 1].y && !Ye2) {
        $e2 === null && (wo = se2), $e2 = $e2 === null ? B2 : $e2 + B2;
        continue;
      }
      let ae2 = $e2 === null ? B2 : $e2 + B2, fe2 = $e2 === null ? se2 : wo, Ue2 = U3.width + se2 - fe2;
      le2 = M4.getSVG(ae2, { ...r4, left: nt2 + fe2, top: it2 + ne2 + qe2 + Be2, letterSpacing: r4.letterSpacing }), $e2 = null, l3 && (yo += R2("rect", { x: nt2 + fe2, y: it2 + ne2 + Be2, width: Ue2, height: ot2, fill: "transparent", stroke: "#575eff", "stroke-width": 1, transform: Re2 || void 0, "clip-path": Me2 ? `url(#${Me2})` : void 0 }) + R2("line", { x1: nt2 + se2, x2: nt2 + se2 + U3.width, y1: it2 + ne2 + Be2 + qe2, y2: it2 + ne2 + Be2 + qe2, stroke: "#14c000", "stroke-width": 1, transform: Re2 || void 0, "clip-path": Me2 ? `url(#${Me2})` : void 0 }));
    } else
      ne2 += qe2 + Be2;
    if (r4.textDecorationLine && (Z2 !== ((_o = I4[$4 + 1]) == null ? void 0 : _o.line) || Qr === Z2)) {
      let ae2 = cr[Z2];
      ae2 && !ae2[2] && (pt2 += mn({ left: nt2 + ae2[0], top: it2 + ot2 * +Z2, width: ae2[1], ascender: M4.baseline(B2), clipPathId: Me2 }, r4), ae2[2] = 1);
    }
    if (le2 !== null)
      fr += le2 + " ";
    else {
      let [ae2, fe2] = hn({ content: B2, filter: lr, id: a3, left: nt2 + se2, top: it2 + ne2, width: Ee2, height: ot2, matrix: Re2, opacity: ur, image: We2, clipPathId: Me2, debug: l3, shape: !!E2, decorationShape: pt2 }, r4);
      Yr += ae2, sr += fe2, pt2 = "";
    }
  }
  if (fr) {
    let $4 = r4.color !== "transparent" && ur !== 0 ? R2("path", { fill: r4.color, d: fr, transform: Re2 || void 0, opacity: ur !== 1 ? ur : void 0, "clip-path": Me2 ? `url(#${Me2})` : void 0, mask: mo2 ? `url(#${mo2})` : void 0, style: S5 ? `filter:${S5}` : void 0 }) : "";
    E2 && (sr = R2("path", { d: fr, transform: Re2 || void 0 })), Yr += (lr ? lr + R2("g", { filter: `url(#satori_s-${a3})` }, $4 + pt2) : $4 + pt2) + yo;
  }
  return sr && (r4._inheritedBackgroundClipTextPath.value += sr), Yr;
}
function Ll(e2) {
  return e2.type === "literal" ? e2.value : e2.type === "hex" ? `#${e2.value}` : e2.type === "rgb" ? `rgb(${e2.value.join(",")})` : e2.type === "rgba" ? `rgba(${e2.value.join(",")})` : "transparent";
}
function Cl(e2) {
  let t2 = 0, n3 = 0, r4 = 0, i3 = 0;
  return e2.includes("top") ? n3 = 1 : e2.includes("bottom") && (i3 = 1), e2.includes("left") ? t2 = 1 : e2.includes("right") && (r4 = 1), !t2 && !r4 && !n3 && !i3 && (n3 = 1), [t2, n3, r4, i3];
}
function Dl(e2, t2) {
  return typeof e2 == "string" && e2.endsWith("%") ? t2 * parseFloat(e2) / 100 : +e2;
}
function yn(e2, { x: t2, y: n3, defaultX: r4, defaultY: i3 }) {
  return (e2 ? e2.split(" ").map((s3) => {
    try {
      let o5 = new ze(s3);
      return o5.type === "length" || o5.type === "number" ? o5.value : o5.value + o5.unit;
    } catch {
      return null;
    }
  }).filter((s3) => s3 !== null) : [r4, i3]).map((s3, o5) => Dl(s3, [t2, n3][o5]));
}
function Ko(e2, t2) {
  let n3 = [];
  for (let o5 of t2) {
    let a3 = Ll(o5);
    if (!n3.length && (n3.push({ offset: 0, color: a3 }), typeof o5.length > "u" || o5.length.value === "0"))
      continue;
    let u4 = typeof o5.length > "u" ? void 0 : o5.length.type === "%" ? o5.length.value / 100 : o5.length.value / e2;
    n3.push({ offset: u4, color: a3 });
  }
  n3.length || n3.push({ offset: 0, color: "transparent" });
  let r4 = n3[n3.length - 1];
  r4.offset !== 1 && (typeof r4.offset > "u" ? r4.offset = 1 : n3.push({ offset: 1, color: r4.color }));
  let i3 = 0, s3 = 1;
  for (let o5 = 0; o5 < n3.length; o5++)
    if (typeof n3[o5].offset > "u") {
      for (s3 < o5 && (s3 = o5); typeof n3[s3].offset > "u"; )
        s3++;
      n3[o5].offset = (n3[s3].offset - n3[i3].offset) / (s3 - i3) * (o5 - i3) + n3[i3].offset;
    } else
      i3 = o5;
  return n3;
}
async function xn({ id: e2, width: t2, height: n3, left: r4, top: i3 }, { image: s3, size: o5, position: a3, repeat: u4 }) {
  u4 = u4 || "repeat";
  let l3 = u4 === "repeat-x" || u4 === "repeat", f4 = u4 === "repeat-y" || u4 === "repeat", d5 = yn(o5, { x: t2, y: n3, defaultX: t2, defaultY: n3 }), g4 = yn(a3, { x: t2, y: n3, defaultX: 0, defaultY: 0 });
  if (s3.startsWith("linear-gradient(")) {
    let h2 = bn.parse(s3)[0], [p6, v4] = d5, _6, b5, y3, S5;
    if (h2.orientation.type === "directional")
      [_6, b5, y3, S5] = Cl(h2.orientation.value);
    else if (h2.orientation.type === "angular") {
      let C5 = +h2.orientation.value / 180 * Math.PI - Math.PI / 2, W2 = Math.cos(C5), z5 = Math.sin(C5);
      _6 = 0, b5 = 0, y3 = W2, S5 = z5, y3 < 0 && (_6 -= y3, y3 = 0), S5 < 0 && (b5 -= S5, S5 = 0);
    }
    let E2 = Ko(t2, h2.colorStops), T4 = `satori_bi${e2}`, D4 = `satori_pattern_${e2}`, F3 = R2("pattern", { id: D4, x: g4[0] / t2, y: g4[1] / n3, width: l3 ? p6 / t2 : "1", height: f4 ? v4 / n3 : "1", patternUnits: "objectBoundingBox" }, R2("linearGradient", { id: T4, x1: _6, y1: b5, x2: y3, y2: S5 }, E2.map((C5) => R2("stop", { offset: C5.offset * 100 + "%", "stop-color": C5.color })).join("")) + R2("rect", { x: 0, y: 0, width: p6, height: v4, fill: `url(#${T4})` }));
    return [D4, F3];
  }
  if (s3.startsWith("radial-gradient(")) {
    let h2 = bn.parse(s3)[0], p6 = h2.orientation[0], [v4, _6] = d5, b5 = "circle", y3 = v4 / 2, S5 = _6 / 2;
    if (p6.type === "shape") {
      if (b5 = p6.value, p6.at)
        if (p6.at.type === "position")
          y3 = p6.at.value.x.value, S5 = p6.at.value.y.value;
        else
          throw new Error("orientation.at.type not implemented: " + p6.at.type);
    } else
      throw new Error("orientation.type not implemented: " + p6.type);
    let E2 = Ko(t2, h2.colorStops), T4 = `satori_radial_${e2}`, D4 = `satori_pattern_${e2}`, F3 = `satori_mask_${e2}`, C5 = {}, W2 = Math.max(Math.abs(v4 - y3), Math.abs(y3)), z5 = Math.max(Math.abs(_6 - S5), Math.abs(S5));
    if (b5 === "circle")
      C5.r = Math.sqrt(W2 * W2 + z5 * z5);
    else if (b5 === "ellipse") {
      let M4 = z5 !== 0 ? W2 / z5 : 1;
      C5.ry = Math.sqrt(W2 * W2 + z5 * z5 * M4 * M4) / M4, C5.rx = C5.ry * M4;
    }
    let X2 = R2("pattern", { id: D4, x: g4[0] / t2, y: g4[1] / n3, width: l3 ? v4 / t2 : "1", height: f4 ? _6 / n3 : "1", patternUnits: "objectBoundingBox" }, R2("radialGradient", { id: T4 }, E2.map((M4) => R2("stop", { offset: M4.offset, "stop-color": M4.color })).join("")) + R2("mask", { id: F3 }, R2("rect", { x: 0, y: 0, width: v4, height: _6, fill: "#fff" })) + R2(b5, { cx: y3, cy: S5, width: v4, height: _6, ...C5, fill: `url(#${T4})`, mask: `url(#${F3})` }));
    return [D4, X2];
  }
  if (s3.startsWith("url(")) {
    let h2 = yn(o5, { x: t2, y: n3, defaultX: 0, defaultY: 0 }), [p6, v4, _6] = await _r(s3.slice(4, -1)), b5 = h2[0] || v4, y3 = h2[1] || _6;
    return [`satori_bi${e2}`, R2("pattern", { id: `satori_bi${e2}`, patternContentUnits: "userSpaceOnUse", patternUnits: "userSpaceOnUse", x: g4[0] + r4, y: g4[1] + i3, width: l3 ? b5 : "100%", height: f4 ? y3 : "100%" }, R2("image", { x: 0, y: 0, width: b5, height: y3, preserveAspectRatio: "none", href: p6 }))];
  }
  throw new Error(`Invalid background image: "${s3}"`);
}
function Fl([e2, t2]) {
  return Math.round(e2 * 1e3) === 0 && Math.round(t2 * 1e3) === 0 ? 0 : Math.round(e2 * t2 / Math.sqrt(e2 * e2 + t2 * t2) * 1e3) / 1e3;
}
function Sr(e2, t2, n3) {
  return n3 < e2 + t2 && (n3 / 2 < e2 && n3 / 2 < t2 ? e2 = t2 = n3 / 2 : n3 / 2 < e2 ? e2 = n3 - t2 : n3 / 2 < t2 && (t2 = n3 - e2)), [e2, t2];
}
function kr(e2) {
  e2[0] = e2[1] = Math.min(e2[0], e2[1]);
}
function Tr(e2, t2, n3, r4, i3) {
  if (typeof e2 == "string") {
    let s3 = e2.split(" ").map((a3) => a3.trim()), o5 = !s3[1] && !s3[0].endsWith("%");
    return s3[1] = s3[1] || s3[0], [o5, [Math.min(be(s3[0], r4, t2, i3, true), t2), Math.min(be(s3[1], r4, n3, i3, true), n3)]];
  }
  return typeof e2 == "number" ? [true, [Math.min(e2, t2), Math.min(e2, n3)]] : [true, void 0];
}
function st({ left: e2, top: t2, width: n3, height: r4 }, i3, s3) {
  let { borderTopLeftRadius: o5, borderTopRightRadius: a3, borderBottomLeftRadius: u4, borderBottomRightRadius: l3, fontSize: f4 } = i3, d5, g4, h2, p6;
  if ([d5, o5] = Tr(o5, n3, r4, f4, i3), [g4, a3] = Tr(a3, n3, r4, f4, i3), [h2, u4] = Tr(u4, n3, r4, f4, i3), [p6, l3] = Tr(l3, n3, r4, f4, i3), !s3 && !Or(o5) && !Or(a3) && !Or(u4) && !Or(l3))
    return "";
  o5 ||= [0, 0], a3 ||= [0, 0], u4 ||= [0, 0], l3 ||= [0, 0], [o5[0], a3[0]] = Sr(o5[0], a3[0], n3), [u4[0], l3[0]] = Sr(u4[0], l3[0], n3), [o5[1], u4[1]] = Sr(o5[1], u4[1], r4), [a3[1], l3[1]] = Sr(a3[1], l3[1], r4), d5 && kr(o5), g4 && kr(a3), h2 && kr(u4), p6 && kr(l3);
  let v4 = [];
  v4[0] = [a3, a3], v4[1] = [l3, [-l3[0], l3[1]]], v4[2] = [u4, [-u4[0], -u4[1]]], v4[3] = [o5, [o5[0], -o5[1]]];
  let _6 = `h${n3 - o5[0] - a3[0]} a${v4[0][0]} 0 0 1 ${v4[0][1]}`, b5 = `v${r4 - a3[1] - l3[1]} a${v4[1][0]} 0 0 1 ${v4[1][1]}`, y3 = `h${l3[0] + u4[0] - n3} a${v4[2][0]} 0 0 1 ${v4[2][1]}`, S5 = `v${u4[1] + o5[1] - r4} a${v4[3][0]} 0 0 1 ${v4[3][1]}`;
  if (s3) {
    let T4 = function(H3) {
      let M4 = Fl([o5, a3, l3, u4][H3]);
      return H3 === 0 ? [[e2 + o5[0] - M4, t2 + o5[1] - M4], [e2 + o5[0], t2]] : H3 === 1 ? [[e2 + n3 - a3[0] + M4, t2 + a3[1] - M4], [e2 + n3, t2 + a3[1]]] : H3 === 2 ? [[e2 + n3 - l3[0] + M4, t2 + r4 - l3[1] + M4], [e2 + n3 - l3[0], t2 + r4]] : [[e2 + u4[0] - M4, t2 + r4 - u4[1] + M4], [e2, t2 + r4 - u4[1]]];
    }, E2 = s3.indexOf(false);
    if (!s3.includes(true))
      throw new Error("Invalid `partialSides`.");
    if (E2 === -1)
      E2 = 0;
    else
      for (; !s3[E2]; )
        E2 = (E2 + 1) % 4;
    let D4 = "", F3 = T4(E2), C5 = `M${F3[0]} A${v4[(E2 + 3) % 4][0]} 0 0 1 ${F3[1]}`, W2 = 0;
    for (; W2 < 4 && s3[(E2 + W2) % 4]; W2++)
      D4 += C5 + " ", C5 = [_6, b5, y3, S5][(E2 + W2) % 4];
    let z5 = (E2 + W2) % 4;
    D4 += C5.split(" ")[0];
    let X2 = T4(z5);
    return D4 += ` A${v4[(z5 + 3) % 4][0]} 0 0 1 ${X2[0]}`, D4;
  }
  return `M${e2 + o5[0]},${t2} ${_6} ${b5} ${y3} ${S5}`;
}
function Jo(e2, t2, n3) {
  return n3[e2 + "Width"] === n3[t2 + "Width"] && n3[e2 + "Style"] === n3[t2 + "Style"] && n3[e2 + "Color"] === n3[t2 + "Color"];
}
function Zo({ id: e2, currentClipPathId: t2, borderPath: n3, borderType: r4, left: i3, top: s3, width: o5, height: a3 }, u4) {
  if (!(u4.borderTopWidth || u4.borderRightWidth || u4.borderBottomWidth || u4.borderLeftWidth))
    return null;
  let f4 = `satori_bc-${e2}`;
  return [R2("clipPath", { id: f4, "clip-path": t2 ? `url(#${t2})` : void 0 }, R2(r4, { x: i3, y: s3, width: o5, height: a3, d: n3 || void 0 })), f4];
}
function xt({ left: e2, top: t2, width: n3, height: r4, props: i3, asContentMask: s3, maskBorderOnly: o5 }, a3) {
  let u4 = ["borderTop", "borderRight", "borderBottom", "borderLeft"];
  if (!s3 && !u4.some((h2) => a3[h2 + "Width"]))
    return "";
  let l3 = "", f4 = 0;
  for (; f4 > 0 && Jo(u4[f4], u4[(f4 + 3) % 4], a3); )
    f4 = (f4 + 3) % 4;
  let d5 = [false, false, false, false], g4 = [];
  for (let h2 = 0; h2 < 4; h2++) {
    let p6 = (f4 + h2) % 4, v4 = (f4 + h2 + 1) % 4, _6 = u4[p6], b5 = u4[v4];
    if (d5[p6] = true, g4 = [a3[_6 + "Width"], a3[_6 + "Style"], a3[_6 + "Color"], _6], !Jo(_6, b5, a3)) {
      let y3 = (g4[0] || 0) + (s3 && !o5 && a3[_6.replace("border", "padding")] || 0);
      y3 && (l3 += R2("path", { width: n3, height: r4, ...i3, fill: "none", stroke: s3 ? "#000" : g4[2], "stroke-width": y3 * 2, "stroke-dasharray": !s3 && g4[1] === "dashed" ? y3 * 2 + " " + y3 : void 0, d: st({ left: e2, top: t2, width: n3, height: r4 }, a3, d5) })), d5 = [false, false, false, false];
    }
  }
  if (d5.some(Boolean)) {
    let h2 = (g4[0] || 0) + (s3 && !o5 && a3[g4[3].replace("border", "padding")] || 0);
    h2 && (l3 += R2("path", { width: n3, height: r4, ...i3, fill: "none", stroke: s3 ? "#000" : g4[2], "stroke-width": h2 * 2, "stroke-dasharray": !s3 && g4[1] === "dashed" ? h2 * 2 + " " + h2 : void 0, d: st({ left: e2, top: t2, width: n3, height: r4 }, a3, d5) }));
  }
  return l3;
}
function wn({ id: e2, left: t2, top: n3, width: r4, height: i3, matrix: s3, borderOnly: o5 }, a3) {
  let u4 = (a3.borderLeftWidth || 0) + (o5 ? 0 : a3.paddingLeft || 0), l3 = (a3.borderTopWidth || 0) + (o5 ? 0 : a3.paddingTop || 0), f4 = (a3.borderRightWidth || 0) + (o5 ? 0 : a3.paddingRight || 0), d5 = (a3.borderBottomWidth || 0) + (o5 ? 0 : a3.paddingBottom || 0), g4 = { x: t2 + u4, y: n3 + l3, width: r4 - u4 - f4, height: i3 - l3 - d5 };
  return R2("mask", { id: e2 }, R2("rect", { ...g4, fill: "#fff", mask: a3._inheritedMaskId ? `url(#${a3._inheritedMaskId})` : void 0 }) + xt({ left: t2, top: n3, width: r4, height: i3, props: { transform: s3 || void 0 }, asContentMask: true, maskBorderOnly: o5 }, a3));
}
function _n({ left: e2, top: t2, width: n3, height: r4, path: i3, matrix: s3, id: o5, currentClipPath: a3, src: u4 }, l3) {
  if (l3.overflow !== "hidden" && !u4)
    return "";
  let f4 = wn({ id: `satori_om-${o5}`, left: e2, top: t2, width: n3, height: r4, matrix: s3, borderOnly: !u4 }, l3);
  return R2("clipPath", { id: `satori_cp-${o5}`, "clip-path": a3 }, R2(i3 ? "path" : "rect", { x: e2, y: t2, width: n3, height: r4, d: i3 || void 0 })) + f4;
}
async function wt({ id: e2, left: t2, top: n3, width: r4, height: i3, isInheritingTransform: s3, src: o5, debug: a3 }, u4) {
  if (u4.display === "none")
    return "";
  let l3 = !!o5, f4 = "rect", d5 = "", g4 = "", h2 = [], p6 = 1, v4 = "";
  u4.backgroundColor && h2.push(u4.backgroundColor), u4.opacity !== void 0 && (p6 = +u4.opacity), u4.transform && (d5 = yt({ left: t2, top: n3, width: r4, height: i3 }, u4.transform, s3, u4.transformOrigin));
  let _6 = "";
  if (u4.backgroundImage) {
    let X2 = [];
    for (let H3 = 0; H3 < u4.backgroundImage.length; H3++) {
      let M4 = u4.backgroundImage[H3], re2 = await xn({ id: e2 + "_" + H3, width: r4, height: i3, left: t2, top: n3 }, M4);
      re2 && X2.unshift(re2);
    }
    for (let H3 of X2)
      h2.push(`url(#${H3[0]})`), g4 += H3[1], H3[2] && (_6 += H3[2]);
  }
  let b5 = st({ left: t2, top: n3, width: r4, height: i3 }, u4);
  b5 && (f4 = "path");
  let y3 = u4._inheritedClipPathId, S5 = u4._inheritedMaskId;
  a3 && (v4 = R2("rect", { x: t2, y: n3, width: r4, height: i3, fill: "transparent", stroke: "#ff5757", "stroke-width": 1, transform: d5 || void 0, "clip-path": y3 ? `url(#${y3})` : void 0 }));
  let { backgroundClip: E2, filter: T4 } = u4, D4 = E2 === "text" ? `url(#satori_bct-${e2})` : y3 ? `url(#${y3})` : void 0, F3 = _n({ left: t2, top: n3, width: r4, height: i3, path: b5, id: e2, matrix: d5, currentClipPath: D4, src: o5 }, u4), C5 = h2.map((X2) => R2(f4, { x: t2, y: n3, width: r4, height: i3, fill: X2, d: b5 || void 0, transform: d5 || void 0, "clip-path": D4, style: T4 ? `filter:${T4}` : void 0, mask: S5 ? `url(#${S5})` : void 0 })).join(""), W2 = Zo({ id: e2, left: t2, top: n3, width: r4, height: i3, currentClipPathId: y3, borderPath: b5, borderType: f4 }, u4);
  if (l3) {
    let X2 = (u4.borderLeftWidth || 0) + (u4.paddingLeft || 0), H3 = (u4.borderTopWidth || 0) + (u4.paddingTop || 0), M4 = (u4.borderRightWidth || 0) + (u4.paddingRight || 0), re2 = (u4.borderBottomWidth || 0) + (u4.paddingBottom || 0), G2 = u4.objectFit === "contain" ? "xMidYMid" : u4.objectFit === "cover" ? "xMidYMid slice" : "none";
    C5 += R2("image", { x: t2 + X2, y: n3 + H3, width: r4 - X2 - M4, height: i3 - H3 - re2, href: o5, preserveAspectRatio: G2, transform: d5 || void 0, style: T4 ? `filter:${T4}` : void 0, "clip-path": `url(#satori_cp-${e2})`, mask: `url(#satori_om-${e2})` });
  }
  if (W2) {
    g4 += W2[0];
    let X2 = W2[1];
    C5 += xt({ left: t2, top: n3, width: r4, height: i3, props: { transform: d5 || void 0, "clip-path": `url(#${X2})` } }, u4);
  }
  let z5 = Xo({ width: r4, height: i3, id: e2, opacity: p6, shape: R2(f4, { x: t2, y: n3, width: r4, height: i3, fill: "#fff", stroke: "#fff", "stroke-width": 0, d: b5 || void 0, transform: d5 || void 0, "clip-path": D4, mask: S5 ? `url(#${S5})` : void 0 }) }, u4);
  return (g4 ? R2("defs", {}, g4) : "") + (z5 ? z5[0] : "") + F3 + (p6 !== 1 ? `<g opacity="${p6}">` : "") + (_6 || C5) + (p6 !== 1 ? "</g>" : "") + (z5 ? z5[1] : "") + v4;
}
function es(e2) {
  return Er.includes(e2);
}
function ts(e2, t2) {
  if (t2 && _t[t2] && _t[t2].test(e2))
    return t2;
  for (let n3 of Object.keys(Sn))
    if (Sn[n3].test(e2))
      return n3;
  for (let n3 of Object.keys(_t))
    if (_t[n3].test(e2))
      return n3;
  return "unknown";
}
function rs(e2) {
  if (e2)
    return Er.find((t2) => t2.toLowerCase() === e2.toLowerCase() || t2.toLowerCase().startsWith(e2.toLowerCase()));
}
async function* St(e2, t2) {
  let n3 = await Le(), { id: r4, inheritedStyle: i3, parent: s3, font: o5, debug: a3, locale: u4, embedFont: l3 = true, graphemeImages: f4, canLoadAdditionalAssets: d5, getTwStyles: g4 } = t2;
  if (e2 === null || typeof e2 > "u")
    return yield, yield, "";
  if (!on(e2) || typeof e2.type == "function") {
    let N5;
    if (!on(e2))
      N5 = gn(String(e2), t2), yield (await N5.next()).value;
    else {
      if (Io(e2.type))
        throw new Error("Class component is not supported.");
      N5 = St(e2.type(e2.props), t2), yield (await N5.next()).value;
    }
    await N5.next();
    let Oe2 = yield;
    return (await N5.next(Oe2)).value;
  }
  let { type: h2, props: p6 } = e2;
  if (p6 && Ro(p6))
    throw new Error("dangerouslySetInnerHTML property is not supported. See documentation for more information https://github.com/vercel/satori#jsx.");
  let { style: v4, children: _6, tw: b5, lang: y3 = u4 } = p6 || {}, S5 = rs(y3);
  if (b5) {
    let N5 = g4(b5, v4);
    v4 = Object.assign(N5, v4);
  }
  let E2 = n3.Node.create();
  s3.insertChild(E2, s3.getChildCount());
  let [T4, D4] = await pn(E2, h2, i3, v4, p6), F3 = T4.transform === i3.transform;
  if (F3 || (T4.transform.__parent = i3.transform), T4.overflow === "hidden" && (D4._inheritedClipPathId = `satori_cp-${r4}`, D4._inheritedMaskId = `satori_om-${r4}`), T4.backgroundClip === "text") {
    let N5 = { value: "" };
    D4._inheritedBackgroundClipTextPath = N5, T4._inheritedBackgroundClipTextPath = N5;
  }
  let C5 = Lo(_6), W2 = [], z5 = 0, X2 = [];
  for (let N5 of C5) {
    let Oe2 = St(N5, { id: r4 + "-" + z5++, parentStyle: T4, inheritedStyle: D4, isInheritingTransform: true, parent: E2, font: o5, embedFont: l3, debug: a3, graphemeImages: f4, canLoadAdditionalAssets: d5, locale: S5, getTwStyles: g4 });
    d5 ? X2.push(...(await Oe2.next()).value || []) : await Oe2.next(), W2.push(Oe2);
  }
  yield X2;
  for (let N5 of W2)
    await N5.next();
  let [H3, M4] = yield, { left: re2, top: G2, width: oe2, height: ge2 } = E2.getComputedLayout();
  re2 += H3, G2 += M4;
  let I4 = "", q3 = "", Y2 = "";
  if (h2 === "img") {
    let N5 = T4.__src;
    q3 = await wt({ id: r4, left: re2, top: G2, width: oe2, height: ge2, src: N5, isInheritingTransform: F3, debug: a3 }, T4);
  } else if (h2 === "svg") {
    let N5 = T4.color, Oe2 = Fo(e2, N5);
    q3 = await wt({ id: r4, left: re2, top: G2, width: oe2, height: ge2, src: Oe2, isInheritingTransform: F3, debug: a3 }, T4);
  } else {
    let N5 = v4 == null ? void 0 : v4.display;
    if (h2 === "div" && _6 && typeof _6 != "string" && N5 !== "flex" && N5 !== "none")
      throw new Error('Expected <div> to have explicit "display: flex" or "display: none" if it has more than one child node.');
    q3 = await wt({ id: r4, left: re2, top: G2, width: oe2, height: ge2, isInheritingTransform: F3, debug: a3 }, T4);
  }
  for (let N5 of W2)
    I4 += (await N5.next([re2, G2])).value;
  return T4._inheritedBackgroundClipTextPath && (Y2 += R2("clipPath", { id: `satori_bct-${r4}`, "clip-path": T4._inheritedClipPathId ? `url(#${T4._inheritedClipPathId})` : void 0 }, T4._inheritedBackgroundClipTextPath.value)), Y2 + q3 + I4;
}
function $l(e2, t2, [n3, r4], [i3, s3]) {
  if (n3 !== i3)
    return n3 ? !i3 || n3 === e2 ? -1 : i3 === e2 ? 1 : e2 === 400 && n3 === 500 || e2 === 500 && n3 === 400 ? -1 : e2 === 400 && i3 === 500 || e2 === 500 && i3 === 400 ? 1 : e2 < 400 ? n3 < e2 && i3 < e2 ? i3 - n3 : n3 < e2 ? -1 : i3 < e2 ? 1 : n3 - i3 : e2 < n3 && e2 < i3 ? n3 - i3 : e2 < n3 ? -1 : e2 < i3 ? 1 : i3 - n3 : 1;
  if (r4 !== s3) {
    if (r4 === t2)
      return -1;
    if (s3 === t2)
      return 1;
  }
  return -1;
}
function Wl(e2) {
  let t2 = e2.split("_"), n3 = t2[t2.length - 1];
  return n3 === ns ? void 0 : n3;
}
function Tn({ width: e2, height: t2, content: n3 }) {
  return R2("svg", { width: e2, height: t2, viewBox: `0 0 ${e2} ${t2}`, xmlns: "http://www.w3.org/2000/svg" }, n3);
}
function mu(e2) {
  return O0.includes(e2);
}
function gu(e2) {
  return E0.includes(e2);
}
function Ki(e2) {
  return typeof e2 == "string";
}
function Ji(e2) {
  return typeof e2 == "object";
}
function m3(e2) {
  return { kind: "complete", style: e2 };
}
function ie(e2, t2 = {}) {
  let { fractions: n3 } = t2;
  if (n3 && e2.includes("/")) {
    let [s3 = "", o5 = ""] = e2.split("/", 2), a3 = ie(s3), u4 = ie(o5);
    return !a3 || !u4 ? null : [a3[0] / u4[0], u4[1]];
  }
  let r4 = parseFloat(e2);
  if (Number.isNaN(r4))
    return null;
  let i3 = e2.match(/(([a-z]{2,}|%))$/);
  if (!i3)
    return [r4, V.none];
  switch (i3 == null ? void 0 : i3[1]) {
    case "rem":
      return [r4, V.rem];
    case "px":
      return [r4, V.px];
    case "em":
      return [r4, V.em];
    case "%":
      return [r4, V.percent];
    case "vw":
      return [r4, V.vw];
    case "vh":
      return [r4, V.vh];
    default:
      return null;
  }
}
function Fe(e2, t2, n3 = {}) {
  let r4 = Ae(t2, n3);
  return r4 === null ? null : m3({ [e2]: r4 });
}
function jr(e2, t2, n3) {
  let r4 = Ae(t2);
  return r4 !== null && (n3[e2] = r4), n3;
}
function bu(e2, t2) {
  let n3 = Ae(t2);
  return n3 === null ? null : { [e2]: n3 };
}
function Ae(e2, t2 = {}) {
  if (e2 === void 0)
    return null;
  let n3 = ie(String(e2), t2);
  return n3 ? He(...n3, t2) : null;
}
function He(e2, t2, n3 = {}) {
  let { isNegative: r4, device: i3 } = n3;
  switch (t2) {
    case V.rem:
      return e2 * 16 * (r4 ? -1 : 1);
    case V.px:
      return e2 * (r4 ? -1 : 1);
    case V.percent:
      return `${r4 ? "-" : ""}${e2}%`;
    case V.none:
      return e2 * (r4 ? -1 : 1);
    case V.vw:
      return i3 != null && i3.windowDimensions ? i3.windowDimensions.width * (e2 / 100) : (me("`vw` CSS unit requires configuration with `useDeviceContext()`"), null);
    case V.vh:
      return i3 != null && i3.windowDimensions ? i3.windowDimensions.height * (e2 / 100) : (me("`vh` CSS unit requires configuration with `useDeviceContext()`"), null);
    default:
      return null;
  }
}
function eo(e2) {
  let t2 = ie(e2);
  if (!t2)
    return null;
  let [n3, r4] = t2;
  switch (r4) {
    case V.rem:
      return n3 * 16;
    case V.px:
      return n3;
    default:
      return null;
  }
}
function to(e2) {
  return P0[e2 ?? ""] || "All";
}
function ro(e2) {
  let t2 = "All";
  return [e2.replace(/^-(t|b|r|l|tr|tl|br|bl)(-|$)/, (r4, i3) => (t2 = to(i3), "")), t2];
}
function tt(e2, t2 = {}) {
  if (e2.includes("/")) {
    let n3 = vu(e2, { ...t2, fractions: true });
    if (n3)
      return n3;
  }
  return e2[0] === "[" && (e2 = e2.slice(1, -1)), vu(e2, t2);
}
function ke(e2, t2, n3 = {}) {
  let r4 = tt(t2, n3);
  return r4 === null ? null : m3({ [e2]: r4 });
}
function vu(e2, t2 = {}) {
  if (e2 === "px")
    return 1;
  let n3 = ie(e2, t2);
  if (!n3)
    return null;
  let [r4, i3] = n3;
  return t2.fractions && (i3 = V.percent, r4 *= 100), i3 === V.none && (r4 = r4 / 4, i3 = V.rem), He(r4, i3, t2);
}
function A0(...e2) {
  console.warn(...e2);
}
function I0(...e2) {
}
function tr(e2) {
  return { kind: "dependent", complete(t2) {
    (!t2.fontVariant || !Array.isArray(t2.fontVariant)) && (t2.fontVariant = []), t2.fontVariant.push(e2);
  } };
}
function io(e2, t2, n3 = {}) {
  let r4 = t2 == null ? void 0 : t2[e2];
  if (!r4)
    return ke("fontSize", e2, n3);
  if (typeof r4 == "string")
    return Fe("fontSize", r4);
  let i3 = {}, [s3, o5] = r4, a3 = bu("fontSize", s3);
  if (a3 && (i3 = a3), typeof o5 == "string")
    return m3(jr("lineHeight", yu(o5, i3), i3));
  let { lineHeight: u4, letterSpacing: l3 } = o5;
  return u4 && jr("lineHeight", yu(u4, i3), i3), l3 && jr("letterSpacing", l3, i3), m3(i3);
}
function yu(e2, t2) {
  let n3 = ie(e2);
  if (n3) {
    let [r4, i3] = n3;
    if ((i3 === V.none || i3 === V.em) && typeof t2.fontSize == "number")
      return t2.fontSize * r4;
  }
  return e2;
}
function oo(e2, t2) {
  var n3;
  let r4 = (n3 = t2 == null ? void 0 : t2[e2]) !== null && n3 !== void 0 ? n3 : e2.startsWith("[") ? e2.slice(1, -1) : e2, i3 = ie(r4);
  if (!i3)
    return null;
  let [s3, o5] = i3;
  if (o5 === V.none)
    return { kind: "dependent", complete(u4) {
      if (typeof u4.fontSize != "number")
        return "relative line-height utilities require that font-size be set";
      u4.lineHeight = u4.fontSize * s3;
    } };
  let a3 = He(s3, o5);
  return a3 !== null ? m3({ lineHeight: a3 }) : null;
}
function so(e2, t2, n3, r4, i3) {
  let s3 = "";
  if (r4[0] === "[")
    s3 = r4.slice(1, -1);
  else {
    let l3 = i3 == null ? void 0 : i3[r4];
    if (l3)
      s3 = l3;
    else {
      let f4 = tt(r4);
      return f4 && typeof f4 == "number" ? xu(f4, V.px, t2, e2) : null;
    }
  }
  if (s3 === "auto")
    return wu(t2, e2, "auto");
  let o5 = ie(s3);
  if (!o5)
    return null;
  let [a3, u4] = o5;
  return n3 && (a3 = -a3), xu(a3, u4, t2, e2);
}
function xu(e2, t2, n3, r4) {
  let i3 = He(e2, t2);
  return i3 === null ? null : wu(n3, r4, i3);
}
function wu(e2, t2, n3) {
  switch (e2) {
    case "All":
      return { kind: "complete", style: { [`${t2}Top`]: n3, [`${t2}Right`]: n3, [`${t2}Bottom`]: n3, [`${t2}Left`]: n3 } };
    case "Bottom":
    case "Top":
    case "Left":
    case "Right":
      return { kind: "complete", style: { [`${t2}${e2}`]: n3 } };
    case "Vertical":
      return { kind: "complete", style: { [`${t2}Top`]: n3, [`${t2}Bottom`]: n3 } };
    case "Horizontal":
      return { kind: "complete", style: { [`${t2}Left`]: n3, [`${t2}Right`]: n3 } };
    default:
      return null;
  }
}
function ao(e2) {
  if (!e2)
    return {};
  let t2 = Object.entries(e2).reduce((i3, [s3, o5]) => {
    let a3 = [0, 1 / 0, 0], u4 = typeof o5 == "string" ? { min: o5 } : o5, l3 = u4.min ? eo(u4.min) : 0;
    l3 === null ? me(`invalid screen config value: ${s3}->min: ${u4.min}`) : a3[0] = l3;
    let f4 = u4.max ? eo(u4.max) : 1 / 0;
    return f4 === null ? me(`invalid screen config value: ${s3}->max: ${u4.max}`) : a3[1] = f4, i3[s3] = a3, i3;
  }, {}), n3 = Object.values(t2);
  n3.sort((i3, s3) => {
    let [o5, a3] = i3, [u4, l3] = s3;
    return a3 === 1 / 0 || l3 === 1 / 0 ? o5 - u4 : a3 - l3;
  });
  let r4 = 0;
  return n3.forEach((i3) => i3[2] = r4++), t2;
}
function uo(e2, t2) {
  let n3 = t2 == null ? void 0 : t2[e2];
  if (!n3)
    return null;
  if (typeof n3 == "string")
    return m3({ fontFamily: n3 });
  let r4 = n3[0];
  return r4 ? m3({ fontFamily: r4 }) : null;
}
function rt(e2, t2, n3) {
  if (!n3)
    return null;
  let r4;
  t2.includes("/") && ([t2 = "", r4] = t2.split("/", 2));
  let i3 = "";
  if (t2.startsWith("[#") || t2.startsWith("[rgb") ? i3 = t2.slice(1, -1) : i3 = ku(t2, n3), !i3)
    return null;
  if (r4) {
    let s3 = Number(r4);
    if (!Number.isNaN(s3))
      return i3 = _u(i3, s3 / 100), m3({ [Vr[e2].color]: i3 });
  }
  return { kind: "dependent", complete(s3) {
    let o5 = Vr[e2].opacity, a3 = s3[o5];
    typeof a3 == "number" && (i3 = _u(i3, a3)), s3[Vr[e2].color] = i3;
  } };
}
function nr(e2, t2) {
  let n3 = parseInt(t2, 10);
  if (Number.isNaN(n3))
    return null;
  let r4 = n3 / 100, i3 = { [Vr[e2].opacity]: r4 };
  return { kind: "complete", style: i3 };
}
function _u(e2, t2) {
  return e2.startsWith("#") ? e2 = L0(e2) : e2.startsWith("rgb(") && (e2 = e2.replace(/^rgb\(/, "rgba(").replace(/\)$/, ", 1)")), e2.replace(/, ?\d*\.?(\d+)\)$/, `, ${t2})`);
}
function Su(e2) {
  for (let t2 in e2)
    t2.startsWith("__opacity_") && delete e2[t2];
}
function L0(e2) {
  let t2 = e2;
  e2 = e2.replace(C0, (o5, a3, u4, l3) => a3 + a3 + u4 + u4 + l3 + l3);
  let n3 = D0.exec(e2);
  if (!n3)
    return me(`invalid config hex color value: ${t2}`), "rgba(0, 0, 0, 1)";
  let r4 = parseInt(n3[1], 16), i3 = parseInt(n3[2], 16), s3 = parseInt(n3[3], 16);
  return `rgba(${r4}, ${i3}, ${s3}, 1)`;
}
function ku(e2, t2) {
  let n3 = t2[e2];
  if (Ki(n3))
    return n3;
  if (Ji(n3) && Ki(n3.DEFAULT))
    return n3.DEFAULT;
  let [r4 = "", ...i3] = e2.split("-");
  for (; r4 !== e2; ) {
    let s3 = t2[r4];
    if (Ji(s3))
      return ku(i3.join("-"), s3);
    if (i3.length === 0)
      return "";
    r4 = `${r4}-${i3.shift()}`;
  }
  return "";
}
function Ou(e2, t2) {
  let [n3, r4] = ro(e2);
  if (n3.match(/^(-?(\d)+)?$/))
    return F0(n3, r4, t2 == null ? void 0 : t2.borderWidth);
  if (n3 = n3.replace(/^-/, ""), ["dashed", "solid", "dotted"].includes(n3))
    return m3({ borderStyle: n3 });
  let s3 = "border";
  switch (r4) {
    case "Bottom":
      s3 = "borderBottom";
      break;
    case "Top":
      s3 = "borderTop";
      break;
    case "Left":
      s3 = "borderLeft";
      break;
    case "Right":
      s3 = "borderRight";
      break;
  }
  let o5 = rt(s3, n3, t2 == null ? void 0 : t2.borderColor);
  if (o5)
    return o5;
  let a3 = `border${r4 === "All" ? "" : r4}Width`;
  n3 = n3.replace(/^-/, "");
  let u4 = n3.slice(1, -1), l3 = ke(a3, u4);
  return typeof (l3 == null ? void 0 : l3.style[a3]) != "number" ? null : l3;
}
function F0(e2, t2, n3) {
  if (!n3)
    return null;
  e2 = e2.replace(/^-/, "");
  let i3 = n3[e2 === "" ? "DEFAULT" : e2];
  if (i3 === void 0)
    return null;
  let s3 = `border${t2 === "All" ? "" : t2}Width`;
  return Fe(s3, i3);
}
function Eu(e2, t2) {
  if (!t2)
    return null;
  let [n3, r4] = ro(e2);
  n3 = n3.replace(/^-/, ""), n3 === "" && (n3 = "DEFAULT");
  let i3 = `border${r4 === "All" ? "" : r4}Radius`, s3 = t2[n3];
  if (s3)
    return Tu(Fe(i3, s3));
  let o5 = ke(i3, n3);
  return typeof (o5 == null ? void 0 : o5.style[i3]) != "number" ? null : Tu(o5);
}
function Tu(e2) {
  if ((e2 == null ? void 0 : e2.kind) !== "complete")
    return e2;
  let t2 = e2.style.borderTopRadius;
  t2 !== void 0 && (e2.style.borderTopLeftRadius = t2, e2.style.borderTopRightRadius = t2, delete e2.style.borderTopRadius);
  let n3 = e2.style.borderBottomRadius;
  n3 !== void 0 && (e2.style.borderBottomLeftRadius = n3, e2.style.borderBottomRightRadius = n3, delete e2.style.borderBottomRadius);
  let r4 = e2.style.borderLeftRadius;
  r4 !== void 0 && (e2.style.borderBottomLeftRadius = r4, e2.style.borderTopLeftRadius = r4, delete e2.style.borderLeftRadius);
  let i3 = e2.style.borderRightRadius;
  return i3 !== void 0 && (e2.style.borderBottomRightRadius = i3, e2.style.borderTopRightRadius = i3, delete e2.style.borderRightRadius), e2;
}
function ct(e2, t2, n3, r4) {
  let i3 = null;
  e2 === "inset" && (t2 = t2.replace(/^(x|y)-/, (a3, u4) => (i3 = u4 === "x" ? "x" : "y", "")));
  let s3 = r4 == null ? void 0 : r4[t2];
  if (s3) {
    let a3 = Ae(s3, { isNegative: n3 });
    if (a3 !== null)
      return Pu(e2, i3, a3);
  }
  let o5 = tt(t2, { isNegative: n3 });
  return o5 !== null ? Pu(e2, i3, o5) : null;
}
function Pu(e2, t2, n3) {
  if (e2 !== "inset")
    return m3({ [e2]: n3 });
  switch (t2) {
    case null:
      return m3({ top: n3, left: n3, right: n3, bottom: n3 });
    case "y":
      return m3({ top: n3, bottom: n3 });
    case "x":
      return m3({ left: n3, right: n3 });
  }
}
function ir(e2, t2, n3) {
  var r4;
  t2 = t2.replace(/^-/, "");
  let i3 = t2 === "" ? "DEFAULT" : t2, s3 = Number((r4 = n3 == null ? void 0 : n3[i3]) !== null && r4 !== void 0 ? r4 : t2);
  return Number.isNaN(s3) ? null : m3({ [`flex${e2}`]: s3 });
}
function Au(e2, t2) {
  var n3, r4;
  if (e2 = (t2 == null ? void 0 : t2[e2]) || e2, ["min-content", "revert", "unset"].includes(e2))
    return null;
  if (e2.match(/^\d+(\.\d+)?$/))
    return m3({ flexGrow: Number(e2), flexBasis: "0%" });
  let i3 = e2.match(/^(\d+)\s+(\d+)$/);
  if (i3)
    return m3({ flexGrow: Number(i3[1]), flexShrink: Number(i3[2]) });
  if (i3 = e2.match(/^(\d+)\s+([^ ]+)$/), i3) {
    let s3 = Ae((n3 = i3[2]) !== null && n3 !== void 0 ? n3 : "");
    return s3 ? m3({ flexGrow: Number(i3[1]), flexBasis: s3 }) : null;
  }
  if (i3 = e2.match(/^(\d+)\s+(\d+)\s+(.+)$/), i3) {
    let s3 = Ae((r4 = i3[3]) !== null && r4 !== void 0 ? r4 : "");
    return s3 ? m3({ flexGrow: Number(i3[1]), flexShrink: Number(i3[2]), flexBasis: s3 }) : null;
  }
  return null;
}
function lo(e2, t2, n3 = {}, r4) {
  let i3 = r4 == null ? void 0 : r4[t2];
  return i3 !== void 0 ? Fe(e2, i3, n3) : ke(e2, t2, n3);
}
function or(e2, t2, n3 = {}, r4) {
  let i3 = Ae(r4 == null ? void 0 : r4[t2], n3);
  return i3 ? m3({ [e2]: i3 }) : (t2 === "screen" && (t2 = e2.includes("Width") ? "100vw" : "100vh"), ke(e2, t2, n3));
}
function Iu(e2, t2, n3) {
  let r4 = n3 == null ? void 0 : n3[e2];
  if (r4) {
    let i3 = ie(r4, { isNegative: t2 });
    if (!i3)
      return null;
    let [s3, o5] = i3;
    if (o5 === V.em)
      return N0(s3);
    if (o5 === V.percent)
      return me("percentage-based letter-spacing configuration currently unsupported, switch to `em`s, or open an issue if you'd like to see support added."), null;
    let a3 = He(s3, o5, { isNegative: t2 });
    return a3 !== null ? m3({ letterSpacing: a3 }) : null;
  }
  return ke("letterSpacing", e2, { isNegative: t2 });
}
function N0(e2) {
  return { kind: "dependent", complete(t2) {
    let n3 = t2.fontSize;
    if (typeof n3 != "number" || Number.isNaN(n3))
      return "tracking-X relative letter spacing classes require font-size to be set";
    t2.letterSpacing = Math.round((e2 * n3 + Number.EPSILON) * 100) / 100;
  } };
}
function Ru(e2, t2) {
  let n3 = t2 == null ? void 0 : t2[e2];
  if (n3) {
    let i3 = ie(String(n3));
    if (i3)
      return m3({ opacity: i3[0] });
  }
  let r4 = ie(e2);
  return r4 ? m3({ opacity: r4[0] / 100 }) : null;
}
function Lu(e2) {
  let t2 = parseInt(e2, 10);
  return Number.isNaN(t2) ? null : { kind: "complete", style: { shadowOpacity: t2 / 100 } };
}
function Cu(e2) {
  if (e2.includes("/")) {
    let [n3 = "", r4 = ""] = e2.split("/", 2), i3 = fo(n3), s3 = fo(r4);
    return i3 === null || s3 === null ? null : { kind: "complete", style: { shadowOffset: { width: i3, height: s3 } } };
  }
  let t2 = fo(e2);
  return t2 === null ? null : { kind: "complete", style: { shadowOffset: { width: t2, height: t2 } } };
}
function fo(e2) {
  let t2 = tt(e2);
  return typeof t2 == "number" ? t2 : null;
}
function Du(e2) {
  let t2 = [], n3 = null;
  return e2.forEach((r4) => {
    if (typeof r4 == "string")
      t2 = [...t2, ...co(r4)];
    else if (Array.isArray(r4))
      t2 = [...t2, ...r4.flatMap(co)];
    else if (typeof r4 == "object" && r4 !== null)
      for (let [i3, s3] of Object.entries(r4))
        typeof s3 == "boolean" ? t2 = [...t2, ...s3 ? co(i3) : []] : n3 ? n3[i3] = s3 : n3 = { [i3]: s3 };
  }), [t2.filter(Boolean).filter(M0), n3];
}
function co(e2) {
  return e2.trim().split(/\s+/);
}
function M0(e2, t2, n3) {
  return n3.indexOf(e2) === t2;
}
function Fu(e2) {
  var t2;
  return (t2 = e2 == null ? void 0 : e2.reduce((n3, r4) => ({ ...n3, ...$0(r4.handler) }), {})) !== null && t2 !== void 0 ? t2 : {};
}
function $0(e2) {
  let t2 = {};
  return e2({ addUtilities: (n3) => {
    t2 = n3;
  }, ...W0 }), t2;
}
function Ie(e2) {
  throw new Error(`tailwindcss plugin function argument object prop "${e2}" not implemented`);
}
function Mu(e2, t2) {
  let n3 = (0, Nu.default)(q0(e2)), r4 = {}, i3 = Fu(n3.plugins), s3 = {}, o5 = Object.entries(i3).map(([p6, v4]) => typeof v4 == "string" ? (s3[p6] = v4, [p6, { kind: "null" }]) : [p6, m3(v4)]).filter(([, p6]) => p6.kind !== "null");
  function a3() {
    return [r4.windowDimensions ? `w${r4.windowDimensions.width}` : false, r4.windowDimensions ? `h${r4.windowDimensions.height}` : false, r4.fontScale ? `fs${r4.fontScale}` : false, r4.colorScheme === "dark" ? "dark" : false, r4.pixelDensity === 2 ? "retina" : false].filter(Boolean).join("--") || "default";
  }
  let u4 = a3(), l3 = {};
  function f4() {
    let p6 = l3[u4];
    if (p6)
      return p6;
    let v4 = new rr(o5);
    return l3[u4] = v4, v4;
  }
  function d5(...p6) {
    let v4 = f4(), _6 = {}, b5 = [], y3 = [], [S5, E2] = Du(p6), T4 = S5.join(" "), D4 = v4.getStyle(T4);
    if (D4)
      return { ...D4, ...E2 || {} };
    for (let F3 of S5) {
      let C5 = v4.getIr(F3);
      if (!C5 && F3 in s3) {
        let z5 = d5(s3[F3]);
        v4.setIr(F3, m3(z5)), _6 = { ..._6, ...z5 };
        continue;
      }
      switch (C5 = new dt(F3, n3, v4, r4, t2).parse(), C5.kind) {
        case "complete":
          _6 = { ..._6, ...C5.style }, v4.setIr(F3, C5);
          break;
        case "dependent":
          b5.push(C5);
          break;
        case "ordered":
          y3.push(C5);
          break;
        case "null":
          v4.setIr(F3, C5);
          break;
      }
    }
    if (y3.length > 0) {
      y3.sort((F3, C5) => F3.order - C5.order);
      for (let F3 of y3)
        switch (F3.styleIr.kind) {
          case "complete":
            _6 = { ..._6, ...F3.styleIr.style };
            break;
          case "dependent":
            b5.push(F3.styleIr);
            break;
        }
    }
    if (b5.length > 0) {
      for (let F3 of b5) {
        let C5 = F3.complete(_6);
        C5 && me(C5);
      }
      Su(_6);
    }
    return T4 !== "" && v4.setStyle(T4, _6), E2 && (_6 = { ..._6, ...E2 }), _6;
  }
  function g4(p6) {
    let v4 = d5(p6.split(/\s+/g).map((_6) => _6.replace(/^(bg|text|border)-/, "")).map((_6) => `bg-${_6}`).join(" "));
    return typeof v4.backgroundColor == "string" ? v4.backgroundColor : void 0;
  }
  let h2 = (p6, ...v4) => {
    let _6 = "";
    return p6.forEach((b5, y3) => {
      var S5;
      _6 += b5 + ((S5 = v4[y3]) !== null && S5 !== void 0 ? S5 : "");
    }), d5(_6);
  };
  return h2.style = d5, h2.color = g4, h2.prefixMatch = (...p6) => {
    let v4 = p6.sort().join(":"), _6 = f4(), b5 = _6.getPrefixMatch(v4);
    if (b5 !== void 0)
      return b5;
    let E2 = new dt(`${v4}:flex`, n3, _6, r4, t2).parse().kind !== "null";
    return _6.setPrefixMatch(v4, E2), E2;
  }, h2.setWindowDimensions = (p6) => {
    r4.windowDimensions = p6, u4 = a3();
  }, h2.setFontScale = (p6) => {
    r4.fontScale = p6, u4 = a3();
  }, h2.setPixelDensity = (p6) => {
    r4.pixelDensity = p6, u4 = a3();
  }, h2.setColorScheme = (p6) => {
    r4.colorScheme = p6, u4 = a3();
  }, h2;
}
function q0(e2) {
  return { ...e2, content: ["_no_warnings_please"] };
}
function z0(e2) {
  return Mu({ ...e2, plugins: [...(e2 == null ? void 0 : e2.plugins) ?? [], U0] }, "web");
}
function po({ width: e2, height: t2, config: n3 }) {
  return Hr || (Hr = z0(n3)), Hr.setWindowDimensions({ width: +e2, height: +t2 }), Hr;
}
async function Wu(e2, t2) {
  let n3 = await Le();
  if (!n3 || !n3.Node)
    throw new Error("Satori is not initialized: expect `yoga` to be loaded, got " + n3);
  t2.fonts = t2.fonts || [];
  let r4;
  ho.has(t2.fonts) ? r4 = ho.get(t2.fonts) : ho.set(t2.fonts, r4 = new kt(t2.fonts));
  let i3 = "width" in t2 ? t2.width : void 0, s3 = "height" in t2 ? t2.height : void 0, o5 = n3.Node.create();
  i3 && o5.setWidth(i3), s3 && o5.setHeight(s3), o5.setFlexDirection(n3.FLEX_DIRECTION_ROW), o5.setFlexWrap(n3.WRAP_WRAP), o5.setAlignContent(n3.ALIGN_AUTO), o5.setAlignItems(n3.ALIGN_FLEX_START), o5.setJustifyContent(n3.JUSTIFY_FLEX_START), o5.setOverflow(n3.OVERFLOW_HIDDEN);
  let a3 = { ...t2.graphemeImages }, u4 = /* @__PURE__ */ new Set(), l3 = St(e2, { id: "id", parentStyle: {}, inheritedStyle: { fontSize: 16, fontWeight: "normal", fontFamily: "serif", fontStyle: "normal", lineHeight: 1.2, color: "black", opacity: 1, whiteSpace: "normal", _viewportWidth: i3, _viewportHeight: s3 }, parent: o5, font: r4, embedFont: t2.embedFont, debug: t2.debug, graphemeImages: a3, canLoadAdditionalAssets: !!t2.loadAdditionalAsset, getTwStyles: (p6, v4) => {
    let b5 = { ...po({ width: i3, height: s3, config: t2.tailwindConfig })([p6]) };
    return typeof b5.lineHeight == "number" && (b5.lineHeight = b5.lineHeight / (+b5.fontSize || v4.fontSize || 16)), b5.shadowColor && b5.boxShadow && (b5.boxShadow = b5.boxShadow.replace(/rgba?\([^)]+\)/, b5.shadowColor)), b5;
  } }), f4 = (await l3.next()).value;
  if (t2.loadAdditionalAsset && f4.length) {
    let p6 = G0(f4), v4 = [], _6 = {};
    await Promise.all(Object.entries(p6).flatMap(([b5, y3]) => y3.map((S5) => {
      let E2 = `${b5}_${S5}`;
      return u4.has(E2) ? null : (u4.add(E2), t2.loadAdditionalAsset(b5, S5).then((T4) => {
        typeof T4 == "string" ? _6[S5] = T4 : T4 && v4.push(T4);
      }));
    }))), r4.addFonts(v4), Object.assign(a3, _6);
  }
  await l3.next(), o5.calculateLayout(i3, s3, n3.DIRECTION_LTR);
  let d5 = (await l3.next([0, 0])).value, g4 = o5.getComputedWidth(), h2 = o5.getComputedHeight();
  return o5.freeRecursive(), Tn({ width: g4, height: h2, content: d5 });
}
function G0(e2) {
  let t2 = {}, n3 = {};
  for (let { word: r4, locale: i3 } of e2) {
    let s3 = ts(r4, i3);
    n3[s3] = n3[s3] || "", n3[s3] += r4;
  }
  return Object.keys(n3).forEach((r4) => {
    t2[r4] = t2[r4] || [], r4 === "emoji" ? t2[r4].push(...$u(de(n3[r4], "grapheme"))) : (t2[r4][0] = t2[r4][0] || "", t2[r4][0] += $u(de(n3[r4], "grapheme", r4 === "unknown" ? void 0 : r4)).join(""));
  }), t2;
}
function $u(e2) {
  return Array.from(new Set(e2));
}
var import_css_to_react_native, import_css_background_parser, import_css_box_shadow, import_postcss_value_parser, Gu, pr, ju, Vu, Hu, Yu, hr, L2, Jr, So, Xu, mr, c3, ko, To, En, is, os, In, Pr, zl, Ar, as, us, ls, cs, ds, ps, $n, gs, bs, xs, Et, Ce, ue, Fr, Bn, zn, Nr, Vn, Yn, Qn, Mr, Zn, ti, ni, Gs, li, ci, pi, mi, Ks, gi, ta, la, ca2, da, ga, va, xa, wa, Sa, Ci, Fi, Ia, La, Da, Ba, Xa, Qa, tu, ru, p0, nu, au, lu, cu, pu, gr, mt, Ju, Zu, el, tl, rl, nl, Oo, Eo, Po, Ao, ol, al, tn, rn, sn, Do, fl2, ye, $o, cl, vl, bl, qo, kl, Tl, yr, xr, wr, dn, fn, cn, Ol, Vo, vn, Qo, bn, Or, Ml, Sn, _t, Er, ns, kt, Nu, O0, E0, hu, V, Zi, P0, me, R0, no, rr, Vr, C0, D0, dt, W0, U0, Hr, ho;
var init_dist5 = __esm({
  "../../node_modules/satori/dist/index.js"() {
    init_module();
    import_css_to_react_native = __toESM(require_css_to_react_native(), 1);
    import_css_background_parser = __toESM(require_css_background_parser(), 1);
    import_css_box_shadow = __toESM(require_css_box_shadow(), 1);
    import_postcss_value_parser = __toESM(require_lib(), 1);
    init_emoji_regex();
    init_opentype_module();
    Gu = Object.create;
    pr = Object.defineProperty;
    ju = Object.getOwnPropertyDescriptor;
    Vu = Object.getOwnPropertyNames;
    Hu = Object.getPrototypeOf;
    Yu = Object.prototype.hasOwnProperty;
    hr = (e2, t2) => () => (e2 && (t2 = e2(e2 = 0)), t2);
    L2 = (e2, t2) => () => (t2 || e2((t2 = { exports: {} }).exports, t2), t2.exports);
    Jr = (e2, t2) => {
      for (var n3 in t2)
        pr(e2, n3, { get: t2[n3], enumerable: true });
    };
    So = (e2, t2, n3, r4) => {
      if (t2 && typeof t2 == "object" || typeof t2 == "function")
        for (let i3 of Vu(t2))
          !Yu.call(e2, i3) && i3 !== n3 && pr(e2, i3, { get: () => t2[i3], enumerable: !(r4 = ju(t2, i3)) || r4.enumerable });
      return e2;
    };
    Xu = (e2, t2, n3) => (n3 = e2 != null ? Gu(Hu(e2)) : {}, So(t2 || !e2 || !e2.__esModule ? pr(n3, "default", { value: e2, enumerable: true }) : n3, e2));
    mr = (e2) => So(pr({}, "__esModule", { value: true }), e2);
    c3 = hr(() => {
    });
    ko = {};
    Jr(ko, { getYogaModule: () => Qu });
    To = hr(() => {
      c3();
    });
    En = L2((On) => {
      "use strict";
      c3();
      Object.defineProperty(On, "__esModule", { value: true });
      Object.defineProperty(On, "default", { enumerable: true, get: () => ql });
      function ql(e2) {
        if (e2 = `${e2}`, e2 === "0")
          return "0";
        if (/^[+-]?(\d+|\d*\.\d+)(e[+-]?\d+)?(%|\w+)?$/.test(e2))
          return e2.replace(/^[+-]?/, (t2) => t2 === "-" ? "" : "-");
        if (e2.includes("var(") || e2.includes("calc("))
          return `calc(${e2} * -1)`;
      }
    });
    is = L2((Pn) => {
      "use strict";
      c3();
      Object.defineProperty(Pn, "__esModule", { value: true });
      Object.defineProperty(Pn, "default", { enumerable: true, get: () => Bl });
      var Bl = ["preflight", "container", "accessibility", "pointerEvents", "visibility", "position", "inset", "isolation", "zIndex", "order", "gridColumn", "gridColumnStart", "gridColumnEnd", "gridRow", "gridRowStart", "gridRowEnd", "float", "clear", "margin", "boxSizing", "display", "aspectRatio", "height", "maxHeight", "minHeight", "width", "minWidth", "maxWidth", "flex", "flexShrink", "flexGrow", "flexBasis", "tableLayout", "borderCollapse", "borderSpacing", "transformOrigin", "translate", "rotate", "skew", "scale", "transform", "animation", "cursor", "touchAction", "userSelect", "resize", "scrollSnapType", "scrollSnapAlign", "scrollSnapStop", "scrollMargin", "scrollPadding", "listStylePosition", "listStyleType", "appearance", "columns", "breakBefore", "breakInside", "breakAfter", "gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateColumns", "gridTemplateRows", "flexDirection", "flexWrap", "placeContent", "placeItems", "alignContent", "alignItems", "justifyContent", "justifyItems", "gap", "space", "divideWidth", "divideStyle", "divideColor", "divideOpacity", "placeSelf", "alignSelf", "justifySelf", "overflow", "overscrollBehavior", "scrollBehavior", "textOverflow", "whitespace", "wordBreak", "borderRadius", "borderWidth", "borderStyle", "borderColor", "borderOpacity", "backgroundColor", "backgroundOpacity", "backgroundImage", "gradientColorStops", "boxDecorationBreak", "backgroundSize", "backgroundAttachment", "backgroundClip", "backgroundPosition", "backgroundRepeat", "backgroundOrigin", "fill", "stroke", "strokeWidth", "objectFit", "objectPosition", "padding", "textAlign", "textIndent", "verticalAlign", "fontFamily", "fontSize", "fontWeight", "textTransform", "fontStyle", "fontVariantNumeric", "lineHeight", "letterSpacing", "textColor", "textOpacity", "textDecoration", "textDecorationColor", "textDecorationStyle", "textDecorationThickness", "textUnderlineOffset", "fontSmoothing", "placeholderColor", "placeholderOpacity", "caretColor", "accentColor", "opacity", "backgroundBlendMode", "mixBlendMode", "boxShadow", "boxShadowColor", "outlineStyle", "outlineWidth", "outlineOffset", "outlineColor", "ringWidth", "ringColor", "ringOpacity", "ringOffsetWidth", "ringOffsetColor", "blur", "brightness", "contrast", "dropShadow", "grayscale", "hueRotate", "invert", "saturate", "sepia", "filter", "backdropBlur", "backdropBrightness", "backdropContrast", "backdropGrayscale", "backdropHueRotate", "backdropInvert", "backdropOpacity", "backdropSaturate", "backdropSepia", "backdropFilter", "transitionProperty", "transitionDelay", "transitionDuration", "transitionTimingFunction", "willChange", "content"];
    });
    os = L2((An) => {
      "use strict";
      c3();
      Object.defineProperty(An, "__esModule", { value: true });
      Object.defineProperty(An, "default", { enumerable: true, get: () => Ul });
      function Ul(e2, t2) {
        return e2 === void 0 ? t2 : Array.isArray(e2) ? e2 : [...new Set(t2.filter((r4) => e2 !== false && e2[r4] !== false).concat(Object.keys(e2).filter((r4) => e2[r4] !== false)))];
      }
    });
    In = L2((kg, ss) => {
      c3();
      ss.exports = { content: [], presets: [], darkMode: "media", theme: { screens: { sm: "640px", md: "768px", lg: "1024px", xl: "1280px", "2xl": "1536px" }, colors: ({ colors: e2 }) => ({ inherit: e2.inherit, current: e2.current, transparent: e2.transparent, black: e2.black, white: e2.white, slate: e2.slate, gray: e2.gray, zinc: e2.zinc, neutral: e2.neutral, stone: e2.stone, red: e2.red, orange: e2.orange, amber: e2.amber, yellow: e2.yellow, lime: e2.lime, green: e2.green, emerald: e2.emerald, teal: e2.teal, cyan: e2.cyan, sky: e2.sky, blue: e2.blue, indigo: e2.indigo, violet: e2.violet, purple: e2.purple, fuchsia: e2.fuchsia, pink: e2.pink, rose: e2.rose }), columns: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", "3xs": "16rem", "2xs": "18rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem" }, spacing: { px: "1px", 0: "0px", 0.5: "0.125rem", 1: "0.25rem", 1.5: "0.375rem", 2: "0.5rem", 2.5: "0.625rem", 3: "0.75rem", 3.5: "0.875rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem", 11: "2.75rem", 12: "3rem", 14: "3.5rem", 16: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, animation: { none: "none", spin: "spin 1s linear infinite", ping: "ping 1s cubic-bezier(0, 0, 0.2, 1) infinite", pulse: "pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite", bounce: "bounce 1s infinite" }, aspectRatio: { auto: "auto", square: "1 / 1", video: "16 / 9" }, backdropBlur: ({ theme: e2 }) => e2("blur"), backdropBrightness: ({ theme: e2 }) => e2("brightness"), backdropContrast: ({ theme: e2 }) => e2("contrast"), backdropGrayscale: ({ theme: e2 }) => e2("grayscale"), backdropHueRotate: ({ theme: e2 }) => e2("hueRotate"), backdropInvert: ({ theme: e2 }) => e2("invert"), backdropOpacity: ({ theme: e2 }) => e2("opacity"), backdropSaturate: ({ theme: e2 }) => e2("saturate"), backdropSepia: ({ theme: e2 }) => e2("sepia"), backgroundColor: ({ theme: e2 }) => e2("colors"), backgroundImage: { none: "none", "gradient-to-t": "linear-gradient(to top, var(--tw-gradient-stops))", "gradient-to-tr": "linear-gradient(to top right, var(--tw-gradient-stops))", "gradient-to-r": "linear-gradient(to right, var(--tw-gradient-stops))", "gradient-to-br": "linear-gradient(to bottom right, var(--tw-gradient-stops))", "gradient-to-b": "linear-gradient(to bottom, var(--tw-gradient-stops))", "gradient-to-bl": "linear-gradient(to bottom left, var(--tw-gradient-stops))", "gradient-to-l": "linear-gradient(to left, var(--tw-gradient-stops))", "gradient-to-tl": "linear-gradient(to top left, var(--tw-gradient-stops))" }, backgroundOpacity: ({ theme: e2 }) => e2("opacity"), backgroundPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, backgroundSize: { auto: "auto", cover: "cover", contain: "contain" }, blur: { 0: "0", none: "0", sm: "4px", DEFAULT: "8px", md: "12px", lg: "16px", xl: "24px", "2xl": "40px", "3xl": "64px" }, brightness: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5", 200: "2" }, borderColor: ({ theme: e2 }) => ({ ...e2("colors"), DEFAULT: e2("colors.gray.200", "currentColor") }), borderOpacity: ({ theme: e2 }) => e2("opacity"), borderRadius: { none: "0px", sm: "0.125rem", DEFAULT: "0.25rem", md: "0.375rem", lg: "0.5rem", xl: "0.75rem", "2xl": "1rem", "3xl": "1.5rem", full: "9999px" }, borderSpacing: ({ theme: e2 }) => ({ ...e2("spacing") }), borderWidth: { DEFAULT: "1px", 0: "0px", 2: "2px", 4: "4px", 8: "8px" }, boxShadow: { sm: "0 1px 2px 0 rgb(0 0 0 / 0.05)", DEFAULT: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)", md: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)", lg: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)", xl: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)", "2xl": "0 25px 50px -12px rgb(0 0 0 / 0.25)", inner: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)", none: "none" }, boxShadowColor: ({ theme: e2 }) => e2("colors"), caretColor: ({ theme: e2 }) => e2("colors"), accentColor: ({ theme: e2 }) => ({ ...e2("colors"), auto: "auto" }), contrast: { 0: "0", 50: ".5", 75: ".75", 100: "1", 125: "1.25", 150: "1.5", 200: "2" }, container: {}, content: { none: "none" }, cursor: { auto: "auto", default: "default", pointer: "pointer", wait: "wait", text: "text", move: "move", help: "help", "not-allowed": "not-allowed", none: "none", "context-menu": "context-menu", progress: "progress", cell: "cell", crosshair: "crosshair", "vertical-text": "vertical-text", alias: "alias", copy: "copy", "no-drop": "no-drop", grab: "grab", grabbing: "grabbing", "all-scroll": "all-scroll", "col-resize": "col-resize", "row-resize": "row-resize", "n-resize": "n-resize", "e-resize": "e-resize", "s-resize": "s-resize", "w-resize": "w-resize", "ne-resize": "ne-resize", "nw-resize": "nw-resize", "se-resize": "se-resize", "sw-resize": "sw-resize", "ew-resize": "ew-resize", "ns-resize": "ns-resize", "nesw-resize": "nesw-resize", "nwse-resize": "nwse-resize", "zoom-in": "zoom-in", "zoom-out": "zoom-out" }, divideColor: ({ theme: e2 }) => e2("borderColor"), divideOpacity: ({ theme: e2 }) => e2("borderOpacity"), divideWidth: ({ theme: e2 }) => e2("borderWidth"), dropShadow: { sm: "0 1px 1px rgb(0 0 0 / 0.05)", DEFAULT: ["0 1px 2px rgb(0 0 0 / 0.1)", "0 1px 1px rgb(0 0 0 / 0.06)"], md: ["0 4px 3px rgb(0 0 0 / 0.07)", "0 2px 2px rgb(0 0 0 / 0.06)"], lg: ["0 10px 8px rgb(0 0 0 / 0.04)", "0 4px 3px rgb(0 0 0 / 0.1)"], xl: ["0 20px 13px rgb(0 0 0 / 0.03)", "0 8px 5px rgb(0 0 0 / 0.08)"], "2xl": "0 25px 25px rgb(0 0 0 / 0.15)", none: "0 0 #0000" }, fill: ({ theme: e2 }) => e2("colors"), grayscale: { 0: "0", DEFAULT: "100%" }, hueRotate: { 0: "0deg", 15: "15deg", 30: "30deg", 60: "60deg", 90: "90deg", 180: "180deg" }, invert: { 0: "0", DEFAULT: "100%" }, flex: { 1: "1 1 0%", auto: "1 1 auto", initial: "0 1 auto", none: "none" }, flexBasis: ({ theme: e2 }) => ({ auto: "auto", ...e2("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%" }), flexGrow: { 0: "0", DEFAULT: "1" }, flexShrink: { 0: "0", DEFAULT: "1" }, fontFamily: { sans: ["ui-sans-serif", "system-ui", "-apple-system", "BlinkMacSystemFont", '"Segoe UI"', "Roboto", '"Helvetica Neue"', "Arial", '"Noto Sans"', "sans-serif", '"Apple Color Emoji"', '"Segoe UI Emoji"', '"Segoe UI Symbol"', '"Noto Color Emoji"'], serif: ["ui-serif", "Georgia", "Cambria", '"Times New Roman"', "Times", "serif"], mono: ["ui-monospace", "SFMono-Regular", "Menlo", "Monaco", "Consolas", '"Liberation Mono"', '"Courier New"', "monospace"] }, fontSize: { xs: ["0.75rem", { lineHeight: "1rem" }], sm: ["0.875rem", { lineHeight: "1.25rem" }], base: ["1rem", { lineHeight: "1.5rem" }], lg: ["1.125rem", { lineHeight: "1.75rem" }], xl: ["1.25rem", { lineHeight: "1.75rem" }], "2xl": ["1.5rem", { lineHeight: "2rem" }], "3xl": ["1.875rem", { lineHeight: "2.25rem" }], "4xl": ["2.25rem", { lineHeight: "2.5rem" }], "5xl": ["3rem", { lineHeight: "1" }], "6xl": ["3.75rem", { lineHeight: "1" }], "7xl": ["4.5rem", { lineHeight: "1" }], "8xl": ["6rem", { lineHeight: "1" }], "9xl": ["8rem", { lineHeight: "1" }] }, fontWeight: { thin: "100", extralight: "200", light: "300", normal: "400", medium: "500", semibold: "600", bold: "700", extrabold: "800", black: "900" }, gap: ({ theme: e2 }) => e2("spacing"), gradientColorStops: ({ theme: e2 }) => e2("colors"), gridAutoColumns: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridAutoRows: { auto: "auto", min: "min-content", max: "max-content", fr: "minmax(0, 1fr)" }, gridColumn: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-7": "span 7 / span 7", "span-8": "span 8 / span 8", "span-9": "span 9 / span 9", "span-10": "span 10 / span 10", "span-11": "span 11 / span 11", "span-12": "span 12 / span 12", "span-full": "1 / -1" }, gridColumnEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13" }, gridColumnStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12", 13: "13" }, gridRow: { auto: "auto", "span-1": "span 1 / span 1", "span-2": "span 2 / span 2", "span-3": "span 3 / span 3", "span-4": "span 4 / span 4", "span-5": "span 5 / span 5", "span-6": "span 6 / span 6", "span-full": "1 / -1" }, gridRowStart: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7" }, gridRowEnd: { auto: "auto", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7" }, gridTemplateColumns: { none: "none", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))", 7: "repeat(7, minmax(0, 1fr))", 8: "repeat(8, minmax(0, 1fr))", 9: "repeat(9, minmax(0, 1fr))", 10: "repeat(10, minmax(0, 1fr))", 11: "repeat(11, minmax(0, 1fr))", 12: "repeat(12, minmax(0, 1fr))" }, gridTemplateRows: { none: "none", 1: "repeat(1, minmax(0, 1fr))", 2: "repeat(2, minmax(0, 1fr))", 3: "repeat(3, minmax(0, 1fr))", 4: "repeat(4, minmax(0, 1fr))", 5: "repeat(5, minmax(0, 1fr))", 6: "repeat(6, minmax(0, 1fr))" }, height: ({ theme: e2 }) => ({ auto: "auto", ...e2("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }), inset: ({ theme: e2 }) => ({ auto: "auto", ...e2("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%" }), keyframes: { spin: { to: { transform: "rotate(360deg)" } }, ping: { "75%, 100%": { transform: "scale(2)", opacity: "0" } }, pulse: { "50%": { opacity: ".5" } }, bounce: { "0%, 100%": { transform: "translateY(-25%)", animationTimingFunction: "cubic-bezier(0.8,0,1,1)" }, "50%": { transform: "none", animationTimingFunction: "cubic-bezier(0,0,0.2,1)" } } }, letterSpacing: { tighter: "-0.05em", tight: "-0.025em", normal: "0em", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, lineHeight: { none: "1", tight: "1.25", snug: "1.375", normal: "1.5", relaxed: "1.625", loose: "2", 3: ".75rem", 4: "1rem", 5: "1.25rem", 6: "1.5rem", 7: "1.75rem", 8: "2rem", 9: "2.25rem", 10: "2.5rem" }, listStyleType: { none: "none", disc: "disc", decimal: "decimal" }, margin: ({ theme: e2 }) => ({ auto: "auto", ...e2("spacing") }), maxHeight: ({ theme: e2 }) => ({ ...e2("spacing"), full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }), maxWidth: ({ theme: e2, breakpoints: t2 }) => ({ none: "none", 0: "0rem", xs: "20rem", sm: "24rem", md: "28rem", lg: "32rem", xl: "36rem", "2xl": "42rem", "3xl": "48rem", "4xl": "56rem", "5xl": "64rem", "6xl": "72rem", "7xl": "80rem", full: "100%", min: "min-content", max: "max-content", fit: "fit-content", prose: "65ch", ...t2(e2("screens")) }), minHeight: { 0: "0px", full: "100%", screen: "100vh", min: "min-content", max: "max-content", fit: "fit-content" }, minWidth: { 0: "0px", full: "100%", min: "min-content", max: "max-content", fit: "fit-content" }, objectPosition: { bottom: "bottom", center: "center", left: "left", "left-bottom": "left bottom", "left-top": "left top", right: "right", "right-bottom": "right bottom", "right-top": "right top", top: "top" }, opacity: { 0: "0", 5: "0.05", 10: "0.1", 20: "0.2", 25: "0.25", 30: "0.3", 40: "0.4", 50: "0.5", 60: "0.6", 70: "0.7", 75: "0.75", 80: "0.8", 90: "0.9", 95: "0.95", 100: "1" }, order: { first: "-9999", last: "9999", none: "0", 1: "1", 2: "2", 3: "3", 4: "4", 5: "5", 6: "6", 7: "7", 8: "8", 9: "9", 10: "10", 11: "11", 12: "12" }, padding: ({ theme: e2 }) => e2("spacing"), placeholderColor: ({ theme: e2 }) => e2("colors"), placeholderOpacity: ({ theme: e2 }) => e2("opacity"), outlineColor: ({ theme: e2 }) => e2("colors"), outlineOffset: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, outlineWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, ringColor: ({ theme: e2 }) => ({ DEFAULT: e2("colors.blue.500", "#3b82f6"), ...e2("colors") }), ringOffsetColor: ({ theme: e2 }) => e2("colors"), ringOffsetWidth: { 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, ringOpacity: ({ theme: e2 }) => ({ DEFAULT: "0.5", ...e2("opacity") }), ringWidth: { DEFAULT: "3px", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, rotate: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg", 45: "45deg", 90: "90deg", 180: "180deg" }, saturate: { 0: "0", 50: ".5", 100: "1", 150: "1.5", 200: "2" }, scale: { 0: "0", 50: ".5", 75: ".75", 90: ".9", 95: ".95", 100: "1", 105: "1.05", 110: "1.1", 125: "1.25", 150: "1.5" }, scrollMargin: ({ theme: e2 }) => ({ ...e2("spacing") }), scrollPadding: ({ theme: e2 }) => e2("spacing"), sepia: { 0: "0", DEFAULT: "100%" }, skew: { 0: "0deg", 1: "1deg", 2: "2deg", 3: "3deg", 6: "6deg", 12: "12deg" }, space: ({ theme: e2 }) => ({ ...e2("spacing") }), stroke: ({ theme: e2 }) => e2("colors"), strokeWidth: { 0: "0", 1: "1", 2: "2" }, textColor: ({ theme: e2 }) => e2("colors"), textDecorationColor: ({ theme: e2 }) => e2("colors"), textDecorationThickness: { auto: "auto", "from-font": "from-font", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, textUnderlineOffset: { auto: "auto", 0: "0px", 1: "1px", 2: "2px", 4: "4px", 8: "8px" }, textIndent: ({ theme: e2 }) => ({ ...e2("spacing") }), textOpacity: ({ theme: e2 }) => e2("opacity"), transformOrigin: { center: "center", top: "top", "top-right": "top right", right: "right", "bottom-right": "bottom right", bottom: "bottom", "bottom-left": "bottom left", left: "left", "top-left": "top left" }, transitionDelay: { 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms" }, transitionDuration: { DEFAULT: "150ms", 75: "75ms", 100: "100ms", 150: "150ms", 200: "200ms", 300: "300ms", 500: "500ms", 700: "700ms", 1e3: "1000ms" }, transitionProperty: { none: "none", all: "all", DEFAULT: "color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter", colors: "color, background-color, border-color, text-decoration-color, fill, stroke", opacity: "opacity", shadow: "box-shadow", transform: "transform" }, transitionTimingFunction: { DEFAULT: "cubic-bezier(0.4, 0, 0.2, 1)", linear: "linear", in: "cubic-bezier(0.4, 0, 1, 1)", out: "cubic-bezier(0, 0, 0.2, 1)", "in-out": "cubic-bezier(0.4, 0, 0.2, 1)" }, translate: ({ theme: e2 }) => ({ ...e2("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", full: "100%" }), width: ({ theme: e2 }) => ({ auto: "auto", ...e2("spacing"), "1/2": "50%", "1/3": "33.333333%", "2/3": "66.666667%", "1/4": "25%", "2/4": "50%", "3/4": "75%", "1/5": "20%", "2/5": "40%", "3/5": "60%", "4/5": "80%", "1/6": "16.666667%", "2/6": "33.333333%", "3/6": "50%", "4/6": "66.666667%", "5/6": "83.333333%", "1/12": "8.333333%", "2/12": "16.666667%", "3/12": "25%", "4/12": "33.333333%", "5/12": "41.666667%", "6/12": "50%", "7/12": "58.333333%", "8/12": "66.666667%", "9/12": "75%", "10/12": "83.333333%", "11/12": "91.666667%", full: "100%", screen: "100vw", min: "min-content", max: "max-content", fit: "fit-content" }), willChange: { auto: "auto", scroll: "scroll-position", contents: "contents", transform: "transform" }, zIndex: { auto: "auto", 0: "0", 10: "10", 20: "20", 30: "30", 40: "40", 50: "50" } }, variantOrder: ["first", "last", "odd", "even", "visited", "checked", "empty", "read-only", "group-hover", "group-focus", "focus-within", "hover", "focus", "focus-visible", "active", "disabled"], plugins: [] };
    });
    Pr = {};
    Jr(Pr, { default: () => zl });
    Ar = hr(() => {
      c3();
      zl = { info(e2, t2) {
        console.info(...Array.isArray(e2) ? [e2] : [t2, e2]);
      }, warn(e2, t2) {
        console.warn(...Array.isArray(e2) ? [e2] : [t2, e2]);
      }, risk(e2, t2) {
        console.error(...Array.isArray(e2) ? [e2] : [t2, e2]);
      } };
    });
    as = L2((Rn) => {
      "use strict";
      c3();
      Object.defineProperty(Rn, "__esModule", { value: true });
      Object.defineProperty(Rn, "default", { enumerable: true, get: () => Vl });
      var Gl = jl((Ar(), mr(Pr)));
      function jl(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Tt2({ version: e2, from: t2, to: n3 }) {
        Gl.default.warn(`${t2}-color-renamed`, [`As of Tailwind CSS ${e2}, \`${t2}\` has been renamed to \`${n3}\`.`, "Update your configuration file to silence this warning."]);
      }
      var Vl = { inherit: "inherit", current: "currentColor", transparent: "transparent", black: "#000", white: "#fff", slate: { 50: "#f8fafc", 100: "#f1f5f9", 200: "#e2e8f0", 300: "#cbd5e1", 400: "#94a3b8", 500: "#64748b", 600: "#475569", 700: "#334155", 800: "#1e293b", 900: "#0f172a" }, gray: { 50: "#f9fafb", 100: "#f3f4f6", 200: "#e5e7eb", 300: "#d1d5db", 400: "#9ca3af", 500: "#6b7280", 600: "#4b5563", 700: "#374151", 800: "#1f2937", 900: "#111827" }, zinc: { 50: "#fafafa", 100: "#f4f4f5", 200: "#e4e4e7", 300: "#d4d4d8", 400: "#a1a1aa", 500: "#71717a", 600: "#52525b", 700: "#3f3f46", 800: "#27272a", 900: "#18181b" }, neutral: { 50: "#fafafa", 100: "#f5f5f5", 200: "#e5e5e5", 300: "#d4d4d4", 400: "#a3a3a3", 500: "#737373", 600: "#525252", 700: "#404040", 800: "#262626", 900: "#171717" }, stone: { 50: "#fafaf9", 100: "#f5f5f4", 200: "#e7e5e4", 300: "#d6d3d1", 400: "#a8a29e", 500: "#78716c", 600: "#57534e", 700: "#44403c", 800: "#292524", 900: "#1c1917" }, red: { 50: "#fef2f2", 100: "#fee2e2", 200: "#fecaca", 300: "#fca5a5", 400: "#f87171", 500: "#ef4444", 600: "#dc2626", 700: "#b91c1c", 800: "#991b1b", 900: "#7f1d1d" }, orange: { 50: "#fff7ed", 100: "#ffedd5", 200: "#fed7aa", 300: "#fdba74", 400: "#fb923c", 500: "#f97316", 600: "#ea580c", 700: "#c2410c", 800: "#9a3412", 900: "#7c2d12" }, amber: { 50: "#fffbeb", 100: "#fef3c7", 200: "#fde68a", 300: "#fcd34d", 400: "#fbbf24", 500: "#f59e0b", 600: "#d97706", 700: "#b45309", 800: "#92400e", 900: "#78350f" }, yellow: { 50: "#fefce8", 100: "#fef9c3", 200: "#fef08a", 300: "#fde047", 400: "#facc15", 500: "#eab308", 600: "#ca8a04", 700: "#a16207", 800: "#854d0e", 900: "#713f12" }, lime: { 50: "#f7fee7", 100: "#ecfccb", 200: "#d9f99d", 300: "#bef264", 400: "#a3e635", 500: "#84cc16", 600: "#65a30d", 700: "#4d7c0f", 800: "#3f6212", 900: "#365314" }, green: { 50: "#f0fdf4", 100: "#dcfce7", 200: "#bbf7d0", 300: "#86efac", 400: "#4ade80", 500: "#22c55e", 600: "#16a34a", 700: "#15803d", 800: "#166534", 900: "#14532d" }, emerald: { 50: "#ecfdf5", 100: "#d1fae5", 200: "#a7f3d0", 300: "#6ee7b7", 400: "#34d399", 500: "#10b981", 600: "#059669", 700: "#047857", 800: "#065f46", 900: "#064e3b" }, teal: { 50: "#f0fdfa", 100: "#ccfbf1", 200: "#99f6e4", 300: "#5eead4", 400: "#2dd4bf", 500: "#14b8a6", 600: "#0d9488", 700: "#0f766e", 800: "#115e59", 900: "#134e4a" }, cyan: { 50: "#ecfeff", 100: "#cffafe", 200: "#a5f3fc", 300: "#67e8f9", 400: "#22d3ee", 500: "#06b6d4", 600: "#0891b2", 700: "#0e7490", 800: "#155e75", 900: "#164e63" }, sky: { 50: "#f0f9ff", 100: "#e0f2fe", 200: "#bae6fd", 300: "#7dd3fc", 400: "#38bdf8", 500: "#0ea5e9", 600: "#0284c7", 700: "#0369a1", 800: "#075985", 900: "#0c4a6e" }, blue: { 50: "#eff6ff", 100: "#dbeafe", 200: "#bfdbfe", 300: "#93c5fd", 400: "#60a5fa", 500: "#3b82f6", 600: "#2563eb", 700: "#1d4ed8", 800: "#1e40af", 900: "#1e3a8a" }, indigo: { 50: "#eef2ff", 100: "#e0e7ff", 200: "#c7d2fe", 300: "#a5b4fc", 400: "#818cf8", 500: "#6366f1", 600: "#4f46e5", 700: "#4338ca", 800: "#3730a3", 900: "#312e81" }, violet: { 50: "#f5f3ff", 100: "#ede9fe", 200: "#ddd6fe", 300: "#c4b5fd", 400: "#a78bfa", 500: "#8b5cf6", 600: "#7c3aed", 700: "#6d28d9", 800: "#5b21b6", 900: "#4c1d95" }, purple: { 50: "#faf5ff", 100: "#f3e8ff", 200: "#e9d5ff", 300: "#d8b4fe", 400: "#c084fc", 500: "#a855f7", 600: "#9333ea", 700: "#7e22ce", 800: "#6b21a8", 900: "#581c87" }, fuchsia: { 50: "#fdf4ff", 100: "#fae8ff", 200: "#f5d0fe", 300: "#f0abfc", 400: "#e879f9", 500: "#d946ef", 600: "#c026d3", 700: "#a21caf", 800: "#86198f", 900: "#701a75" }, pink: { 50: "#fdf2f8", 100: "#fce7f3", 200: "#fbcfe8", 300: "#f9a8d4", 400: "#f472b6", 500: "#ec4899", 600: "#db2777", 700: "#be185d", 800: "#9d174d", 900: "#831843" }, rose: { 50: "#fff1f2", 100: "#ffe4e6", 200: "#fecdd3", 300: "#fda4af", 400: "#fb7185", 500: "#f43f5e", 600: "#e11d48", 700: "#be123c", 800: "#9f1239", 900: "#881337" }, get lightBlue() {
        return Tt2({ version: "v2.2", from: "lightBlue", to: "sky" }), this.sky;
      }, get warmGray() {
        return Tt2({ version: "v3.0", from: "warmGray", to: "stone" }), this.stone;
      }, get trueGray() {
        return Tt2({ version: "v3.0", from: "trueGray", to: "neutral" }), this.neutral;
      }, get coolGray() {
        return Tt2({ version: "v3.0", from: "coolGray", to: "gray" }), this.gray;
      }, get blueGray() {
        return Tt2({ version: "v3.0", from: "blueGray", to: "slate" }), this.slate;
      } };
    });
    us = L2((Ln) => {
      "use strict";
      c3();
      Object.defineProperty(Ln, "__esModule", { value: true });
      Object.defineProperty(Ln, "defaults", { enumerable: true, get: () => Hl });
      function Hl(e2, ...t2) {
        for (let i3 of t2) {
          for (let s3 in i3) {
            var n3;
            !(e2 == null || (n3 = e2.hasOwnProperty) === null || n3 === void 0) && n3.call(e2, s3) || (e2[s3] = i3[s3]);
          }
          for (let s3 of Object.getOwnPropertySymbols(i3)) {
            var r4;
            !(e2 == null || (r4 = e2.hasOwnProperty) === null || r4 === void 0) && r4.call(e2, s3) || (e2[s3] = i3[s3]);
          }
        }
        return e2;
      }
    });
    ls = L2((Cn) => {
      "use strict";
      c3();
      Object.defineProperty(Cn, "__esModule", { value: true });
      Object.defineProperty(Cn, "toPath", { enumerable: true, get: () => Yl });
      function Yl(e2) {
        if (Array.isArray(e2))
          return e2;
        let t2 = e2.split("[").length - 1, n3 = e2.split("]").length - 1;
        if (t2 !== n3)
          throw new Error(`Path is invalid. Has unbalanced brackets: ${e2}`);
        return e2.split(/\.(?![^\[]*\])|[\[\]]/g).filter(Boolean);
      }
    });
    cs = L2((Dn) => {
      "use strict";
      c3();
      Object.defineProperty(Dn, "__esModule", { value: true });
      Object.defineProperty(Dn, "normalizeConfig", { enumerable: true, get: () => Ql });
      var Ot2 = Xl((Ar(), mr(Pr)));
      function fs(e2) {
        if (typeof WeakMap != "function")
          return null;
        var t2 = /* @__PURE__ */ new WeakMap(), n3 = /* @__PURE__ */ new WeakMap();
        return (fs = function(r4) {
          return r4 ? n3 : t2;
        })(e2);
      }
      function Xl(e2, t2) {
        if (!t2 && e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var n3 = fs(t2);
        if (n3 && n3.has(e2))
          return n3.get(e2);
        var r4 = {}, i3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var s3 in e2)
          if (s3 !== "default" && Object.prototype.hasOwnProperty.call(e2, s3)) {
            var o5 = i3 ? Object.getOwnPropertyDescriptor(e2, s3) : null;
            o5 && (o5.get || o5.set) ? Object.defineProperty(r4, s3, o5) : r4[s3] = e2[s3];
          }
        return r4.default = e2, n3 && n3.set(e2, r4), r4;
      }
      function Ql(e2) {
        if ((() => {
          if (e2.purge || !e2.content || !Array.isArray(e2.content) && !(typeof e2.content == "object" && e2.content !== null))
            return false;
          if (Array.isArray(e2.content))
            return e2.content.every((r4) => typeof r4 == "string" ? true : !(typeof (r4 == null ? void 0 : r4.raw) != "string" || (r4 == null ? void 0 : r4.extension) && typeof (r4 == null ? void 0 : r4.extension) != "string"));
          if (typeof e2.content == "object" && e2.content !== null) {
            if (Object.keys(e2.content).some((r4) => !["files", "extract", "transform"].includes(r4)))
              return false;
            if (Array.isArray(e2.content.files)) {
              if (!e2.content.files.every((r4) => typeof r4 == "string" ? true : !(typeof (r4 == null ? void 0 : r4.raw) != "string" || (r4 == null ? void 0 : r4.extension) && typeof (r4 == null ? void 0 : r4.extension) != "string")))
                return false;
              if (typeof e2.content.extract == "object") {
                for (let r4 of Object.values(e2.content.extract))
                  if (typeof r4 != "function")
                    return false;
              } else if (!(e2.content.extract === void 0 || typeof e2.content.extract == "function"))
                return false;
              if (typeof e2.content.transform == "object") {
                for (let r4 of Object.values(e2.content.transform))
                  if (typeof r4 != "function")
                    return false;
              } else if (!(e2.content.transform === void 0 || typeof e2.content.transform == "function"))
                return false;
            }
            return true;
          }
          return false;
        })() || Ot2.default.warn("purge-deprecation", ["The `purge`/`content` options have changed in Tailwind CSS v3.0.", "Update your configuration file to eliminate this warning.", "https://tailwindcss.com/docs/upgrade-guide#configure-content-sources"]), e2.safelist = (() => {
          var r4;
          let { content: i3, purge: s3, safelist: o5 } = e2;
          return Array.isArray(o5) ? o5 : Array.isArray(i3 == null ? void 0 : i3.safelist) ? i3.safelist : Array.isArray(s3 == null ? void 0 : s3.safelist) ? s3.safelist : Array.isArray(s3 == null || (r4 = s3.options) === null || r4 === void 0 ? void 0 : r4.safelist) ? s3.options.safelist : [];
        })(), typeof e2.prefix == "function")
          Ot2.default.warn("prefix-function", ["As of Tailwind CSS v3.0, `prefix` cannot be a function.", "Update `prefix` in your configuration to be a string to eliminate this warning.", "https://tailwindcss.com/docs/upgrade-guide#prefix-cannot-be-a-function"]), e2.prefix = "";
        else {
          var n3;
          e2.prefix = (n3 = e2.prefix) !== null && n3 !== void 0 ? n3 : "";
        }
        e2.content = { files: (() => {
          let { content: r4, purge: i3 } = e2;
          return Array.isArray(i3) ? i3 : Array.isArray(i3 == null ? void 0 : i3.content) ? i3.content : Array.isArray(r4) ? r4 : Array.isArray(r4 == null ? void 0 : r4.content) ? r4.content : Array.isArray(r4 == null ? void 0 : r4.files) ? r4.files : [];
        })(), extract: (() => {
          let r4 = (() => {
            var o5, a3, u4, l3, f4, d5, g4, h2, p6, v4;
            return !((o5 = e2.purge) === null || o5 === void 0) && o5.extract ? e2.purge.extract : !((a3 = e2.content) === null || a3 === void 0) && a3.extract ? e2.content.extract : !((u4 = e2.purge) === null || u4 === void 0 || (l3 = u4.extract) === null || l3 === void 0) && l3.DEFAULT ? e2.purge.extract.DEFAULT : !((f4 = e2.content) === null || f4 === void 0 || (d5 = f4.extract) === null || d5 === void 0) && d5.DEFAULT ? e2.content.extract.DEFAULT : !((g4 = e2.purge) === null || g4 === void 0 || (h2 = g4.options) === null || h2 === void 0) && h2.extractors ? e2.purge.options.extractors : !((p6 = e2.content) === null || p6 === void 0 || (v4 = p6.options) === null || v4 === void 0) && v4.extractors ? e2.content.options.extractors : {};
          })(), i3 = {}, s3 = (() => {
            var o5, a3, u4, l3;
            if (!((o5 = e2.purge) === null || o5 === void 0 || (a3 = o5.options) === null || a3 === void 0) && a3.defaultExtractor)
              return e2.purge.options.defaultExtractor;
            if (!((u4 = e2.content) === null || u4 === void 0 || (l3 = u4.options) === null || l3 === void 0) && l3.defaultExtractor)
              return e2.content.options.defaultExtractor;
          })();
          if (s3 !== void 0 && (i3.DEFAULT = s3), typeof r4 == "function")
            i3.DEFAULT = r4;
          else if (Array.isArray(r4))
            for (let { extensions: o5, extractor: a3 } of r4 ?? [])
              for (let u4 of o5)
                i3[u4] = a3;
          else
            typeof r4 == "object" && r4 !== null && Object.assign(i3, r4);
          return i3;
        })(), transform: (() => {
          let r4 = (() => {
            var s3, o5, a3, u4, l3, f4;
            return !((s3 = e2.purge) === null || s3 === void 0) && s3.transform ? e2.purge.transform : !((o5 = e2.content) === null || o5 === void 0) && o5.transform ? e2.content.transform : !((a3 = e2.purge) === null || a3 === void 0 || (u4 = a3.transform) === null || u4 === void 0) && u4.DEFAULT ? e2.purge.transform.DEFAULT : !((l3 = e2.content) === null || l3 === void 0 || (f4 = l3.transform) === null || f4 === void 0) && f4.DEFAULT ? e2.content.transform.DEFAULT : {};
          })(), i3 = {};
          return typeof r4 == "function" && (i3.DEFAULT = r4), typeof r4 == "object" && r4 !== null && Object.assign(i3, r4), i3;
        })() };
        for (let r4 of e2.content.files)
          if (typeof r4 == "string" && /{([^,]*?)}/g.test(r4)) {
            Ot2.default.warn("invalid-glob-braces", [`The glob pattern ${(0, Ot2.dim)(r4)} in your Tailwind CSS configuration is invalid.`, `Update it to ${(0, Ot2.dim)(r4.replace(/{([^,]*?)}/g, "$1"))} to silence this warning.`]);
            break;
          }
        return e2;
      }
    });
    ds = L2((Fn) => {
      "use strict";
      c3();
      Object.defineProperty(Fn, "__esModule", { value: true });
      Object.defineProperty(Fn, "default", { enumerable: true, get: () => Kl });
      function Kl(e2) {
        if (Object.prototype.toString.call(e2) !== "[object Object]")
          return false;
        let t2 = Object.getPrototypeOf(e2);
        return t2 === null || t2 === Object.prototype;
      }
    });
    ps = L2((Mn) => {
      "use strict";
      c3();
      Object.defineProperty(Mn, "__esModule", { value: true });
      Object.defineProperty(Mn, "cloneDeep", { enumerable: true, get: () => Nn });
      function Nn(e2) {
        return Array.isArray(e2) ? e2.map((t2) => Nn(t2)) : typeof e2 == "object" && e2 !== null ? Object.fromEntries(Object.entries(e2).map(([t2, n3]) => [t2, Nn(n3)])) : e2;
      }
    });
    $n = L2((Ir, hs) => {
      "use strict";
      c3();
      Ir.__esModule = true;
      Ir.default = ef;
      function Jl(e2) {
        for (var t2 = e2.toLowerCase(), n3 = "", r4 = false, i3 = 0; i3 < 6 && t2[i3] !== void 0; i3++) {
          var s3 = t2.charCodeAt(i3), o5 = s3 >= 97 && s3 <= 102 || s3 >= 48 && s3 <= 57;
          if (r4 = s3 === 32, !o5)
            break;
          n3 += t2[i3];
        }
        if (n3.length !== 0) {
          var a3 = parseInt(n3, 16), u4 = a3 >= 55296 && a3 <= 57343;
          return u4 || a3 === 0 || a3 > 1114111 ? ["\uFFFD", n3.length + (r4 ? 1 : 0)] : [String.fromCodePoint(a3), n3.length + (r4 ? 1 : 0)];
        }
      }
      var Zl = /\\/;
      function ef(e2) {
        var t2 = Zl.test(e2);
        if (!t2)
          return e2;
        for (var n3 = "", r4 = 0; r4 < e2.length; r4++) {
          if (e2[r4] === "\\") {
            var i3 = Jl(e2.slice(r4 + 1, r4 + 7));
            if (i3 !== void 0) {
              n3 += i3[0], r4 += i3[1];
              continue;
            }
            if (e2[r4 + 1] === "\\") {
              n3 += "\\", r4++;
              continue;
            }
            e2.length === r4 + 1 && (n3 += e2[r4]);
            continue;
          }
          n3 += e2[r4];
        }
        return n3;
      }
      hs.exports = Ir.default;
    });
    gs = L2((Rr, ms) => {
      "use strict";
      c3();
      Rr.__esModule = true;
      Rr.default = tf;
      function tf(e2) {
        for (var t2 = arguments.length, n3 = new Array(t2 > 1 ? t2 - 1 : 0), r4 = 1; r4 < t2; r4++)
          n3[r4 - 1] = arguments[r4];
        for (; n3.length > 0; ) {
          var i3 = n3.shift();
          if (!e2[i3])
            return;
          e2 = e2[i3];
        }
        return e2;
      }
      ms.exports = Rr.default;
    });
    bs = L2((Lr, vs) => {
      "use strict";
      c3();
      Lr.__esModule = true;
      Lr.default = rf;
      function rf(e2) {
        for (var t2 = arguments.length, n3 = new Array(t2 > 1 ? t2 - 1 : 0), r4 = 1; r4 < t2; r4++)
          n3[r4 - 1] = arguments[r4];
        for (; n3.length > 0; ) {
          var i3 = n3.shift();
          e2[i3] || (e2[i3] = {}), e2 = e2[i3];
        }
      }
      vs.exports = Lr.default;
    });
    xs = L2((Cr, ys) => {
      "use strict";
      c3();
      Cr.__esModule = true;
      Cr.default = nf;
      function nf(e2) {
        for (var t2 = "", n3 = e2.indexOf("/*"), r4 = 0; n3 >= 0; ) {
          t2 = t2 + e2.slice(r4, n3);
          var i3 = e2.indexOf("*/", n3 + 2);
          if (i3 < 0)
            return t2;
          r4 = i3 + 2, n3 = e2.indexOf("/*", r4);
        }
        return t2 = t2 + e2.slice(r4), t2;
      }
      ys.exports = Cr.default;
    });
    Et = L2((Pe2) => {
      "use strict";
      c3();
      Pe2.__esModule = true;
      Pe2.stripComments = Pe2.ensureObject = Pe2.getProp = Pe2.unesc = void 0;
      var of = Dr($n());
      Pe2.unesc = of.default;
      var sf = Dr(gs());
      Pe2.getProp = sf.default;
      var af = Dr(bs());
      Pe2.ensureObject = af.default;
      var uf = Dr(xs());
      Pe2.stripComments = uf.default;
      function Dr(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
    });
    Ce = L2((Pt2, Ss) => {
      "use strict";
      c3();
      Pt2.__esModule = true;
      Pt2.default = void 0;
      var ws = Et();
      function _s(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function lf(e2, t2, n3) {
        return t2 && _s(e2.prototype, t2), n3 && _s(e2, n3), e2;
      }
      var ff = function e2(t2, n3) {
        if (typeof t2 != "object" || t2 === null)
          return t2;
        var r4 = new t2.constructor();
        for (var i3 in t2)
          if (!!t2.hasOwnProperty(i3)) {
            var s3 = t2[i3], o5 = typeof s3;
            i3 === "parent" && o5 === "object" ? n3 && (r4[i3] = n3) : s3 instanceof Array ? r4[i3] = s3.map(function(a3) {
              return e2(a3, r4);
            }) : r4[i3] = e2(s3, r4);
          }
        return r4;
      }, cf = function() {
        function e2(n3) {
          n3 === void 0 && (n3 = {}), Object.assign(this, n3), this.spaces = this.spaces || {}, this.spaces.before = this.spaces.before || "", this.spaces.after = this.spaces.after || "";
        }
        var t2 = e2.prototype;
        return t2.remove = function() {
          return this.parent && this.parent.removeChild(this), this.parent = void 0, this;
        }, t2.replaceWith = function() {
          if (this.parent) {
            for (var r4 in arguments)
              this.parent.insertBefore(this, arguments[r4]);
            this.remove();
          }
          return this;
        }, t2.next = function() {
          return this.parent.at(this.parent.index(this) + 1);
        }, t2.prev = function() {
          return this.parent.at(this.parent.index(this) - 1);
        }, t2.clone = function(r4) {
          r4 === void 0 && (r4 = {});
          var i3 = ff(this);
          for (var s3 in r4)
            i3[s3] = r4[s3];
          return i3;
        }, t2.appendToPropertyAndEscape = function(r4, i3, s3) {
          this.raws || (this.raws = {});
          var o5 = this[r4], a3 = this.raws[r4];
          this[r4] = o5 + i3, a3 || s3 !== i3 ? this.raws[r4] = (a3 || o5) + s3 : delete this.raws[r4];
        }, t2.setPropertyAndEscape = function(r4, i3, s3) {
          this.raws || (this.raws = {}), this[r4] = i3, this.raws[r4] = s3;
        }, t2.setPropertyWithoutEscape = function(r4, i3) {
          this[r4] = i3, this.raws && delete this.raws[r4];
        }, t2.isAtPosition = function(r4, i3) {
          if (this.source && this.source.start && this.source.end)
            return !(this.source.start.line > r4 || this.source.end.line < r4 || this.source.start.line === r4 && this.source.start.column > i3 || this.source.end.line === r4 && this.source.end.column < i3);
        }, t2.stringifyProperty = function(r4) {
          return this.raws && this.raws[r4] || this[r4];
        }, t2.valueToString = function() {
          return String(this.stringifyProperty("value"));
        }, t2.toString = function() {
          return [this.rawSpaceBefore, this.valueToString(), this.rawSpaceAfter].join("");
        }, lf(e2, [{ key: "rawSpaceBefore", get: function() {
          var r4 = this.raws && this.raws.spaces && this.raws.spaces.before;
          return r4 === void 0 && (r4 = this.spaces && this.spaces.before), r4 || "";
        }, set: function(r4) {
          (0, ws.ensureObject)(this, "raws", "spaces"), this.raws.spaces.before = r4;
        } }, { key: "rawSpaceAfter", get: function() {
          var r4 = this.raws && this.raws.spaces && this.raws.spaces.after;
          return r4 === void 0 && (r4 = this.spaces.after), r4 || "";
        }, set: function(r4) {
          (0, ws.ensureObject)(this, "raws", "spaces"), this.raws.spaces.after = r4;
        } }]), e2;
      }();
      Pt2.default = cf;
      Ss.exports = Pt2.default;
    });
    ue = L2((K2) => {
      "use strict";
      c3();
      K2.__esModule = true;
      K2.UNIVERSAL = K2.ATTRIBUTE = K2.CLASS = K2.COMBINATOR = K2.COMMENT = K2.ID = K2.NESTING = K2.PSEUDO = K2.ROOT = K2.SELECTOR = K2.STRING = K2.TAG = void 0;
      var df = "tag";
      K2.TAG = df;
      var pf = "string";
      K2.STRING = pf;
      var hf = "selector";
      K2.SELECTOR = hf;
      var mf = "root";
      K2.ROOT = mf;
      var gf = "pseudo";
      K2.PSEUDO = gf;
      var vf = "nesting";
      K2.NESTING = vf;
      var bf = "id";
      K2.ID = bf;
      var yf = "comment";
      K2.COMMENT = yf;
      var xf = "combinator";
      K2.COMBINATOR = xf;
      var wf = "class";
      K2.CLASS = wf;
      var _f = "attribute";
      K2.ATTRIBUTE = _f;
      var Sf = "universal";
      K2.UNIVERSAL = Sf;
    });
    Fr = L2((At, Es) => {
      "use strict";
      c3();
      At.__esModule = true;
      At.default = void 0;
      var kf = Of(Ce()), De2 = Tf(ue());
      function Os() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return Os = function() {
          return e2;
        }, e2;
      }
      function Tf(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var t2 = Os();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n3 = {}, r4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var i3 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, i3)) {
            var s3 = r4 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
            s3 && (s3.get || s3.set) ? Object.defineProperty(n3, i3, s3) : n3[i3] = e2[i3];
          }
        return n3.default = e2, t2 && t2.set(e2, n3), n3;
      }
      function Of(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Ef(e2, t2) {
        var n3;
        if (typeof Symbol > "u" || e2[Symbol.iterator] == null) {
          if (Array.isArray(e2) || (n3 = Pf(e2)) || t2 && e2 && typeof e2.length == "number") {
            n3 && (e2 = n3);
            var r4 = 0;
            return function() {
              return r4 >= e2.length ? { done: true } : { done: false, value: e2[r4++] };
            };
          }
          throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        return n3 = e2[Symbol.iterator](), n3.next.bind(n3);
      }
      function Pf(e2, t2) {
        if (!!e2) {
          if (typeof e2 == "string")
            return ks(e2, t2);
          var n3 = Object.prototype.toString.call(e2).slice(8, -1);
          if (n3 === "Object" && e2.constructor && (n3 = e2.constructor.name), n3 === "Map" || n3 === "Set")
            return Array.from(e2);
          if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
            return ks(e2, t2);
        }
      }
      function ks(e2, t2) {
        (t2 == null || t2 > e2.length) && (t2 = e2.length);
        for (var n3 = 0, r4 = new Array(t2); n3 < t2; n3++)
          r4[n3] = e2[n3];
        return r4;
      }
      function Ts(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function Af(e2, t2, n3) {
        return t2 && Ts(e2.prototype, t2), n3 && Ts(e2, n3), e2;
      }
      function If(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Wn(e2, t2);
      }
      function Wn(e2, t2) {
        return Wn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Wn(e2, t2);
      }
      var Rf = function(e2) {
        If(t2, e2);
        function t2(r4) {
          var i3;
          return i3 = e2.call(this, r4) || this, i3.nodes || (i3.nodes = []), i3;
        }
        var n3 = t2.prototype;
        return n3.append = function(i3) {
          return i3.parent = this, this.nodes.push(i3), this;
        }, n3.prepend = function(i3) {
          return i3.parent = this, this.nodes.unshift(i3), this;
        }, n3.at = function(i3) {
          return this.nodes[i3];
        }, n3.index = function(i3) {
          return typeof i3 == "number" ? i3 : this.nodes.indexOf(i3);
        }, n3.removeChild = function(i3) {
          i3 = this.index(i3), this.at(i3).parent = void 0, this.nodes.splice(i3, 1);
          var s3;
          for (var o5 in this.indexes)
            s3 = this.indexes[o5], s3 >= i3 && (this.indexes[o5] = s3 - 1);
          return this;
        }, n3.removeAll = function() {
          for (var i3 = Ef(this.nodes), s3; !(s3 = i3()).done; ) {
            var o5 = s3.value;
            o5.parent = void 0;
          }
          return this.nodes = [], this;
        }, n3.empty = function() {
          return this.removeAll();
        }, n3.insertAfter = function(i3, s3) {
          s3.parent = this;
          var o5 = this.index(i3);
          this.nodes.splice(o5 + 1, 0, s3), s3.parent = this;
          var a3;
          for (var u4 in this.indexes)
            a3 = this.indexes[u4], o5 <= a3 && (this.indexes[u4] = a3 + 1);
          return this;
        }, n3.insertBefore = function(i3, s3) {
          s3.parent = this;
          var o5 = this.index(i3);
          this.nodes.splice(o5, 0, s3), s3.parent = this;
          var a3;
          for (var u4 in this.indexes)
            a3 = this.indexes[u4], a3 <= o5 && (this.indexes[u4] = a3 + 1);
          return this;
        }, n3._findChildAtPosition = function(i3, s3) {
          var o5 = void 0;
          return this.each(function(a3) {
            if (a3.atPosition) {
              var u4 = a3.atPosition(i3, s3);
              if (u4)
                return o5 = u4, false;
            } else if (a3.isAtPosition(i3, s3))
              return o5 = a3, false;
          }), o5;
        }, n3.atPosition = function(i3, s3) {
          if (this.isAtPosition(i3, s3))
            return this._findChildAtPosition(i3, s3) || this;
        }, n3._inferEndPosition = function() {
          this.last && this.last.source && this.last.source.end && (this.source = this.source || {}, this.source.end = this.source.end || {}, Object.assign(this.source.end, this.last.source.end));
        }, n3.each = function(i3) {
          this.lastEach || (this.lastEach = 0), this.indexes || (this.indexes = {}), this.lastEach++;
          var s3 = this.lastEach;
          if (this.indexes[s3] = 0, !!this.length) {
            for (var o5, a3; this.indexes[s3] < this.length && (o5 = this.indexes[s3], a3 = i3(this.at(o5), o5), a3 !== false); )
              this.indexes[s3] += 1;
            if (delete this.indexes[s3], a3 === false)
              return false;
          }
        }, n3.walk = function(i3) {
          return this.each(function(s3, o5) {
            var a3 = i3(s3, o5);
            if (a3 !== false && s3.length && (a3 = s3.walk(i3)), a3 === false)
              return false;
          });
        }, n3.walkAttributes = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.ATTRIBUTE)
              return i3.call(s3, o5);
          });
        }, n3.walkClasses = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.CLASS)
              return i3.call(s3, o5);
          });
        }, n3.walkCombinators = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.COMBINATOR)
              return i3.call(s3, o5);
          });
        }, n3.walkComments = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.COMMENT)
              return i3.call(s3, o5);
          });
        }, n3.walkIds = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.ID)
              return i3.call(s3, o5);
          });
        }, n3.walkNesting = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.NESTING)
              return i3.call(s3, o5);
          });
        }, n3.walkPseudos = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.PSEUDO)
              return i3.call(s3, o5);
          });
        }, n3.walkTags = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.TAG)
              return i3.call(s3, o5);
          });
        }, n3.walkUniversals = function(i3) {
          var s3 = this;
          return this.walk(function(o5) {
            if (o5.type === De2.UNIVERSAL)
              return i3.call(s3, o5);
          });
        }, n3.split = function(i3) {
          var s3 = this, o5 = [];
          return this.reduce(function(a3, u4, l3) {
            var f4 = i3.call(s3, u4);
            return o5.push(u4), f4 ? (a3.push(o5), o5 = []) : l3 === s3.length - 1 && a3.push(o5), a3;
          }, []);
        }, n3.map = function(i3) {
          return this.nodes.map(i3);
        }, n3.reduce = function(i3, s3) {
          return this.nodes.reduce(i3, s3);
        }, n3.every = function(i3) {
          return this.nodes.every(i3);
        }, n3.some = function(i3) {
          return this.nodes.some(i3);
        }, n3.filter = function(i3) {
          return this.nodes.filter(i3);
        }, n3.sort = function(i3) {
          return this.nodes.sort(i3);
        }, n3.toString = function() {
          return this.map(String).join("");
        }, Af(t2, [{ key: "first", get: function() {
          return this.at(0);
        } }, { key: "last", get: function() {
          return this.at(this.length - 1);
        } }, { key: "length", get: function() {
          return this.nodes.length;
        } }]), t2;
      }(kf.default);
      At.default = Rf;
      Es.exports = At.default;
    });
    Bn = L2((It2, As) => {
      "use strict";
      c3();
      It2.__esModule = true;
      It2.default = void 0;
      var Lf = Df(Fr()), Cf = ue();
      function Df(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Ps(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function Ff(e2, t2, n3) {
        return t2 && Ps(e2.prototype, t2), n3 && Ps(e2, n3), e2;
      }
      function Nf(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, qn(e2, t2);
      }
      function qn(e2, t2) {
        return qn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, qn(e2, t2);
      }
      var Mf = function(e2) {
        Nf(t2, e2);
        function t2(r4) {
          var i3;
          return i3 = e2.call(this, r4) || this, i3.type = Cf.ROOT, i3;
        }
        var n3 = t2.prototype;
        return n3.toString = function() {
          var i3 = this.reduce(function(s3, o5) {
            return s3.push(String(o5)), s3;
          }, []).join(",");
          return this.trailingComma ? i3 + "," : i3;
        }, n3.error = function(i3, s3) {
          return this._error ? this._error(i3, s3) : new Error(i3);
        }, Ff(t2, [{ key: "errorGenerator", set: function(i3) {
          this._error = i3;
        } }]), t2;
      }(Lf.default);
      It2.default = Mf;
      As.exports = It2.default;
    });
    zn = L2((Rt, Is) => {
      "use strict";
      c3();
      Rt.__esModule = true;
      Rt.default = void 0;
      var $f = qf(Fr()), Wf = ue();
      function qf(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Bf(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Un(e2, t2);
      }
      function Un(e2, t2) {
        return Un = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Un(e2, t2);
      }
      var Uf = function(e2) {
        Bf(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = Wf.SELECTOR, r4;
        }
        return t2;
      }($f.default);
      Rt.default = Uf;
      Is.exports = Rt.default;
    });
    Nr = L2((Cg, Rs) => {
      "use strict";
      c3();
      var zf = {}, Gf = zf.hasOwnProperty, jf = function(t2, n3) {
        if (!t2)
          return n3;
        var r4 = {};
        for (var i3 in n3)
          r4[i3] = Gf.call(t2, i3) ? t2[i3] : n3[i3];
        return r4;
      }, Vf = /[ -,\.\/:-@\[-\^`\{-~]/, Hf = /[ -,\.\/:-@\[\]\^`\{-~]/, Yf = /(^|\\+)?(\\[A-F0-9]{1,6})\x20(?![a-fA-F0-9\x20])/g, Gn = function e2(t2, n3) {
        n3 = jf(n3, e2.options), n3.quotes != "single" && n3.quotes != "double" && (n3.quotes = "single");
        for (var r4 = n3.quotes == "double" ? '"' : "'", i3 = n3.isIdentifier, s3 = t2.charAt(0), o5 = "", a3 = 0, u4 = t2.length; a3 < u4; ) {
          var l3 = t2.charAt(a3++), f4 = l3.charCodeAt(), d5 = void 0;
          if (f4 < 32 || f4 > 126) {
            if (f4 >= 55296 && f4 <= 56319 && a3 < u4) {
              var g4 = t2.charCodeAt(a3++);
              (g4 & 64512) == 56320 ? f4 = ((f4 & 1023) << 10) + (g4 & 1023) + 65536 : a3--;
            }
            d5 = "\\" + f4.toString(16).toUpperCase() + " ";
          } else
            n3.escapeEverything ? Vf.test(l3) ? d5 = "\\" + l3 : d5 = "\\" + f4.toString(16).toUpperCase() + " " : /[\t\n\f\r\x0B]/.test(l3) ? d5 = "\\" + f4.toString(16).toUpperCase() + " " : l3 == "\\" || !i3 && (l3 == '"' && r4 == l3 || l3 == "'" && r4 == l3) || i3 && Hf.test(l3) ? d5 = "\\" + l3 : d5 = l3;
          o5 += d5;
        }
        return i3 && (/^-[-\d]/.test(o5) ? o5 = "\\-" + o5.slice(1) : /\d/.test(s3) && (o5 = "\\3" + s3 + " " + o5.slice(1))), o5 = o5.replace(Yf, function(h2, p6, v4) {
          return p6 && p6.length % 2 ? h2 : (p6 || "") + v4;
        }), !i3 && n3.wrap ? r4 + o5 + r4 : o5;
      };
      Gn.options = { escapeEverything: false, isIdentifier: false, quotes: "single", wrap: false };
      Gn.version = "3.0.0";
      Rs.exports = Gn;
    });
    Vn = L2((Lt, Ds) => {
      "use strict";
      c3();
      Lt.__esModule = true;
      Lt.default = void 0;
      var Xf = Cs(Nr()), Qf = Et(), Kf = Cs(Ce()), Jf = ue();
      function Cs(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Ls(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function Zf(e2, t2, n3) {
        return t2 && Ls(e2.prototype, t2), n3 && Ls(e2, n3), e2;
      }
      function ec2(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, jn(e2, t2);
      }
      function jn(e2, t2) {
        return jn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, jn(e2, t2);
      }
      var tc = function(e2) {
        ec2(t2, e2);
        function t2(r4) {
          var i3;
          return i3 = e2.call(this, r4) || this, i3.type = Jf.CLASS, i3._constructed = true, i3;
        }
        var n3 = t2.prototype;
        return n3.valueToString = function() {
          return "." + e2.prototype.valueToString.call(this);
        }, Zf(t2, [{ key: "value", get: function() {
          return this._value;
        }, set: function(i3) {
          if (this._constructed) {
            var s3 = (0, Xf.default)(i3, { isIdentifier: true });
            s3 !== i3 ? ((0, Qf.ensureObject)(this, "raws"), this.raws.value = s3) : this.raws && delete this.raws.value;
          }
          this._value = i3;
        } }]), t2;
      }(Kf.default);
      Lt.default = tc;
      Ds.exports = Lt.default;
    });
    Yn = L2((Ct, Fs) => {
      "use strict";
      c3();
      Ct.__esModule = true;
      Ct.default = void 0;
      var rc = ic(Ce()), nc = ue();
      function ic(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function oc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Hn(e2, t2);
      }
      function Hn(e2, t2) {
        return Hn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Hn(e2, t2);
      }
      var sc = function(e2) {
        oc(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = nc.COMMENT, r4;
        }
        return t2;
      }(rc.default);
      Ct.default = sc;
      Fs.exports = Ct.default;
    });
    Qn = L2((Dt, Ns) => {
      "use strict";
      c3();
      Dt.__esModule = true;
      Dt.default = void 0;
      var ac = lc(Ce()), uc = ue();
      function lc(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function fc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Xn(e2, t2);
      }
      function Xn(e2, t2) {
        return Xn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Xn(e2, t2);
      }
      var cc = function(e2) {
        fc(t2, e2);
        function t2(r4) {
          var i3;
          return i3 = e2.call(this, r4) || this, i3.type = uc.ID, i3;
        }
        var n3 = t2.prototype;
        return n3.valueToString = function() {
          return "#" + e2.prototype.valueToString.call(this);
        }, t2;
      }(ac.default);
      Dt.default = cc;
      Ns.exports = Dt.default;
    });
    Mr = L2((Ft, Ws) => {
      "use strict";
      c3();
      Ft.__esModule = true;
      Ft.default = void 0;
      var dc = $s(Nr()), pc = Et(), hc = $s(Ce());
      function $s(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Ms(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function mc(e2, t2, n3) {
        return t2 && Ms(e2.prototype, t2), n3 && Ms(e2, n3), e2;
      }
      function gc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Kn(e2, t2);
      }
      function Kn(e2, t2) {
        return Kn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Kn(e2, t2);
      }
      var vc = function(e2) {
        gc(t2, e2);
        function t2() {
          return e2.apply(this, arguments) || this;
        }
        var n3 = t2.prototype;
        return n3.qualifiedName = function(i3) {
          return this.namespace ? this.namespaceString + "|" + i3 : i3;
        }, n3.valueToString = function() {
          return this.qualifiedName(e2.prototype.valueToString.call(this));
        }, mc(t2, [{ key: "namespace", get: function() {
          return this._namespace;
        }, set: function(i3) {
          if (i3 === true || i3 === "*" || i3 === "&") {
            this._namespace = i3, this.raws && delete this.raws.namespace;
            return;
          }
          var s3 = (0, dc.default)(i3, { isIdentifier: true });
          this._namespace = i3, s3 !== i3 ? ((0, pc.ensureObject)(this, "raws"), this.raws.namespace = s3) : this.raws && delete this.raws.namespace;
        } }, { key: "ns", get: function() {
          return this._namespace;
        }, set: function(i3) {
          this.namespace = i3;
        } }, { key: "namespaceString", get: function() {
          if (this.namespace) {
            var i3 = this.stringifyProperty("namespace");
            return i3 === true ? "" : i3;
          } else
            return "";
        } }]), t2;
      }(hc.default);
      Ft.default = vc;
      Ws.exports = Ft.default;
    });
    Zn = L2((Nt2, qs) => {
      "use strict";
      c3();
      Nt2.__esModule = true;
      Nt2.default = void 0;
      var bc = xc(Mr()), yc = ue();
      function xc(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function wc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, Jn(e2, t2);
      }
      function Jn(e2, t2) {
        return Jn = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, Jn(e2, t2);
      }
      var _c = function(e2) {
        wc(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = yc.TAG, r4;
        }
        return t2;
      }(bc.default);
      Nt2.default = _c;
      qs.exports = Nt2.default;
    });
    ti = L2((Mt2, Bs) => {
      "use strict";
      c3();
      Mt2.__esModule = true;
      Mt2.default = void 0;
      var Sc = Tc(Ce()), kc = ue();
      function Tc(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Oc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, ei(e2, t2);
      }
      function ei(e2, t2) {
        return ei = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, ei(e2, t2);
      }
      var Ec = function(e2) {
        Oc(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = kc.STRING, r4;
        }
        return t2;
      }(Sc.default);
      Mt2.default = Ec;
      Bs.exports = Mt2.default;
    });
    ni = L2(($t, Us) => {
      "use strict";
      c3();
      $t.__esModule = true;
      $t.default = void 0;
      var Pc = Ic(Fr()), Ac = ue();
      function Ic(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Rc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, ri(e2, t2);
      }
      function ri(e2, t2) {
        return ri = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, ri(e2, t2);
      }
      var Lc = function(e2) {
        Rc(t2, e2);
        function t2(r4) {
          var i3;
          return i3 = e2.call(this, r4) || this, i3.type = Ac.PSEUDO, i3;
        }
        var n3 = t2.prototype;
        return n3.toString = function() {
          var i3 = this.length ? "(" + this.map(String).join(",") + ")" : "";
          return [this.rawSpaceBefore, this.stringifyProperty("value"), i3, this.rawSpaceAfter].join("");
        }, t2;
      }(Pc.default);
      $t.default = Lc;
      Us.exports = $t.default;
    });
    Gs = L2((Dg, zs) => {
      c3();
      zs.exports = function(t2, n3) {
        return function(...r4) {
          return console.warn(n3), t2(...r4);
        };
      };
    });
    li = L2((Bt) => {
      "use strict";
      c3();
      Bt.__esModule = true;
      Bt.unescapeValue = ui;
      Bt.default = void 0;
      var Wt = ai(Nr()), Cc = ai($n()), Dc = ai(Mr()), Fc = ue(), ii;
      function ai(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function js(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function Nc(e2, t2, n3) {
        return t2 && js(e2.prototype, t2), n3 && js(e2, n3), e2;
      }
      function Mc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, si(e2, t2);
      }
      function si(e2, t2) {
        return si = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, si(e2, t2);
      }
      var qt = Gs(), $c = /^('|")([^]*)\1$/, Wc = qt(function() {
      }, "Assigning an attribute a value containing characters that might need to be escaped is deprecated. Call attribute.setValue() instead."), qc = qt(function() {
      }, "Assigning attr.quoted is deprecated and has no effect. Assign to attr.quoteMark instead."), Bc = qt(function() {
      }, "Constructing an Attribute selector with a value without specifying quoteMark is deprecated. Note: The value should be unescaped now.");
      function ui(e2) {
        var t2 = false, n3 = null, r4 = e2, i3 = r4.match($c);
        return i3 && (n3 = i3[1], r4 = i3[2]), r4 = (0, Cc.default)(r4), r4 !== e2 && (t2 = true), { deprecatedUsage: t2, unescaped: r4, quoteMark: n3 };
      }
      function Uc(e2) {
        if (e2.quoteMark !== void 0 || e2.value === void 0)
          return e2;
        Bc();
        var t2 = ui(e2.value), n3 = t2.quoteMark, r4 = t2.unescaped;
        return e2.raws || (e2.raws = {}), e2.raws.value === void 0 && (e2.raws.value = e2.value), e2.value = r4, e2.quoteMark = n3, e2;
      }
      var $r = function(e2) {
        Mc(t2, e2);
        function t2(r4) {
          var i3;
          return r4 === void 0 && (r4 = {}), i3 = e2.call(this, Uc(r4)) || this, i3.type = Fc.ATTRIBUTE, i3.raws = i3.raws || {}, Object.defineProperty(i3.raws, "unquoted", { get: qt(function() {
            return i3.value;
          }, "attr.raws.unquoted is deprecated. Call attr.value instead."), set: qt(function() {
            return i3.value;
          }, "Setting attr.raws.unquoted is deprecated and has no effect. attr.value is unescaped by default now.") }), i3._constructed = true, i3;
        }
        var n3 = t2.prototype;
        return n3.getQuotedValue = function(i3) {
          i3 === void 0 && (i3 = {});
          var s3 = this._determineQuoteMark(i3), o5 = oi[s3], a3 = (0, Wt.default)(this._value, o5);
          return a3;
        }, n3._determineQuoteMark = function(i3) {
          return i3.smart ? this.smartQuoteMark(i3) : this.preferredQuoteMark(i3);
        }, n3.setValue = function(i3, s3) {
          s3 === void 0 && (s3 = {}), this._value = i3, this._quoteMark = this._determineQuoteMark(s3), this._syncRawValue();
        }, n3.smartQuoteMark = function(i3) {
          var s3 = this.value, o5 = s3.replace(/[^']/g, "").length, a3 = s3.replace(/[^"]/g, "").length;
          if (o5 + a3 === 0) {
            var u4 = (0, Wt.default)(s3, { isIdentifier: true });
            if (u4 === s3)
              return t2.NO_QUOTE;
            var l3 = this.preferredQuoteMark(i3);
            if (l3 === t2.NO_QUOTE) {
              var f4 = this.quoteMark || i3.quoteMark || t2.DOUBLE_QUOTE, d5 = oi[f4], g4 = (0, Wt.default)(s3, d5);
              if (g4.length < u4.length)
                return f4;
            }
            return l3;
          } else
            return a3 === o5 ? this.preferredQuoteMark(i3) : a3 < o5 ? t2.DOUBLE_QUOTE : t2.SINGLE_QUOTE;
        }, n3.preferredQuoteMark = function(i3) {
          var s3 = i3.preferCurrentQuoteMark ? this.quoteMark : i3.quoteMark;
          return s3 === void 0 && (s3 = i3.preferCurrentQuoteMark ? i3.quoteMark : this.quoteMark), s3 === void 0 && (s3 = t2.DOUBLE_QUOTE), s3;
        }, n3._syncRawValue = function() {
          var i3 = (0, Wt.default)(this._value, oi[this.quoteMark]);
          i3 === this._value ? this.raws && delete this.raws.value : this.raws.value = i3;
        }, n3._handleEscapes = function(i3, s3) {
          if (this._constructed) {
            var o5 = (0, Wt.default)(s3, { isIdentifier: true });
            o5 !== s3 ? this.raws[i3] = o5 : delete this.raws[i3];
          }
        }, n3._spacesFor = function(i3) {
          var s3 = { before: "", after: "" }, o5 = this.spaces[i3] || {}, a3 = this.raws.spaces && this.raws.spaces[i3] || {};
          return Object.assign(s3, o5, a3);
        }, n3._stringFor = function(i3, s3, o5) {
          s3 === void 0 && (s3 = i3), o5 === void 0 && (o5 = Vs);
          var a3 = this._spacesFor(s3);
          return o5(this.stringifyProperty(i3), a3);
        }, n3.offsetOf = function(i3) {
          var s3 = 1, o5 = this._spacesFor("attribute");
          if (s3 += o5.before.length, i3 === "namespace" || i3 === "ns")
            return this.namespace ? s3 : -1;
          if (i3 === "attributeNS" || (s3 += this.namespaceString.length, this.namespace && (s3 += 1), i3 === "attribute"))
            return s3;
          s3 += this.stringifyProperty("attribute").length, s3 += o5.after.length;
          var a3 = this._spacesFor("operator");
          s3 += a3.before.length;
          var u4 = this.stringifyProperty("operator");
          if (i3 === "operator")
            return u4 ? s3 : -1;
          s3 += u4.length, s3 += a3.after.length;
          var l3 = this._spacesFor("value");
          s3 += l3.before.length;
          var f4 = this.stringifyProperty("value");
          if (i3 === "value")
            return f4 ? s3 : -1;
          s3 += f4.length, s3 += l3.after.length;
          var d5 = this._spacesFor("insensitive");
          return s3 += d5.before.length, i3 === "insensitive" && this.insensitive ? s3 : -1;
        }, n3.toString = function() {
          var i3 = this, s3 = [this.rawSpaceBefore, "["];
          return s3.push(this._stringFor("qualifiedAttribute", "attribute")), this.operator && (this.value || this.value === "") && (s3.push(this._stringFor("operator")), s3.push(this._stringFor("value")), s3.push(this._stringFor("insensitiveFlag", "insensitive", function(o5, a3) {
            return o5.length > 0 && !i3.quoted && a3.before.length === 0 && !(i3.spaces.value && i3.spaces.value.after) && (a3.before = " "), Vs(o5, a3);
          }))), s3.push("]"), s3.push(this.rawSpaceAfter), s3.join("");
        }, Nc(t2, [{ key: "quoted", get: function() {
          var i3 = this.quoteMark;
          return i3 === "'" || i3 === '"';
        }, set: function(i3) {
          qc();
        } }, { key: "quoteMark", get: function() {
          return this._quoteMark;
        }, set: function(i3) {
          if (!this._constructed) {
            this._quoteMark = i3;
            return;
          }
          this._quoteMark !== i3 && (this._quoteMark = i3, this._syncRawValue());
        } }, { key: "qualifiedAttribute", get: function() {
          return this.qualifiedName(this.raws.attribute || this.attribute);
        } }, { key: "insensitiveFlag", get: function() {
          return this.insensitive ? "i" : "";
        } }, { key: "value", get: function() {
          return this._value;
        }, set: function(i3) {
          if (this._constructed) {
            var s3 = ui(i3), o5 = s3.deprecatedUsage, a3 = s3.unescaped, u4 = s3.quoteMark;
            if (o5 && Wc(), a3 === this._value && u4 === this._quoteMark)
              return;
            this._value = a3, this._quoteMark = u4, this._syncRawValue();
          } else
            this._value = i3;
        } }, { key: "attribute", get: function() {
          return this._attribute;
        }, set: function(i3) {
          this._handleEscapes("attribute", i3), this._attribute = i3;
        } }]), t2;
      }(Dc.default);
      Bt.default = $r;
      $r.NO_QUOTE = null;
      $r.SINGLE_QUOTE = "'";
      $r.DOUBLE_QUOTE = '"';
      var oi = (ii = { "'": { quotes: "single", wrap: true }, '"': { quotes: "double", wrap: true } }, ii[null] = { isIdentifier: true }, ii);
      function Vs(e2, t2) {
        return "" + t2.before + e2 + t2.after;
      }
    });
    ci = L2((Ut, Hs) => {
      "use strict";
      c3();
      Ut.__esModule = true;
      Ut.default = void 0;
      var zc = jc(Mr()), Gc = ue();
      function jc(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Vc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, fi(e2, t2);
      }
      function fi(e2, t2) {
        return fi = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, fi(e2, t2);
      }
      var Hc = function(e2) {
        Vc(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = Gc.UNIVERSAL, r4.value = "*", r4;
        }
        return t2;
      }(zc.default);
      Ut.default = Hc;
      Hs.exports = Ut.default;
    });
    pi = L2((zt, Ys) => {
      "use strict";
      c3();
      zt.__esModule = true;
      zt.default = void 0;
      var Yc = Qc(Ce()), Xc = ue();
      function Qc(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Kc(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, di(e2, t2);
      }
      function di(e2, t2) {
        return di = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, di(e2, t2);
      }
      var Jc = function(e2) {
        Kc(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = Xc.COMBINATOR, r4;
        }
        return t2;
      }(Yc.default);
      zt.default = Jc;
      Ys.exports = zt.default;
    });
    mi = L2((Gt, Xs) => {
      "use strict";
      c3();
      Gt.__esModule = true;
      Gt.default = void 0;
      var Zc = td2(Ce()), ed = ue();
      function td2(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function rd(e2, t2) {
        e2.prototype = Object.create(t2.prototype), e2.prototype.constructor = e2, hi(e2, t2);
      }
      function hi(e2, t2) {
        return hi = Object.setPrototypeOf || function(r4, i3) {
          return r4.__proto__ = i3, r4;
        }, hi(e2, t2);
      }
      var nd = function(e2) {
        rd(t2, e2);
        function t2(n3) {
          var r4;
          return r4 = e2.call(this, n3) || this, r4.type = ed.NESTING, r4.value = "&", r4;
        }
        return t2;
      }(Zc.default);
      Gt.default = nd;
      Xs.exports = Gt.default;
    });
    Ks = L2((Wr, Qs) => {
      "use strict";
      c3();
      Wr.__esModule = true;
      Wr.default = id;
      function id(e2) {
        return e2.sort(function(t2, n3) {
          return t2 - n3;
        });
      }
      Qs.exports = Wr.default;
    });
    gi = L2((A4) => {
      "use strict";
      c3();
      A4.__esModule = true;
      A4.combinator = A4.word = A4.comment = A4.str = A4.tab = A4.newline = A4.feed = A4.cr = A4.backslash = A4.bang = A4.slash = A4.doubleQuote = A4.singleQuote = A4.space = A4.greaterThan = A4.pipe = A4.equals = A4.plus = A4.caret = A4.tilde = A4.dollar = A4.closeSquare = A4.openSquare = A4.closeParenthesis = A4.openParenthesis = A4.semicolon = A4.colon = A4.comma = A4.at = A4.asterisk = A4.ampersand = void 0;
      var od = 38;
      A4.ampersand = od;
      var sd = 42;
      A4.asterisk = sd;
      var ad = 64;
      A4.at = ad;
      var ud = 44;
      A4.comma = ud;
      var ld = 58;
      A4.colon = ld;
      var fd2 = 59;
      A4.semicolon = fd2;
      var cd = 40;
      A4.openParenthesis = cd;
      var dd = 41;
      A4.closeParenthesis = dd;
      var pd = 91;
      A4.openSquare = pd;
      var hd = 93;
      A4.closeSquare = hd;
      var md = 36;
      A4.dollar = md;
      var gd = 126;
      A4.tilde = gd;
      var vd = 94;
      A4.caret = vd;
      var bd = 43;
      A4.plus = bd;
      var yd = 61;
      A4.equals = yd;
      var xd = 124;
      A4.pipe = xd;
      var wd = 62;
      A4.greaterThan = wd;
      var _d = 32;
      A4.space = _d;
      var Js = 39;
      A4.singleQuote = Js;
      var Sd = 34;
      A4.doubleQuote = Sd;
      var kd = 47;
      A4.slash = kd;
      var Td = 33;
      A4.bang = Td;
      var Od = 92;
      A4.backslash = Od;
      var Ed = 13;
      A4.cr = Ed;
      var Pd = 12;
      A4.feed = Pd;
      var Ad = 10;
      A4.newline = Ad;
      var Id = 9;
      A4.tab = Id;
      var Rd = Js;
      A4.str = Rd;
      var Ld = -1;
      A4.comment = Ld;
      var Cd = -2;
      A4.word = Cd;
      var Dd = -3;
      A4.combinator = Dd;
    });
    ta = L2((jt) => {
      "use strict";
      c3();
      jt.__esModule = true;
      jt.default = Bd;
      jt.FIELDS = void 0;
      var O6 = Fd(gi()), at2, Q2;
      function ea() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return ea = function() {
          return e2;
        }, e2;
      }
      function Fd(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var t2 = ea();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n3 = {}, r4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var i3 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, i3)) {
            var s3 = r4 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
            s3 && (s3.get || s3.set) ? Object.defineProperty(n3, i3, s3) : n3[i3] = e2[i3];
          }
        return n3.default = e2, t2 && t2.set(e2, n3), n3;
      }
      var Nd = (at2 = {}, at2[O6.tab] = true, at2[O6.newline] = true, at2[O6.cr] = true, at2[O6.feed] = true, at2), Md = (Q2 = {}, Q2[O6.space] = true, Q2[O6.tab] = true, Q2[O6.newline] = true, Q2[O6.cr] = true, Q2[O6.feed] = true, Q2[O6.ampersand] = true, Q2[O6.asterisk] = true, Q2[O6.bang] = true, Q2[O6.comma] = true, Q2[O6.colon] = true, Q2[O6.semicolon] = true, Q2[O6.openParenthesis] = true, Q2[O6.closeParenthesis] = true, Q2[O6.openSquare] = true, Q2[O6.closeSquare] = true, Q2[O6.singleQuote] = true, Q2[O6.doubleQuote] = true, Q2[O6.plus] = true, Q2[O6.pipe] = true, Q2[O6.tilde] = true, Q2[O6.greaterThan] = true, Q2[O6.equals] = true, Q2[O6.dollar] = true, Q2[O6.caret] = true, Q2[O6.slash] = true, Q2), vi = {}, Zs = "0123456789abcdefABCDEF";
      for (qr = 0; qr < Zs.length; qr++)
        vi[Zs.charCodeAt(qr)] = true;
      var qr;
      function $d(e2, t2) {
        var n3 = t2, r4;
        do {
          if (r4 = e2.charCodeAt(n3), Md[r4])
            return n3 - 1;
          r4 === O6.backslash ? n3 = Wd(e2, n3) + 1 : n3++;
        } while (n3 < e2.length);
        return n3 - 1;
      }
      function Wd(e2, t2) {
        var n3 = t2, r4 = e2.charCodeAt(n3 + 1);
        if (!Nd[r4])
          if (vi[r4]) {
            var i3 = 0;
            do
              n3++, i3++, r4 = e2.charCodeAt(n3 + 1);
            while (vi[r4] && i3 < 6);
            i3 < 6 && r4 === O6.space && n3++;
          } else
            n3++;
        return n3;
      }
      var qd = { TYPE: 0, START_LINE: 1, START_COL: 2, END_LINE: 3, END_COL: 4, START_POS: 5, END_POS: 6 };
      jt.FIELDS = qd;
      function Bd(e2) {
        var t2 = [], n3 = e2.css.valueOf(), r4 = n3, i3 = r4.length, s3 = -1, o5 = 1, a3 = 0, u4 = 0, l3, f4, d5, g4, h2, p6, v4, _6, b5, y3, S5, E2, T4;
        function D4(F3, C5) {
          if (e2.safe)
            n3 += C5, b5 = n3.length - 1;
          else
            throw e2.error("Unclosed " + F3, o5, a3 - s3, a3);
        }
        for (; a3 < i3; ) {
          switch (l3 = n3.charCodeAt(a3), l3 === O6.newline && (s3 = a3, o5 += 1), l3) {
            case O6.space:
            case O6.tab:
            case O6.newline:
            case O6.cr:
            case O6.feed:
              b5 = a3;
              do
                b5 += 1, l3 = n3.charCodeAt(b5), l3 === O6.newline && (s3 = b5, o5 += 1);
              while (l3 === O6.space || l3 === O6.newline || l3 === O6.tab || l3 === O6.cr || l3 === O6.feed);
              T4 = O6.space, g4 = o5, d5 = b5 - s3 - 1, u4 = b5;
              break;
            case O6.plus:
            case O6.greaterThan:
            case O6.tilde:
            case O6.pipe:
              b5 = a3;
              do
                b5 += 1, l3 = n3.charCodeAt(b5);
              while (l3 === O6.plus || l3 === O6.greaterThan || l3 === O6.tilde || l3 === O6.pipe);
              T4 = O6.combinator, g4 = o5, d5 = a3 - s3, u4 = b5;
              break;
            case O6.asterisk:
            case O6.ampersand:
            case O6.bang:
            case O6.comma:
            case O6.equals:
            case O6.dollar:
            case O6.caret:
            case O6.openSquare:
            case O6.closeSquare:
            case O6.colon:
            case O6.semicolon:
            case O6.openParenthesis:
            case O6.closeParenthesis:
              b5 = a3, T4 = l3, g4 = o5, d5 = a3 - s3, u4 = b5 + 1;
              break;
            case O6.singleQuote:
            case O6.doubleQuote:
              E2 = l3 === O6.singleQuote ? "'" : '"', b5 = a3;
              do
                for (h2 = false, b5 = n3.indexOf(E2, b5 + 1), b5 === -1 && D4("quote", E2), p6 = b5; n3.charCodeAt(p6 - 1) === O6.backslash; )
                  p6 -= 1, h2 = !h2;
              while (h2);
              T4 = O6.str, g4 = o5, d5 = a3 - s3, u4 = b5 + 1;
              break;
            default:
              l3 === O6.slash && n3.charCodeAt(a3 + 1) === O6.asterisk ? (b5 = n3.indexOf("*/", a3 + 2) + 1, b5 === 0 && D4("comment", "*/"), f4 = n3.slice(a3, b5 + 1), _6 = f4.split(`
`), v4 = _6.length - 1, v4 > 0 ? (y3 = o5 + v4, S5 = b5 - _6[v4].length) : (y3 = o5, S5 = s3), T4 = O6.comment, o5 = y3, g4 = y3, d5 = b5 - S5) : l3 === O6.slash ? (b5 = a3, T4 = l3, g4 = o5, d5 = a3 - s3, u4 = b5 + 1) : (b5 = $d(n3, a3), T4 = O6.word, g4 = o5, d5 = b5 - s3), u4 = b5 + 1;
              break;
          }
          t2.push([T4, o5, a3 - s3, g4, d5, a3, u4]), S5 && (s3 = S5, S5 = null), a3 = u4;
        }
        return t2;
      }
    });
    la = L2((Vt, ua) => {
      "use strict";
      c3();
      Vt.__esModule = true;
      Vt.default = void 0;
      var Ud = xe2(Bn()), bi = xe2(zn()), zd = xe2(Vn()), ra = xe2(Yn()), Gd = xe2(Qn()), jd = xe2(Zn()), yi = xe2(ti()), Vd = xe2(ni()), na = Br(li()), Hd = xe2(ci()), xi = xe2(pi()), Yd = xe2(mi()), Xd = xe2(Ks()), k6 = Br(ta()), P3 = Br(gi()), Qd = Br(ue()), ee2 = Et(), Ke2, wi;
      function aa() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return aa = function() {
          return e2;
        }, e2;
      }
      function Br(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var t2 = aa();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n3 = {}, r4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var i3 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, i3)) {
            var s3 = r4 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
            s3 && (s3.get || s3.set) ? Object.defineProperty(n3, i3, s3) : n3[i3] = e2[i3];
          }
        return n3.default = e2, t2 && t2.set(e2, n3), n3;
      }
      function xe2(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function ia(e2, t2) {
        for (var n3 = 0; n3 < t2.length; n3++) {
          var r4 = t2[n3];
          r4.enumerable = r4.enumerable || false, r4.configurable = true, "value" in r4 && (r4.writable = true), Object.defineProperty(e2, r4.key, r4);
        }
      }
      function Kd(e2, t2, n3) {
        return t2 && ia(e2.prototype, t2), n3 && ia(e2, n3), e2;
      }
      var ki = (Ke2 = {}, Ke2[P3.space] = true, Ke2[P3.cr] = true, Ke2[P3.feed] = true, Ke2[P3.newline] = true, Ke2[P3.tab] = true, Ke2), Jd = Object.assign({}, ki, (wi = {}, wi[P3.comment] = true, wi));
      function oa(e2) {
        return { line: e2[k6.FIELDS.START_LINE], column: e2[k6.FIELDS.START_COL] };
      }
      function sa(e2) {
        return { line: e2[k6.FIELDS.END_LINE], column: e2[k6.FIELDS.END_COL] };
      }
      function Je2(e2, t2, n3, r4) {
        return { start: { line: e2, column: t2 }, end: { line: n3, column: r4 } };
      }
      function ut2(e2) {
        return Je2(e2[k6.FIELDS.START_LINE], e2[k6.FIELDS.START_COL], e2[k6.FIELDS.END_LINE], e2[k6.FIELDS.END_COL]);
      }
      function _i(e2, t2) {
        if (!!e2)
          return Je2(e2[k6.FIELDS.START_LINE], e2[k6.FIELDS.START_COL], t2[k6.FIELDS.END_LINE], t2[k6.FIELDS.END_COL]);
      }
      function lt2(e2, t2) {
        var n3 = e2[t2];
        if (typeof n3 == "string")
          return n3.indexOf("\\") !== -1 && ((0, ee2.ensureObject)(e2, "raws"), e2[t2] = (0, ee2.unesc)(n3), e2.raws[t2] === void 0 && (e2.raws[t2] = n3)), e2;
      }
      function Si(e2, t2) {
        for (var n3 = -1, r4 = []; (n3 = e2.indexOf(t2, n3 + 1)) !== -1; )
          r4.push(n3);
        return r4;
      }
      function Zd() {
        var e2 = Array.prototype.concat.apply([], arguments);
        return e2.filter(function(t2, n3) {
          return n3 === e2.indexOf(t2);
        });
      }
      var ep = function() {
        function e2(n3, r4) {
          r4 === void 0 && (r4 = {}), this.rule = n3, this.options = Object.assign({ lossy: false, safe: false }, r4), this.position = 0, this.css = typeof this.rule == "string" ? this.rule : this.rule.selector, this.tokens = (0, k6.default)({ css: this.css, error: this._errorGenerator(), safe: this.options.safe });
          var i3 = _i(this.tokens[0], this.tokens[this.tokens.length - 1]);
          this.root = new Ud.default({ source: i3 }), this.root.errorGenerator = this._errorGenerator();
          var s3 = new bi.default({ source: { start: { line: 1, column: 1 } } });
          this.root.append(s3), this.current = s3, this.loop();
        }
        var t2 = e2.prototype;
        return t2._errorGenerator = function() {
          var r4 = this;
          return function(i3, s3) {
            return typeof r4.rule == "string" ? new Error(i3) : r4.rule.error(i3, s3);
          };
        }, t2.attribute = function() {
          var r4 = [], i3 = this.currToken;
          for (this.position++; this.position < this.tokens.length && this.currToken[k6.FIELDS.TYPE] !== P3.closeSquare; )
            r4.push(this.currToken), this.position++;
          if (this.currToken[k6.FIELDS.TYPE] !== P3.closeSquare)
            return this.expected("closing square bracket", this.currToken[k6.FIELDS.START_POS]);
          var s3 = r4.length, o5 = { source: Je2(i3[1], i3[2], this.currToken[3], this.currToken[4]), sourceIndex: i3[k6.FIELDS.START_POS] };
          if (s3 === 1 && !~[P3.word].indexOf(r4[0][k6.FIELDS.TYPE]))
            return this.expected("attribute", r4[0][k6.FIELDS.START_POS]);
          for (var a3 = 0, u4 = "", l3 = "", f4 = null, d5 = false; a3 < s3; ) {
            var g4 = r4[a3], h2 = this.content(g4), p6 = r4[a3 + 1];
            switch (g4[k6.FIELDS.TYPE]) {
              case P3.space:
                if (d5 = true, this.options.lossy)
                  break;
                if (f4) {
                  (0, ee2.ensureObject)(o5, "spaces", f4);
                  var v4 = o5.spaces[f4].after || "";
                  o5.spaces[f4].after = v4 + h2;
                  var _6 = (0, ee2.getProp)(o5, "raws", "spaces", f4, "after") || null;
                  _6 && (o5.raws.spaces[f4].after = _6 + h2);
                } else
                  u4 = u4 + h2, l3 = l3 + h2;
                break;
              case P3.asterisk:
                if (p6[k6.FIELDS.TYPE] === P3.equals)
                  o5.operator = h2, f4 = "operator";
                else if ((!o5.namespace || f4 === "namespace" && !d5) && p6) {
                  u4 && ((0, ee2.ensureObject)(o5, "spaces", "attribute"), o5.spaces.attribute.before = u4, u4 = ""), l3 && ((0, ee2.ensureObject)(o5, "raws", "spaces", "attribute"), o5.raws.spaces.attribute.before = u4, l3 = ""), o5.namespace = (o5.namespace || "") + h2;
                  var b5 = (0, ee2.getProp)(o5, "raws", "namespace") || null;
                  b5 && (o5.raws.namespace += h2), f4 = "namespace";
                }
                d5 = false;
                break;
              case P3.dollar:
                if (f4 === "value") {
                  var y3 = (0, ee2.getProp)(o5, "raws", "value");
                  o5.value += "$", y3 && (o5.raws.value = y3 + "$");
                  break;
                }
              case P3.caret:
                p6[k6.FIELDS.TYPE] === P3.equals && (o5.operator = h2, f4 = "operator"), d5 = false;
                break;
              case P3.combinator:
                if (h2 === "~" && p6[k6.FIELDS.TYPE] === P3.equals && (o5.operator = h2, f4 = "operator"), h2 !== "|") {
                  d5 = false;
                  break;
                }
                p6[k6.FIELDS.TYPE] === P3.equals ? (o5.operator = h2, f4 = "operator") : !o5.namespace && !o5.attribute && (o5.namespace = true), d5 = false;
                break;
              case P3.word:
                if (p6 && this.content(p6) === "|" && r4[a3 + 2] && r4[a3 + 2][k6.FIELDS.TYPE] !== P3.equals && !o5.operator && !o5.namespace)
                  o5.namespace = h2, f4 = "namespace";
                else if (!o5.attribute || f4 === "attribute" && !d5) {
                  u4 && ((0, ee2.ensureObject)(o5, "spaces", "attribute"), o5.spaces.attribute.before = u4, u4 = ""), l3 && ((0, ee2.ensureObject)(o5, "raws", "spaces", "attribute"), o5.raws.spaces.attribute.before = l3, l3 = ""), o5.attribute = (o5.attribute || "") + h2;
                  var S5 = (0, ee2.getProp)(o5, "raws", "attribute") || null;
                  S5 && (o5.raws.attribute += h2), f4 = "attribute";
                } else if (!o5.value && o5.value !== "" || f4 === "value" && !d5) {
                  var E2 = (0, ee2.unesc)(h2), T4 = (0, ee2.getProp)(o5, "raws", "value") || "", D4 = o5.value || "";
                  o5.value = D4 + E2, o5.quoteMark = null, (E2 !== h2 || T4) && ((0, ee2.ensureObject)(o5, "raws"), o5.raws.value = (T4 || D4) + h2), f4 = "value";
                } else {
                  var F3 = h2 === "i" || h2 === "I";
                  (o5.value || o5.value === "") && (o5.quoteMark || d5) ? (o5.insensitive = F3, (!F3 || h2 === "I") && ((0, ee2.ensureObject)(o5, "raws"), o5.raws.insensitiveFlag = h2), f4 = "insensitive", u4 && ((0, ee2.ensureObject)(o5, "spaces", "insensitive"), o5.spaces.insensitive.before = u4, u4 = ""), l3 && ((0, ee2.ensureObject)(o5, "raws", "spaces", "insensitive"), o5.raws.spaces.insensitive.before = l3, l3 = "")) : (o5.value || o5.value === "") && (f4 = "value", o5.value += h2, o5.raws.value && (o5.raws.value += h2));
                }
                d5 = false;
                break;
              case P3.str:
                if (!o5.attribute || !o5.operator)
                  return this.error("Expected an attribute followed by an operator preceding the string.", { index: g4[k6.FIELDS.START_POS] });
                var C5 = (0, na.unescapeValue)(h2), W2 = C5.unescaped, z5 = C5.quoteMark;
                o5.value = W2, o5.quoteMark = z5, f4 = "value", (0, ee2.ensureObject)(o5, "raws"), o5.raws.value = h2, d5 = false;
                break;
              case P3.equals:
                if (!o5.attribute)
                  return this.expected("attribute", g4[k6.FIELDS.START_POS], h2);
                if (o5.value)
                  return this.error('Unexpected "=" found; an operator was already defined.', { index: g4[k6.FIELDS.START_POS] });
                o5.operator = o5.operator ? o5.operator + h2 : h2, f4 = "operator", d5 = false;
                break;
              case P3.comment:
                if (f4)
                  if (d5 || p6 && p6[k6.FIELDS.TYPE] === P3.space || f4 === "insensitive") {
                    var X2 = (0, ee2.getProp)(o5, "spaces", f4, "after") || "", H3 = (0, ee2.getProp)(o5, "raws", "spaces", f4, "after") || X2;
                    (0, ee2.ensureObject)(o5, "raws", "spaces", f4), o5.raws.spaces[f4].after = H3 + h2;
                  } else {
                    var M4 = o5[f4] || "", re2 = (0, ee2.getProp)(o5, "raws", f4) || M4;
                    (0, ee2.ensureObject)(o5, "raws"), o5.raws[f4] = re2 + h2;
                  }
                else
                  l3 = l3 + h2;
                break;
              default:
                return this.error('Unexpected "' + h2 + '" found.', { index: g4[k6.FIELDS.START_POS] });
            }
            a3++;
          }
          lt2(o5, "attribute"), lt2(o5, "namespace"), this.newNode(new na.default(o5)), this.position++;
        }, t2.parseWhitespaceEquivalentTokens = function(r4) {
          r4 < 0 && (r4 = this.tokens.length);
          var i3 = this.position, s3 = [], o5 = "", a3 = void 0;
          do
            if (ki[this.currToken[k6.FIELDS.TYPE]])
              this.options.lossy || (o5 += this.content());
            else if (this.currToken[k6.FIELDS.TYPE] === P3.comment) {
              var u4 = {};
              o5 && (u4.before = o5, o5 = ""), a3 = new ra.default({ value: this.content(), source: ut2(this.currToken), sourceIndex: this.currToken[k6.FIELDS.START_POS], spaces: u4 }), s3.push(a3);
            }
          while (++this.position < r4);
          if (o5) {
            if (a3)
              a3.spaces.after = o5;
            else if (!this.options.lossy) {
              var l3 = this.tokens[i3], f4 = this.tokens[this.position - 1];
              s3.push(new yi.default({ value: "", source: Je2(l3[k6.FIELDS.START_LINE], l3[k6.FIELDS.START_COL], f4[k6.FIELDS.END_LINE], f4[k6.FIELDS.END_COL]), sourceIndex: l3[k6.FIELDS.START_POS], spaces: { before: o5, after: "" } }));
            }
          }
          return s3;
        }, t2.convertWhitespaceNodesToSpace = function(r4, i3) {
          var s3 = this;
          i3 === void 0 && (i3 = false);
          var o5 = "", a3 = "";
          r4.forEach(function(l3) {
            var f4 = s3.lossySpace(l3.spaces.before, i3), d5 = s3.lossySpace(l3.rawSpaceBefore, i3);
            o5 += f4 + s3.lossySpace(l3.spaces.after, i3 && f4.length === 0), a3 += f4 + l3.value + s3.lossySpace(l3.rawSpaceAfter, i3 && d5.length === 0);
          }), a3 === o5 && (a3 = void 0);
          var u4 = { space: o5, rawSpace: a3 };
          return u4;
        }, t2.isNamedCombinator = function(r4) {
          return r4 === void 0 && (r4 = this.position), this.tokens[r4 + 0] && this.tokens[r4 + 0][k6.FIELDS.TYPE] === P3.slash && this.tokens[r4 + 1] && this.tokens[r4 + 1][k6.FIELDS.TYPE] === P3.word && this.tokens[r4 + 2] && this.tokens[r4 + 2][k6.FIELDS.TYPE] === P3.slash;
        }, t2.namedCombinator = function() {
          if (this.isNamedCombinator()) {
            var r4 = this.content(this.tokens[this.position + 1]), i3 = (0, ee2.unesc)(r4).toLowerCase(), s3 = {};
            i3 !== r4 && (s3.value = "/" + r4 + "/");
            var o5 = new xi.default({ value: "/" + i3 + "/", source: Je2(this.currToken[k6.FIELDS.START_LINE], this.currToken[k6.FIELDS.START_COL], this.tokens[this.position + 2][k6.FIELDS.END_LINE], this.tokens[this.position + 2][k6.FIELDS.END_COL]), sourceIndex: this.currToken[k6.FIELDS.START_POS], raws: s3 });
            return this.position = this.position + 3, o5;
          } else
            this.unexpected();
        }, t2.combinator = function() {
          var r4 = this;
          if (this.content() === "|")
            return this.namespace();
          var i3 = this.locateNextMeaningfulToken(this.position);
          if (i3 < 0 || this.tokens[i3][k6.FIELDS.TYPE] === P3.comma) {
            var s3 = this.parseWhitespaceEquivalentTokens(i3);
            if (s3.length > 0) {
              var o5 = this.current.last;
              if (o5) {
                var a3 = this.convertWhitespaceNodesToSpace(s3), u4 = a3.space, l3 = a3.rawSpace;
                l3 !== void 0 && (o5.rawSpaceAfter += l3), o5.spaces.after += u4;
              } else
                s3.forEach(function(T4) {
                  return r4.newNode(T4);
                });
            }
            return;
          }
          var f4 = this.currToken, d5 = void 0;
          i3 > this.position && (d5 = this.parseWhitespaceEquivalentTokens(i3));
          var g4;
          if (this.isNamedCombinator() ? g4 = this.namedCombinator() : this.currToken[k6.FIELDS.TYPE] === P3.combinator ? (g4 = new xi.default({ value: this.content(), source: ut2(this.currToken), sourceIndex: this.currToken[k6.FIELDS.START_POS] }), this.position++) : ki[this.currToken[k6.FIELDS.TYPE]] || d5 || this.unexpected(), g4) {
            if (d5) {
              var h2 = this.convertWhitespaceNodesToSpace(d5), p6 = h2.space, v4 = h2.rawSpace;
              g4.spaces.before = p6, g4.rawSpaceBefore = v4;
            }
          } else {
            var _6 = this.convertWhitespaceNodesToSpace(d5, true), b5 = _6.space, y3 = _6.rawSpace;
            y3 || (y3 = b5);
            var S5 = {}, E2 = { spaces: {} };
            b5.endsWith(" ") && y3.endsWith(" ") ? (S5.before = b5.slice(0, b5.length - 1), E2.spaces.before = y3.slice(0, y3.length - 1)) : b5.startsWith(" ") && y3.startsWith(" ") ? (S5.after = b5.slice(1), E2.spaces.after = y3.slice(1)) : E2.value = y3, g4 = new xi.default({ value: " ", source: _i(f4, this.tokens[this.position - 1]), sourceIndex: f4[k6.FIELDS.START_POS], spaces: S5, raws: E2 });
          }
          return this.currToken && this.currToken[k6.FIELDS.TYPE] === P3.space && (g4.spaces.after = this.optionalSpace(this.content()), this.position++), this.newNode(g4);
        }, t2.comma = function() {
          if (this.position === this.tokens.length - 1) {
            this.root.trailingComma = true, this.position++;
            return;
          }
          this.current._inferEndPosition();
          var r4 = new bi.default({ source: { start: oa(this.tokens[this.position + 1]) } });
          this.current.parent.append(r4), this.current = r4, this.position++;
        }, t2.comment = function() {
          var r4 = this.currToken;
          this.newNode(new ra.default({ value: this.content(), source: ut2(r4), sourceIndex: r4[k6.FIELDS.START_POS] })), this.position++;
        }, t2.error = function(r4, i3) {
          throw this.root.error(r4, i3);
        }, t2.missingBackslash = function() {
          return this.error("Expected a backslash preceding the semicolon.", { index: this.currToken[k6.FIELDS.START_POS] });
        }, t2.missingParenthesis = function() {
          return this.expected("opening parenthesis", this.currToken[k6.FIELDS.START_POS]);
        }, t2.missingSquareBracket = function() {
          return this.expected("opening square bracket", this.currToken[k6.FIELDS.START_POS]);
        }, t2.unexpected = function() {
          return this.error("Unexpected '" + this.content() + "'. Escaping special characters with \\ may help.", this.currToken[k6.FIELDS.START_POS]);
        }, t2.namespace = function() {
          var r4 = this.prevToken && this.content(this.prevToken) || true;
          if (this.nextToken[k6.FIELDS.TYPE] === P3.word)
            return this.position++, this.word(r4);
          if (this.nextToken[k6.FIELDS.TYPE] === P3.asterisk)
            return this.position++, this.universal(r4);
        }, t2.nesting = function() {
          if (this.nextToken) {
            var r4 = this.content(this.nextToken);
            if (r4 === "|") {
              this.position++;
              return;
            }
          }
          var i3 = this.currToken;
          this.newNode(new Yd.default({ value: this.content(), source: ut2(i3), sourceIndex: i3[k6.FIELDS.START_POS] })), this.position++;
        }, t2.parentheses = function() {
          var r4 = this.current.last, i3 = 1;
          if (this.position++, r4 && r4.type === Qd.PSEUDO) {
            var s3 = new bi.default({ source: { start: oa(this.tokens[this.position - 1]) } }), o5 = this.current;
            for (r4.append(s3), this.current = s3; this.position < this.tokens.length && i3; )
              this.currToken[k6.FIELDS.TYPE] === P3.openParenthesis && i3++, this.currToken[k6.FIELDS.TYPE] === P3.closeParenthesis && i3--, i3 ? this.parse() : (this.current.source.end = sa(this.currToken), this.current.parent.source.end = sa(this.currToken), this.position++);
            this.current = o5;
          } else {
            for (var a3 = this.currToken, u4 = "(", l3; this.position < this.tokens.length && i3; )
              this.currToken[k6.FIELDS.TYPE] === P3.openParenthesis && i3++, this.currToken[k6.FIELDS.TYPE] === P3.closeParenthesis && i3--, l3 = this.currToken, u4 += this.parseParenthesisToken(this.currToken), this.position++;
            r4 ? r4.appendToPropertyAndEscape("value", u4, u4) : this.newNode(new yi.default({ value: u4, source: Je2(a3[k6.FIELDS.START_LINE], a3[k6.FIELDS.START_COL], l3[k6.FIELDS.END_LINE], l3[k6.FIELDS.END_COL]), sourceIndex: a3[k6.FIELDS.START_POS] }));
          }
          if (i3)
            return this.expected("closing parenthesis", this.currToken[k6.FIELDS.START_POS]);
        }, t2.pseudo = function() {
          for (var r4 = this, i3 = "", s3 = this.currToken; this.currToken && this.currToken[k6.FIELDS.TYPE] === P3.colon; )
            i3 += this.content(), this.position++;
          if (!this.currToken)
            return this.expected(["pseudo-class", "pseudo-element"], this.position - 1);
          if (this.currToken[k6.FIELDS.TYPE] === P3.word)
            this.splitWord(false, function(o5, a3) {
              i3 += o5, r4.newNode(new Vd.default({ value: i3, source: _i(s3, r4.currToken), sourceIndex: s3[k6.FIELDS.START_POS] })), a3 > 1 && r4.nextToken && r4.nextToken[k6.FIELDS.TYPE] === P3.openParenthesis && r4.error("Misplaced parenthesis.", { index: r4.nextToken[k6.FIELDS.START_POS] });
            });
          else
            return this.expected(["pseudo-class", "pseudo-element"], this.currToken[k6.FIELDS.START_POS]);
        }, t2.space = function() {
          var r4 = this.content();
          this.position === 0 || this.prevToken[k6.FIELDS.TYPE] === P3.comma || this.prevToken[k6.FIELDS.TYPE] === P3.openParenthesis || this.current.nodes.every(function(i3) {
            return i3.type === "comment";
          }) ? (this.spaces = this.optionalSpace(r4), this.position++) : this.position === this.tokens.length - 1 || this.nextToken[k6.FIELDS.TYPE] === P3.comma || this.nextToken[k6.FIELDS.TYPE] === P3.closeParenthesis ? (this.current.last.spaces.after = this.optionalSpace(r4), this.position++) : this.combinator();
        }, t2.string = function() {
          var r4 = this.currToken;
          this.newNode(new yi.default({ value: this.content(), source: ut2(r4), sourceIndex: r4[k6.FIELDS.START_POS] })), this.position++;
        }, t2.universal = function(r4) {
          var i3 = this.nextToken;
          if (i3 && this.content(i3) === "|")
            return this.position++, this.namespace();
          var s3 = this.currToken;
          this.newNode(new Hd.default({ value: this.content(), source: ut2(s3), sourceIndex: s3[k6.FIELDS.START_POS] }), r4), this.position++;
        }, t2.splitWord = function(r4, i3) {
          for (var s3 = this, o5 = this.nextToken, a3 = this.content(); o5 && ~[P3.dollar, P3.caret, P3.equals, P3.word].indexOf(o5[k6.FIELDS.TYPE]); ) {
            this.position++;
            var u4 = this.content();
            if (a3 += u4, u4.lastIndexOf("\\") === u4.length - 1) {
              var l3 = this.nextToken;
              l3 && l3[k6.FIELDS.TYPE] === P3.space && (a3 += this.requiredSpace(this.content(l3)), this.position++);
            }
            o5 = this.nextToken;
          }
          var f4 = Si(a3, ".").filter(function(p6) {
            var v4 = a3[p6 - 1] === "\\", _6 = /^\d+\.\d+%$/.test(a3);
            return !v4 && !_6;
          }), d5 = Si(a3, "#").filter(function(p6) {
            return a3[p6 - 1] !== "\\";
          }), g4 = Si(a3, "#{");
          g4.length && (d5 = d5.filter(function(p6) {
            return !~g4.indexOf(p6);
          }));
          var h2 = (0, Xd.default)(Zd([0].concat(f4, d5)));
          h2.forEach(function(p6, v4) {
            var _6 = h2[v4 + 1] || a3.length, b5 = a3.slice(p6, _6);
            if (v4 === 0 && i3)
              return i3.call(s3, b5, h2.length);
            var y3, S5 = s3.currToken, E2 = S5[k6.FIELDS.START_POS] + h2[v4], T4 = Je2(S5[1], S5[2] + p6, S5[3], S5[2] + (_6 - 1));
            if (~f4.indexOf(p6)) {
              var D4 = { value: b5.slice(1), source: T4, sourceIndex: E2 };
              y3 = new zd.default(lt2(D4, "value"));
            } else if (~d5.indexOf(p6)) {
              var F3 = { value: b5.slice(1), source: T4, sourceIndex: E2 };
              y3 = new Gd.default(lt2(F3, "value"));
            } else {
              var C5 = { value: b5, source: T4, sourceIndex: E2 };
              lt2(C5, "value"), y3 = new jd.default(C5);
            }
            s3.newNode(y3, r4), r4 = null;
          }), this.position++;
        }, t2.word = function(r4) {
          var i3 = this.nextToken;
          return i3 && this.content(i3) === "|" ? (this.position++, this.namespace()) : this.splitWord(r4);
        }, t2.loop = function() {
          for (; this.position < this.tokens.length; )
            this.parse(true);
          return this.current._inferEndPosition(), this.root;
        }, t2.parse = function(r4) {
          switch (this.currToken[k6.FIELDS.TYPE]) {
            case P3.space:
              this.space();
              break;
            case P3.comment:
              this.comment();
              break;
            case P3.openParenthesis:
              this.parentheses();
              break;
            case P3.closeParenthesis:
              r4 && this.missingParenthesis();
              break;
            case P3.openSquare:
              this.attribute();
              break;
            case P3.dollar:
            case P3.caret:
            case P3.equals:
            case P3.word:
              this.word();
              break;
            case P3.colon:
              this.pseudo();
              break;
            case P3.comma:
              this.comma();
              break;
            case P3.asterisk:
              this.universal();
              break;
            case P3.ampersand:
              this.nesting();
              break;
            case P3.slash:
            case P3.combinator:
              this.combinator();
              break;
            case P3.str:
              this.string();
              break;
            case P3.closeSquare:
              this.missingSquareBracket();
            case P3.semicolon:
              this.missingBackslash();
            default:
              this.unexpected();
          }
        }, t2.expected = function(r4, i3, s3) {
          if (Array.isArray(r4)) {
            var o5 = r4.pop();
            r4 = r4.join(", ") + " or " + o5;
          }
          var a3 = /^[aeiou]/.test(r4[0]) ? "an" : "a";
          return s3 ? this.error("Expected " + a3 + " " + r4 + ', found "' + s3 + '" instead.', { index: i3 }) : this.error("Expected " + a3 + " " + r4 + ".", { index: i3 });
        }, t2.requiredSpace = function(r4) {
          return this.options.lossy ? " " : r4;
        }, t2.optionalSpace = function(r4) {
          return this.options.lossy ? "" : r4;
        }, t2.lossySpace = function(r4, i3) {
          return this.options.lossy ? i3 ? " " : "" : r4;
        }, t2.parseParenthesisToken = function(r4) {
          var i3 = this.content(r4);
          return r4[k6.FIELDS.TYPE] === P3.space ? this.requiredSpace(i3) : i3;
        }, t2.newNode = function(r4, i3) {
          return i3 && (/^ +$/.test(i3) && (this.options.lossy || (this.spaces = (this.spaces || "") + i3), i3 = true), r4.namespace = i3, lt2(r4, "namespace")), this.spaces && (r4.spaces.before = this.spaces, this.spaces = ""), this.current.append(r4);
        }, t2.content = function(r4) {
          return r4 === void 0 && (r4 = this.currToken), this.css.slice(r4[k6.FIELDS.START_POS], r4[k6.FIELDS.END_POS]);
        }, t2.locateNextMeaningfulToken = function(r4) {
          r4 === void 0 && (r4 = this.position + 1);
          for (var i3 = r4; i3 < this.tokens.length; )
            if (Jd[this.tokens[i3][k6.FIELDS.TYPE]]) {
              i3++;
              continue;
            } else
              return i3;
          return -1;
        }, Kd(e2, [{ key: "currToken", get: function() {
          return this.tokens[this.position];
        } }, { key: "nextToken", get: function() {
          return this.tokens[this.position + 1];
        } }, { key: "prevToken", get: function() {
          return this.tokens[this.position - 1];
        } }]), e2;
      }();
      Vt.default = ep;
      ua.exports = Vt.default;
    });
    ca2 = L2((Ht, fa) => {
      "use strict";
      c3();
      Ht.__esModule = true;
      Ht.default = void 0;
      var tp = rp(la());
      function rp(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      var np = function() {
        function e2(n3, r4) {
          this.func = n3 || function() {
          }, this.funcRes = null, this.options = r4;
        }
        var t2 = e2.prototype;
        return t2._shouldUpdateSelector = function(r4, i3) {
          i3 === void 0 && (i3 = {});
          var s3 = Object.assign({}, this.options, i3);
          return s3.updateSelector === false ? false : typeof r4 != "string";
        }, t2._isLossy = function(r4) {
          r4 === void 0 && (r4 = {});
          var i3 = Object.assign({}, this.options, r4);
          return i3.lossless === false;
        }, t2._root = function(r4, i3) {
          i3 === void 0 && (i3 = {});
          var s3 = new tp.default(r4, this._parseOptions(i3));
          return s3.root;
        }, t2._parseOptions = function(r4) {
          return { lossy: this._isLossy(r4) };
        }, t2._run = function(r4, i3) {
          var s3 = this;
          return i3 === void 0 && (i3 = {}), new Promise(function(o5, a3) {
            try {
              var u4 = s3._root(r4, i3);
              Promise.resolve(s3.func(u4)).then(function(l3) {
                var f4 = void 0;
                return s3._shouldUpdateSelector(r4, i3) && (f4 = u4.toString(), r4.selector = f4), { transform: l3, root: u4, string: f4 };
              }).then(o5, a3);
            } catch (l3) {
              a3(l3);
              return;
            }
          });
        }, t2._runSync = function(r4, i3) {
          i3 === void 0 && (i3 = {});
          var s3 = this._root(r4, i3), o5 = this.func(s3);
          if (o5 && typeof o5.then == "function")
            throw new Error("Selector processor returned a promise to a synchronous call.");
          var a3 = void 0;
          return i3.updateSelector && typeof r4 != "string" && (a3 = s3.toString(), r4.selector = a3), { transform: o5, root: s3, string: a3 };
        }, t2.ast = function(r4, i3) {
          return this._run(r4, i3).then(function(s3) {
            return s3.root;
          });
        }, t2.astSync = function(r4, i3) {
          return this._runSync(r4, i3).root;
        }, t2.transform = function(r4, i3) {
          return this._run(r4, i3).then(function(s3) {
            return s3.transform;
          });
        }, t2.transformSync = function(r4, i3) {
          return this._runSync(r4, i3).transform;
        }, t2.process = function(r4, i3) {
          return this._run(r4, i3).then(function(s3) {
            return s3.string || s3.root.toString();
          });
        }, t2.processSync = function(r4, i3) {
          var s3 = this._runSync(r4, i3);
          return s3.string || s3.root.toString();
        }, e2;
      }();
      Ht.default = np;
      fa.exports = Ht.default;
    });
    da = L2((J2) => {
      "use strict";
      c3();
      J2.__esModule = true;
      J2.universal = J2.tag = J2.string = J2.selector = J2.root = J2.pseudo = J2.nesting = J2.id = J2.comment = J2.combinator = J2.className = J2.attribute = void 0;
      var ip = we2(li()), op = we2(Vn()), sp = we2(pi()), ap = we2(Yn()), up = we2(Qn()), lp = we2(mi()), fp = we2(ni()), cp = we2(Bn()), dp = we2(zn()), pp = we2(ti()), hp = we2(Zn()), mp = we2(ci());
      function we2(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      var gp = function(t2) {
        return new ip.default(t2);
      };
      J2.attribute = gp;
      var vp = function(t2) {
        return new op.default(t2);
      };
      J2.className = vp;
      var bp = function(t2) {
        return new sp.default(t2);
      };
      J2.combinator = bp;
      var yp = function(t2) {
        return new ap.default(t2);
      };
      J2.comment = yp;
      var xp = function(t2) {
        return new up.default(t2);
      };
      J2.id = xp;
      var wp = function(t2) {
        return new lp.default(t2);
      };
      J2.nesting = wp;
      var _p = function(t2) {
        return new fp.default(t2);
      };
      J2.pseudo = _p;
      var Sp = function(t2) {
        return new cp.default(t2);
      };
      J2.root = Sp;
      var kp = function(t2) {
        return new dp.default(t2);
      };
      J2.selector = kp;
      var Tp = function(t2) {
        return new pp.default(t2);
      };
      J2.string = Tp;
      var Op = function(t2) {
        return new hp.default(t2);
      };
      J2.tag = Op;
      var Ep = function(t2) {
        return new mp.default(t2);
      };
      J2.universal = Ep;
    });
    ga = L2((j5) => {
      "use strict";
      c3();
      j5.__esModule = true;
      j5.isNode = Ti;
      j5.isPseudoElement = ma;
      j5.isPseudoClass = $p;
      j5.isContainer = Wp;
      j5.isNamespace = qp;
      j5.isUniversal = j5.isTag = j5.isString = j5.isSelector = j5.isRoot = j5.isPseudo = j5.isNesting = j5.isIdentifier = j5.isComment = j5.isCombinator = j5.isClassName = j5.isAttribute = void 0;
      var te2 = ue(), pe3, Pp = (pe3 = {}, pe3[te2.ATTRIBUTE] = true, pe3[te2.CLASS] = true, pe3[te2.COMBINATOR] = true, pe3[te2.COMMENT] = true, pe3[te2.ID] = true, pe3[te2.NESTING] = true, pe3[te2.PSEUDO] = true, pe3[te2.ROOT] = true, pe3[te2.SELECTOR] = true, pe3[te2.STRING] = true, pe3[te2.TAG] = true, pe3[te2.UNIVERSAL] = true, pe3);
      function Ti(e2) {
        return typeof e2 == "object" && Pp[e2.type];
      }
      function _e2(e2, t2) {
        return Ti(t2) && t2.type === e2;
      }
      var pa = _e2.bind(null, te2.ATTRIBUTE);
      j5.isAttribute = pa;
      var Ap = _e2.bind(null, te2.CLASS);
      j5.isClassName = Ap;
      var Ip = _e2.bind(null, te2.COMBINATOR);
      j5.isCombinator = Ip;
      var Rp = _e2.bind(null, te2.COMMENT);
      j5.isComment = Rp;
      var Lp = _e2.bind(null, te2.ID);
      j5.isIdentifier = Lp;
      var Cp = _e2.bind(null, te2.NESTING);
      j5.isNesting = Cp;
      var Oi = _e2.bind(null, te2.PSEUDO);
      j5.isPseudo = Oi;
      var Dp = _e2.bind(null, te2.ROOT);
      j5.isRoot = Dp;
      var Fp = _e2.bind(null, te2.SELECTOR);
      j5.isSelector = Fp;
      var Np = _e2.bind(null, te2.STRING);
      j5.isString = Np;
      var ha = _e2.bind(null, te2.TAG);
      j5.isTag = ha;
      var Mp = _e2.bind(null, te2.UNIVERSAL);
      j5.isUniversal = Mp;
      function ma(e2) {
        return Oi(e2) && e2.value && (e2.value.startsWith("::") || e2.value.toLowerCase() === ":before" || e2.value.toLowerCase() === ":after" || e2.value.toLowerCase() === ":first-letter" || e2.value.toLowerCase() === ":first-line");
      }
      function $p(e2) {
        return Oi(e2) && !ma(e2);
      }
      function Wp(e2) {
        return !!(Ti(e2) && e2.walk);
      }
      function qp(e2) {
        return pa(e2) || ha(e2);
      }
    });
    va = L2((Te2) => {
      "use strict";
      c3();
      Te2.__esModule = true;
      var Ei = ue();
      Object.keys(Ei).forEach(function(e2) {
        e2 === "default" || e2 === "__esModule" || e2 in Te2 && Te2[e2] === Ei[e2] || (Te2[e2] = Ei[e2]);
      });
      var Pi = da();
      Object.keys(Pi).forEach(function(e2) {
        e2 === "default" || e2 === "__esModule" || e2 in Te2 && Te2[e2] === Pi[e2] || (Te2[e2] = Pi[e2]);
      });
      var Ai = ga();
      Object.keys(Ai).forEach(function(e2) {
        e2 === "default" || e2 === "__esModule" || e2 in Te2 && Te2[e2] === Ai[e2] || (Te2[e2] = Ai[e2]);
      });
    });
    xa = L2((Yt, ya) => {
      "use strict";
      c3();
      Yt.__esModule = true;
      Yt.default = void 0;
      var Bp = Gp(ca2()), Up = zp(va());
      function ba() {
        if (typeof WeakMap != "function")
          return null;
        var e2 = /* @__PURE__ */ new WeakMap();
        return ba = function() {
          return e2;
        }, e2;
      }
      function zp(e2) {
        if (e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var t2 = ba();
        if (t2 && t2.has(e2))
          return t2.get(e2);
        var n3 = {}, r4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var i3 in e2)
          if (Object.prototype.hasOwnProperty.call(e2, i3)) {
            var s3 = r4 ? Object.getOwnPropertyDescriptor(e2, i3) : null;
            s3 && (s3.get || s3.set) ? Object.defineProperty(n3, i3, s3) : n3[i3] = e2[i3];
          }
        return n3.default = e2, t2 && t2.set(e2, n3), n3;
      }
      function Gp(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      var Ii = function(t2) {
        return new Bp.default(t2);
      };
      Object.assign(Ii, Up);
      delete Ii.__esModule;
      var jp = Ii;
      Yt.default = jp;
      ya.exports = Yt.default;
    });
    wa = L2((Ri) => {
      "use strict";
      c3();
      Object.defineProperty(Ri, "__esModule", { value: true });
      Object.defineProperty(Ri, "default", { enumerable: true, get: () => Vp });
      function Vp(e2) {
        return e2.replace(/\\,/g, "\\2c ");
      }
    });
    Sa = L2((Ug, _a3) => {
      "use strict";
      c3();
      _a3.exports = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
    });
    Ci = L2((Li) => {
      "use strict";
      c3();
      Object.defineProperty(Li, "__esModule", { value: true });
      function Hp(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      Hp(Li, { parseColor: () => Zp, formatColor: () => eh });
      var ka = Yp(Sa());
      function Yp(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      var Xp = /^#([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})?$/i, Qp = /^#([a-f\d])([a-f\d])([a-f\d])([a-f\d])?$/i, Ge2 = /(?:\d+|\d*\.\d+)%?/, Ur = /(?:\s*,\s*|\s+)/, Ta = /\s*[,/]\s*/, je2 = /var\(--(?:[^ )]*?)\)/, Kp = new RegExp(`^(rgb)a?\\(\\s*(${Ge2.source}|${je2.source})(?:${Ur.source}(${Ge2.source}|${je2.source}))?(?:${Ur.source}(${Ge2.source}|${je2.source}))?(?:${Ta.source}(${Ge2.source}|${je2.source}))?\\s*\\)$`), Jp = new RegExp(`^(hsl)a?\\(\\s*((?:${Ge2.source})(?:deg|rad|grad|turn)?|${je2.source})(?:${Ur.source}(${Ge2.source}|${je2.source}))?(?:${Ur.source}(${Ge2.source}|${je2.source}))?(?:${Ta.source}(${Ge2.source}|${je2.source}))?\\s*\\)$`);
      function Zp(e2, { loose: t2 = false } = {}) {
        var n3, r4;
        if (typeof e2 != "string")
          return null;
        if (e2 = e2.trim(), e2 === "transparent")
          return { mode: "rgb", color: ["0", "0", "0"], alpha: "0" };
        if (e2 in ka.default)
          return { mode: "rgb", color: ka.default[e2].map((u4) => u4.toString()) };
        let i3 = e2.replace(Qp, (u4, l3, f4, d5, g4) => ["#", l3, l3, f4, f4, d5, d5, g4 ? g4 + g4 : ""].join("")).match(Xp);
        if (i3 !== null)
          return { mode: "rgb", color: [parseInt(i3[1], 16), parseInt(i3[2], 16), parseInt(i3[3], 16)].map((u4) => u4.toString()), alpha: i3[4] ? (parseInt(i3[4], 16) / 255).toString() : void 0 };
        var s3;
        let o5 = (s3 = e2.match(Kp)) !== null && s3 !== void 0 ? s3 : e2.match(Jp);
        if (o5 === null)
          return null;
        let a3 = [o5[2], o5[3], o5[4]].filter(Boolean).map((u4) => u4.toString());
        return !t2 && a3.length !== 3 || a3.length < 3 && !a3.some((u4) => /^var\(.*?\)$/.test(u4)) ? null : { mode: o5[1], color: a3, alpha: (n3 = o5[5]) === null || n3 === void 0 || (r4 = n3.toString) === null || r4 === void 0 ? void 0 : r4.call(n3) };
      }
      function eh({ mode: e2, color: t2, alpha: n3 }) {
        let r4 = n3 !== void 0;
        return `${e2}(${t2.join(" ")}${r4 ? ` / ${n3}` : ""})`;
      }
    });
    Fi = L2((Di) => {
      "use strict";
      c3();
      Object.defineProperty(Di, "__esModule", { value: true });
      function th(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      th(Di, { withAlphaValue: () => rh, default: () => nh });
      var zr = Ci();
      function rh(e2, t2, n3) {
        if (typeof e2 == "function")
          return e2({ opacityValue: t2 });
        let r4 = (0, zr.parseColor)(e2, { loose: true });
        return r4 === null ? n3 : (0, zr.formatColor)({ ...r4, alpha: t2 });
      }
      function nh({ color: e2, property: t2, variable: n3 }) {
        let r4 = [].concat(t2);
        if (typeof e2 == "function")
          return { [n3]: "1", ...Object.fromEntries(r4.map((s3) => [s3, e2({ opacityVariable: n3, opacityValue: `var(${n3})` })])) };
        let i3 = (0, zr.parseColor)(e2);
        return i3 === null ? Object.fromEntries(r4.map((s3) => [s3, e2])) : i3.alpha !== void 0 ? Object.fromEntries(r4.map((s3) => [s3, e2])) : { [n3]: "1", ...Object.fromEntries(r4.map((s3) => [s3, (0, zr.formatColor)({ ...i3, alpha: `var(${n3})` })])) };
      }
    });
    Ia = L2((Ni) => {
      "use strict";
      c3();
      Object.defineProperty(Ni, "__esModule", { value: true });
      function ih(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      ih(Ni, { pattern: () => sh, withoutCapturing: () => Ea, any: () => Pa, optional: () => ah, zeroOrMore: () => uh, nestedBrackets: () => Aa, escape: () => Ze2 });
      var Oa = /[\\^$.*+?()[\]{}|]/g, oh = RegExp(Oa.source);
      function Xt(e2) {
        return e2 = Array.isArray(e2) ? e2 : [e2], e2 = e2.map((t2) => t2 instanceof RegExp ? t2.source : t2), e2.join("");
      }
      function sh(e2) {
        return new RegExp(Xt(e2), "g");
      }
      function Ea(e2) {
        return new RegExp(`(?:${Xt(e2)})`, "g");
      }
      function Pa(e2) {
        return `(?:${e2.map(Xt).join("|")})`;
      }
      function ah(e2) {
        return `(?:${Xt(e2)})?`;
      }
      function uh(e2) {
        return `(?:${Xt(e2)})*`;
      }
      function Aa(e2, t2, n3 = 1) {
        return Ea([Ze2(e2), /[^\s]*/, n3 === 1 ? `[^${Ze2(e2)}${Ze2(t2)}s]*` : Pa([`[^${Ze2(e2)}${Ze2(t2)}s]*`, Aa(e2, t2, n3 - 1)]), /[^\s]*/, Ze2(t2)]);
      }
      function Ze2(e2) {
        return e2 && oh.test(e2) ? e2.replace(Oa, "\\$&") : e2 || "";
      }
    });
    La = L2((Mi) => {
      "use strict";
      c3();
      Object.defineProperty(Mi, "__esModule", { value: true });
      Object.defineProperty(Mi, "splitAtTopLevelOnly", { enumerable: true, get: () => ch });
      var lh = fh(Ia());
      function Ra(e2) {
        if (typeof WeakMap != "function")
          return null;
        var t2 = /* @__PURE__ */ new WeakMap(), n3 = /* @__PURE__ */ new WeakMap();
        return (Ra = function(r4) {
          return r4 ? n3 : t2;
        })(e2);
      }
      function fh(e2, t2) {
        if (!t2 && e2 && e2.__esModule)
          return e2;
        if (e2 === null || typeof e2 != "object" && typeof e2 != "function")
          return { default: e2 };
        var n3 = Ra(t2);
        if (n3 && n3.has(e2))
          return n3.get(e2);
        var r4 = {}, i3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
        for (var s3 in e2)
          if (s3 !== "default" && Object.prototype.hasOwnProperty.call(e2, s3)) {
            var o5 = i3 ? Object.getOwnPropertyDescriptor(e2, s3) : null;
            o5 && (o5.get || o5.set) ? Object.defineProperty(r4, s3, o5) : r4[s3] = e2[s3];
          }
        return r4.default = e2, n3 && n3.set(e2, r4), r4;
      }
      function* ch(e2, t2) {
        let n3 = new RegExp(`[(){}\\[\\]${lh.escape(t2)}]`, "g"), r4 = 0, i3 = 0, s3 = false, o5 = 0, a3 = 0, u4 = t2.length;
        for (let l3 of e2.matchAll(n3)) {
          let f4 = l3[0] === t2[o5], d5 = o5 === u4 - 1, g4 = f4 && d5;
          l3[0] === "(" && r4++, l3[0] === ")" && r4--, l3[0] === "[" && r4++, l3[0] === "]" && r4--, l3[0] === "{" && r4++, l3[0] === "}" && r4--, f4 && r4 === 0 && (a3 === 0 && (a3 = l3.index), o5++), g4 && r4 === 0 && (s3 = true, yield e2.substring(i3, a3), i3 = a3 + u4), o5 === u4 && (o5 = 0, a3 = 0);
        }
        s3 ? yield e2.substring(i3) : yield e2;
      }
    });
    Da = L2(($i) => {
      "use strict";
      c3();
      Object.defineProperty($i, "__esModule", { value: true });
      function dh(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      dh($i, { parseBoxShadowValue: () => gh, formatBoxShadowValue: () => vh });
      var ph = La(), hh = /* @__PURE__ */ new Set(["inset", "inherit", "initial", "revert", "unset"]), mh = /\ +(?![^(]*\))/g, Ca = /^-?(\d+|\.\d+)(.*?)$/g;
      function gh(e2) {
        return Array.from((0, ph.splitAtTopLevelOnly)(e2, ",")).map((n3) => {
          let r4 = n3.trim(), i3 = { raw: r4 }, s3 = r4.split(mh), o5 = /* @__PURE__ */ new Set();
          for (let a3 of s3)
            Ca.lastIndex = 0, !o5.has("KEYWORD") && hh.has(a3) ? (i3.keyword = a3, o5.add("KEYWORD")) : Ca.test(a3) ? o5.has("X") ? o5.has("Y") ? o5.has("BLUR") ? o5.has("SPREAD") || (i3.spread = a3, o5.add("SPREAD")) : (i3.blur = a3, o5.add("BLUR")) : (i3.y = a3, o5.add("Y")) : (i3.x = a3, o5.add("X")) : i3.color ? (i3.unknown || (i3.unknown = []), i3.unknown.push(a3)) : i3.color = a3;
          return i3.valid = i3.x !== void 0 && i3.y !== void 0, i3;
        });
      }
      function vh(e2) {
        return e2.map((t2) => t2.valid ? [t2.keyword, t2.x, t2.y, t2.blur, t2.spread, t2.color].filter(Boolean).join(" ") : t2.raw).join(", ");
      }
    });
    Ba = L2((qi) => {
      "use strict";
      c3();
      Object.defineProperty(qi, "__esModule", { value: true });
      function bh(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      bh(qi, { normalize: () => Ve2, url: () => Ma, number: () => wh, percentage: () => $a, length: () => Wa, lineWidth: () => kh, shadow: () => Th, color: () => Oh, image: () => Eh, gradient: () => qa, position: () => Ih, familyName: () => Rh, genericName: () => Ch, absoluteSize: () => Fh, relativeSize: () => Mh });
      var yh = Ci(), xh = Da(), Wi = ["min", "max", "clamp", "calc"], Na = /,(?![^(]*\))/g, Gr = /_(?![^(]*\))/g;
      function Ve2(e2, t2 = true) {
        return e2.includes("url(") ? e2.split(/(url\(.*?\))/g).filter(Boolean).map((n3) => /^url\(.*?\)$/.test(n3) ? n3 : Ve2(n3, false)).join("") : (e2 = e2.replace(/([^\\])_+/g, (n3, r4) => r4 + " ".repeat(n3.length - 1)).replace(/^_/g, " ").replace(/\\_/g, "_"), t2 && (e2 = e2.trim()), e2 = e2.replace(/(calc|min|max|clamp)\(.+\)/g, (n3) => n3.replace(/(-?\d*\.?\d(?!\b-.+[,)](?![^+\-/*])\D)(?:%|[a-z]+)?|\))([+\-/*])/g, "$1 $2 ")), e2);
      }
      function Ma(e2) {
        return e2.startsWith("url(");
      }
      function wh(e2) {
        return !isNaN(Number(e2)) || Wi.some((t2) => new RegExp(`^${t2}\\(.+?`).test(e2));
      }
      function $a(e2) {
        return e2.split(Gr).every((t2) => /%$/g.test(t2) || Wi.some((n3) => new RegExp(`^${n3}\\(.+?%`).test(t2)));
      }
      var _h = ["cm", "mm", "Q", "in", "pc", "pt", "px", "em", "ex", "ch", "rem", "lh", "vw", "vh", "vmin", "vmax"], Fa = `(?:${_h.join("|")})`;
      function Wa(e2) {
        return e2.split(Gr).every((t2) => t2 === "0" || new RegExp(`${Fa}$`).test(t2) || Wi.some((n3) => new RegExp(`^${n3}\\(.+?${Fa}`).test(t2)));
      }
      var Sh = /* @__PURE__ */ new Set(["thin", "medium", "thick"]);
      function kh(e2) {
        return Sh.has(e2);
      }
      function Th(e2) {
        let t2 = (0, xh.parseBoxShadowValue)(Ve2(e2));
        for (let n3 of t2)
          if (!n3.valid)
            return false;
        return true;
      }
      function Oh(e2) {
        let t2 = 0;
        return e2.split(Gr).every((r4) => (r4 = Ve2(r4), r4.startsWith("var(") ? true : (0, yh.parseColor)(r4, { loose: true }) !== null ? (t2++, true) : false)) ? t2 > 0 : false;
      }
      function Eh(e2) {
        let t2 = 0;
        return e2.split(Na).every((r4) => (r4 = Ve2(r4), r4.startsWith("var(") ? true : Ma(r4) || qa(r4) || ["element(", "image(", "cross-fade(", "image-set("].some((i3) => r4.startsWith(i3)) ? (t2++, true) : false)) ? t2 > 0 : false;
      }
      var Ph = /* @__PURE__ */ new Set(["linear-gradient", "radial-gradient", "repeating-linear-gradient", "repeating-radial-gradient", "conic-gradient"]);
      function qa(e2) {
        e2 = Ve2(e2);
        for (let t2 of Ph)
          if (e2.startsWith(`${t2}(`))
            return true;
        return false;
      }
      var Ah = /* @__PURE__ */ new Set(["center", "top", "right", "bottom", "left"]);
      function Ih(e2) {
        let t2 = 0;
        return e2.split(Gr).every((r4) => (r4 = Ve2(r4), r4.startsWith("var(") ? true : Ah.has(r4) || Wa(r4) || $a(r4) ? (t2++, true) : false)) ? t2 > 0 : false;
      }
      function Rh(e2) {
        let t2 = 0;
        return e2.split(Na).every((r4) => (r4 = Ve2(r4), r4.startsWith("var(") ? true : r4.includes(" ") && !/(['"])([^"']+)\1/g.test(r4) || /^\d/g.test(r4) ? false : (t2++, true))) ? t2 > 0 : false;
      }
      var Lh = /* @__PURE__ */ new Set(["serif", "sans-serif", "monospace", "cursive", "fantasy", "system-ui", "ui-serif", "ui-sans-serif", "ui-monospace", "ui-rounded", "math", "emoji", "fangsong"]);
      function Ch(e2) {
        return Lh.has(e2);
      }
      var Dh = /* @__PURE__ */ new Set(["xx-small", "x-small", "small", "medium", "large", "x-large", "x-large", "xxx-large"]);
      function Fh(e2) {
        return Dh.has(e2);
      }
      var Nh = /* @__PURE__ */ new Set(["larger", "smaller"]);
      function Mh(e2) {
        return Nh.has(e2);
      }
    });
    Xa = L2((zi) => {
      "use strict";
      c3();
      Object.defineProperty(zi, "__esModule", { value: true });
      function $h(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      $h(zi, { updateAllClasses: () => Bh, asValue: () => Kt, parseColorFormat: () => Bi, asColor: () => Va, asLookupValue: () => Ha, coerceValue: () => jh });
      var Wh = Ui(xa()), qh = Ui(wa()), Ua = Fi(), he2 = Ba(), za = Ui(En());
      function Ui(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function Bh(e2, t2) {
        return (0, Wh.default)((i3) => {
          i3.walkClasses((s3) => {
            let o5 = t2(s3.value);
            s3.value = o5, s3.raws && s3.raws.value && (s3.raws.value = (0, qh.default)(s3.raws.value));
          });
        }).processSync(e2);
      }
      function ja(e2, t2) {
        if (!Qt(e2))
          return;
        let n3 = e2.slice(1, -1);
        if (!!t2(n3))
          return (0, he2.normalize)(n3);
      }
      function Uh(e2, t2 = {}, n3) {
        let r4 = t2[e2];
        if (r4 !== void 0)
          return (0, za.default)(r4);
        if (Qt(e2)) {
          let i3 = ja(e2, n3);
          return i3 === void 0 ? void 0 : (0, za.default)(i3);
        }
      }
      function Kt(e2, t2 = {}, { validate: n3 = () => true } = {}) {
        var r4;
        let i3 = (r4 = t2.values) === null || r4 === void 0 ? void 0 : r4[e2];
        return i3 !== void 0 ? i3 : t2.supportsNegativeValues && e2.startsWith("-") ? Uh(e2.slice(1), t2.values, n3) : ja(e2, n3);
      }
      function Qt(e2) {
        return e2.startsWith("[") && e2.endsWith("]");
      }
      function zh(e2) {
        let t2 = e2.lastIndexOf("/");
        return t2 === -1 || t2 === e2.length - 1 ? [e2] : [e2.slice(0, t2), e2.slice(t2 + 1)];
      }
      function Bi(e2) {
        if (typeof e2 == "string" && e2.includes("<alpha-value>")) {
          let t2 = e2;
          return ({ opacityValue: n3 = 1 }) => t2.replace("<alpha-value>", n3);
        }
        return e2;
      }
      function Va(e2, t2 = {}, { tailwindConfig: n3 = {} } = {}) {
        var r4;
        if (((r4 = t2.values) === null || r4 === void 0 ? void 0 : r4[e2]) !== void 0) {
          var i3;
          return Bi((i3 = t2.values) === null || i3 === void 0 ? void 0 : i3[e2]);
        }
        let [s3, o5] = zh(e2);
        if (o5 !== void 0) {
          var a3, u4, l3, f4;
          let d5 = (f4 = (a3 = t2.values) === null || a3 === void 0 ? void 0 : a3[s3]) !== null && f4 !== void 0 ? f4 : Qt(s3) ? s3.slice(1, -1) : void 0;
          return d5 === void 0 ? void 0 : (d5 = Bi(d5), Qt(o5) ? (0, Ua.withAlphaValue)(d5, o5.slice(1, -1)) : ((u4 = n3.theme) === null || u4 === void 0 || (l3 = u4.opacity) === null || l3 === void 0 ? void 0 : l3[o5]) === void 0 ? void 0 : (0, Ua.withAlphaValue)(d5, n3.theme.opacity[o5]));
        }
        return Kt(e2, t2, { validate: he2.color });
      }
      function Ha(e2, t2 = {}) {
        var n3;
        return (n3 = t2.values) === null || n3 === void 0 ? void 0 : n3[e2];
      }
      function Se2(e2) {
        return (t2, n3) => Kt(t2, n3, { validate: e2 });
      }
      var Ya = { any: Kt, color: Va, url: Se2(he2.url), image: Se2(he2.image), length: Se2(he2.length), percentage: Se2(he2.percentage), position: Se2(he2.position), lookup: Ha, "generic-name": Se2(he2.genericName), "family-name": Se2(he2.familyName), number: Se2(he2.number), "line-width": Se2(he2.lineWidth), "absolute-size": Se2(he2.absoluteSize), "relative-size": Se2(he2.relativeSize), shadow: Se2(he2.shadow) }, Ga = Object.keys(Ya);
      function Gh(e2, t2) {
        let n3 = e2.indexOf(t2);
        return n3 === -1 ? [void 0, e2] : [e2.slice(0, n3), e2.slice(n3 + 1)];
      }
      function jh(e2, t2, n3, r4) {
        if (Qt(t2)) {
          let i3 = t2.slice(1, -1), [s3, o5] = Gh(i3, ":");
          if (!/^[\w-_]+$/g.test(s3))
            o5 = i3;
          else if (s3 !== void 0 && !Ga.includes(s3))
            return [];
          if (o5.length > 0 && Ga.includes(s3))
            return [Kt(`[${o5}]`, n3), s3];
        }
        for (let i3 of [].concat(e2)) {
          let s3 = Ya[i3](t2, n3, { tailwindConfig: r4 });
          if (s3 !== void 0)
            return [s3, i3];
        }
        return [];
      }
    });
    Qa = L2((Gi) => {
      "use strict";
      c3();
      Object.defineProperty(Gi, "__esModule", { value: true });
      Object.defineProperty(Gi, "default", { enumerable: true, get: () => Vh });
      function Vh(e2) {
        return typeof e2 == "function" ? e2({}) : e2;
      }
    });
    tu = L2((Vi) => {
      "use strict";
      c3();
      Object.defineProperty(Vi, "__esModule", { value: true });
      Object.defineProperty(Vi, "default", { enumerable: true, get: () => d0 });
      var Hh = et3(En()), Yh = et3(is()), Xh = et3(os()), Qh = et3(In()), Kh = et3(as()), Za = us(), Ka = ls(), Jh = cs(), Zh = et3(ds()), e0 = ps(), t0 = Xa(), r0 = Fi(), n0 = et3(Qa());
      function et3(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function ft2(e2) {
        return typeof e2 == "function";
      }
      function Jt(e2) {
        return typeof e2 == "object" && e2 !== null;
      }
      function Zt(e2, ...t2) {
        let n3 = t2.pop();
        for (let r4 of t2)
          for (let i3 in r4) {
            let s3 = n3(e2[i3], r4[i3]);
            s3 === void 0 ? Jt(e2[i3]) && Jt(r4[i3]) ? e2[i3] = Zt(e2[i3], r4[i3], n3) : e2[i3] = r4[i3] : e2[i3] = s3;
          }
        return e2;
      }
      var ji = { colors: Kh.default, negative(e2) {
        return Object.keys(e2).filter((t2) => e2[t2] !== "0").reduce((t2, n3) => {
          let r4 = (0, Hh.default)(e2[n3]);
          return r4 !== void 0 && (t2[`-${n3}`] = r4), t2;
        }, {});
      }, breakpoints(e2) {
        return Object.keys(e2).filter((t2) => typeof e2[t2] == "string").reduce((t2, n3) => ({ ...t2, [`screen-${n3}`]: e2[n3] }), {});
      } };
      function i0(e2, ...t2) {
        return ft2(e2) ? e2(...t2) : e2;
      }
      function o0(e2) {
        return e2.reduce((t2, { extend: n3 }) => Zt(t2, n3, (r4, i3) => r4 === void 0 ? [i3] : Array.isArray(r4) ? [i3, ...r4] : [i3, r4]), {});
      }
      function s0(e2) {
        return { ...e2.reduce((t2, n3) => (0, Za.defaults)(t2, n3), {}), extend: o0(e2) };
      }
      function Ja(e2, t2) {
        if (Array.isArray(e2) && Jt(e2[0]))
          return e2.concat(t2);
        if (Array.isArray(t2) && Jt(t2[0]) && Jt(e2))
          return [e2, ...t2];
        if (Array.isArray(t2))
          return t2;
      }
      function a0({ extend: e2, ...t2 }) {
        return Zt(t2, e2, (n3, r4) => !ft2(n3) && !r4.some(ft2) ? Zt({}, n3, ...r4, Ja) : (i3, s3) => Zt({}, ...[n3, ...r4].map((o5) => i0(o5, i3, s3)), Ja));
      }
      function* u0(e2) {
        let t2 = (0, Ka.toPath)(e2);
        if (t2.length === 0 || (yield t2, Array.isArray(e2)))
          return;
        let n3 = /^(.*?)\s*\/\s*([^/]+)$/, r4 = e2.match(n3);
        if (r4 !== null) {
          let [, i3, s3] = r4, o5 = (0, Ka.toPath)(i3);
          o5.alpha = s3, yield o5;
        }
      }
      function l0(e2) {
        let t2 = (n3, r4) => {
          for (let i3 of u0(n3)) {
            let s3 = 0, o5 = e2;
            for (; o5 != null && s3 < i3.length; )
              o5 = o5[i3[s3++]], o5 = ft2(o5) && (i3.alpha === void 0 || s3 <= i3.length - 1) ? o5(t2, ji) : o5;
            if (o5 !== void 0) {
              if (i3.alpha !== void 0) {
                let a3 = (0, t0.parseColorFormat)(o5);
                return (0, r0.withAlphaValue)(a3, i3.alpha, (0, n0.default)(a3));
              }
              return (0, Zh.default)(o5) ? (0, e0.cloneDeep)(o5) : o5;
            }
          }
          return r4;
        };
        return Object.assign(t2, { theme: t2, ...ji }), Object.keys(e2).reduce((n3, r4) => (n3[r4] = ft2(e2[r4]) ? e2[r4](t2, ji) : e2[r4], n3), {});
      }
      function eu(e2) {
        let t2 = [];
        return e2.forEach((n3) => {
          t2 = [...t2, n3];
          var r4;
          let i3 = (r4 = n3 == null ? void 0 : n3.plugins) !== null && r4 !== void 0 ? r4 : [];
          i3.length !== 0 && i3.forEach((s3) => {
            s3.__isOptionsFunction && (s3 = s3());
            var o5;
            t2 = [...t2, ...eu([(o5 = s3 == null ? void 0 : s3.config) !== null && o5 !== void 0 ? o5 : {}])];
          });
        }), t2;
      }
      function f0(e2) {
        return [...e2].reduceRight((n3, r4) => ft2(r4) ? r4({ corePlugins: n3 }) : (0, Xh.default)(r4, n3), Yh.default);
      }
      function c0(e2) {
        return [...e2].reduceRight((n3, r4) => [...n3, ...r4], []);
      }
      function d0(e2) {
        let t2 = [...eu(e2), { prefix: "", important: false, separator: ":", variantOrder: Qh.default.variantOrder }];
        var n3, r4;
        return (0, Jh.normalizeConfig)((0, Za.defaults)({ theme: l0(a0(s0(t2.map((i3) => (n3 = i3 == null ? void 0 : i3.theme) !== null && n3 !== void 0 ? n3 : {})))), corePlugins: f0(t2.map((i3) => i3.corePlugins)), plugins: c0(e2.map((i3) => (r4 = i3 == null ? void 0 : i3.plugins) !== null && r4 !== void 0 ? r4 : [])) }, ...t2));
      }
    });
    ru = {};
    Jr(ru, { default: () => p0 });
    nu = hr(() => {
      c3();
      p0 = { yellow: (e2) => e2 };
    });
    au = L2((Hi) => {
      "use strict";
      c3();
      Object.defineProperty(Hi, "__esModule", { value: true });
      function h0(e2, t2) {
        for (var n3 in t2)
          Object.defineProperty(e2, n3, { enumerable: true, get: t2[n3] });
      }
      h0(Hi, { flagEnabled: () => v0, issueFlagNotices: () => b0, default: () => y0 });
      var m0 = su((nu(), mr(ru))), g0 = su((Ar(), mr(Pr)));
      function su(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      var iu = { optimizeUniversalDefaults: false }, er = { future: ["hoverOnlyWhenSupported", "respectDefaultRingColorOpacity"], experimental: ["optimizeUniversalDefaults", "matchVariant"] };
      function v0(e2, t2) {
        if (er.future.includes(t2)) {
          var n3, r4, i3;
          return e2.future === "all" || ((i3 = (r4 = e2 == null || (n3 = e2.future) === null || n3 === void 0 ? void 0 : n3[t2]) !== null && r4 !== void 0 ? r4 : iu[t2]) !== null && i3 !== void 0 ? i3 : false);
        }
        if (er.experimental.includes(t2)) {
          var s3, o5, a3;
          return e2.experimental === "all" || ((a3 = (o5 = e2 == null || (s3 = e2.experimental) === null || s3 === void 0 ? void 0 : s3[t2]) !== null && o5 !== void 0 ? o5 : iu[t2]) !== null && a3 !== void 0 ? a3 : false);
        }
        return false;
      }
      function ou(e2) {
        if (e2.experimental === "all")
          return er.experimental;
        var t2;
        return Object.keys((t2 = e2 == null ? void 0 : e2.experimental) !== null && t2 !== void 0 ? t2 : {}).filter((n3) => er.experimental.includes(n3) && e2.experimental[n3]);
      }
      function b0(e2) {
        if (process.env.JEST_WORKER_ID === void 0 && ou(e2).length > 0) {
          let t2 = ou(e2).map((n3) => m0.default.yellow(n3)).join(", ");
          g0.default.warn("experimental-flags-enabled", [`You have enabled experimental features: ${t2}`, "Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time."]);
        }
      }
      var y0 = er;
    });
    lu = L2((Yi) => {
      "use strict";
      c3();
      Object.defineProperty(Yi, "__esModule", { value: true });
      Object.defineProperty(Yi, "default", { enumerable: true, get: () => uu });
      var x0 = _0(In()), w0 = au();
      function _0(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function uu(e2) {
        var t2;
        let n3 = ((t2 = e2 == null ? void 0 : e2.presets) !== null && t2 !== void 0 ? t2 : [x0.default]).slice().reverse().flatMap((s3) => uu(typeof s3 == "function" ? s3() : s3)), r4 = { respectDefaultRingColorOpacity: { theme: { ringColor: { DEFAULT: "#3b82f67f" } } } }, i3 = Object.keys(r4).filter((s3) => (0, w0.flagEnabled)(e2, s3)).map((s3) => r4[s3]);
        return [e2, ...i3, ...n3];
      }
    });
    cu = L2((Xi) => {
      "use strict";
      c3();
      Object.defineProperty(Xi, "__esModule", { value: true });
      Object.defineProperty(Xi, "default", { enumerable: true, get: () => T0 });
      var S0 = fu(tu()), k0 = fu(lu());
      function fu(e2) {
        return e2 && e2.__esModule ? e2 : { default: e2 };
      }
      function T0(...e2) {
        let [, ...t2] = (0, k0.default)(e2[0]);
        return (0, S0.default)([...e2, ...t2]);
      }
    });
    pu = L2((tv, du) => {
      c3();
      var Qi = cu();
      du.exports = (Qi.__esModule ? Qi : { default: Qi }).default;
    });
    c3();
    c3();
    c3();
    c3();
    c3();
    c3();
    mt = (e2, t2) => () => (t2 || e2((t2 = { exports: {} }).exports, t2), t2.exports);
    Ju = mt((e2, t2) => {
      t2.exports = ["em", "ex", "ch", "rem", "vh", "vw", "vmin", "vmax", "px", "mm", "cm", "in", "pt", "pc", "mozmm"];
    });
    Zu = mt((e2, t2) => {
      t2.exports = ["deg", "grad", "rad", "turn"];
    });
    el = mt((e2, t2) => {
      t2.exports = ["dpi", "dpcm", "dppx"];
    });
    tl = mt((e2, t2) => {
      t2.exports = ["Hz", "kHz"];
    });
    rl = mt((e2, t2) => {
      t2.exports = ["s", "ms"];
    });
    nl = Ju();
    Oo = Zu();
    Eo = el();
    Po = tl();
    Ao = rl();
    en.prototype.valueOf = function() {
      return this.value;
    };
    en.prototype.toString = function() {
      return this.value + (this.unit || "");
    };
    ol = [].concat(Oo, Po, nl, Eo, Ao);
    al = Object.assign(vr(Oo, "angle"), vr(Po, "frequency"), vr(Eo, "resolution"), vr(Ao, "time"));
    sn = [32, 160, 4961, 65792, 65793, 4153, 4241, 10].map((e2) => String.fromCodePoint(e2));
    Do = { accentHeight: "accent-height", alignmentBaseline: "alignment-baseline", arabicForm: "arabic-form", baselineShift: "baseline-shift", capHeight: "cap-height", clipPath: "clip-path", clipRule: "clip-rule", colorInterpolation: "color-interpolation", colorInterpolationFilters: "color-interpolation-filters", colorProfile: "color-profile", colorRendering: "color-rendering", dominantBaseline: "dominant-baseline", enableBackground: "enable-background", fillOpacity: "fill-opacity", fillRule: "fill-rule", floodColor: "flood-color", floodOpacity: "flood-opacity", fontFamily: "font-family", fontSize: "font-size", fontSizeAdjust: "font-size-adjust", fontStretch: "font-stretch", fontStyle: "font-style", fontVariant: "font-variant", fontWeight: "font-weight", glyphName: "glyph-name", glyphOrientationHorizontal: "glyph-orientation-horizontal", glyphOrientationVertical: "glyph-orientation-vertical", horizAdvX: "horiz-adv-x", horizOriginX: "horiz-origin-x", imageRendering: "image-rendering", letterSpacing: "letter-spacing", lightingColor: "lighting-color", markerEnd: "marker-end", markerMid: "marker-mid", markerStart: "marker-start", overlinePosition: "overline-position", overlineThickness: "overline-thickness", paintOrder: "paint-order", panose1: "panose-1", pointerEvents: "pointer-events", renderingIntent: "rendering-intent", shapeRendering: "shape-rendering", stopColor: "stop-color", stopOpacity: "stop-opacity", strikethroughPosition: "strikethrough-position", strikethroughThickness: "strikethrough-thickness", strokeDasharray: "stroke-dasharray", strokeDashoffset: "stroke-dashoffset", strokeLinecap: "stroke-linecap", strokeLinejoin: "stroke-linejoin", strokeMiterlimit: "stroke-miterlimit", strokeOpacity: "stroke-opacity", strokeWidth: "stroke-width", textAnchor: "text-anchor", textDecoration: "text-decoration", textRendering: "text-rendering", underlinePosition: "underline-position", underlineThickness: "underline-thickness", unicodeBidi: "unicode-bidi", unicodeRange: "unicode-range", unitsPerEm: "units-per-em", vAlphabetic: "v-alphabetic", vHanging: "v-hanging", vIdeographic: "v-ideographic", vMathematical: "v-mathematical", vectorEffect: "vector-effect", vertAdvY: "vert-adv-y", vertOriginX: "vert-origin-x", vertOriginY: "vert-origin-y", wordSpacing: "word-spacing", writingMode: "writing-mode", xHeight: "x-height", xlinkActuate: "xlink:actuate", xlinkArcrole: "xlink:arcrole", xlinkHref: "xlink:href", xlinkRole: "xlink:role", xlinkShow: "xlink:show", xlinkTitle: "xlink:title", xlinkType: "xlink:type", xmlBase: "xml:base", xmlLang: "xml:lang", xmlSpace: "xml:space", xmlnsXlink: "xmlns:xlink" };
    fl2 = /[\r\n%#()<>?[\\\]^`{|}"']/g;
    c3();
    c3();
    ye = "flex";
    $o = { p: { display: ye, marginTop: "1em", marginBottom: "1em" }, div: { display: ye }, blockquote: { display: ye, marginTop: "1em", marginBottom: "1em", marginLeft: 40, marginRight: 40 }, center: { display: ye, textAlign: "center" }, hr: { display: ye, marginTop: "0.5em", marginBottom: "0.5em", marginLeft: "auto", marginRight: "auto", borderWidth: 1, borderStyle: "solid" }, h1: { display: ye, fontSize: "2em", marginTop: "0.67em", marginBottom: "0.67em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, h2: { display: ye, fontSize: "1.5em", marginTop: "0.83em", marginBottom: "0.83em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, h3: { display: ye, fontSize: "1.17em", marginTop: "1em", marginBottom: "1em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, h4: { display: ye, marginTop: "1.33em", marginBottom: "1.33em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, h5: { display: ye, fontSize: "0.83em", marginTop: "1.67em", marginBottom: "1.67em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, h6: { display: ye, fontSize: "0.67em", marginTop: "2.33em", marginBottom: "2.33em", marginLeft: 0, marginRight: 0, fontWeight: "bold" }, u: { textDecoration: "underline" }, strong: { fontWeight: "bold" }, b: { fontWeight: "bold" }, i: { fontStyle: "italic" }, em: { fontStyle: "italic" }, code: { fontFamily: "monospace" }, kbd: { fontFamily: "monospace" }, pre: { display: ye, fontFamily: "monospace", whiteSpace: "pre", marginTop: "1em", marginBottom: "1em" }, mark: { backgroundColor: "yellow", color: "black" }, big: { fontSize: "larger" }, small: { fontSize: "smaller" }, s: { textDecoration: "line-through" } };
    c3();
    cl = /* @__PURE__ */ new Set(["color", "font", "fontFamily", "fontSize", "fontStyle", "fontWeight", "letterSpacing", "lineHeight", "textAlign", "textTransform", "textShadowOffset", "textShadowColor", "textShadowRadius", "textDecorationLine", "textDecorationStyle", "textDecorationColor", "whiteSpace", "transform", "wordBreak", "opacity", "filter", "_viewportWidth", "_viewportHeight", "_inheritedClipPathId", "_inheritedMaskId", "_inheritedBackgroundClipTextPath"]);
    c3();
    c3();
    vl = /* @__PURE__ */ new Set(["flex", "flexGrow", "flexShrink", "flexBasis", "fontWeight", "lineHeight", "opacity", "scale", "scaleX", "scaleY"]);
    bl = /* @__PURE__ */ new Set(["lineHeight"]);
    qo = /rgb\((\d+)\s+(\d+)\s+(\d+)\s*\/\s*([\.\d]+)\)/;
    c3();
    kl = "image/avif";
    Tl = "image/webp";
    yr = "image/png";
    xr = "image/jpeg";
    wr = "image/gif";
    dn = "image/svg+xml";
    fn = Co(100);
    cn = /* @__PURE__ */ new Map();
    Ol = [yr, xr, wr, dn];
    c3();
    c3();
    c3();
    Vo = [1, 0, 0, 1, 0, 0];
    c3();
    c3();
    c3();
    c3();
    c3();
    vn = vn || {};
    Qo = { type: "directional", value: "bottom" };
    vn.parse = /* @__PURE__ */ function() {
      var e2 = { linearGradient: /^(\-(webkit|o|ms|moz)\-)?(linear\-gradient)/i, repeatingLinearGradient: /^(\-(webkit|o|ms|moz)\-)?(repeating\-linear\-gradient)/i, radialGradient: /^(\-(webkit|o|ms|moz)\-)?(radial\-gradient)/i, repeatingRadialGradient: /^(\-(webkit|o|ms|moz)\-)?(repeating\-radial\-gradient)/i, sideOrCorner: /^to (left (top|bottom)|right (top|bottom)|top (left|right)|bottom (left|right)|left|right|top|bottom)/i, extentKeywords: /^(closest\-side|closest\-corner|farthest\-side|farthest\-corner|contain|cover)/, positionKeywords: /^(left|center|right|top|bottom)/i, pixelValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))px/, percentageValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))\%/, emValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))em/, angleValue: /^(-?(([0-9]*\.[0-9]+)|([0-9]+\.?)))deg/, zeroValue: /[0]/, startCall: /^\(/, endCall: /^\)/, comma: /^,/, hexColor: /^\#([0-9a-fA-F]+)/, literalColor: /^([a-zA-Z]+)/, rgbColor: /^rgb/i, rgbaColor: /^rgba/i, number: /^(([0-9]*\.[0-9]+)|([0-9]+\.?))/ }, t2 = "";
      function n3(I4) {
        var q3 = new Error(t2 + ": " + I4);
        throw q3.source = t2, q3;
      }
      function r4() {
        var I4 = i3();
        return t2.length > 0 && n3("Invalid input not EOF"), I4;
      }
      function i3() {
        return E2(s3);
      }
      function s3() {
        return o5("linear-gradient", e2.linearGradient, u4, Qo) || o5("repeating-linear-gradient", e2.repeatingLinearGradient, u4, Qo) || o5("radial-gradient", e2.radialGradient, g4) || o5("repeating-radial-gradient", e2.repeatingRadialGradient, g4);
      }
      function o5(I4, q3, Y2, N5) {
        return a3(q3, function(Oe2) {
          var Ne2 = Y2();
          return Ne2 ? oe2(e2.comma) || n3("Missing comma before color stops") : Ne2 = N5, { type: I4, orientation: Ne2, colorStops: E2(T4) };
        });
      }
      function a3(I4, q3) {
        var Y2 = oe2(I4);
        if (Y2) {
          oe2(e2.startCall) || n3("Missing (");
          var N5 = q3(Y2);
          return oe2(e2.endCall) || n3("Missing )"), N5;
        }
      }
      function u4() {
        return l3() || f4() || d5();
      }
      function l3() {
        return G2("directional", e2.sideOrCorner, 1);
      }
      function f4() {
        return G2("angular", e2.angleValue, 1);
      }
      function d5() {
        return G2("directional", e2.zeroValue, 0);
      }
      function g4() {
        var I4, q3 = h2(), Y2;
        return q3 && (I4 = [], I4.push(q3), Y2 = t2, oe2(e2.comma) && (q3 = h2(), q3 ? I4.push(q3) : t2 = Y2)), I4;
      }
      function h2() {
        var I4 = p6() || v4();
        if (I4)
          I4.at = b5();
        else {
          var q3 = _6();
          if (q3) {
            I4 = q3;
            var Y2 = b5();
            Y2 && (I4.at = Y2);
          } else {
            var Y2 = b5();
            if (Y2)
              I4 = { type: "shape", value: "ellipse", at: Y2 };
            else {
              var N5 = y3();
              N5 && (I4 = { type: "default-radial", at: N5 });
            }
          }
        }
        return I4;
      }
      function p6() {
        var I4 = G2("shape", /^(circle)/i, 0);
        return I4 && (I4.style = re2() || _6()), I4;
      }
      function v4() {
        var I4 = G2("shape", /^(ellipse)/i, 0);
        return I4 && (I4.style = H3() || _6()), I4;
      }
      function _6() {
        return G2("extent-keyword", e2.extentKeywords, 1);
      }
      function b5() {
        if (G2("position", /^at/, 0)) {
          var I4 = y3();
          return I4 || n3("Missing positioning value"), I4;
        }
      }
      function y3() {
        var I4 = S5();
        if (I4.x || I4.y)
          return { type: "position", value: I4 };
      }
      function S5() {
        return { x: H3(), y: H3() };
      }
      function E2(I4) {
        var q3 = I4(), Y2 = [];
        if (q3)
          for (Y2.push(q3); oe2(e2.comma); )
            q3 = I4(), q3 ? Y2.push(q3) : n3("One extra comma");
        return Y2;
      }
      function T4() {
        var I4 = D4();
        return I4 || n3("Expected color definition"), I4.length = H3(), I4;
      }
      function D4() {
        return C5() || z5() || W2() || F3();
      }
      function F3() {
        return G2("literal", e2.literalColor, 0);
      }
      function C5() {
        return G2("hex", e2.hexColor, 1);
      }
      function W2() {
        return a3(e2.rgbColor, function() {
          return { type: "rgb", value: E2(X2) };
        });
      }
      function z5() {
        return a3(e2.rgbaColor, function() {
          return { type: "rgba", value: E2(X2) };
        });
      }
      function X2() {
        return oe2(e2.number)[1];
      }
      function H3() {
        return G2("%", e2.percentageValue, 1) || M4() || re2();
      }
      function M4() {
        return G2("position-keyword", e2.positionKeywords, 1);
      }
      function re2() {
        return G2("px", e2.pixelValue, 1) || G2("em", e2.emValue, 1);
      }
      function G2(I4, q3, Y2) {
        var N5 = oe2(q3);
        if (N5)
          return { type: I4, value: N5[Y2] };
      }
      function oe2(I4) {
        var q3, Y2;
        return Y2 = /^[\n\r\t\s]+/.exec(t2), Y2 && ge2(Y2[0].length), q3 = I4.exec(t2), q3 && ge2(q3[0].length), q3;
      }
      function ge2(I4) {
        t2 = t2.substr(I4);
      }
      return function(I4) {
        return t2 = I4.toString(), r4();
      };
    }();
    bn = vn;
    c3();
    Or = (e2) => e2 && e2[0] !== 0 && e2[1] !== 0;
    c3();
    c3();
    c3();
    c3();
    Ml = new RegExp(emoji_regex_default(), "");
    Sn = { emoji: Ml, symbol: /\p{Symbol}/u, math: /\p{Math}/u };
    _t = { "ja-JP": /\p{scx=Hira}|\p{scx=Kana}|\p{scx=Han}|[\u3000]|[\uFF00-\uFFEF]/u, "ko-KR": /\p{scx=Hangul}/u, "zh-CN": /\p{scx=Han}/u, "zh-TW": /\p{scx=Han}/u, "zh-HK": /\p{scx=Han}/u, "th-TH": /\p{scx=Thai}/u, "bn-IN": /\p{scx=Bengali}/u, "ar-AR": /\p{scx=Arabic}/u, "ta-IN": /\p{scx=Tamil}/u, "ml-IN": /\p{scx=Malayalam}/u, "he-IL": /\p{scx=Hebrew}/u, "te-IN": /\p{scx=Telugu}/u, devanagari: /\p{scx=Devanagari}/u, kannada: /\p{scx=Kannada}/u };
    Er = Object.keys({ ..._t, ...Sn });
    c3();
    ns = "unknown";
    kt = class {
      constructor(t2) {
        this.fonts = /* @__PURE__ */ new Map();
        this.addFonts(t2);
      }
      get({ name: t2, weight: n3, style: r4 }) {
        if (!this.fonts.has(t2))
          return null;
        n3 === "normal" && (n3 = 400), n3 === "bold" && (n3 = 700), typeof n3 == "string" && (n3 = Number.parseInt(n3, 10));
        let i3 = [...this.fonts.get(t2)], s3 = i3[0];
        for (let o5 = 1; o5 < i3.length; o5++) {
          let [, a3, u4] = s3, [, l3, f4] = i3[o5];
          $l(n3, r4, [a3, u4], [l3, f4]) > 0 && (s3 = i3[o5]);
        }
        return s3[0];
      }
      addFonts(t2) {
        for (let n3 of t2) {
          let { name: r4, data: i3, lang: s3 } = n3;
          if (s3 && !es(s3))
            throw new Error(`Invalid value for props \`lang\`: "${s3}". The value must be one of the following: ${Er.join(", ")}.`);
          let o5 = s3 ?? ns, a3 = opentype_module_default.parse("buffer" in i3 ? i3.buffer.slice(i3.byteOffset, i3.byteOffset + i3.byteLength) : i3, { lowMemory: true }), u4 = a3.charToGlyphIndex;
          a3.charToGlyphIndex = (f4) => {
            let d5 = u4.call(a3, f4);
            return d5 === 0 && a3._trackBrokenChars && a3._trackBrokenChars.push(f4), d5;
          }, this.defaultFont || (this.defaultFont = a3);
          let l3 = `${r4.toLowerCase()}_${o5}`;
          this.fonts.has(l3) || this.fonts.set(l3, []), this.fonts.get(l3).push([a3, n3.weight, n3.style]);
        }
      }
      getEngine(t2 = 16, n3 = 1.2, { fontFamily: r4, fontWeight: i3 = 400, fontStyle: s3 = "normal" }, o5) {
        if (!this.fonts.size)
          throw new Error("No fonts are loaded. At least one font is required to calculate the layout.");
        r4 = (Array.isArray(r4) ? r4 : [r4]).map((y3) => y3.toLowerCase());
        let a3 = [];
        r4.forEach((y3) => {
          let S5 = this.get({ name: y3, weight: i3, style: s3 });
          if (S5) {
            a3.push(S5);
            return;
          }
          let E2 = this.get({ name: y3 + "_unknown", weight: i3, style: s3 });
          if (E2) {
            a3.push(E2);
            return;
          }
        });
        let u4 = Array.from(this.fonts.keys()), l3 = [], f4 = [], d5 = [];
        for (let y3 of u4)
          if (!r4.includes(y3))
            if (o5) {
              let S5 = Wl(y3);
              S5 ? S5 === o5 ? l3.push(this.get({ name: y3, weight: i3, style: s3 })) : f4.push(this.get({ name: y3, weight: i3, style: s3 })) : d5.push(this.get({ name: y3, weight: i3, style: s3 }));
            } else
              d5.push(this.get({ name: y3, weight: i3, style: s3 }));
        let g4 = /* @__PURE__ */ new Map(), h2 = (y3, S5 = true) => {
          let E2 = y3.charCodeAt(0);
          if (g4.has(E2))
            return g4.get(E2);
          let T4 = [...a3, ...d5, ...l3, ...S5 ? f4 : []], D4 = T4.find((F3, C5) => !!F3.charToGlyphIndex(y3) || S5 && C5 === T4.length - 1);
          return D4 && g4.set(E2, D4), D4;
        }, p6 = (y3, S5 = false) => {
          var T4, D4;
          return ((S5 ? (D4 = (T4 = y3.tables) == null ? void 0 : T4.os2) == null ? void 0 : D4.sTypoAscender : 0) || y3.ascender) / y3.unitsPerEm * t2;
        }, v4 = (y3, S5 = false) => {
          var T4, D4;
          return ((S5 ? (D4 = (T4 = y3.tables) == null ? void 0 : T4.os2) == null ? void 0 : D4.sTypoDescender : 0) || y3.descender) / y3.unitsPerEm * t2;
        }, _6 = (y3) => h2(y3, false), b5 = { has: (y3) => {
          if (y3 === `
`)
            return true;
          let S5 = _6(y3);
          return S5 ? (S5._trackBrokenChars = [], S5.stringToGlyphs(y3), S5._trackBrokenChars.length ? (S5._trackBrokenChars = void 0, false) : true) : false;
        }, baseline: (y3, S5 = typeof y3 > "u" ? a3[0] : h2(y3)) => {
          let E2 = p6(S5, true), T4 = v4(S5, true), D4 = b5.height(y3, S5), { yMax: F3, yMin: C5 } = S5.tables.head, W2 = E2 - T4, z5 = (F3 / (F3 - C5) - 1) * W2;
          return D4 * ((1.2 / n3 + 1) / 2) + z5;
        }, height: (y3, S5 = typeof y3 > "u" ? a3[0] : h2(y3)) => (p6(S5) - v4(S5)) * (n3 / 1.2), measure: (y3, S5) => this.measure(h2, y3, S5), getSVG: (y3, S5) => this.getSVG(h2, y3, S5) };
        return b5;
      }
      patchFontFallbackResolver(t2, n3) {
        let r4 = [];
        t2._trackBrokenChars = r4;
        let i3 = t2.stringToGlyphs;
        return t2.stringToGlyphs = (s3, ...o5) => {
          let a3 = i3.call(t2, s3, ...o5);
          for (let u4 = 0; u4 < a3.length; u4++)
            if (a3[u4].unicode === void 0) {
              let l3 = r4.shift(), f4 = n3(l3);
              if (f4 !== t2) {
                let d5 = f4.charToGlyph(l3), g4 = t2.unitsPerEm / f4.unitsPerEm, h2 = new opentype_module_default.Path();
                h2.unitsPerEm = t2.unitsPerEm, h2.commands = d5.path.commands.map((v4) => {
                  let _6 = { ...v4 };
                  for (let b5 in _6)
                    typeof _6[b5] == "number" && (_6[b5] *= g4);
                  return _6;
                });
                let p6 = new opentype_module_default.Glyph({ ...d5, advanceWidth: d5.advanceWidth * g4, xMin: d5.xMin * g4, xMax: d5.xMax * g4, yMin: d5.yMin * g4, yMax: d5.yMax * g4, path: h2 });
                a3[u4] = p6;
              }
            }
          return a3;
        }, () => {
          t2.stringToGlyphs = i3, t2._trackBrokenChars = void 0;
        };
      }
      measure(t2, n3, { fontSize: r4, letterSpacing: i3 = 0 }) {
        let s3 = t2(n3), o5 = this.patchFontFallbackResolver(s3, t2);
        try {
          return s3.getAdvanceWidth(n3, r4, { letterSpacing: i3 / r4 });
        } finally {
          o5();
        }
      }
      getSVG(t2, n3, { fontSize: r4, top: i3, left: s3, letterSpacing: o5 = 0 }) {
        let a3 = t2(n3), u4 = this.patchFontFallbackResolver(a3, t2);
        try {
          return r4 === 0 ? "" : a3.getPath(n3.replace(/\n/g, ""), s3, i3, r4, { letterSpacing: o5 / r4 }).toPathData(1);
        } finally {
          u4();
        }
      }
    };
    c3();
    c3();
    c3();
    Nu = Xu(pu());
    c3();
    c3();
    c3();
    c3();
    O0 = ["ios", "android", "windows", "macos", "web"];
    E0 = ["portrait", "landscape"];
    (function(e2) {
      e2.fontSize = "fontSize", e2.lineHeight = "lineHeight";
    })(hu || (hu = {}));
    (function(e2) {
      e2.rem = "rem", e2.em = "em", e2.px = "px", e2.percent = "%", e2.vw = "vw", e2.vh = "vh", e2.none = "<no-css-unit>";
    })(V || (V = {}));
    P0 = { t: "Top", tr: "TopRight", tl: "TopLeft", b: "Bottom", br: "BottomRight", bl: "BottomLeft", l: "Left", r: "Right", x: "Horizontal", y: "Vertical" };
    me = typeof process > "u" || ((Zi = process == null ? void 0 : process.env) === null || Zi === void 0 ? void 0 : Zi.JEST_WORKER_ID) === void 0 ? A0 : I0;
    R0 = [["aspect-square", m3({ aspectRatio: 1 })], ["aspect-video", m3({ aspectRatio: 16 / 9 })], ["items-center", m3({ alignItems: "center" })], ["items-start", m3({ alignItems: "flex-start" })], ["items-end", m3({ alignItems: "flex-end" })], ["items-baseline", m3({ alignItems: "baseline" })], ["items-stretch", m3({ alignItems: "stretch" })], ["justify-start", m3({ justifyContent: "flex-start" })], ["justify-end", m3({ justifyContent: "flex-end" })], ["justify-center", m3({ justifyContent: "center" })], ["justify-between", m3({ justifyContent: "space-between" })], ["justify-around", m3({ justifyContent: "space-around" })], ["justify-evenly", m3({ justifyContent: "space-evenly" })], ["content-start", m3({ alignContent: "flex-start" })], ["content-end", m3({ alignContent: "flex-end" })], ["content-between", m3({ alignContent: "space-between" })], ["content-around", m3({ alignContent: "space-around" })], ["content-stretch", m3({ alignContent: "stretch" })], ["content-center", m3({ alignContent: "center" })], ["self-auto", m3({ alignSelf: "auto" })], ["self-start", m3({ alignSelf: "flex-start" })], ["self-end", m3({ alignSelf: "flex-end" })], ["self-center", m3({ alignSelf: "center" })], ["self-stretch", m3({ alignSelf: "stretch" })], ["self-baseline", m3({ alignSelf: "baseline" })], ["direction-inherit", m3({ direction: "inherit" })], ["direction-ltr", m3({ direction: "ltr" })], ["direction-rtl", m3({ direction: "rtl" })], ["hidden", m3({ display: "none" })], ["flex", m3({ display: "flex" })], ["flex-row", m3({ flexDirection: "row" })], ["flex-row-reverse", m3({ flexDirection: "row-reverse" })], ["flex-col", m3({ flexDirection: "column" })], ["flex-col-reverse", m3({ flexDirection: "column-reverse" })], ["flex-wrap", m3({ flexWrap: "wrap" })], ["flex-wrap-reverse", m3({ flexWrap: "wrap-reverse" })], ["flex-nowrap", m3({ flexWrap: "nowrap" })], ["flex-auto", m3({ flexGrow: 1, flexShrink: 1, flexBasis: "auto" })], ["flex-initial", m3({ flexGrow: 0, flexShrink: 1, flexBasis: "auto" })], ["flex-none", m3({ flexGrow: 0, flexShrink: 0, flexBasis: "auto" })], ["overflow-hidden", m3({ overflow: "hidden" })], ["overflow-visible", m3({ overflow: "visible" })], ["overflow-scroll", m3({ overflow: "scroll" })], ["absolute", m3({ position: "absolute" })], ["relative", m3({ position: "relative" })], ["italic", m3({ fontStyle: "italic" })], ["not-italic", m3({ fontStyle: "normal" })], ["oldstyle-nums", tr("oldstyle-nums")], ["small-caps", tr("small-caps")], ["lining-nums", tr("lining-nums")], ["tabular-nums", tr("tabular-nums")], ["proportional-nums", tr("proportional-nums")], ["font-thin", m3({ fontWeight: "100" })], ["font-100", m3({ fontWeight: "100" })], ["font-extralight", m3({ fontWeight: "200" })], ["font-200", m3({ fontWeight: "200" })], ["font-light", m3({ fontWeight: "300" })], ["font-300", m3({ fontWeight: "300" })], ["font-normal", m3({ fontWeight: "normal" })], ["font-400", m3({ fontWeight: "400" })], ["font-medium", m3({ fontWeight: "500" })], ["font-500", m3({ fontWeight: "500" })], ["font-semibold", m3({ fontWeight: "600" })], ["font-600", m3({ fontWeight: "600" })], ["font-bold", m3({ fontWeight: "bold" })], ["font-700", m3({ fontWeight: "700" })], ["font-extrabold", m3({ fontWeight: "800" })], ["font-800", m3({ fontWeight: "800" })], ["font-black", m3({ fontWeight: "900" })], ["font-900", m3({ fontWeight: "900" })], ["include-font-padding", m3({ includeFontPadding: true })], ["remove-font-padding", m3({ includeFontPadding: false })], ["max-w-none", m3({ maxWidth: "99999%" })], ["text-left", m3({ textAlign: "left" })], ["text-center", m3({ textAlign: "center" })], ["text-right", m3({ textAlign: "right" })], ["text-justify", m3({ textAlign: "justify" })], ["text-auto", m3({ textAlign: "auto" })], ["underline", m3({ textDecorationLine: "underline" })], ["line-through", m3({ textDecorationLine: "line-through" })], ["no-underline", m3({ textDecorationLine: "none" })], ["uppercase", m3({ textTransform: "uppercase" })], ["lowercase", m3({ textTransform: "lowercase" })], ["capitalize", m3({ textTransform: "capitalize" })], ["normal-case", m3({ textTransform: "none" })], ["w-auto", m3({ width: "auto" })], ["h-auto", m3({ height: "auto" })], ["shadow-sm", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowRadius: 1, shadowOpacity: 0.025, elevation: 1 })], ["shadow", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowRadius: 1, shadowOpacity: 0.075, elevation: 2 })], ["shadow-md", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowRadius: 3, shadowOpacity: 0.125, elevation: 3 })], ["shadow-lg", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowOpacity: 0.15, shadowRadius: 8, elevation: 8 })], ["shadow-xl", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowOpacity: 0.19, shadowRadius: 20, elevation: 12 })], ["shadow-2xl", m3({ shadowOffset: { width: 1, height: 1 }, shadowColor: "#000", shadowOpacity: 0.25, shadowRadius: 30, elevation: 16 })], ["shadow-none", m3({ shadowOffset: { width: 0, height: 0 }, shadowColor: "#000", shadowRadius: 0, shadowOpacity: 0, elevation: 0 })]];
    no = R0;
    rr = class {
      constructor(t2) {
        this.ir = new Map(no), this.styles = /* @__PURE__ */ new Map(), this.prefixes = /* @__PURE__ */ new Map(), this.ir = new Map([...no, ...t2 ?? []]);
      }
      getStyle(t2) {
        return this.styles.get(t2);
      }
      setStyle(t2, n3) {
        this.styles.set(t2, n3);
      }
      getIr(t2) {
        return this.ir.get(t2);
      }
      setIr(t2, n3) {
        this.ir.set(t2, n3);
      }
      getPrefixMatch(t2) {
        return this.prefixes.get(t2);
      }
      setPrefixMatch(t2, n3) {
        this.prefixes.set(t2, n3);
      }
    };
    c3();
    c3();
    c3();
    c3();
    c3();
    c3();
    c3();
    Vr = { bg: { opacity: "__opacity_bg", color: "backgroundColor" }, text: { opacity: "__opacity_text", color: "color" }, border: { opacity: "__opacity_border", color: "borderColor" }, borderTop: { opacity: "__opacity_border", color: "borderTopColor" }, borderBottom: { opacity: "__opacity_border", color: "borderBottomColor" }, borderLeft: { opacity: "__opacity_border", color: "borderLeftColor" }, borderRight: { opacity: "__opacity_border", color: "borderRightColor" }, shadow: { opacity: "__opacity_shadow", color: "shadowColor" }, tint: { opacity: "__opacity_tint", color: "tintColor" } };
    C0 = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
    D0 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i;
    c3();
    c3();
    c3();
    c3();
    c3();
    c3();
    c3();
    dt = class {
      constructor(t2, n3 = {}, r4, i3, s3) {
        var o5, a3, u4, l3, f4, d5;
        this.config = n3, this.cache = r4, this.position = 0, this.isNull = false, this.isNegative = false, this.context = {}, this.context.device = i3;
        let g4 = t2.trim().split(":"), h2 = [];
        g4.length === 1 ? this.string = t2 : (this.string = (o5 = g4.pop()) !== null && o5 !== void 0 ? o5 : "", h2 = g4), this.char = this.string[0];
        let p6 = ao((a3 = this.config.theme) === null || a3 === void 0 ? void 0 : a3.screens);
        for (let v4 of h2)
          if (p6[v4]) {
            let _6 = (u4 = p6[v4]) === null || u4 === void 0 ? void 0 : u4[2];
            _6 !== void 0 && (this.order = ((l3 = this.order) !== null && l3 !== void 0 ? l3 : 0) + _6);
            let b5 = (f4 = i3.windowDimensions) === null || f4 === void 0 ? void 0 : f4.width;
            if (b5) {
              let [y3, S5] = (d5 = p6[v4]) !== null && d5 !== void 0 ? d5 : [0, 0];
              (b5 <= y3 || b5 > S5) && (this.isNull = true);
            } else
              this.isNull = true;
          } else
            mu(v4) ? this.isNull = v4 !== s3 : gu(v4) ? i3.windowDimensions ? (i3.windowDimensions.width > i3.windowDimensions.height ? "landscape" : "portrait") !== v4 ? this.isNull = true : this.incrementOrder() : this.isNull = true : v4 === "retina" ? i3.pixelDensity === 2 ? this.incrementOrder() : this.isNull = true : v4 === "dark" ? i3.colorScheme !== "dark" ? this.isNull = true : this.incrementOrder() : this.handlePossibleArbitraryBreakpointPrefix(v4) || (this.isNull = true);
      }
      parse() {
        if (this.isNull)
          return { kind: "null" };
        let t2 = this.cache.getIr(this.rest);
        if (t2)
          return t2;
        this.parseIsNegative();
        let n3 = this.parseUtility();
        return n3 ? this.order !== void 0 ? { kind: "ordered", order: this.order, styleIr: n3 } : n3 : { kind: "null" };
      }
      parseUtility() {
        var t2, n3, r4, i3, s3;
        let o5 = this.config.theme, a3 = null;
        switch (this.char) {
          case "m":
          case "p": {
            let u4 = this.peekSlice(1, 3).match(/^(t|b|r|l|x|y)?-/);
            if (u4) {
              let l3 = this.char === "m" ? "margin" : "padding";
              this.advance(((n3 = (t2 = u4[0]) === null || t2 === void 0 ? void 0 : t2.length) !== null && n3 !== void 0 ? n3 : 0) + 1);
              let f4 = to(u4[1]), d5 = so(l3, f4, this.isNegative, this.rest, (r4 = this.config.theme) === null || r4 === void 0 ? void 0 : r4[l3]);
              if (d5)
                return d5;
            }
          }
        }
        if (this.consumePeeked("h-") && (a3 = lo("height", this.rest, this.context, o5 == null ? void 0 : o5.height), a3) || this.consumePeeked("w-") && (a3 = lo("width", this.rest, this.context, o5 == null ? void 0 : o5.width), a3) || this.consumePeeked("min-w-") && (a3 = or("minWidth", this.rest, this.context, o5 == null ? void 0 : o5.minWidth), a3) || this.consumePeeked("min-h-") && (a3 = or("minHeight", this.rest, this.context, o5 == null ? void 0 : o5.minHeight), a3) || this.consumePeeked("max-w-") && (a3 = or("maxWidth", this.rest, this.context, o5 == null ? void 0 : o5.maxWidth), a3) || this.consumePeeked("max-h-") && (a3 = or("maxHeight", this.rest, this.context, o5 == null ? void 0 : o5.maxHeight), a3) || this.consumePeeked("leading-") && (a3 = oo(this.rest, o5 == null ? void 0 : o5.lineHeight), a3) || this.consumePeeked("text-") && (a3 = io(this.rest, o5 == null ? void 0 : o5.fontSize, this.context), a3 || (a3 = rt("text", this.rest, o5 == null ? void 0 : o5.textColor), a3) || this.consumePeeked("opacity-") && (a3 = nr("text", this.rest), a3)) || this.consumePeeked("font-") && (a3 = uo(this.rest, o5 == null ? void 0 : o5.fontFamily), a3) || this.consumePeeked("aspect-") && (this.consumePeeked("ratio-") && me("`aspect-ratio-{ratio}` is deprecated, use `aspect-{ratio}` instead"), a3 = Fe("aspectRatio", this.rest, { fractions: true }), a3) || this.consumePeeked("tint-") && (a3 = rt("tint", this.rest, o5 == null ? void 0 : o5.colors), a3) || this.consumePeeked("bg-") && (a3 = rt("bg", this.rest, o5 == null ? void 0 : o5.backgroundColor), a3 || this.consumePeeked("opacity-") && (a3 = nr("bg", this.rest), a3)) || this.consumePeeked("border") && (a3 = Ou(this.rest, o5), a3 || this.consumePeeked("-opacity-") && (a3 = nr("border", this.rest), a3)) || this.consumePeeked("rounded") && (a3 = Eu(this.rest, o5 == null ? void 0 : o5.borderRadius), a3) || this.consumePeeked("bottom-") && (a3 = ct("bottom", this.rest, this.isNegative, o5 == null ? void 0 : o5.inset), a3) || this.consumePeeked("top-") && (a3 = ct("top", this.rest, this.isNegative, o5 == null ? void 0 : o5.inset), a3) || this.consumePeeked("left-") && (a3 = ct("left", this.rest, this.isNegative, o5 == null ? void 0 : o5.inset), a3) || this.consumePeeked("right-") && (a3 = ct("right", this.rest, this.isNegative, o5 == null ? void 0 : o5.inset), a3) || this.consumePeeked("inset-") && (a3 = ct("inset", this.rest, this.isNegative, o5 == null ? void 0 : o5.inset), a3) || this.consumePeeked("flex-") && (this.consumePeeked("grow") ? a3 = ir("Grow", this.rest, o5 == null ? void 0 : o5.flexGrow) : this.consumePeeked("shrink") ? a3 = ir("Shrink", this.rest, o5 == null ? void 0 : o5.flexShrink) : a3 = Au(this.rest, o5 == null ? void 0 : o5.flex), a3) || this.consumePeeked("grow") && (a3 = ir("Grow", this.rest, o5 == null ? void 0 : o5.flexGrow), a3) || this.consumePeeked("shrink") && (a3 = ir("Shrink", this.rest, o5 == null ? void 0 : o5.flexShrink), a3) || this.consumePeeked("shadow-color-opacity-") && (a3 = nr("shadow", this.rest), a3) || this.consumePeeked("shadow-opacity-") && (a3 = Lu(this.rest), a3) || this.consumePeeked("shadow-offset-") && (a3 = Cu(this.rest), a3) || this.consumePeeked("shadow-radius-") && (a3 = ke("shadowRadius", this.rest), a3) || this.consumePeeked("shadow-") && (a3 = rt("shadow", this.rest, o5 == null ? void 0 : o5.colors), a3))
          return a3;
        if (this.consumePeeked("elevation-")) {
          let u4 = parseInt(this.rest, 10);
          if (!Number.isNaN(u4))
            return m3({ elevation: u4 });
        }
        if (this.consumePeeked("opacity-") && (a3 = Ru(this.rest, o5 == null ? void 0 : o5.opacity), a3) || this.consumePeeked("tracking-") && (a3 = Iu(this.rest, this.isNegative, o5 == null ? void 0 : o5.letterSpacing), a3))
          return a3;
        if (this.consumePeeked("z-")) {
          let u4 = Number((s3 = (i3 = o5 == null ? void 0 : o5.zIndex) === null || i3 === void 0 ? void 0 : i3[this.rest]) !== null && s3 !== void 0 ? s3 : this.rest);
          if (!Number.isNaN(u4))
            return m3({ zIndex: u4 });
        }
        return me(`\`${this.rest}\` unknown or invalid utility`), null;
      }
      handlePossibleArbitraryBreakpointPrefix(t2) {
        var n3;
        if (t2[0] !== "m")
          return false;
        let r4 = t2.match(/^(min|max)-(w|h)-\[([^\]]+)\]$/);
        if (!r4)
          return false;
        if (!(!((n3 = this.context.device) === null || n3 === void 0) && n3.windowDimensions))
          return this.isNull = true, true;
        let i3 = this.context.device.windowDimensions, [, s3 = "", o5 = "", a3 = ""] = r4, u4 = o5 === "w" ? i3.width : i3.height, l3 = ie(a3, this.context);
        if (l3 === null)
          return this.isNull = true, true;
        let [f4, d5] = l3;
        return d5 !== "px" && (this.isNull = true), (s3 === "min" ? u4 >= f4 : u4 <= f4) ? this.incrementOrder() : this.isNull = true, true;
      }
      advance(t2 = 1) {
        this.position += t2, this.char = this.string[this.position];
      }
      get rest() {
        return this.peekSlice(0, this.string.length);
      }
      peekSlice(t2, n3) {
        return this.string.slice(this.position + t2, this.position + n3);
      }
      consumePeeked(t2) {
        return this.peekSlice(0, t2.length) === t2 ? (this.advance(t2.length), true) : false;
      }
      parseIsNegative() {
        this.char === "-" && (this.advance(), this.isNegative = true, this.context.isNegative = true);
      }
      incrementOrder() {
        var t2;
        this.order = ((t2 = this.order) !== null && t2 !== void 0 ? t2 : 0) + 1;
      }
    };
    c3();
    c3();
    W0 = { addComponents: Ie, addBase: Ie, addVariant: Ie, e: Ie, prefix: Ie, theme: Ie, variants: Ie, config: Ie, corePlugins: Ie, matchUtilities: Ie, postcss: null };
    U0 = { handler: ({ addUtilities: e2 }) => {
      e2({ "shadow-sm": { boxShadow: "0 1px 2px 0 rgb(0 0 0 / 0.05)" }, shadow: { boxShadow: "0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)" }, "shadow-md": { boxShadow: "0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1)" }, "shadow-lg": { boxShadow: "0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1)" }, "shadow-xl": { boxShadow: "0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1)" }, "shadow-2xl": { boxShadow: "0 25px 50px -12px rgb(0 0 0 / 0.25)" }, "shadow-inner": { boxShadow: "inset 0 2px 4px 0 rgb(0 0 0 / 0.05)" }, "shadow-none": { boxShadow: "0 0 #0000" } });
    } };
    ho = /* @__PURE__ */ new WeakMap();
  }
});

// ../../node_modules/ultrahtml/dist/selector.js
function M2(t2, n3) {
  let e2 = 0, r4 = "";
  for (; n3 < t2.length; n3++) {
    let s3 = t2[n3];
    switch (s3) {
      case "(":
        ++e2;
        break;
      case ")":
        --e2;
    }
    if (r4 += s3, e2 === 0)
      return r4;
  }
  return r4;
}
function O4(t2, n3 = w4) {
  if (!t2)
    return [];
  let e2 = [t2];
  for (let [s3, o5] of Object.entries(n3))
    for (let i3 = 0; i3 < e2.length; i3++) {
      let c4 = e2[i3];
      if (typeof c4 != "string")
        continue;
      o5.lastIndex = 0;
      let a3 = o5.exec(c4);
      if (!a3)
        continue;
      let u4 = a3.index - 1, l3 = [], h2 = a3[0], m4 = c4.slice(0, u4 + 1);
      m4 && l3.push(m4), l3.push({ ...a3.groups, type: s3, content: h2 });
      let y3 = c4.slice(u4 + h2.length + 1);
      y3 && l3.push(y3), e2.splice(i3, 1, ...l3);
    }
  let r4 = 0;
  for (let s3 of e2)
    switch (typeof s3) {
      case "string":
        throw new Error(`Unexpected sequence ${s3} found at index ${r4}`);
      case "object":
        r4 += s3.content.length, s3.pos = [r4 - s3.content.length, r4], v3.has(s3.type) && (s3.content = s3.content.trim() || " ");
    }
  return e2;
}
function U(t2, n3 = w4) {
  if ((t2 = t2.trim()) === "")
    return [];
  let e2 = [];
  t2 = (t2 = t2.replace(P2, (o5, i3) => (e2.push({ value: o5, offset: i3 }), "\uE000".repeat(o5.length)))).replace($3, (o5, i3, c4, a3) => (e2.push({ value: o5, offset: a3 }), `${i3}${"\uE001".repeat(c4.length)}${i3}`));
  {
    let o5, i3 = 0;
    for (; (o5 = t2.indexOf("(", i3)) > -1; ) {
      let c4 = M2(t2, o5);
      e2.push({ value: c4, offset: o5 }), t2 = `${t2.substring(0, o5)}(${"\xB6".repeat(c4.length - 2)})${t2.substring(o5 + c4.length)}`, i3 = o5 + c4.length;
    }
  }
  let r4 = O4(t2, n3), s3 = /* @__PURE__ */ new Set();
  for (let o5 of e2.reverse())
    for (let i3 of r4) {
      let { offset: c4, value: a3 } = o5;
      if (!(i3.pos[0] <= c4 && c4 + a3.length <= i3.pos[1]))
        continue;
      let { content: u4 } = i3, l3 = c4 - i3.pos[0];
      i3.content = u4.slice(0, l3) + a3 + u4.slice(l3 + a3.length), i3.content !== u4 && s3.add(i3);
    }
  for (let o5 of s3) {
    let i3 = T2(o5.type);
    if (!i3)
      throw new Error(`Unknown token type: ${o5.type}`);
    i3.lastIndex = 0;
    let c4 = i3.exec(o5.content);
    if (!c4)
      throw new Error(`Unable to parse content for ${o5.type}: ${o5.content}`);
    Object.assign(o5, c4.groups);
  }
  return r4;
}
function g3(t2, { list: n3 = true } = {}) {
  if (n3 && t2.find((e2) => e2.type === "comma")) {
    let e2 = [], r4 = [];
    for (let s3 = 0; s3 < t2.length; s3++)
      if (t2[s3].type === "comma") {
        if (r4.length === 0)
          throw new Error("Incorrect comma at " + s3);
        e2.push(g3(r4, { list: false })), r4.length = 0;
      } else
        r4.push(t2[s3]);
    if (r4.length === 0)
      throw new Error("Trailing comma");
    return e2.push(g3(r4, { list: false })), { type: "list", list: e2 };
  }
  for (let e2 = t2.length - 1; e2 >= 0; e2--) {
    let r4 = t2[e2];
    if (r4.type === "combinator") {
      let s3 = t2.slice(0, e2), o5 = t2.slice(e2 + 1);
      return { type: "complex", combinator: r4.content, left: g3(s3), right: g3(o5) };
    }
  }
  switch (t2.length) {
    case 0:
      throw new Error("Could not build AST.");
    case 1:
      return t2[0];
    default:
      return { type: "compound", list: [...t2] };
  }
}
function* p4(t2, n3) {
  switch (t2.type) {
    case "list":
      for (let e2 of t2.list)
        yield* p4(e2, t2);
      break;
    case "complex":
      yield* p4(t2.left, t2), yield* p4(t2.right, t2);
      break;
    case "compound":
      yield* t2.list.map((e2) => [e2, t2]);
      break;
    default:
      yield [t2, n3];
  }
}
function b4(t2, { recursive: n3 = true, list: e2 = true } = {}) {
  let r4 = U(t2);
  if (!r4)
    return;
  let s3 = g3(r4, { list: e2 });
  if (!n3)
    return s3;
  for (let [o5] of p4(s3)) {
    if (o5.type !== "pseudo-class" || !o5.argument || !A2.has(o5.name))
      continue;
    let i3 = o5.argument, c4 = k4[o5.name];
    if (c4) {
      let a3 = c4.exec(i3);
      if (!a3)
        continue;
      Object.assign(o5, a3.groups), i3 = a3.groups.subtree;
    }
    i3 && Object.assign(o5, { subtree: b4(i3, { recursive: true, list: true }) });
  }
  return s3;
}
function x3(t2, n3) {
  return n3 = n3 || Math.max(...t2) + 1, t2[0] * (n3 << 1) + t2[1] * n3 + t2[2];
}
function N3(t2) {
  let n3 = t2;
  if (typeof n3 == "string" && (n3 = b4(n3, { recursive: true })), !n3)
    return [];
  if (n3.type === "list" && "list" in n3) {
    let r4 = 10, s3 = n3.list.map((i3) => {
      let c4 = N3(i3);
      return r4 = Math.max(r4, ...N3(i3)), c4;
    }), o5 = s3.map((i3) => x3(i3, r4));
    return s3[o5.indexOf(Math.max(...o5))];
  }
  let e2 = [0, 0, 0];
  for (let [r4] of p4(n3))
    switch (r4.type) {
      case "id":
        e2[0]++;
        break;
      case "class":
      case "attribute":
        e2[1]++;
        break;
      case "pseudo-element":
      case "type":
        e2[2]++;
        break;
      case "pseudo-class":
        if (r4.name === "where")
          break;
        if (!A2.has(r4.name) || !r4.subtree) {
          e2[1]++;
          break;
        }
        N3(r4.subtree).forEach((s3, o5) => e2[o5] += s3), r4.name !== "nth-child" && r4.name !== "nth-last-child" || e2[1]++;
    }
  return e2;
}
function G(t2) {
  return x3(N3(t2), 10);
}
function R3(t2, n3) {
  let e2 = d3(n3);
  return C3(t2, (r4, s3, o5) => {
    let i3 = e2(r4, s3, o5);
    return i3 || false;
  });
}
function C3(t2, n3, e2 = { single: false }) {
  let r4 = [];
  return z(t2, (s3, o5, i3) => {
    if (!(s3 && s3.type !== k) && n3(s3, o5, i3)) {
      if (e2.single)
        throw s3;
      r4.push(s3);
    }
  }), r4;
}
var w4, v3, A2, E, k4, T2, $3, P2, L3, I3, W, D2, q, z3, S3, d3;
var init_selector = __esm({
  "../../node_modules/ultrahtml/dist/selector.js"() {
    init_dist();
    w4 = { attribute: /\[\s*(?:(?<namespace>\*|[-\w\P{ASCII}]*)\|)?(?<name>[-\w\P{ASCII}]+)\s*(?:(?<operator>\W?=)\s*(?<value>.+?)\s*(\s(?<caseSensitive>[iIsS]))?\s*)?\]/gu, id: /#(?<name>[-\w\P{ASCII}]+)/gu, class: /\.(?<name>[-\w\P{ASCII}]+)/gu, comma: /\s*,\s*/g, combinator: /\s*[\s>+~]\s*/g, "pseudo-element": /::(?<name>[-\w\P{ASCII}]+)(?:\((?<argument>¶*)\))?/gu, "pseudo-class": /:(?<name>[-\w\P{ASCII}]+)(?:\((?<argument>¶*)\))?/gu, universal: /(?:(?<namespace>\*|[-\w\P{ASCII}]*)\|)?\*/gu, type: /(?:(?<namespace>\*|[-\w\P{ASCII}]*)\|)?(?<name>[-\w\P{ASCII}]+)/gu };
    v3 = /* @__PURE__ */ new Set(["combinator", "comma"]);
    A2 = /* @__PURE__ */ new Set(["not", "is", "where", "has", "matches", "-moz-any", "-webkit-any", "nth-child", "nth-last-child"]);
    E = /(?<index>[\dn+-]+)\s+of\s+(?<subtree>.+)/;
    k4 = { "nth-child": E, "nth-last-child": E };
    T2 = (t2) => {
      switch (t2) {
        case "pseudo-element":
        case "pseudo-class":
          return new RegExp(w4[t2].source.replace("(?<argument>\xB6*)", "(?<argument>.*)"), "gu");
        default:
          return w4[t2];
      }
    };
    $3 = /(['"])([^\\\n]+?)\1/g;
    P2 = /\\./g;
    L3 = (t2) => {
      let { operator: n3 = "=" } = t2;
      switch (n3) {
        case "=":
          return (e2, r4) => e2 === r4;
        case "~=":
          return (e2, r4) => e2.split(/\s+/g).includes(r4);
        case "|=":
          return (e2, r4) => e2.startsWith(r4 + "-");
        case "*=":
          return (e2, r4) => e2.indexOf(r4) > -1;
        case "$=":
          return (e2, r4) => e2.endsWith(r4);
        case "^=":
          return (e2, r4) => e2.startsWith(r4);
      }
      return (e2, r4) => false;
    };
    I3 = (t2, n3) => n3 == null ? void 0 : n3.children.filter((e2) => e2.type === k).findIndex((e2) => e2 === t2);
    W = (t2) => {
      let [n3, e2 = "1", r4 = "0"] = /^\s*(?:(-?(?:\d+)?)n)?\s*\+?\s*(\d+)?\s*$/gm.exec(t2) ?? [];
      e2.length === 0 && (e2 = "1");
      let s3 = Number.parseInt(e2 === "-" ? "-1" : e2), o5 = Number.parseInt(r4);
      return (i3) => s3 * i3 + o5;
    };
    D2 = (t2, n3) => (n3 == null ? void 0 : n3.children.filter((e2) => e2.type === k).pop()) === t2;
    q = (t2, n3) => (n3 == null ? void 0 : n3.children.filter((e2) => e2.type === k).shift()) === t2;
    z3 = (t2, n3) => (n3 == null ? void 0 : n3.children.filter((e2) => e2.type === k).length) === 1;
    S3 = (t2) => {
      switch (t2.type) {
        case "type":
          return (n3) => t2.content === "*" ? true : n3.name === t2.name;
        case "class":
          return (n3) => {
            var e2, r4;
            return (r4 = (e2 = n3.attributes) == null ? void 0 : e2.class) == null ? void 0 : r4.split(/\s+/g).includes(t2.name);
          };
        case "id":
          return (n3) => {
            var e2;
            return ((e2 = n3.attributes) == null ? void 0 : e2.id) === t2.name;
          };
        case "pseudo-class":
          switch (t2.name) {
            case "global":
              return (...n3) => d3(b4(t2.argument))(...n3);
            case "not":
              return (...n3) => !S3(t2.subtree)(...n3);
            case "is":
              return (...n3) => d3(t2.subtree)(...n3);
            case "where":
              return (...n3) => d3(t2.subtree)(...n3);
            case "root":
              return (n3, e2) => n3.type === k && n3.name === "html";
            case "empty":
              return (n3) => n3.type === k && (n3.children.length === 0 || n3.children.every((e2) => e2.type === j && e2.value.trim() === ""));
            case "first-child":
              return (n3, e2) => q(n3, e2);
            case "last-child":
              return (n3, e2) => D2(n3, e2);
            case "only-child":
              return (n3, e2) => z3(n3, e2);
            case "nth-child":
              return (n3, e2) => {
                let r4 = I3(n3, e2) + 1;
                if (Number.isNaN(Number(t2.argument)))
                  switch (t2.argument) {
                    case "odd":
                      return Math.abs(r4 % 2) == 1;
                    case "even":
                      return r4 % 2 === 0;
                    default: {
                      if (!t2.argument)
                        throw new Error("Unsupported empty nth-child selector!");
                      let s3 = W(t2.argument), o5 = e2 == null ? void 0 : e2.children.filter((c4) => c4.type === k), i3 = I3(n3, e2) + 1;
                      for (let c4 = 0; c4 < o5.length; c4++) {
                        let a3 = s3(c4);
                        if (a3 > o5.length)
                          return false;
                        if (a3 === i3)
                          return true;
                      }
                      return false;
                    }
                  }
                return r4 === Number(t2.argument);
              };
            default:
              throw new Error(`Unhandled pseudo-class: ${t2.name}!`);
          }
        case "attribute":
          return (n3) => {
            let { caseSensitive: e2, name: r4, value: s3 } = t2;
            if (!n3.attributes)
              return false;
            let o5 = Object.entries(n3.attributes);
            for (let [i3, c4] of o5)
              if (e2 === "i" && (s3 = r4.toLowerCase(), c4 = i3.toLowerCase()), i3 === r4) {
                if (!s3)
                  return true;
                if ((s3[0] === '"' || s3[0] === "'") && s3[0] === s3[s3.length - 1] && (s3 = JSON.parse(s3)), s3)
                  return L3(t2)(c4, s3);
              }
            return false;
          };
        case "universal":
          return (n3) => true;
        default:
          throw new Error(`Unhandled selector: ${t2.type}`);
      }
    };
    d3 = (t2) => {
      let n3 = typeof t2 == "string" ? b4(t2) : t2;
      switch (n3 == null ? void 0 : n3.type) {
        case "list": {
          let e2 = n3.list.map((r4) => S3(r4));
          return (r4, s3, o5) => {
            for (let i3 of e2)
              if (i3(r4, s3))
                return true;
            return false;
          };
        }
        case "compound": {
          let e2 = n3.list.map((r4) => S3(r4));
          return (r4, s3, o5) => {
            for (let i3 of e2)
              if (!i3(r4, s3))
                return false;
            return true;
          };
        }
        case "complex": {
          let { left: e2, right: r4, combinator: s3 } = n3, o5 = d3(e2), i3 = d3(r4), c4 = /* @__PURE__ */ new WeakSet();
          return (a3, u4, l3 = 0) => {
            if ((o5(a3) || u4 && c4.has(u4) && s3 === " ") && c4.add(a3), !i3(a3))
              return false;
            switch (s3) {
              case " ":
              case ">":
                return u4 ? c4.has(u4) : false;
              case "~": {
                if (!u4)
                  return false;
                for (let h2 of u4.children.slice(0, l3))
                  if (c4.has(h2))
                    return true;
                return false;
              }
              case "+": {
                if (!u4)
                  return false;
                let h2 = u4.children.slice(0, l3).filter((y3) => y3.type === k);
                if (h2.length === 0)
                  return false;
                let m4 = h2[h2.length - 1];
                if (!m4)
                  return false;
                if (c4.has(m4))
                  return true;
              }
              default:
                return false;
            }
          };
        }
        default:
          return S3(n3);
      }
    };
  }
});

// ../../node_modules/ultrahtml/dist/transformers/inline.js
function Z(e2) {
  return e2.trim();
}
function U2(e2, r4, t2) {
  return e2.replace(r4, t2);
}
function Ne(e2, r4, t2) {
  return e2.indexOf(r4, t2);
}
function M3(e2, r4) {
  return e2.charCodeAt(r4) | 0;
}
function L4(e2, r4, t2) {
  return e2.slice(r4, t2);
}
function C4(e2) {
  return e2.length;
}
function ke2(e2) {
  return e2.length;
}
function F2(e2, r4) {
  return r4.push(e2), e2;
}
function ee(e2, r4, t2, o5, n3, i3, a3, s3) {
  return { value: e2, root: r4, parent: t2, type: o5, props: n3, children: i3, line: J, column: D3, length: a3, return: "", siblings: s3 };
}
function Re() {
  return T3;
}
function Ce2() {
  return T3 = N4 > 0 ? M3(B, --N4) : 0, D3--, T3 === 10 && (D3 = 1, J--), T3;
}
function k5() {
  return T3 = N4 < Oe ? M3(B, N4++) : 0, D3++, T3 === 10 && (D3 = 1, J++), T3;
}
function A3() {
  return M3(B, N4);
}
function Y() {
  return N4;
}
function te(e2, r4) {
  return L4(B, e2, r4);
}
function ce2(e2) {
  switch (e2) {
    case 0:
    case 9:
    case 10:
    case 13:
    case 32:
      return 5;
    case 33:
    case 43:
    case 44:
    case 47:
    case 62:
    case 64:
    case 126:
    case 59:
    case 123:
    case 125:
      return 4;
    case 58:
      return 3;
    case 34:
    case 39:
    case 40:
    case 91:
      return 2;
    case 41:
    case 93:
      return 1;
  }
  return 0;
}
function Ae2(e2) {
  return J = D3 = 1, Oe = C4(B = e2), N4 = 0, [];
}
function Se(e2) {
  return B = "", e2;
}
function re(e2) {
  return Z(te(N4 - 1, de2(e2 === 91 ? e2 + 2 : e2 === 40 ? e2 + 1 : e2)));
}
function _e(e2) {
  for (; (T3 = A3()) && T3 < 33; )
    k5();
  return ce2(e2) > 2 || ce2(T3) > 3 ? "" : " ";
}
function Me(e2, r4) {
  for (; --r4 && k5() && !(T3 < 48 || T3 > 102 || T3 > 57 && T3 < 65 || T3 > 70 && T3 < 97); )
    ;
  return te(e2, Y() + (r4 < 6 && A3() == 32 && k5() == 32));
}
function de2(e2) {
  for (; k5(); )
    switch (T3) {
      case e2:
        return N4;
      case 34:
      case 39:
        e2 !== 34 && e2 !== 39 && de2(T3);
        break;
      case 40:
        e2 === 41 && de2(e2);
        break;
      case 92:
        k5();
        break;
    }
  return N4;
}
function Le2(e2, r4) {
  for (; k5() && e2 + T3 !== 47 + 10; )
    if (e2 + T3 === 42 + 42 && A3() === 47)
      break;
  return "/*" + te(r4, N4 - 1) + "*" + q2(e2 === 47 ? e2 : k5());
}
function Ve(e2) {
  for (; !ce2(A3()); )
    k5();
  return te(e2, N4);
}
function fe(e2) {
  return Se(ne("", null, null, null, [""], e2 = Ae2(e2), 0, [0], e2));
}
function ne(e2, r4, t2, o5, n3, i3, a3, s3, l3) {
  for (var p6 = 0, u4 = 0, c4 = a3, d5 = 0, f4 = 0, m4 = 0, v4 = 1, b5 = 1, P3 = 1, y3 = 0, I4 = "", E2 = n3, x4 = i3, g4 = o5, h2 = I4; b5; )
    switch (m4 = y3, y3 = k5()) {
      case 40:
        if (m4 != 108 && M3(h2, c4 - 1) == 58) {
          Ne(h2 += U2(re(y3), "&", "&\f"), "&\f", pe2(p6 ? s3[p6 - 1] : 0)) != -1 && (P3 = -1);
          break;
        }
      case 34:
      case 39:
      case 91:
        h2 += re(y3);
        break;
      case 9:
      case 10:
      case 13:
      case 32:
        h2 += _e(m4);
        break;
      case 92:
        h2 += Me(Y() - 1, 7);
        continue;
      case 47:
        switch (A3()) {
          case 42:
          case 47:
            F2(vt2(Le2(k5(), Y()), r4, t2, l3), l3);
            break;
          default:
            h2 += "/";
        }
        break;
      case 123 * v4:
        s3[p6++] = C4(h2) * P3;
      case 125 * v4:
      case 59:
      case 0:
        switch (y3) {
          case 0:
          case 125:
            b5 = 0;
          case 59 + u4:
            P3 == -1 && (h2 = U2(h2, /\f/g, "")), f4 > 0 && C4(h2) - c4 && F2(f4 > 32 ? De(h2 + ";", o5, t2, c4 - 1, l3) : De(U2(h2, " ", "") + ";", o5, t2, c4 - 2, l3), l3);
            break;
          case 59:
            h2 += ";";
          default:
            if (F2(g4 = Fe2(h2, r4, t2, p6, u4, n3, s3, I4, E2 = [], x4 = [], c4, i3), i3), y3 === 123)
              if (u4 === 0)
                ne(h2, r4, g4, g4, E2, i3, c4, s3, x4);
              else
                switch (d5 === 99 && M3(h2, 3) === 110 ? 100 : d5) {
                  case 100:
                  case 108:
                  case 109:
                  case 115:
                    ne(e2, g4, g4, o5 && F2(Fe2(e2, g4, g4, 0, 0, n3, s3, I4, n3, E2 = [], c4, x4), x4), n3, x4, c4, s3, o5 ? E2 : x4);
                    break;
                  default:
                    ne(h2, g4, g4, g4, [""], x4, 0, s3, x4);
                }
        }
        p6 = u4 = f4 = 0, v4 = P3 = 1, I4 = h2 = "", c4 = a3;
        break;
      case 58:
        c4 = 1 + C4(h2), f4 = m4;
      default:
        if (v4 < 1) {
          if (y3 == 123)
            --v4;
          else if (y3 == 125 && v4++ == 0 && Ce2() == 125)
            continue;
        }
        switch (h2 += q2(y3), y3 * v4) {
          case 38:
            P3 = u4 > 0 ? 1 : (h2 += "\f", -1);
            break;
          case 44:
            s3[p6++] = (C4(h2) - 1) * P3, P3 = 1;
            break;
          case 64:
            A3() === 45 && (h2 += re(k5())), d5 = A3(), u4 = c4 = C4(I4 = h2 += Ve(Y())), y3++;
            break;
          case 45:
            m4 === 45 && C4(h2) == 2 && (v4 = 0);
        }
    }
  return i3;
}
function Fe2(e2, r4, t2, o5, n3, i3, a3, s3, l3, p6, u4, c4) {
  for (var d5 = n3 - 1, f4 = n3 === 0 ? i3 : [""], m4 = ke2(f4), v4 = 0, b5 = 0, P3 = 0; v4 < o5; ++v4)
    for (var y3 = 0, I4 = L4(e2, d5 + 1, d5 = pe2(b5 = a3[v4])), E2 = e2; y3 < m4; ++y3)
      (E2 = Z(b5 > 0 ? f4[y3] + " " + I4 : U2(I4, /&\f/g, f4[y3]))) && (l3[P3++] = E2);
  return ee(e2, r4, t2, n3 === 0 ? Ie2 : s3, l3, p6, u4, c4);
}
function vt2(e2, r4, t2, o5) {
  return ee(e2, r4, t2, Pe, q2(Re()), L4(e2, 2, -2), 0, o5);
}
function De(e2, r4, t2, o5, n3) {
  return ee(e2, r4, t2, we, L4(e2, 0, o5), L4(e2, o5 + 1, -1), o5, n3);
}
function st2(e2) {
  if (typeof e2[1] == "string")
    throw new Error("expected range");
  let { bounds: r4 } = Q[e2[0]], [t2, o5, n3, i3] = e2[1], a3 = r4[1], s3 = r4[0], l3 = r4[2], p6 = r4[3], u4 = n3 > l3 || n3 === l3 && !(p6 && !i3);
  return o5 < a3 || o5 === a3 && !(s3 && !t2) ? u4 ? "{false}" : [[!i3, n3, r4[2], r4[3]]] : u4 ? [[r4[0], r4[1], o5, !t2]] : [[r4[0], r4[1], o5, !t2], [!i3, n3, r4[2], r4[3]]];
}
function _t2(e2) {
  let { useObjectSyntax: r4 = false } = e2 ?? {};
  return (t2) => {
    let o5 = r4 ? [":where([style]) {}"] : [], n3 = [];
    z(t2, (u4, c4) => {
      u4.type === k && u4.name === "style" && (o5.push(u4.children.map((d5) => d5.type === j ? d5.value : "").join("")), n3.push(() => {
        c4.children = c4.children.filter((d5) => d5 !== u4);
      }));
    });
    for (let u4 of n3)
      u4();
    let i3 = o5.join(`
`), a3 = fe(i3), s3 = /* @__PURE__ */ new Map();
    function l3(u4) {
      if (u4.type === "rule") {
        let c4 = Object.fromEntries(u4.children.map((d5) => [d5.props, d5.children]));
        for (let d5 of u4.props) {
          let f4 = Object.assign(s3.get(d5) ?? {}, c4);
          s3.set(d5, f4);
        }
      } else if (u4.type === "@media" && (e2 == null ? void 0 : e2.env)) {
        let c4 = Mt(e2.env), f4 = (Array.isArray(u4.props) ? u4.props : [u4.props]).map((m4) => ft(m4));
        for (let m4 of f4)
          if (mt2(m4, c4)) {
            for (let v4 of u4.children)
              l3(v4);
            return;
          }
      }
    }
    for (let u4 of a3)
      l3(u4);
    let p6 = /* @__PURE__ */ new Map();
    for (let [u4, c4] of Array.from(s3).sort(([d5], [f4]) => {
      let m4 = G(d5), v4 = G(f4);
      return m4 > v4 ? 1 : v4 > m4 ? -1 : 0;
    })) {
      let d5 = R3(t2, u4);
      for (let f4 of d5) {
        let m4 = p6.get(f4) ?? {};
        p6.set(f4, Object.assign(m4, c4));
      }
    }
    for (let [u4, c4] of p6) {
      let d5 = u4.attributes.style ?? "", f4 = {};
      for (let m4 of fe(d5))
        m4.type === "decl" && typeof m4.props == "string" && typeof m4.children == "string" && (f4[m4.props] = m4.children);
      f4 = Object.assign({}, c4, f4), r4 ? u4.attributes.style = f4 : u4.attributes.style = `${Object.entries(f4).map(([m4, v4]) => `${m4}:${v4.replace("!important", "")};`).join("")}`;
    }
    return t2;
  };
}
function Mt(e2) {
  let { width: r4, height: t2, dppx: o5 = 1, widthPx: n3 = r4, heightPx: i3 = t2, deviceWidthPx: a3 = r4 * o5, deviceHeightPx: s3 = t2 * o5, ...l3 } = e2;
  return { widthPx: n3, heightPx: i3, deviceWidthPx: a3, deviceHeightPx: s3, dppx: o5, ...l3 };
}
var Pe, Ie2, we, pe2, q2, J, D3, Oe, N4, T3, B, R4, yt2, Be, Ge, S4, qe, gt2, Ue, Ye, me2, Qe2, _5, he, je, Ke, He2, ze2, We, ve, oe, xt2, $e, ye2, bt2, Xe, Ze, ie2, Je, se, Q, ge, j4, et2, tt2, le, rt2, K, z4, nt, xe, ot, it, be2, Ee, V2, ae, ue2, at, Et2, O5, lt, Tt, ut, X, H2, pt, Pt, ct2, dt2, It, Te, wt2, Nt, ft, kt2, w5, Ot, mt2;
var init_inline = __esm({
  "../../node_modules/ultrahtml/dist/transformers/inline.js"() {
    init_dist();
    init_selector();
    Pe = "comm";
    Ie2 = "rule";
    we = "decl";
    pe2 = Math.abs;
    q2 = String.fromCharCode;
    J = 1;
    D3 = 1;
    Oe = 0;
    N4 = 0;
    T3 = 0;
    B = "";
    R4 = (e2) => typeof e2 == "object" && e2 !== null && "errid" in e2;
    yt2 = (e2) => {
      let r4 = [[]], t2 = [];
      for (let o5 of e2)
        if (o5.type === "comma" && t2.length === 0)
          r4.push([]);
        else {
          switch (o5.type) {
            case "function":
            case "(":
              t2.push(")");
              break;
            case "[":
              t2.push("]");
              break;
            case "{":
              t2.push("}");
              break;
            case ")":
            case "]":
            case "}":
              t2.at(-1) === o5.type && t2.pop();
              break;
          }
          r4[r4.length - 1].push(o5);
        }
      return r4;
    };
    Be = (e2) => {
      let r4 = yt2(e2);
      if (r4.length === 1 && r4[0].length === 0)
        return { type: "query-list", mediaQueries: [{ type: "query" }] };
      {
        let t2 = [];
        for (let o5 of r4) {
          let n3 = Ge(o5);
          R4(n3) ? t2.push({ type: "query", prefix: "not" }) : t2.push(n3);
        }
        return { type: "query-list", mediaQueries: t2 };
      }
    };
    Ge = (e2) => {
      var r4, t2, o5;
      let n3 = e2.at(0);
      if (n3) {
        if (n3.type === "(") {
          let i3 = S4(e2, true);
          if (R4(i3)) {
            let { start: a3, end: s3 } = (r4 = e2.at(1)) !== null && r4 !== void 0 ? r4 : n3;
            return { errid: "EXPECT_FEATURE_OR_CONDITION", start: a3, end: s3, child: i3 };
          }
          return { type: "query", mediaCondition: i3 };
        }
        if (n3.type === "ident") {
          let i3, a3, { value: s3, end: l3 } = n3;
          s3 !== "only" && s3 !== "not" || (i3 = s3);
          let p6 = i3 === void 0 ? 0 : 1, u4 = e2.at(p6);
          if (!u4)
            return { errid: "EXPECT_LPAREN_OR_TYPE", start: l3, end: l3 };
          if (u4.type !== "ident") {
            if (i3 === "not" && u4.type === "(") {
              let c4 = S4(e2.slice(p6), true);
              if (R4(c4)) {
                let { start: d5, end: f4 } = (t2 = e2.at(p6 + 1)) !== null && t2 !== void 0 ? t2 : u4;
                return { errid: "EXPECT_CONDITION", start: d5, end: f4, child: c4 };
              }
              return { type: "query", mediaCondition: { type: "condition", operator: "not", children: [c4] } };
            }
            {
              let { start: c4, end: d5 } = u4;
              return { errid: "EXPECT_TYPE", start: c4, end: d5 };
            }
          }
          {
            let { value: c4, start: d5, end: f4 } = u4;
            if (c4 === "all")
              a3 = void 0;
            else if (c4 === "print" || c4 === "screen")
              a3 = c4;
            else {
              if (c4 !== "tty" && c4 !== "tv" && c4 !== "projection" && c4 !== "handheld" && c4 !== "braille" && c4 !== "embossed" && c4 !== "aural" && c4 !== "speech")
                return { errid: "EXPECT_TYPE", start: d5, end: f4 };
              i3 = i3 === "not" ? void 0 : "not", a3 = void 0;
            }
          }
          if (p6 + 1 === e2.length)
            return { type: "query", prefix: i3, mediaType: a3 };
          {
            let c4 = e2[p6 + 1];
            if (c4.type === "ident" && c4.value === "and") {
              let d5 = e2.at(-1), f4 = e2.at(p6 + 2), m4, v4 = d5.end + 1;
              if ((f4 == null ? void 0 : f4.type) === "ident" && f4.value === "not") {
                v4 += 1;
                let y3 = S4(e2.slice(p6 + 3), false);
                m4 = R4(y3) ? y3 : { type: "condition", operator: "not", children: [y3] };
              } else
                m4 = S4(e2.slice(p6 + 2), false);
              let { start: b5, end: P3 } = (o5 = e2.at(p6 + 2)) !== null && o5 !== void 0 ? o5 : { start: v4, end: v4 };
              return R4(m4) ? { errid: "EXPECT_CONDITION", start: b5, end: P3, child: m4 } : { type: "query", prefix: i3, mediaType: a3, mediaCondition: m4 };
            }
            return { errid: "EXPECT_AND", start: c4.start, end: c4.end };
          }
        }
        return { errid: "EXPECT_LPAREN_OR_TYPE_OR_MODIFIER", start: n3.start, end: n3.end };
      }
      return { errid: "EMPTY_QUERY", start: 0, end: 0 };
    };
    S4 = (e2, r4, t2) => {
      let o5 = e2.at(0);
      if (o5) {
        if (o5.type !== "(")
          return { errid: "EXPECT_LPAREN", start: o5.start, end: o5.end };
        let n3, i3 = e2.length - 1, a3 = 0, s3 = 0;
        for (let [p6, u4] of e2.entries())
          if (u4.type === "(" ? (s3 += 1, a3 = Math.max(a3, s3)) : u4.type === ")" && (s3 -= 1), s3 === 0) {
            i3 = p6;
            break;
          }
        if (s3 !== 0)
          return { errid: "MISMATCH_PARENS", start: o5.start, end: e2[e2.length - 1].end };
        let l3 = e2.slice(0, i3 + 1);
        if (n3 = a3 === 1 ? qe(l3) : l3[1].type === "ident" && l3[1].value === "not" ? S4(l3.slice(2, -1), true, "not") : S4(l3.slice(1, -1), true), R4(n3))
          return { errid: "EXPECT_FEATURE_OR_CONDITION", start: o5.start, end: l3[l3.length - 1].end, child: n3 };
        if (i3 === e2.length - 1)
          return { type: "condition", operator: t2, children: [n3] };
        {
          let p6 = e2[i3 + 1];
          if (p6.type !== "ident" || p6.value !== "and" && p6.value !== "or")
            return { errid: "EXPECT_AND_OR_OR", start: p6.start, end: p6.end };
          if (t2 !== void 0 && t2 !== p6.value)
            return { errid: "MIX_AND_WITH_OR", start: p6.start, end: p6.end };
          if (p6.value === "or" && !r4)
            return { errid: "MIX_AND_WITH_OR", start: p6.start, end: p6.end };
          let u4 = S4(e2.slice(i3 + 2), r4, p6.value);
          return R4(u4) ? u4 : { type: "condition", operator: p6.value, children: [n3, ...u4.children] };
        }
      }
      return { errid: "EMPTY_CONDITION", start: 0, end: 0 };
    };
    qe = (e2) => {
      let r4 = e2.at(0);
      if (r4) {
        if (r4.type !== "(")
          return { errid: "EXPECT_LPAREN", start: r4.start, end: r4.end };
        let t2 = e2[e2.length - 1];
        if (t2.type !== ")")
          return { errid: "EXPECT_RPAREN", start: t2.end + 1, end: t2.end + 1 };
        let o5 = [e2[0]];
        for (let i3 = 1; i3 < e2.length; i3++) {
          if (i3 < e2.length - 2) {
            let a3 = e2[i3], s3 = e2[i3 + 1], l3 = e2[i3 + 2];
            if (a3.type === "number" && a3.value > 0 && s3.type === "delim" && s3.value === 47 && l3.type === "number" && l3.value > 0) {
              o5.push({ type: "ratio", numerator: a3.value, denominator: l3.value, hasSpaceBefore: a3.hasSpaceBefore, hasSpaceAfter: l3.hasSpaceAfter, start: a3.start, end: l3.end }), i3 += 2;
              continue;
            }
          }
          o5.push(e2[i3]);
        }
        let n3 = o5[1];
        if (n3.type === "ident" && o5.length === 3)
          return { type: "feature", context: "boolean", feature: n3.value };
        if (o5.length === 5 && o5[1].type === "ident" && o5[2].type === "colon") {
          let i3 = o5[3];
          if (i3.type === "number" || i3.type === "dimension" || i3.type === "ratio" || i3.type === "ident") {
            let a3, s3 = o5[1].value, l3 = s3.slice(0, 4);
            l3 === "min-" ? (a3 = "min", s3 = s3.slice(4)) : l3 === "max-" && (a3 = "max", s3 = s3.slice(4));
            let { hasSpaceBefore: p6, hasSpaceAfter: u4, start: c4, end: d5, ...f4 } = i3;
            return { type: "feature", context: "value", prefix: a3, feature: s3, value: f4 };
          }
          return { errid: "EXPECT_VALUE", start: i3.start, end: i3.end };
        }
        if (o5.length >= 5) {
          let i3 = gt2(o5);
          if (R4(i3))
            return { errid: "EXPECT_RANGE", start: r4.start, end: o5[o5.length - 1].end, child: i3 };
          {
            let { feature: a3, ...s3 } = i3;
            return { type: "feature", context: "range", feature: a3, range: s3 };
          }
        }
        return { errid: "INVALID_FEATURE", start: r4.start, end: e2[e2.length - 1].end };
      }
      return { errid: "EMPTY_FEATURE", start: 0, end: 0 };
    };
    gt2 = (e2) => {
      var r4, t2, o5, n3, i3, a3, s3, l3;
      if (e2.length < 5)
        return { errid: "INVALID_RANGE", start: (t2 = (r4 = e2.at(0)) === null || r4 === void 0 ? void 0 : r4.start) !== null && t2 !== void 0 ? t2 : 0, end: (n3 = (o5 = e2.at(-1)) === null || o5 === void 0 ? void 0 : o5.end) !== null && n3 !== void 0 ? n3 : 0 };
      if (e2[0].type !== "(")
        return { errid: "EXPECT_LPAREN", start: e2[0].start, end: e2[0].end };
      let p6 = e2[e2.length - 1];
      if (p6.type !== ")")
        return { errid: "EXPECT_RPAREN", start: p6.start, end: p6.end };
      let u4 = { feature: "" }, c4 = e2[1].type === "number" || e2[1].type === "dimension" || e2[1].type === "ratio" || e2[1].type === "ident" && e2[1].value === "infinite";
      if (e2[2].type === "delim") {
        if (e2[2].value === 60)
          e2[3].type !== "delim" || e2[3].value !== 61 || e2[3].hasSpaceBefore ? u4[c4 ? "leftOp" : "rightOp"] = "<" : u4[c4 ? "leftOp" : "rightOp"] = "<=";
        else if (e2[2].value === 62)
          e2[3].type !== "delim" || e2[3].value !== 61 || e2[3].hasSpaceBefore ? u4[c4 ? "leftOp" : "rightOp"] = ">" : u4[c4 ? "leftOp" : "rightOp"] = ">=";
        else {
          if (e2[2].value !== 61)
            return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
          u4[c4 ? "leftOp" : "rightOp"] = "=";
        }
        if (c4)
          u4.leftToken = e2[1];
        else {
          if (e2[1].type !== "ident")
            return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
          u4.feature = e2[1].value;
        }
        let d5 = 2 + ((a3 = (i3 = u4[c4 ? "leftOp" : "rightOp"]) === null || i3 === void 0 ? void 0 : i3.length) !== null && a3 !== void 0 ? a3 : 0), f4 = e2[d5];
        if (c4) {
          if (f4.type !== "ident")
            return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
          if (u4.feature = f4.value, e2.length >= 7) {
            let g4 = e2[d5 + 1], h2 = e2[d5 + 2];
            if (g4.type !== "delim")
              return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
            {
              let W2 = g4.value;
              if (W2 === 60)
                h2.type !== "delim" || h2.value !== 61 || h2.hasSpaceBefore ? u4.rightOp = "<" : u4.rightOp = "<=";
              else {
                if (W2 !== 62)
                  return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
                h2.type !== "delim" || h2.value !== 61 || h2.hasSpaceBefore ? u4.rightOp = ">" : u4.rightOp = ">=";
              }
              let $4 = d5 + 1 + ((l3 = (s3 = u4.rightOp) === null || s3 === void 0 ? void 0 : s3.length) !== null && l3 !== void 0 ? l3 : 0), G2 = e2.at($4);
              if ($4 + 2 !== e2.length)
                return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
              u4.rightToken = G2;
            }
          } else if (d5 + 2 !== e2.length)
            return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
        } else
          u4.rightToken = f4;
        let m4, { leftToken: v4, leftOp: b5, feature: P3, rightOp: y3, rightToken: I4 } = u4, E2, x4;
        if (v4 !== void 0) {
          if (v4.type === "ident") {
            let { type: g4, value: h2 } = v4;
            h2 === "infinite" && (E2 = { type: g4, value: h2 });
          } else if (v4.type === "number" || v4.type === "dimension" || v4.type === "ratio") {
            let { hasSpaceBefore: g4, hasSpaceAfter: h2, start: W2, end: $4, ...G2 } = v4;
            E2 = G2;
          }
        }
        if (I4 !== void 0) {
          if (I4.type === "ident") {
            let { type: g4, value: h2 } = I4;
            h2 === "infinite" && (x4 = { type: g4, value: h2 });
          } else if (I4.type === "number" || I4.type === "dimension" || I4.type === "ratio") {
            let { hasSpaceBefore: g4, hasSpaceAfter: h2, start: W2, end: $4, ...G2 } = I4;
            x4 = G2;
          }
        }
        if (E2 !== void 0 && x4 !== void 0)
          if (b5 !== "<" && b5 !== "<=" || y3 !== "<" && y3 !== "<=") {
            if (b5 !== ">" && b5 !== ">=" || y3 !== ">" && y3 !== ">=")
              return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
            m4 = { leftToken: E2, leftOp: b5, feature: P3, rightOp: y3, rightToken: x4 };
          } else
            m4 = { leftToken: E2, leftOp: b5, feature: P3, rightOp: y3, rightToken: x4 };
        else
          (E2 === void 0 && b5 === void 0 && y3 !== void 0 && x4 !== void 0 || E2 !== void 0 && b5 !== void 0 && y3 === void 0 && x4 === void 0) && (m4 = { leftToken: E2, leftOp: b5, feature: P3, rightOp: y3, rightToken: x4 });
        return m4 ?? { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
      }
      return { errid: "INVALID_RANGE", start: e2[0].start, end: p6.end };
    };
    Ue = (e2) => ({ type: "query-list", mediaQueries: e2.mediaQueries.map((r4) => Ye(r4)) });
    Ye = (e2) => e2.mediaCondition ? { type: "query", prefix: e2.prefix, mediaType: e2.mediaType, mediaCondition: me2(e2.mediaCondition) } : e2;
    me2 = (e2) => {
      let r4 = [];
      for (let t2 of e2.children)
        if (t2.type === "condition") {
          let o5 = me2(t2);
          o5.operator === void 0 && o5.children.length === 1 ? r4.push(o5.children[0]) : o5.operator !== e2.operator || o5.operator !== "and" && o5.operator !== "or" ? r4.push(o5) : r4.push(...o5.children);
        } else
          r4.push(t2);
      if (r4.length === 1) {
        let t2 = r4[0];
        if (t2.type === "condition") {
          if (e2.operator === void 0)
            return t2;
          if (e2.operator === "not" && t2.operator === "not")
            return { type: "condition", children: t2.children };
        }
      }
      return { type: "condition", operator: e2.operator, children: r4 };
    };
    Qe2 = (e2) => {
      let r4 = [e2];
      for (let t2 = e2.child; t2 !== void 0; t2 = t2.child)
        r4.push(t2);
      for (let t2 = r4.length - 2; t2 >= 0; t2--)
        r4[t2 + 1].child = r4.at(t2);
      return delete r4[0].child, r4.at(-1);
    };
    _5 = (e2) => {
      switch (e2.type) {
        case "query-list":
          for (let r4 of e2.mediaQueries)
            _5(r4);
          return e2;
        case "query":
          return e2.prefix === void 0 && delete e2.prefix, e2.mediaType === void 0 && delete e2.mediaType, e2.mediaCondition === void 0 ? delete e2.mediaCondition : _5(e2.mediaCondition), e2;
        case "condition":
          e2.operator === void 0 && delete e2.operator;
          for (let r4 of e2.children)
            _5(r4);
          return e2;
        case "feature":
          return e2.context === "value" ? (e2.prefix === void 0 && delete e2.prefix, _5(e2.value)) : e2.context === "range" && (e2.range.leftOp === void 0 && delete e2.range.leftOp, e2.range.rightOp === void 0 && delete e2.range.rightOp, e2.range.leftToken === void 0 ? delete e2.range.leftToken : _5(e2.range.leftToken), e2.range.rightToken === void 0 ? delete e2.range.rightToken : _5(e2.range.rightToken)), e2;
        default:
          return e2;
      }
    };
    je = (e2) => {
      let r4 = (() => {
        let n3;
        return he ? n3 = he : (n3 = new TextEncoder(), he = n3), n3;
      })().encode(e2), t2 = [], o5 = r4.length;
      for (let n3 = 0; n3 < o5; n3 += 1) {
        let i3 = r4.at(n3);
        if (i3 < 128)
          switch (i3) {
            case 0:
              t2.push(65533);
              break;
            case 12:
              t2.push(10);
              break;
            case 13:
              t2.push(10), r4.at(n3 + 1) === 10 && (n3 += 1);
              break;
            default:
              t2.push(i3);
          }
        else
          i3 < 224 ? t2.push(i3 << 59 >>> 53 | r4[++n3] << 58 >>> 58) : i3 < 240 ? t2.push(i3 << 60 >>> 48 | r4[++n3] << 58 >>> 52 | r4[++n3] << 58 >>> 58) : t2.push(i3 << 61 >>> 43 | r4[++n3] << 58 >>> 46 | r4[++n3] << 58 >>> 52 | r4[++n3] << 58 >>> 58);
      }
      return t2;
    };
    Ke = (e2) => {
      let r4 = [], t2 = false;
      for (let o5 of e2)
        switch (o5.type) {
          case "{":
            return { errid: "NO_LCURLY", start: o5.start, end: o5.end };
          case "semicolon":
            return { errid: "NO_SEMICOLON", start: o5.start, end: o5.end };
          case "whitespace":
            t2 = true, r4.length > 0 && (r4[r4.length - 1].hasSpaceAfter = true);
            break;
          case "EOF":
            break;
          default:
            r4.push({ ...o5, hasSpaceBefore: t2, hasSpaceAfter: false }), t2 = false;
        }
      return r4;
    };
    He2 = (e2, r4 = 0) => {
      let t2 = [];
      for (; r4 < e2.length; r4 += 1) {
        let o5 = e2.at(r4), n3 = r4;
        if (o5 === 47 && e2.at(r4 + 1) === 42) {
          r4 += 2;
          for (let i3 = e2.at(r4); i3 !== void 0; i3 = e2.at(++r4))
            if (i3 === 42 && e2.at(r4 + 1) === 47) {
              r4 += 1;
              break;
            }
        } else if (o5 === 9 || o5 === 32 || o5 === 10) {
          let i3 = e2.at(++r4);
          for (; i3 === 9 || i3 === 32 || i3 === 10; )
            i3 = e2.at(++r4);
          r4 -= 1;
          let a3 = t2.at(-1);
          (a3 == null ? void 0 : a3.type) === "whitespace" ? (t2.pop(), t2.push({ type: "whitespace", start: a3.start, end: r4 })) : t2.push({ type: "whitespace", start: n3, end: r4 });
        } else if (o5 === 34) {
          let i3 = ze2(e2, r4);
          if (i3 === null)
            return { errid: "INVALID_STRING", start: r4, end: r4 };
          let [a3, s3] = i3;
          r4 = a3, t2.push({ type: "string", value: s3, start: n3, end: r4 });
        } else if (o5 === 35) {
          if (r4 + 1 < e2.length) {
            let i3 = e2.at(r4 + 1);
            if (i3 === 95 || i3 >= 65 && i3 <= 90 || i3 >= 97 && i3 <= 122 || i3 >= 128 || i3 >= 48 && i3 <= 57 || i3 === 92 && r4 + 2 < e2.length && e2.at(r4 + 2) !== 10) {
              let a3 = We(e2, r4 + 1) ? "id" : "unrestricted", s3 = $e(e2, r4 + 1);
              if (s3 !== null) {
                let [l3, p6] = s3;
                r4 = l3, t2.push({ type: "hash", value: p6.toLowerCase(), flag: a3, start: n3, end: r4 });
                continue;
              }
            }
          }
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
        } else if (o5 === 39) {
          let i3 = ze2(e2, r4);
          if (i3 === null)
            return { errid: "INVALID_STRING", start: r4, end: r4 };
          let [a3, s3] = i3;
          r4 = a3, t2.push({ type: "string", value: s3, start: n3, end: r4 });
        } else if (o5 === 40)
          t2.push({ type: "(", start: n3, end: r4 });
        else if (o5 === 41)
          t2.push({ type: ")", start: n3, end: r4 });
        else if (o5 === 43) {
          let i3 = oe(e2, r4);
          if (i3 === null)
            t2.push({ type: "delim", value: o5, start: n3, end: r4 });
          else {
            let [a3, s3] = i3;
            r4 = a3, s3[0] === "dimension" ? t2.push({ type: "dimension", value: s3[1], unit: s3[2].toLowerCase(), flag: "number", start: n3, end: r4 }) : s3[0] === "number" ? t2.push({ type: s3[0], value: s3[1], flag: s3[2], start: n3, end: r4 }) : t2.push({ type: s3[0], value: s3[1], flag: "number", start: n3, end: r4 });
          }
        } else if (o5 === 44)
          t2.push({ type: "comma", start: n3, end: r4 });
        else if (o5 === 45) {
          let i3 = oe(e2, r4);
          if (i3 !== null) {
            let [s3, l3] = i3;
            r4 = s3, l3[0] === "dimension" ? t2.push({ type: "dimension", value: l3[1], unit: l3[2].toLowerCase(), flag: "number", start: n3, end: r4 }) : l3[0] === "number" ? t2.push({ type: l3[0], value: l3[1], flag: l3[2], start: n3, end: r4 }) : t2.push({ type: l3[0], value: l3[1], flag: "number", start: n3, end: r4 });
            continue;
          }
          if (r4 + 2 < e2.length) {
            let s3 = e2.at(r4 + 1), l3 = e2.at(r4 + 2);
            if (s3 === 45 && l3 === 62) {
              r4 += 2, t2.push({ type: "CDC", start: n3, end: r4 });
              continue;
            }
          }
          let a3 = Xe(e2, r4);
          if (a3 !== null) {
            let [s3, l3, p6] = a3;
            r4 = s3, t2.push({ type: p6, value: l3, start: n3, end: r4 });
            continue;
          }
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
        } else if (o5 === 46) {
          let i3 = oe(e2, r4);
          if (i3 !== null) {
            let [a3, s3] = i3;
            r4 = a3, s3[0] === "dimension" ? t2.push({ type: "dimension", value: s3[1], unit: s3[2].toLowerCase(), flag: "number", start: n3, end: r4 }) : s3[0] === "number" ? t2.push({ type: s3[0], value: s3[1], flag: s3[2], start: n3, end: r4 }) : t2.push({ type: s3[0], value: s3[1], flag: "number", start: n3, end: r4 });
            continue;
          }
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
        } else if (o5 === 58)
          t2.push({ type: "colon", start: n3, end: r4 });
        else if (o5 === 59)
          t2.push({ type: "semicolon", start: n3, end: r4 });
        else if (o5 === 60) {
          if (r4 + 3 < e2.length) {
            let i3 = e2.at(r4 + 1), a3 = e2.at(r4 + 2), s3 = e2.at(r4 + 3);
            if (i3 === 33 && a3 === 45 && s3 === 45) {
              r4 += 3, t2.push({ type: "CDO", start: n3, end: r4 });
              continue;
            }
          }
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
        } else if (o5 === 64) {
          let i3 = ye2(e2, r4 + 1);
          if (i3 !== null) {
            let [a3, s3] = i3;
            r4 = a3, t2.push({ type: "at-keyword", value: s3.toLowerCase(), start: n3, end: r4 });
            continue;
          }
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
        } else if (o5 === 91)
          t2.push({ type: "[", start: n3, end: r4 });
        else if (o5 === 93)
          t2.push({ type: "]", start: n3, end: r4 });
        else if (o5 === 123)
          t2.push({ type: "{", start: n3, end: r4 });
        else if (o5 === 125)
          t2.push({ type: "}", start: n3, end: r4 });
        else if (o5 >= 48 && o5 <= 57) {
          let i3 = oe(e2, r4), [a3, s3] = i3;
          r4 = a3, s3[0] === "dimension" ? t2.push({ type: "dimension", value: s3[1], unit: s3[2].toLowerCase(), flag: "number", start: n3, end: r4 }) : s3[0] === "number" ? t2.push({ type: s3[0], value: s3[1], flag: s3[2], start: n3, end: r4 }) : t2.push({ type: s3[0], value: s3[1], flag: "number", start: n3, end: r4 });
        } else if (o5 === 95 || o5 >= 65 && o5 <= 90 || o5 >= 97 && o5 <= 122 || o5 >= 128 || o5 === 92) {
          let i3 = Xe(e2, r4);
          if (i3 === null)
            t2.push({ type: "delim", value: o5, start: n3, end: r4 });
          else {
            let [a3, s3, l3] = i3;
            r4 = a3, t2.push({ type: l3, value: s3, start: n3, end: r4 });
          }
        } else
          t2.push({ type: "delim", value: o5, start: n3, end: r4 });
      }
      return t2.push({ type: "EOF", start: r4, end: r4 }), t2;
    };
    ze2 = (e2, r4) => {
      if (e2.length <= r4 + 1)
        return null;
      let t2 = e2.at(r4), o5 = [];
      for (let n3 = r4 + 1; n3 < e2.length; n3 += 1) {
        let i3 = e2.at(n3);
        if (i3 === t2)
          return [n3, String.fromCodePoint(...o5)];
        if (i3 === 92) {
          let a3 = ve(e2, n3);
          if (a3 === null)
            return null;
          let [s3, l3] = a3;
          o5.push(l3), n3 = s3;
        } else {
          if (i3 === 10)
            return null;
          o5.push(i3);
        }
      }
      return null;
    };
    We = (e2, r4) => {
      let t2 = e2.at(r4);
      if (t2 === void 0)
        return false;
      if (t2 === 45) {
        let o5 = e2.at(r4 + 1);
        return o5 === void 0 ? false : o5 === 45 || o5 === 95 || o5 >= 65 && o5 <= 90 || o5 >= 97 && o5 <= 122 || o5 >= 128 ? true : o5 === 92 ? e2.length <= r4 + 2 ? false : e2.at(r4 + 2) !== 10 : false;
      }
      return t2 === 95 || t2 >= 65 && t2 <= 90 || t2 >= 97 && t2 <= 122 || t2 >= 128 ? true : t2 === 92 ? e2.length <= r4 + 1 ? false : e2.at(r4 + 1) !== 10 : false;
    };
    ve = (e2, r4) => {
      if (e2.length <= r4 + 1 || e2.at(r4) !== 92)
        return null;
      let t2 = e2.at(r4 + 1);
      if (t2 === 10)
        return null;
      if (t2 >= 48 && t2 <= 57 || t2 >= 65 && t2 <= 70 || t2 >= 97 && t2 <= 102) {
        let o5 = [t2], n3 = Math.min(r4 + 7, e2.length), i3 = r4 + 2;
        for (; i3 < n3; i3 += 1) {
          let a3 = e2.at(i3);
          if (!(a3 >= 48 && a3 <= 57 || a3 >= 65 && a3 <= 70 || a3 >= 97 && a3 <= 102))
            break;
          o5.push(a3);
        }
        if (i3 < e2.length) {
          let a3 = e2.at(i3);
          a3 !== 9 && a3 !== 32 && a3 !== 10 || (i3 += 1);
        }
        return [i3 - 1, Number.parseInt(String.fromCodePoint(...o5), 16)];
      }
      return [r4 + 1, t2];
    };
    oe = (e2, r4) => {
      let t2 = xt2(e2, r4);
      if (t2 === null)
        return null;
      let [o5, n3, i3] = t2, a3 = ye2(e2, o5 + 1);
      if (a3 !== null) {
        let [s3, l3] = a3;
        return [s3, ["dimension", n3, l3]];
      }
      return o5 + 1 < e2.length && e2.at(o5 + 1) === 37 ? [o5 + 1, ["percentage", n3]] : [o5, ["number", n3, i3]];
    };
    xt2 = (e2, r4) => {
      let t2 = e2.at(r4);
      if (t2 === void 0)
        return null;
      let o5 = "integer", n3 = [];
      for (t2 !== 43 && t2 !== 45 || (r4 += 1, t2 === 45 && n3.push(45)); r4 < e2.length; ) {
        let s3 = e2.at(r4);
        if (!(s3 >= 48 && s3 <= 57))
          break;
        n3.push(s3), r4 += 1;
      }
      if (r4 + 1 < e2.length) {
        let s3 = e2.at(r4), l3 = e2.at(r4 + 1);
        if (s3 === 46 && l3 >= 48 && l3 <= 57)
          for (n3.push(s3, l3), o5 = "number", r4 += 2; r4 < e2.length; ) {
            let p6 = e2.at(r4);
            if (!(p6 >= 48 && p6 <= 57))
              break;
            n3.push(p6), r4 += 1;
          }
      }
      if (r4 + 1 < e2.length) {
        let s3 = e2.at(r4), l3 = e2.at(r4 + 1), p6 = e2.at(r4 + 2);
        if (s3 === 69 || s3 === 101) {
          let u4 = false;
          if (l3 >= 48 && l3 <= 57 ? (n3.push(69, l3), r4 += 2, u4 = true) : (l3 === 45 || l3 === 43) && p6 !== void 0 && p6 >= 48 && p6 <= 57 && (n3.push(69), l3 === 45 && n3.push(45), n3.push(p6), r4 += 3, u4 = true), u4)
            for (o5 = "number"; r4 < e2.length; ) {
              let c4 = e2.at(r4);
              if (!(c4 >= 48 && c4 <= 57))
                break;
              n3.push(c4), r4 += 1;
            }
        }
      }
      let i3 = String.fromCodePoint(...n3), a3 = o5 === "number" ? Number.parseFloat(i3) : Number.parseInt(i3);
      return a3 === 0 && (a3 = 0), Number.isNaN(a3) ? null : [r4 - 1, a3, o5];
    };
    $e = (e2, r4) => {
      if (e2.length <= r4)
        return null;
      let t2 = [];
      for (let o5 = e2.at(r4); r4 < e2.length; o5 = e2.at(++r4)) {
        if (!(o5 === 45 || o5 === 95 || o5 >= 65 && o5 <= 90 || o5 >= 97 && o5 <= 122 || o5 >= 128 || o5 >= 48 && o5 <= 57)) {
          {
            let n3 = ve(e2, r4);
            if (n3 !== null) {
              let [i3, a3] = n3;
              t2.push(a3), r4 = i3;
              continue;
            }
          }
          break;
        }
        t2.push(o5);
      }
      return r4 === 0 ? null : [r4 - 1, String.fromCodePoint(...t2)];
    };
    ye2 = (e2, r4) => We(e2, r4) ? $e(e2, r4) : null;
    bt2 = (e2, r4) => {
      let t2 = e2.at(r4);
      for (; t2 === 9 || t2 === 32 || t2 === 10; )
        t2 = e2.at(++r4);
      let o5 = [], n3 = false;
      for (; r4 < e2.length; ) {
        if (t2 === 41)
          return [r4, String.fromCodePoint(...o5)];
        if (t2 === 34 || t2 === 39 || t2 === 40)
          return null;
        if (t2 === 9 || t2 === 32 || t2 === 10)
          !n3 && o5.length > 0 && (n3 = true);
        else if (t2 === 92) {
          let i3 = ve(e2, r4);
          if (i3 === null || n3)
            return null;
          let [a3, s3] = i3;
          o5.push(s3), r4 = a3;
        } else {
          if (n3)
            return null;
          o5.push(t2);
        }
        t2 = e2.at(++r4);
      }
      return null;
    };
    Xe = (e2, r4) => {
      let t2 = ye2(e2, r4);
      if (t2 === null)
        return null;
      let [o5, n3] = t2;
      if (n3.toLowerCase() === "url") {
        if (e2.length > o5 + 1 && e2.at(o5 + 1) === 40) {
          for (let i3 = 2; o5 + i3 < e2.length; i3 += 1) {
            let a3 = e2.at(o5 + i3);
            if (a3 === 34 || a3 === 39)
              return [o5 + 1, n3.toLowerCase(), "function"];
            if (a3 !== 9 && a3 !== 32 && a3 !== 10) {
              let s3 = bt2(e2, o5 + i3);
              if (s3 === null)
                return null;
              let [l3, p6] = s3;
              return [l3, p6, "url"];
            }
          }
          return [o5 + 1, n3.toLowerCase(), "function"];
        }
      } else if (e2.length > o5 + 1 && e2.at(o5 + 1) === 40)
        return [o5 + 1, n3.toLowerCase(), "function"];
      return [o5, n3.toLowerCase(), "ident"];
    };
    Ze = (e2) => {
      let r4 = He2(je(e2));
      return R4(r4) ? r4 : Ke(r4);
    };
    ie2 = (e2) => typeof e2 == "object" && e2 !== null && "errid" in e2;
    Je = (e2) => {
      let r4 = Ze(e2);
      return ie2(r4) ? Qe2(r4) : _5(Ue(Be(r4)));
    };
    se = { "any-hover": { none: 1, hover: 1 }, "any-pointer": { none: 1, coarse: 1, fine: 1 }, "color-gamut": { srgb: 1, p3: 1, rec2020: 1 }, grid: { 0: 1, 1: 1 }, hover: { none: 1, hover: 1 }, "overflow-block": { none: 1, scroll: 1, paged: 1 }, "overflow-inline": { none: 1, scroll: 1 }, pointer: { none: 1, coarse: 1, fine: 1 }, scan: { interlace: 1, progressive: 1 }, update: { none: 1, slow: 1, fast: 1 }, "display-mode": { fullscreen: 1, standalone: 1, "minimal-ui": 1, browser: 1 }, "dynamic-range": { standard: 1, high: 1 }, "environment-blending": { opaque: 1, additive: 1, subtractive: 1 }, "forced-colors": { none: 1, active: 1 }, "inverted-colors": { none: 1, inverted: 1 }, "nav-controls": { none: 1, back: 1 }, "prefers-color-scheme": { light: 1, dark: 1 }, "prefers-contrast": { "no-preference": 1, less: 1, more: 1, custom: 1 }, "prefers-reduced-data": { "no-preference": 1, reduce: 1 }, "prefers-reduced-motion": { "no-preference": 1, reduce: 1 }, "prefers-reduced-transparency": { "no-preference": 1, reduce: 1 }, scripting: { none: 1, "initial-only": 1, enabled: 1 }, "video-color-gamut": { srgb: 1, p3: 1, rec2020: 1 }, "video-dynamic-range": { standard: 1, high: 1 } };
    Q = { color: { feature: "color", type: "integer", bounds: [true, 0, 1 / 0, false] }, "color-index": { feature: "color-index", type: "integer", bounds: [true, 0, 1 / 0, false] }, monochrome: { feature: "monochrome", type: "integer", bounds: [true, 0, 1 / 0, false] }, "device-height": { feature: "device-height", type: "length", bounds: [true, 0, 1 / 0, false] }, "device-width": { feature: "device-width", type: "length", bounds: [true, 0, 1 / 0, false] }, height: { feature: "height", type: "length", bounds: [true, 0, 1 / 0, false] }, width: { feature: "width", type: "length", bounds: [true, 0, 1 / 0, false] }, resolution: { feature: "resolution", type: "resolution", bounds: [true, 0, 1 / 0, false] }, "horizontal-viewport-segments": { feature: "horizontal-viewport-segments", type: "integer", bounds: [true, 0, 1 / 0, false] }, "vertical-viewport-segments": { feature: "vertical-viewport-segments", type: "integer", bounds: [true, 0, 1 / 0, false] } };
    ge = { "aspect-ratio": { feature: "aspect-ratio", type: "ratio", bounds: [false, [0, 1], [1 / 0, 1], false] }, "device-aspect-ratio": { feature: "device-aspect-ratio", type: "ratio", bounds: [false, [0, 1], [1 / 0, 1], false] } };
    j4 = (e2) => Object.entries(e2).filter((r4) => r4[1] !== void 0);
    et2 = new Set(Object.keys(se));
    tt2 = (e2) => et2.has(e2[0]);
    le = (e2) => et2.has(e2);
    rt2 = new Set(Object.keys(ge));
    K = (e2) => rt2.has(e2[0]);
    z4 = (e2) => rt2.has(e2);
    nt = new Set(Object.keys(Q));
    xe = (e2) => nt.has(e2[0]);
    ot = (e2) => nt.has(e2);
    it = (e2) => xe(e2) || K(e2);
    be2 = (e2) => ot(e2) || z4(e2);
    Ee = (e2) => ot(e2) || z4(e2) || le(e2);
    V2 = (e2, r4) => {
      e2[r4[0]] = r4[1];
    };
    ae = (...e2) => e2.reduce((r4, t2) => r4 === "{true}" ? t2 : t2 === "{true}" ? r4 : r4 === "{false}" || t2 === "{false}" ? "{false}" : ((o5, n3) => {
      let [i3, a3, s3, l3] = o5, p6 = typeof a3 == "number" ? a3 : a3[0] / a3[1], u4 = typeof s3 == "number" ? s3 : s3[0] / s3[1], [c4, d5, f4, m4] = n3, v4 = typeof d5 == "number" ? d5 : d5[0] / d5[1], b5 = typeof f4 == "number" ? f4 : f4[0] / f4[1], P3 = i3 !== c4 && !i3;
      p6 !== v4 && (P3 = p6 > v4);
      let y3 = l3 !== m4 && !l3;
      u4 !== b5 && (y3 = u4 < b5);
      let I4 = P3 ? i3 : c4, E2 = P3 ? a3 : d5, x4 = y3 ? s3 : f4, g4 = y3 ? l3 : m4;
      return E2 > x4 || E2 === x4 && (!I4 || !g4) ? "{false}" : [I4, E2, x4, g4];
    })(r4, t2), "{true}");
    ue2 = (e2) => {
      if (K(e2)) {
        let { bounds: r4 } = ge[e2[0]], t2 = ae(e2[1], r4);
        if (typeof t2 == "string")
          return t2;
        if (t2[0] === r4[0] && t2[1][0] === r4[1][0] && t2[1][1] === r4[1][1] && t2[2][0] === r4[2][0] && t2[2][1] === r4[2][1] && t2[3] === r4[3])
          return "{true}";
        {
          let o5 = t2[1][0] / t2[1][1], n3 = t2[2][0] / t2[2][1];
          return o5 > n3 || o5 === n3 && (!t2[0] || !t2[3]) ? "{false}" : t2;
        }
      }
      {
        let { bounds: r4 } = Q[e2[0]], t2 = ae(e2[1], r4);
        return typeof t2 == "string" ? t2 : t2[0] === r4[0] && t2[1] === r4[1] && t2[2] === r4[2] && t2[3] === r4[3] ? "{true}" : t2[1] > t2[2] || t2[1] === t2[2] && (!t2[0] || !t2[3]) ? "{false}" : t2;
      }
    };
    at = (e2) => {
      if (typeof e2[1] == "string")
        throw new Error("expected range");
      let { bounds: r4 } = ge[e2[0]], [t2, o5, n3, i3] = e2[1], a3 = o5[0] / o5[1], s3 = n3[0] / n3[1], l3 = r4[1][0] / r4[1][1], p6 = r4[0], u4 = r4[2][0] / r4[2][1], c4 = r4[3], d5 = s3 > u4 || s3 === u4 && !(c4 && !i3);
      return a3 < l3 || a3 === l3 && !(p6 && !t2) ? d5 ? "{false}" : [[!i3, n3, r4[2], r4[3]]] : d5 ? [[r4[0], r4[1], o5, !t2]] : [[r4[0], r4[1], o5, !t2], [!i3, n3, r4[2], r4[3]]];
    };
    Et2 = { widthPx: 1920, heightPx: 1080, writingMode: "horizontal-tb", emPx: 16, lhPx: 16, exPx: 8, chPx: 8, capPx: 11, icPx: 16 };
    O5 = (e2, r4) => {
      if (e2.type === "number")
        return { type: "number", value: e2.value };
      if (e2.type === "dimension") {
        let t2;
        switch (e2.unit) {
          case "s":
          case "ms":
            t2 = "time";
            break;
          case "hz":
          case "khz":
            t2 = "frequency";
            break;
          case "dpi":
          case "dpcm":
          case "dppx":
          case "x":
            t2 = "resolution";
            break;
          default:
            t2 = "length";
        }
        if (e2.unit === "px")
          return { type: "dimension", subtype: "length", px: e2.value };
        if (t2 === "time")
          return { type: "dimension", subtype: "time", ms: e2.unit === "s" ? Math.round(1e3 * e2.value) : e2.value };
        if (t2 === "frequency")
          return { type: "dimension", subtype: "frequency", hz: e2.unit === "khz" ? Math.round(1e3 * e2.value) : e2.value };
        if (t2 === "resolution") {
          let o5 = e2.value;
          return e2.unit === "dpi" ? o5 = Number.parseFloat((0.0104166667 * e2.value).toFixed(3)) : e2.unit === "dpcm" && (o5 = Number.parseFloat((0.0264583333 * e2.value).toFixed(3))), { type: "dimension", subtype: "resolution", dppx: o5 };
        }
        if (e2.unit in r4) {
          let o5 = r4[e2.unit];
          return { type: "dimension", subtype: "length", px: Number.parseFloat((e2.value * o5).toFixed(3)) };
        }
        return { type: "ident", value: "{never}" };
      }
      return e2.type === "ident" ? e2.value === "infinite" ? { type: "infinite" } : { type: "ident", value: e2.value } : { type: "ratio", numerator: e2.numerator, denominator: e2.denominator };
    };
    lt = (e2) => {
      let r4 = {};
      typeof e2.emPx == "number" && (r4 = { exPx: Math.round(0.5 * e2.emPx), chPx: Math.round(0.5 * e2.emPx), capPx: Math.round(0.7 * e2.emPx), icPx: Math.round(e2.emPx) });
      let t2 = { ...Et2, ...r4, ...e2 }, { widthPx: o5, heightPx: n3, writingMode: i3, emPx: a3, lhPx: s3, exPx: l3, chPx: p6, capPx: u4, icPx: c4 } = t2, d5 = o5 / 100, f4 = n3 / 100;
      return { em: a3, rem: a3, lh: s3, rlh: s3, ex: l3, ch: p6, cap: u4, ic: c4, vw: d5, vh: f4, vmin: Math.min(f4, d5), vmax: Math.max(f4, d5), vi: i3 === "horizontal-tb" ? d5 : f4, vb: i3 === "horizontal-tb" ? f4 : d5, cm: 37.79527559, mm: 0.03779527559, in: 96, q: 0.009448818898, pc: 16, pt: 16 };
    };
    Tt = { "<": ">", "<=": ">=", ">": "<", ">=": "<=" };
    ut = (e2, r4) => {
      if (e2.context === "range") {
        if (be2(e2.feature)) {
          let { range: t2, feature: o5 } = e2;
          return t2.leftToken !== void 0 && t2.rightToken !== void 0 ? t2.leftOp === "<" || t2.leftOp === "<=" ? { type: "double", name: o5, minOp: t2.leftOp, min: O5(t2.leftToken, r4), maxOp: t2.rightOp, max: O5(t2.rightToken, r4) } : { type: "double", name: o5, minOp: t2.rightOp === ">" ? "<" : "<=", min: O5(t2.rightToken, r4), maxOp: t2.leftOp ? "<" : "<=", max: O5(t2.leftToken, r4) } : t2.rightToken === void 0 ? t2.leftOp === "=" ? { type: "equals", name: o5, value: O5(t2.leftToken, r4) } : { type: "single", name: o5, op: Tt[t2.leftOp], value: O5(t2.leftToken, r4) } : t2.rightOp === "=" ? { type: "equals", name: o5, value: O5(t2.rightToken, r4) } : { type: "single", name: o5, op: t2.rightOp, value: O5(t2.rightToken, r4) };
        }
      } else if (e2.context === "value") {
        if (e2.feature === "orientation") {
          if (e2.prefix === void 0 && e2.value.type === "ident") {
            if (e2.value.value === "portrait")
              return { type: "single", name: "aspect-ratio", op: "<=", value: { type: "ratio", numerator: 1, denominator: 1 } };
            if (e2.value.value === "landscape")
              return { type: "single", name: "aspect-ratio", op: ">=", value: { type: "ratio", numerator: 1, denominator: 1 } };
          }
        } else if (Ee(e2.feature)) {
          if (e2.prefix === void 0)
            return { type: "equals", name: e2.feature, value: O5(e2.value, r4) };
          if (be2(e2.feature))
            return e2.prefix === "min" ? { type: "single", name: e2.feature, op: ">=", value: O5(e2.value, r4) } : { type: "single", name: e2.feature, op: "<=", value: O5(e2.value, r4) };
        }
      } else {
        if (e2.feature === "orientation")
          return { type: "double", name: "aspect-ratio", min: { type: "ratio", numerator: 0, denominator: 1 }, minOp: "<", maxOp: "<", max: { type: "ratio", numerator: Number.POSITIVE_INFINITY, denominator: 1 } };
        if (Ee(e2.feature))
          return { type: "boolean", name: e2.feature };
      }
      return { type: "invalid", name: e2.feature };
    };
    X = (e2) => e2.type === "number" && e2.value > 0 ? [e2.value, 1] : e2.type === "ratio" ? [e2.numerator, e2.denominator] : null;
    H2 = (e2, r4) => {
      let t2 = Q[r4];
      if (e2.type === "infinite") {
        if (r4 === "resolution")
          return Number.POSITIVE_INFINITY;
      } else if (t2.type === "integer") {
        if (e2.type === "number" && Number.isInteger(e2.value))
          return e2.value;
      } else if (t2.type === "resolution") {
        if (e2.type === "dimension" && e2.subtype === "resolution")
          return e2.dppx;
      } else if (t2.type === "length") {
        if (e2.type === "dimension" && e2.subtype === "length")
          return e2.px;
        if (e2.type === "number" && e2.value === 0)
          return 0;
      }
      return null;
    };
    pt = (e2, r4) => {
      let t2 = [];
      for (let o5 of e2)
        for (let n3 of r4) {
          let i3 = Pt(o5, n3);
          Object.keys(i3).length > 0 && t2.push(i3);
        }
      return t2;
    };
    Pt = (e2, r4) => {
      let t2 = {};
      for (let o5 of j4(e2))
        o5[1] !== void 0 && V2(t2, o5);
      for (let o5 of j4(r4))
        if (o5[0] in t2) {
          if (t2[o5[0]] !== void 0) {
            let n3 = t2;
            if (o5[0] !== "media-type") {
              if (o5[0] === "invalid-features")
                n3[o5[0]].push(...o5[1]);
              else if (n3[o5[0]] === "{false}" || o5[1] === "{false}")
                n3[o5[0]] = "{false}";
              else if (n3[o5[0]] === "{true}")
                V2(n3, o5);
              else if (o5[1] !== "{true}") {
                let i3 = t2;
                xe(o5) || K(o5) ? V2(i3, [o5[0], ae(i3[o5[0]], o5[1])]) : o5[0] === "color-gamut" || o5[0] === "video-color-gamut" ? i3[o5[0]] = [i3[o5[0]][0] && o5[1][0], i3[o5[0]][1] && o5[1][1], i3[o5[0]][2] && o5[1][2], i3[o5[0]][3] && o5[1][3]] : V2(i3, [o5[0], i3[o5[0]] === o5[1] ? i3[o5[0]] : "{false}"]);
              }
            }
          }
        } else
          V2(t2, o5);
      return t2;
    };
    ct2 = (e2) => e2.map((r4) => dt2(r4)).reduce((r4, t2) => pt(r4, t2));
    dt2 = (e2) => {
      let r4 = j4(e2), t2 = [];
      for (let n3 of r4)
        if (n3[1] !== void 0) {
          let i3, a3;
          if (n3[0] === "invalid-features")
            return [{ [n3[0]]: n3[1] }];
          if (n3[0] === "media-type")
            continue;
          if (i3 = n3, n3[1] === "{false}")
            a3 = [[n3[0], "{true}"]];
          else if (n3[1] === "{true}")
            a3 = [[n3[0], "{false}"]];
          else if (tt2(n3))
            if (n3[0] === "color-gamut") {
              let s3 = n3[1];
              a3 = [["color-gamut", [!s3[0], !s3[1], !s3[2], !s3[3]]]];
            } else
              a3 = n3[0] === "grid" ? [["grid", n3[1] === 0 ? 1 : 0]] : Object.keys(se[n3[0]]).filter((s3) => s3 !== n3[1]).map((s3) => [n3[0], s3]);
          else if (K(n3)) {
            let s3 = at(n3);
            a3 = (s3 === "{false}" ? ["{false}"] : s3).map((l3) => [n3[0], l3]);
          } else {
            let s3 = st2(n3);
            a3 = (s3 === "{false}" ? ["{false}"] : s3).map((l3) => [n3[0], l3]);
          }
          t2.push([i3, a3]);
        }
      let o5 = [];
      for (let [, n3] of t2)
        for (let i3 of n3)
          o5.push({ [i3[0]]: i3[1] });
      return o5;
    };
    It = (e2, r4) => {
      let t2 = ut(e2, r4), o5 = [{ "invalid-features": [e2.feature] }];
      if (t2.type === "invalid")
        return o5;
      if (t2.type === "boolean")
        return t2.name === "color-gamut" ? [{ "color-gamut": [false, true, true, true] }] : t2.name === "grid" ? [{ grid: 1 }] : le(t2.name) ? dt2({ [t2.name]: "none" }) : z4(t2.name) ? [{ [t2.name]: [false, [0, 1], [Number.POSITIVE_INFINITY, 1], true] }] : [{ [t2.name]: [false, 0, Number.POSITIVE_INFINITY, true] }];
      if (le(t2.name)) {
        if (t2.type === "equals") {
          let n3 = t2.value;
          if (t2.name === "grid") {
            if (n3.type === "number" && (n3.value === 0 || n3.value === 1))
              return [{ grid: n3.value }];
          } else if (n3.type === "ident" && n3.value in se[t2.name]) {
            if (t2.name !== "color-gamut")
              return [{ [t2.name]: n3.value }];
            {
              let i3 = ["srgb", "p3", "rec2020"].indexOf(n3.value);
              if (i3 !== -1)
                return [{ "color-gamut": [false, i3 <= 0, i3 <= 1, i3 <= 2] }];
            }
          }
        }
        return o5;
      }
      if (z4(t2.name)) {
        let n3 = null;
        if (t2.type === "equals") {
          let i3 = X(t2.value);
          i3 !== null && (n3 = [true, i3, i3, true]);
        } else if (t2.type === "single") {
          let i3 = X(t2.value);
          i3 !== null && (n3 = t2.op === "<" ? [true, [Number.NEGATIVE_INFINITY, 1], i3, false] : t2.op === "<=" ? [true, [Number.NEGATIVE_INFINITY, 1], i3, true] : t2.op === ">" ? [false, i3, [Number.POSITIVE_INFINITY, 1], true] : [true, i3, [Number.POSITIVE_INFINITY, 1], true]);
        } else if (t2.type === "double") {
          let i3 = X(t2.min), a3 = X(t2.max);
          i3 !== null && a3 !== null && (n3 = [t2.minOp === "<=", i3, a3, t2.maxOp === "<="]);
        }
        return n3 === null ? o5 : [{ [t2.name]: ue2([t2.name, n3]) }];
      }
      {
        let n3 = null;
        if (t2.type === "equals") {
          let i3 = H2(t2.value, t2.name);
          i3 !== null && (n3 = [true, i3, i3, true]);
        } else if (t2.type === "single") {
          let i3 = H2(t2.value, t2.name);
          i3 !== null && (n3 = t2.op === "<" ? [true, Number.NEGATIVE_INFINITY, i3, false] : t2.op === "<=" ? [true, Number.NEGATIVE_INFINITY, i3, true] : t2.op === ">" ? [false, i3, Number.POSITIVE_INFINITY, true] : [true, i3, Number.POSITIVE_INFINITY, true]);
        } else if (t2.type === "double") {
          let i3 = H2(t2.min, t2.name), a3 = H2(t2.max, t2.name);
          i3 !== null && a3 !== null && (n3 = [t2.minOp === "<=", i3, a3, t2.maxOp === "<="]);
        }
        return n3 === null ? o5 : [{ [t2.name]: ue2([t2.name, n3]) }];
      }
    };
    Te = (e2, r4) => {
      let t2 = [];
      for (let o5 of e2.children)
        "context" in o5 ? t2.push(It(o5, r4)) : t2.push(Te(o5, r4));
      return e2.operator === "or" || e2.operator === void 0 ? t2.flat() : e2.operator === "and" ? t2.reduce((o5, n3) => pt(o5, n3)) : ct2(t2[0]);
    };
    wt2 = (e2) => {
      let r4 = [], t2 = /* @__PURE__ */ new Set(), o5 = /* @__PURE__ */ new Set();
      for (let n3 of e2) {
        let i3 = false;
        if (Array.isArray(n3["invalid-features"]) && n3["invalid-features"].length > 0) {
          for (let s3 of n3["invalid-features"])
            t2.add(s3);
          i3 = true;
        }
        let a3 = {};
        for (let s3 of j4(n3))
          if (s3[0] !== "invalid-features") {
            if (s3[0] === "color-gamut") {
              let l3 = s3[1].toString();
              l3 === "false,false,false,false" ? s3[1] = "{false}" : l3 === "true,true,true,true" && (s3[1] = "{true}");
            } else
              it(s3) && (s3[1] = ue2(s3));
            s3[1] === "{false}" ? (o5.add(s3[0]), i3 = true) : s3[1] === "{true}" || s3[0] === "media-type" && s3[1] === "all" || V2(a3, s3);
          }
        i3 || r4.push(a3);
      }
      return { simplePerms: r4, invalidFeatures: [...t2].sort(), falseFeatures: [...o5].sort() };
    };
    Nt = (e2, r4 = {}) => {
      let t2 = lt(r4), o5 = [];
      for (let n3 of e2.mediaQueries) {
        let i3 = [];
        n3.prefix === "not" ? (n3.mediaType === "print" ? i3.push({ "media-type": "not-print" }) : n3.mediaType === "screen" && i3.push({ "media-type": "not-screen" }), n3.mediaCondition !== void 0 && i3.push(...ct2(Te(n3.mediaCondition, t2)))) : n3.mediaCondition === void 0 ? i3.push({ "media-type": n3.mediaType }) : i3.push(...Te(n3.mediaCondition, t2).map((a3) => ({ ...a3, "media-type": n3.mediaType }))), o5.push(...i3);
      }
      return wt2(o5);
    };
    ft = (e2, r4 = {}) => {
      let t2 = Je(e2);
      if (ie2(t2))
        throw new Error(`Error parsing media query list: ${t2.errid} at chars ${t2.start}:${t2.end}`);
      return Nt(t2, r4);
    };
    kt2 = { mediaType: "screen", anyHover: "hover", anyPointer: "fine", colorGamut: "srgb-but-not-p3", grid: "bitmap", hover: "hover", overflowBlock: "scroll", overflowInline: "scroll", pointer: "fine", scan: "progressive", update: "fast", colorIndex: "none", colorBits: 8, monochromeBits: "not-monochrome", displayMode: "browser", dynamicRange: "not-hdr", environmentBlending: "opaque", forcedColors: "none", invertedColors: "none", navControls: "back", prefersColorScheme: "no-preference", prefersContrast: "no-preference", prefersReducedData: "no-preference", prefersReducedMotion: "no-preference", prefersReducedTransparency: "no-preference", scripting: "enabled", videoColorGamut: "srgb-but-not-p3", videoDynamicRange: "not-hdr", horizontalViewportSegments: 1, verticalViewportSegments: 1 };
    w5 = (e2) => new Error(`Invalid option: ${e2}`);
    Ot = (e2) => {
      if (e2.mediaType !== "screen" && e2.mediaType !== "print" && e2.mediaType !== "not-screen-or-print")
        throw w5("mediaType");
      if (e2.anyHover !== "none" && e2.anyHover !== "hover")
        throw w5("anyHover");
      if (e2.anyPointer !== "none" && e2.anyPointer !== "coarse" && e2.anyPointer !== "fine")
        throw w5("anyPointer");
      if (e2.colorGamut !== "not-srgb" && e2.colorGamut !== "srgb-but-not-p3" && e2.colorGamut !== "p3-but-not-rec2020" && e2.colorGamut !== "rec2020")
        throw w5("colorGamut");
      if (e2.grid !== "bitmap" && e2.grid !== "grid")
        throw w5("grid");
      if (e2.hover !== "none" && e2.hover !== "hover")
        throw w5("hover");
      if (e2.overflowBlock !== "none" && e2.overflowBlock !== "scroll" && e2.overflowBlock !== "paged")
        throw w5("overflowBlock");
      if (e2.overflowInline !== "none" && e2.overflowInline !== "scroll")
        throw w5("overflowInline");
      if (e2.pointer !== "none" && e2.pointer !== "coarse" && e2.pointer !== "fine")
        throw w5("pointer");
      if (e2.scan !== "interlace" && e2.scan !== "progressive")
        throw w5("scan");
      if (e2.update !== "none" && e2.update !== "slow" && e2.update !== "fast")
        throw w5("update");
      if (!(Number.isInteger(e2.widthPx) && e2.widthPx >= 0))
        throw w5("widthPx");
      if (!(Number.isInteger(e2.heightPx) && e2.heightPx >= 0))
        throw w5("heightPx");
      if (!(Number.isInteger(e2.deviceWidthPx) && e2.deviceWidthPx >= 0))
        throw w5("deviceWidthPx");
      if (!(Number.isInteger(e2.deviceHeightPx) && e2.deviceHeightPx >= 0))
        throw w5("deviceHeightPx");
      if (!(Number.isInteger(e2.colorBits) && e2.colorBits >= 0))
        throw w5("colorBits");
      if (e2.dppx <= 0)
        throw w5("dppx");
      if (e2.monochromeBits !== "not-monochrome" && !(Number.isInteger(e2.monochromeBits) && e2.monochromeBits >= 0))
        throw w5("monochromeBits");
      if (e2.colorIndex !== "none" && !(Number.isInteger(e2.colorIndex) && e2.colorIndex >= 0))
        throw w5("colorIndex");
    };
    mt2 = (e2, r4) => {
      let t2 = { ...kt2, ...r4 };
      Ot(t2);
      for (let o5 of e2.simplePerms) {
        let n3 = true;
        for (let i3 in o5) {
          let a3 = i3, s3 = o5;
          if (a3 === "media-type") {
            let l3 = s3[a3];
            if (l3 === "print") {
              if (t2.mediaType === "screen" || t2.mediaType === "not-screen-or-print") {
                n3 = false;
                break;
              }
            } else if (l3 === "screen") {
              if (t2.mediaType === "print" || t2.mediaType === "not-screen-or-print") {
                n3 = false;
                break;
              }
            } else if (l3 === "not-screen") {
              if (t2.mediaType === "screen") {
                n3 = false;
                break;
              }
            } else if (t2.mediaType === "print") {
              n3 = false;
              break;
            }
          } else if (a3 === "any-hover") {
            if (s3[a3] !== t2.anyHover) {
              n3 = false;
              break;
            }
          } else if (a3 === "hover") {
            if (s3[a3] !== t2.hover) {
              n3 = false;
              break;
            }
          } else if (a3 === "any-pointer") {
            if (s3[a3] !== t2.anyPointer) {
              n3 = false;
              break;
            }
          } else if (a3 === "pointer") {
            if (s3[a3] !== t2.pointer) {
              n3 = false;
              break;
            }
          } else if (a3 === "grid") {
            let l3 = s3[a3];
            if (l3 === 0 && t2.grid === "grid" || l3 === 1 && t2.grid === "bitmap") {
              n3 = false;
              break;
            }
          } else if (a3 === "color-gamut") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.colorGamut === "not-srgb" && !l3 || t2.colorGamut === "srgb-but-not-p3" && !p6 || t2.colorGamut === "p3-but-not-rec2020" && !u4 || t2.colorGamut === "rec2020" && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "video-color-gamut") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.videoColorGamut === "not-srgb" && !l3 || t2.videoColorGamut === "srgb-but-not-p3" && !p6 || t2.videoColorGamut === "p3-but-not-rec2020" && !u4 || t2.videoColorGamut === "rec2020" && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "overflow-block") {
            if (s3[a3] !== t2.overflowBlock) {
              n3 = false;
              break;
            }
          } else if (a3 === "overflow-inline") {
            if (s3[a3] !== t2.overflowInline) {
              n3 = false;
              break;
            }
          } else if (a3 === "scan") {
            if (s3[a3] !== t2.scan) {
              n3 = false;
              break;
            }
          } else if (a3 === "update") {
            if (s3[a3] !== t2.update) {
              n3 = false;
              break;
            }
          } else if (a3 === "scripting") {
            if (s3[a3] !== t2.scripting) {
              n3 = false;
              break;
            }
          } else if (a3 === "display-mode") {
            if (s3[a3] !== t2.displayMode) {
              n3 = false;
              break;
            }
          } else if (a3 === "environment-blending") {
            if (s3[a3] !== t2.environmentBlending) {
              n3 = false;
              break;
            }
          } else if (a3 === "forced-colors") {
            if (s3[a3] !== t2.forcedColors) {
              n3 = false;
              break;
            }
          } else if (a3 === "inverted-colors") {
            if (s3[a3] !== t2.invertedColors) {
              n3 = false;
              break;
            }
          } else if (a3 === "nav-controls") {
            if (s3[a3] !== t2.navControls) {
              n3 = false;
              break;
            }
          } else if (a3 === "prefers-color-scheme") {
            if (s3[a3] !== t2.prefersColorScheme) {
              n3 = false;
              break;
            }
          } else if (a3 === "prefers-contrast") {
            if (s3[a3] !== t2.prefersContrast) {
              n3 = false;
              break;
            }
          } else if (a3 === "prefers-reduced-data") {
            if (s3[a3] !== t2.prefersReducedData) {
              n3 = false;
              break;
            }
          } else if (a3 === "prefers-reduced-motion") {
            if (s3[a3] !== t2.prefersReducedMotion) {
              n3 = false;
              break;
            }
          } else if (a3 === "prefers-reduced-transparency") {
            if (s3[a3] !== t2.prefersReducedTransparency) {
              n3 = false;
              break;
            }
          } else if (a3 === "dynamic-range") {
            if (s3[a3] === "high" && t2.dynamicRange === "not-hdr") {
              n3 = false;
              break;
            }
          } else if (a3 === "video-dynamic-range") {
            if (s3[a3] === "high" && t2.videoDynamicRange === "not-hdr") {
              n3 = false;
              break;
            }
          } else if (a3 === "vertical-viewport-segments") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.verticalViewportSegments < p6 || t2.verticalViewportSegments > u4 || p6 === t2.verticalViewportSegments && !l3 || u4 === t2.verticalViewportSegments && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "horizontal-viewport-segments") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.horizontalViewportSegments < p6 || t2.horizontalViewportSegments > u4 || p6 === t2.horizontalViewportSegments && !l3 || u4 === t2.horizontalViewportSegments && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "width") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.widthPx < p6 || t2.widthPx > u4 || p6 === t2.widthPx && !l3 || u4 === t2.widthPx && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "device-width") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.deviceWidthPx < p6 || t2.deviceWidthPx > u4 || p6 === t2.deviceWidthPx && !l3 || u4 === t2.deviceWidthPx && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "height") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.heightPx < p6 || t2.heightPx > u4 || p6 === t2.heightPx && !l3 || u4 === t2.heightPx && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "device-height") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.deviceHeightPx < p6 || t2.deviceHeightPx > u4 || p6 === t2.deviceHeightPx && !l3 || u4 === t2.deviceHeightPx && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "color") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.colorBits < p6 || t2.colorBits > u4 || p6 === t2.colorBits && !l3 || u4 === t2.colorBits && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "monochrome") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.monochromeBits === "not-monochrome")
              (p6 > 0 || p6 === 0 && !l3 || u4 === 0 && !c4) && (n3 = false);
            else if (t2.monochromeBits < p6 || t2.monochromeBits > u4 || p6 === t2.monochromeBits && !l3 || u4 === t2.monochromeBits && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "resolution") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.dppx < p6 || t2.dppx > u4 || p6 === t2.dppx && !l3 || u4 === t2.dppx && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "color-index") {
            let [l3, p6, u4, c4] = s3[a3];
            if (t2.colorIndex === "none") {
              if (p6 > 0 || p6 === 0 && !l3 || u4 === 0 && !c4) {
                n3 = false;
                break;
              }
            } else if (t2.colorIndex < p6 || t2.colorIndex > u4 || p6 === t2.colorIndex && !l3 || u4 === t2.colorIndex && !c4) {
              n3 = false;
              break;
            }
          } else if (a3 === "aspect-ratio") {
            let [l3, p6, u4, c4] = s3[a3], d5 = p6[0] / p6[1], f4 = u4[0] / u4[1], m4 = t2.widthPx / t2.heightPx;
            if (m4 < d5 || m4 > f4 || d5 === m4 && !l3 || f4 === m4 && !c4) {
              n3 = false;
              break;
            }
          } else {
            let [l3, p6, u4, c4] = s3[a3], d5 = p6[0] / p6[1], f4 = u4[0] / u4[1], m4 = t2.deviceWidthPx / t2.deviceHeightPx;
            if (m4 < d5 || m4 > f4 || d5 === m4 && !l3 || f4 === m4 && !c4) {
              n3 = false;
              break;
            }
          }
        }
        if (n3)
          return true;
      }
      return false;
    };
  }
});

// ../../node_modules/satori-html/dist/index.js
function html(templates, ...expressions) {
  const result = F.call(null, templates, ...expressions);
  let doc = w(result.value.trim());
  inliner(doc);
  tw(doc);
  const nodeMap = /* @__PURE__ */ new WeakMap();
  let root = {
    type: "div",
    props: {
      style: {
        display: "flex",
        flexDirection: "column",
        width: "100%",
        height: "100%"
      },
      children: []
    }
  };
  z(doc, (node, parent, index) => {
    let newNode = {};
    if (node.type === R) {
      nodeMap.set(node, root);
    } else if (node.type === k) {
      newNode.type = node.name;
      const { style, "": _6, ...props } = node.attributes;
      if (typeof style === "object") {
        props["style"] = {};
        for (const [decl, value] of Object.entries(style)) {
          props["style"][camelize(decl)] = value;
        }
      }
      props.children = [];
      Object.assign(newNode, { props });
      nodeMap.set(node, newNode);
      if (parent) {
        const newParent = nodeMap.get(parent);
        newParent.props.children[index] = newNode;
      }
    } else if (node.type === j) {
      newNode = node.value.trim();
      if (newNode.trim()) {
        if (parent) {
          const newParent = nodeMap.get(parent);
          if (parent.children.length === 1) {
            newParent.props.children = newNode;
          } else {
            newParent.props.children[index] = newNode;
          }
        }
      }
    }
  });
  return root;
}
var TW_NAMES, inliner, tw, camelize;
var init_dist6 = __esm({
  "../../node_modules/satori-html/dist/index.js"() {
    init_dist();
    init_inline();
    TW_NAMES = /* @__PURE__ */ new Set([
      /[mp](t|b|r|l|x|y)?-/,
      `color-`,
      `flex`,
      `h-`,
      `w-`,
      `min-w-`,
      `min-h-`,
      `max-w-`,
      `max-h-`,
      `leading-`,
      `text-`,
      `opacity-`,
      `font-`,
      `aspect-`,
      `tint-`,
      `bg-`,
      `opacity-`,
      `shadow-`,
      `rounded`,
      `top-`,
      `right-`,
      `bottom-`,
      `left-`,
      `inset-`,
      `border`,
      `elevation-`,
      `tracking-`,
      `z-`
    ]);
    inliner = _t2({ useObjectSyntax: true });
    tw = (doc) => {
      z(doc, (node) => {
        if (node.type !== k)
          return;
        if (node.attributes.class && !node.attributes.tw) {
          const classNames = node.attributes.class.split(/\s+/);
          let match = false;
          for (const name of TW_NAMES) {
            if (match)
              break;
            for (const item of classNames) {
              if (match)
                break;
              if (item.indexOf(":") > -1) {
                match = true;
              } else if (typeof name === "string") {
                match = item.startsWith(name);
              } else {
                match = name.test(item);
              }
            }
          }
          if (match) {
            node.attributes.tw = node.attributes.class;
          }
        }
      });
    };
    camelize = (ident) => ident.replace(/-([a-z])/g, (_6, char) => char.toUpperCase());
  }
});

// dist/$server_build/chunks/pages/_id__Dxh2yiB3.mjs
var id_Dxh2yiB3_exports = {};
__export(id_Dxh2yiB3_exports, {
  GET: () => GET3
});
var robotoArrayBuffer, GET3;
var init_id_Dxh2yiB3 = __esm({
  async "dist/$server_build/chunks/pages/_id__Dxh2yiB3.mjs"() {
    "use strict";
    init_dist5();
    init_dist6();
    robotoArrayBuffer = await (await fetch(
      "https://userz.net/roboto.ttf"
    )).arrayBuffer();
    GET3 = async ({ params }) => {
      const markup = html`<div style="color: white; background-color: black; height: 400">hello, world1 ${params.id}</div>`;
      const svg = await Wu(
        markup,
        {
          width: 600,
          height: 400,
          fonts: [
            {
              name: "Roboto",
              data: robotoArrayBuffer,
              weight: 400,
              style: "normal"
            }
          ]
        }
      );
      return new Response(svg, {
        status: 200,
        headers: {
          "content-type": "image/svg+xml"
        }
      });
    };
  }
});

// dist/$server_build/chunks/_id__BgYPzNvJ.mjs
var id_BgYPzNvJ_exports = {};
__export(id_BgYPzNvJ_exports, {
  page: () => page4,
  renderers: () => renderers
});
var page4;
var init_id_BgYPzNvJ = __esm({
  "dist/$server_build/chunks/_id__BgYPzNvJ.mjs"() {
    "use strict";
    init_renderers();
    page4 = () => init_id_Dxh2yiB3().then(() => id_Dxh2yiB3_exports);
  }
});

// dist/$server_build/chunks/pages/sql_XYSk7BaT.mjs
var sql_XYSk7BaT_exports = {};
__export(sql_XYSk7BaT_exports, {
  POST: () => POST3
});
var POST3;
var init_sql_XYSk7BaT = __esm({
  "dist/$server_build/chunks/pages/sql_XYSk7BaT.mjs"() {
    "use strict";
    POST3 = async ({ request }) => {
      const data = await request.formData();
      const query = data.get("query");
      if (!query) {
        return new Response(
          JSON.stringify({
            message: "Missing required fields"
          }),
          { status: 400 }
        );
      }
      return new Response(
        JSON.stringify({
          message: "Success!"
        }),
        { status: 200 }
      );
    };
  }
});

// dist/$server_build/chunks/sql_q754pekr.mjs
var sql_q754pekr_exports = {};
__export(sql_q754pekr_exports, {
  page: () => page5,
  renderers: () => renderers
});
var page5;
var init_sql_q754pekr = __esm({
  "dist/$server_build/chunks/sql_q754pekr.mjs"() {
    "use strict";
    init_renderers();
    page5 = () => Promise.resolve().then(() => (init_sql_XYSk7BaT(), sql_XYSk7BaT_exports));
  }
});

// dist/$server_build/chunks/pages/energopro_CJzVmhCD.mjs
var energopro_CJzVmhCD_exports = {};
__export(energopro_CJzVmhCD_exports, {
  default: () => $$Energopro,
  file: () => $$file,
  url: () => $$url
});
var $$Astro2, $$Energopro, $$file, $$url;
var init_energopro_CJzVmhCD = __esm({
  "dist/$server_build/chunks/pages/energopro_CJzVmhCD.mjs"() {
    "use strict";
    init_astro_u8tnI5Mh();
    init_colors();
    init_clsx();
    $$Astro2 = createAstro();
    $$Energopro = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro2, $$props, $$slots);
      Astro2.self = $$Energopro;
      let errorMessage = null;
      const edit = Astro2.url.searchParams.get("edit");
      const search = Astro2.url.searchParams.get("q");
      const del = Astro2.url.searchParams.get("delete");
      const response = await fetch("https://rudix.hasura.app/api/rest/energo");
      let list = await response.json();
      if (Astro2.request.method === "POST") {
        const formData = await Astro2.request.formData();
        const isId = formData.get("id");
        const firstname = formData.get("firstname");
        const lastname = formData.get("lastname");
        const emails = formData.get("emails");
        const phones = formData.get("phones");
        if (!firstname || !lastname) {
          errorMessage = "Names   are required";
        } else {
          const object = {
            firstname,
            lastname,
            phones,
            emails,
            search: `${firstname} ${lastname} ${phones} ${emails}`.toLowerCase()
          };
          const rawResponse = await fetch(
            "https://rudix.hasura.app/api/rest/energo/" + (isId ? isId : ""),
            {
              method: "POST",
              body: JSON.stringify({
                object
              })
            }
          );
          const content = await rawResponse.json();
          if (content.error) {
            errorMessage = content.error;
          } else {
            return Astro2.redirect("/energopro/");
          }
        }
      }
      if (del) {
        await fetch("https://rudix.hasura.app/api/rest/energo/" + del, {
          method: "DELETE",
          body: JSON.stringify({ id: del })
        });
        return Astro2.redirect("/energopro/");
      }
      if (search) {
        const results = await fetch(`https://rudix.hasura.app/api/rest/energox/searchx?_like=${encodeURIComponent("%" + search + "%")}`);
        list = await results.json();
        console.log(list);
      }
      return renderTemplate`<html> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><title>SSR page nrg pro task</title>${renderHead()}</head> <body> <div class="flex flex-col h-screen"> <img width="130" src="https://www.energo-pro.bg/web/files/richeditor/logo/energopro-logo-bg.svg" alt="Energo-Pro" class="invert"> <form class="mx-2 mb-1" action="/energopro/"> <div class="relative"> <input type="text" id="default-search" name="q" class="block w-full p-2 h-9 pl-2 text-sm text-gray-900 border border-white rounded-lg bg-black focus:ring-blue-500 focus:border-blue-500 dark:placeholder-gray-400 dark:text-white dark:focus:border-blue-500 text-white" placeholder="Search"> <button class="text-white absolute right-0 bottom-0 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg rounded-l-none text-sm px-4 py-2 dark:bg-blue-600">Search</button> </div> </form> <div class="grow rounded-lg bg-gray-900 p-2 mx-4 overflow-auto"> ${list.vdb_.vdb_energo[0] && list.vdb_.vdb_energo.map((person) => renderTemplate`<div class="grid grid-cols-3 gap-4 border border-b-0"> <div class="p-2"> ${person.lastname}, ${person.firstname} </div> <div class="flex flex-col py-2"> <div>
✉️${" "} ${person.emails ? person.emails : "No email"} </div> <div>
📞${" "} ${person.phones ? person.phones : "No Phone"} </div> </div> <div class="flex flex-col text-right p-2"> <a${addAttribute("/energopro/?edit=" + person.id, "href")} class="text-xs mb-2">
✏️ Edit
</a> <a${addAttribute("/energopro/?delete=" + person.id, "href")} class="text-xs">
Remove 🗑️
</a> </div> </div>`)} <div class="border"></div> </div> <div class="grow-0 container mx-auto relative"> ${errorMessage && renderTemplate`<div id="alert-2" class="flex items-center p-4 -mt-14 text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400 absolute w-full" role="alert"> <svg class="flex-shrink-0 w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20"> <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"></path> </svg> <span class="sr-only">Info</span> <div class="ml-3 text-sm font-medium"> ${errorMessage} </div> <button type="button" class="ml-auto -mx-1.5 -my-1.5 bg-red-50 text-red-500 rounded-lg focus:ring-2 focus:ring-red-400 p-1.5 hover:bg-red-200 inline-flex items-center justify-center h-8 w-8 dark:bg-gray-800 dark:text-red-400 dark:hover:bg-gray-700" data-dismiss-target="#alert-2" aria-label="Close"> <span class="sr-only">Close</span> <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14"> <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path> </svg> </button> </div>`} ${!edit ? renderTemplate`<h1 class="mb-4 text-2xl">Add new Employe</h1>` : renderTemplate`<h1 class="mb-4 text-2xl">
Edit Employe:${" "} ${list.vdb_.vdb_energo.find(
        (x4) => x4.id === Number(edit)
      )?.firstname} </h1>`} <div class="flex justify-center mb-4"> <div class="w-1/2 pr-2 nrgpro"> <form action="/energopro/" method="post" enctype="multipart/form-data"> <input type="hidden" name="id"${addAttribute(edit, "value")}> <input type="hidden" name="emails" id="emails"> <input type="hidden" name="phones" id="phones"> <label>First Name *<input type="text" name="firstname"></label><label>Last Name *<input type="text" name="lastname"></label><label>Address<input type="text" name="address"></label><button type="submit">Submit</button> </form> </div> <div> <div class="multiple"> <label>
Email/s
<input type="text" name="email" id="email"> </label> <a class="add" id="addemail">+</a> <div class="flex flex-wrap" id="emailContainer"></div> </div> <div class="multiple"> <div> <label>Phone/s<input type="text" name="phone" id="phone"></label><a class="add" id="addphone">+</a> <div class="flex flex-wrap" id="phoneContainer"></div> </div> </div> </div> </div> </div> </div>  </body> </html>`;
    }, "/home/runner/work/monext/monext/apps/blogging/src/pages/energopro.astro", void 0);
    $$file = "/home/runner/work/monext/monext/apps/blogging/src/pages/energopro.astro";
    $$url = "/energopro";
  }
});

// dist/$server_build/chunks/energopro_fVOh6rNR.mjs
var energopro_fVOh6rNR_exports = {};
__export(energopro_fVOh6rNR_exports, {
  page: () => page6,
  renderers: () => renderers
});
var page6;
var init_energopro_fVOh6rNR = __esm({
  "dist/$server_build/chunks/energopro_fVOh6rNR.mjs"() {
    "use strict";
    init_renderers();
    page6 = () => Promise.resolve().then(() => (init_energopro_CJzVmhCD(), energopro_CJzVmhCD_exports));
  }
});

// dist/$server_build/chunks/pages/_tag__BFl4phYQ.mjs
var tag_BFl4phYQ_exports = {};
__export(tag_BFl4phYQ_exports, {
  $: () => $$Layout,
  _: () => _tag_,
  g: () => gquery
});
var $$Astro$4, $$Auth, __freeze$2, __defProp$2, __template$2, _a$2, $$Astro$3, $$SignIn, __freeze$1, __defProp$1, __template$1, _a$1, $$Astro$2, $$SignOut, __freeze, __defProp2, __template, _a2, $$Astro$12, $$Layout, gquery, $$Astro3, $$tag, $$file2, $$url2, _tag_;
var init_tag_BFl4phYQ = __esm({
  "dist/$server_build/chunks/pages/_tag__BFl4phYQ.mjs"() {
    "use strict";
    init_astro_u8tnI5Mh();
    init_colors();
    init_DFZWMVpB();
    init_clsx();
    $$Astro$4 = createAstro();
    $$Auth = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$4, $$props, $$slots);
      Astro2.self = $$Auth;
      const { authConfig: authConfig$1 = authConfig } = Astro2.props;
      let session2 = await getSession(Astro2.request, authConfig$1);
      return renderTemplate`${maybeRenderHead()}<div> ${renderComponent($$result, "Fragment", Fragment2, {}, { "default": ($$result2) => renderTemplate`${unescapeHTML(Astro2.slots.render("default", [session2]))}` })} </div>`;
    }, "/home/runner/work/monext/monext/node_modules/auth-astro/src/components/Auth.astro", void 0);
    __freeze$2 = Object.freeze;
    __defProp$2 = Object.defineProperty;
    __template$2 = (cooked, raw3) => __freeze$2(__defProp$2(cooked, "raw", { value: __freeze$2(raw3 || cooked.slice()) }));
    $$Astro$3 = createAstro();
    $$SignIn = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$3, $$props, $$slots);
      Astro2.self = $$SignIn;
      const key = Math.random().toString(36).slice(2, 11);
      const { provider, options, authParams, ...attrs } = Astro2.props;
      attrs.class = `signin-${key} ${attrs.class ?? ""}`;
      return renderTemplate(_a$2 || (_a$2 = __template$2(["", "<button", "> ", " </button>  <script>(function(){", "\n	document\n		.querySelector(`.signin-${key}`)\n		?.addEventListener('click', () => signIn(provider, options, authParams))\n})();<\/script>"], ["", "<button", "> ", " </button>  <script>(function(){", "\n	document\n		.querySelector(\\`.signin-\\${key}\\`)\n		?.addEventListener('click', () => signIn(provider, options, authParams))\n})();<\/script>"])), maybeRenderHead(), spreadAttributes(attrs), renderSlot($$result, $$slots["default"]), defineScriptVars({ provider, options, authParams, key }));
    }, "/home/runner/work/monext/monext/node_modules/auth-astro/src/components/SignIn.astro", void 0);
    __freeze$1 = Object.freeze;
    __defProp$1 = Object.defineProperty;
    __template$1 = (cooked, raw3) => __freeze$1(__defProp$1(cooked, "raw", { value: __freeze$1(raw3 || cooked.slice()) }));
    $$Astro$2 = createAstro();
    $$SignOut = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$2, $$props, $$slots);
      Astro2.self = $$SignOut;
      const key = Math.random().toString(36).slice(2, 11);
      const { params, ...attrs } = Astro2.props;
      attrs.class = `signout-${key} ${attrs.class ?? ""}`;
      return renderTemplate(_a$1 || (_a$1 = __template$1(["", "<button", "> ", " </button>  <script>(function(){", "\n	document.querySelector(`.signout-${key}`)?.addEventListener('click', () => signOut(params))\n})();<\/script>"], ["", "<button", "> ", " </button>  <script>(function(){", "\n	document.querySelector(\\`.signout-\\${key}\\`)?.addEventListener('click', () => signOut(params))\n})();<\/script>"])), maybeRenderHead(), spreadAttributes(attrs), renderSlot($$result, $$slots["default"]), defineScriptVars({ params, key }));
    }, "/home/runner/work/monext/monext/node_modules/auth-astro/src/components/SignOut.astro", void 0);
    __freeze = Object.freeze;
    __defProp2 = Object.defineProperty;
    __template = (cooked, raw3) => __freeze(__defProp2(cooked, "raw", { value: __freeze(raw3 || cooked.slice()) }));
    $$Astro$12 = createAstro();
    $$Layout = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro$12, $$props, $$slots);
      Astro2.self = $$Layout;
      const { title, description, logo, tags, topic, image } = Astro2.props;
      return renderTemplate(_a2 || (_a2 = __template(['<html lang="en"> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width"><meta name="theme-color" content="#030905"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><title>', '</title><meta name="description"', '><link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0"><meta property="og:app_id" content="281985576166744"><meta property="og:site_name" content="userz.net"><meta property="og:type" content="article"><meta property="og:title"', '><meta property="og:description"', '><meta property="og:url"', '><meta property="og:image:width" content="612"><meta property="og:image:height" content="408"><meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@kloundot"><meta name="twitter:title"', '><meta name="twitter:description"', '><meta name="twitter:image:src"', '><meta property="og:image"', '><script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.0/flowbite.min.js"><\/script>', '</head> <body> <div class="flex flex-col"> <nav> <div class="flex flex-wrap items-center mx-auto max-w-screen-xl p-4"> <a href="/" class="flex items-center"> <img', "", ' alt="userz logo"> </a> <div class="flex items-center absolute right-4"> ', ' </div> </div> <div id="timeline-modal" tabindex="-1" aria-hidden="true" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full backdrop-blur-md bg-black/30"> <div class="relative p-4 w-full max-w-md max-h-full"> ', ' </div> </div> <div class="flex items-center"> <ul class="flex space-x-1 text-md overflow-auto snap-x w-screen"> ', ' </ul> </div> <div class="grow"> ', ' </div> <footer class="bottom-0 left-0 z-20 w-full p-4 border-t border-gray-800 shadow md:flex md:items-center md:justify-between md:p-6 dark:border-gray-600"> <span class="text-sm text-gray-500 sm:text-center dark:text-gray-400">\xA9 2023 <a href="https://userz.net/" class="hover:underline">userznet\u2122</a>. All Rights Reserved.\n</span> <ul class="flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0"> <li> <a href="#" class="mr-4 hover:underline md:mr-6">About</a> </li> <li> <a href="#" class="mr-4 hover:underline md:mr-6">Privacy Policy</a> </li> <li> <a href="https://kloun.lol" class="mr-4 hover:underline md:mr-6">kloun.lol</a> </li> <li> <a href="#" class="hover:underline">Contact</a> </li> </ul> </footer> </nav> <!-- Google tag (gtag.js) --> <script async src="https://www.googletagmanager.com/gtag/js?id=G-8ZJBS39VWD"><\/script> <script>\n        window.dataLayer = window.dataLayer || [];\n        function gtag() {\n          dataLayer.push(arguments);\n        }\n        gtag("js", new Date());\n        gtag("config", "G-8ZJBS39VWD");\n      <\/script> </div> </body> </html>'])), title, addAttribute(description || "Zero in on  social media presence by checking out their  profiles, featuring photos and engaging content", "content"), addAttribute(title, "content"), addAttribute(description || "Zero in on  social media presence by checking out their  profiles, featuring photos and engaging content", "content"), addAttribute("", "content"), addAttribute(title, "content"), addAttribute(description || "Zero in on  social media presence by checking out their  profiles, featuring photos and engaging content", "content"), addAttribute(image || "https://cdn.userz.net/1192206.jpg", "content"), addAttribute(image || "https://cdn.userz.net/1192206.jpg", "content"), renderHead(), addAttribute(logo !== "inner" ? "/logo2.png" : "/logotext.png", "src"), addAttribute(logo !== "inner" ? "w-2/4   " : "w-1/2", "class"), renderComponent($$result, "Auth", $$Auth, {}, { "default": ($$result2) => renderTemplate`${(session2) => !session2 ? renderTemplate`<a data-modal-target="timeline-modal" data-modal-toggle="timeline-modal" class="text-md text-emerald-600 hover:underline font-black"> <span class="material-symbols-outlined absolute -ml-6 -mt-0.5">
badge
</span>
Sign In${" "} </a>` : renderTemplate`<a data-modal-target="timeline-modal" data-modal-toggle="timeline-modal" class="text-md text-emerald-600 hover:underline font-black"> <span class="material-symbols-outlined absolute -ml-6 -mt-0.5">
badge
</span> ${renderComponent($$result2, "SignOut", $$SignOut, { "class": "text-xs" }, { "default": ($$result3) => renderTemplate`Logout` })} </a>`}` }), renderComponent($$result, "Auth", $$Auth, {}, { "default": ($$result2) => renderTemplate`${(session2) => !session2 && renderTemplate`${renderComponent($$result2, "SignIn", $$SignIn, { "provider": "google" }, { "default": ($$result3) => renderTemplate` <div class="bg-blue-500 hover:bg-blue-600 flex absolute left-0 top-0 h-10 px-1.5 items-center rounded-l-md"> <svg fill="#FFFFFF" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" class="icon w-6 h-6"> <path d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm167 633.6C638.4 735 583 757 516.9 757c-95.7 0-178.5-54.9-218.8-134.9C281.5 589 272 551.6 272 512s9.5-77 26.1-110.1c40.3-80.1 123.1-135 218.8-135 66 0 121.4 24.3 163.9 63.8L610.6 401c-25.4-24.3-57.7-36.6-93.6-36.6-63.8 0-117.8 43.1-137.1 101-4.9 14.7-7.7 30.4-7.7 46.6s2.8 31.9 7.7 46.6c19.3 57.9 73.3 101 137 101 33 0 61-8.7 82.9-23.4 26-17.4 43.2-43.3 48.9-74H516.9v-94.8h230.7c2.9 16.1 4.4 32.8 4.4 50.1 0 74.7-26.7 137.4-73 180.1z"></path> </svg> </div>
Продължи с Google
` })}`}` }), tags && tags.filter(
        (t2) => t2.hashtag.length > 2
      ).map(
        ({
          hashtag,
          count
        }) => renderTemplate`<li> <a${addAttribute(count === 1 ? "#" : "/t/" + hashtag, "href")} class="text-black   px-3 mx-1 mb-3 bg-emerald-600 rounded-2xl lowercase font-black flex text-md snap-center"> ${renderComponent($$result, "Fragment", Fragment2, {}, { "default": ($$result2) => renderTemplate` <span class="material-symbols-outlined  -ml-2 ">
tag
</span> <span>${hashtag} </span> ` })} </a> </li>`
      ), renderSlot($$result, $$slots["default"]));
    }, "/home/runner/work/monext/monext/apps/blogging/src/components/Layout.astro", void 0);
    gquery = async (query, variables) => {
      const response = await fetch("https://hasura.kloun.lol/v1/graphql", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          query,
          variables
        })
      });
      const json = await response.json();
      if (json.errors)
        throw new Error(JSON.stringify(json.errors));
      return Promise.resolve(json.data);
    };
    $$Astro3 = createAstro();
    $$tag = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro3, $$props, $$slots);
      Astro2.self = $$tag;
      const { tag } = Astro2.params;
      const resp = await gquery(`query MyQuery($_eq: String ) {
      qtags(where: {hashtag: {_eq: $_eq}}) {
        count
        hashtag
        rows_with_tag
      }
    }
 `, { _eq: tag });
      if (!resp.qtags[0]) {
        return Astro2.redirect("/404");
      }
      const arr = resp.qtags[0].rows_with_tag.split(", ");
      const questions = await gquery(`query MyQuery($_in: [String!] = "") {
     questions(where: {genid: {_in: $_in}, type: {_eq: "q"}}, limit: 10) {
       genid
       text
       type
     }
   }
 `, { _in: arr });
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": tag, "description": "#" + tag, "logo": "inner", "topic": tag }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<main class="relative"> <div class="flex flex-col relative justify-center"> <div> ${questions.questions.map(({ text: text2 }) => renderTemplate`<div class="z-10 flex m-4 mb-5  text-xl  font-black  odd:rotate-1 even:-rotate-1 "> <span class="z-10 text-gray-900  bg-gray-900 text-black  p-3 rounded-lg border-dashed border-2 border-emerald-900">${text2.replaceAll("?", " ")}</span> </div>`)} </div> <div class="absolute top-0"> ${questions.questions.map(({ genid, text: text2 }) => renderTemplate`<a${addAttribute("/" + genid, "href")} class="z-0 flex m-4 mb-6  text-xl  font-black rotate-0"> <span class="z-10 text-gray-200  text-black  p-3 ">${text2.replaceAll("?", " ")} </span> </a>`)} </div> </div> </main> ` })}`;
    }, "/home/runner/work/monext/monext/apps/blogging/src/pages/t/[tag].astro", void 0);
    $$file2 = "/home/runner/work/monext/monext/apps/blogging/src/pages/t/[tag].astro";
    $$url2 = "/t/[tag]";
    _tag_ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
      __proto__: null,
      default: $$tag,
      file: $$file2,
      url: $$url2
    }, Symbol.toStringTag, { value: "Module" }));
  }
});

// dist/$server_build/chunks/_tag__DqpjJcdT.mjs
var tag_DqpjJcdT_exports = {};
__export(tag_DqpjJcdT_exports, {
  page: () => page7,
  renderers: () => renderers
});
var page7;
var init_tag_DqpjJcdT = __esm({
  "dist/$server_build/chunks/_tag__DqpjJcdT.mjs"() {
    "use strict";
    init_renderers();
    page7 = () => Promise.resolve().then(() => (init_tag_BFl4phYQ(), tag_BFl4phYQ_exports)).then((n3) => n3._);
  }
});

// ../../node_modules/react/cjs/react-jsx-runtime.development.js
var require_react_jsx_runtime_development = __commonJS({
  "../../node_modules/react/cjs/react-jsx-runtime.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var React3 = require_react();
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
        var FAUX_ITERATOR_SYMBOL = "@@iterator";
        function getIteratorFn(maybeIterable) {
          if (maybeIterable === null || typeof maybeIterable !== "object") {
            return null;
          }
          var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
          if (typeof maybeIterator === "function") {
            return maybeIterator;
          }
          return null;
        }
        var ReactSharedInternals = React3.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
        function error2(format2) {
          {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format2, args);
            }
          }
        }
        function printWarning(level, format2, args) {
          {
            var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
            var stack = ReactDebugCurrentFrame2.getStackAddendum();
            if (stack !== "") {
              format2 += "%s";
              args = args.concat([stack]);
            }
            var argsWithFormat = args.map(function(item) {
              return String(item);
            });
            argsWithFormat.unshift("Warning: " + format2);
            Function.prototype.apply.call(console[level], console, argsWithFormat);
          }
        }
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
            // types supported by any Flight configuration anywhere since
            // we don't know which Flight build this will end up being used
            // with.
            type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function getWrappedName(outerType, innerType, wrapperName) {
          var displayName = outerType.displayName;
          if (displayName) {
            return displayName;
          }
          var functionName = innerType.displayName || innerType.name || "";
          return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
        }
        function getContextName(type) {
          return type.displayName || "Context";
        }
        function getComponentNameFromType(type) {
          if (type == null) {
            return null;
          }
          {
            if (typeof type.tag === "number") {
              error2("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
            }
          }
          if (typeof type === "function") {
            return type.displayName || type.name || null;
          }
          if (typeof type === "string") {
            return type;
          }
          switch (type) {
            case REACT_FRAGMENT_TYPE:
              return "Fragment";
            case REACT_PORTAL_TYPE:
              return "Portal";
            case REACT_PROFILER_TYPE:
              return "Profiler";
            case REACT_STRICT_MODE_TYPE:
              return "StrictMode";
            case REACT_SUSPENSE_TYPE:
              return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
              return "SuspenseList";
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_CONTEXT_TYPE:
                var context = type;
                return getContextName(context) + ".Consumer";
              case REACT_PROVIDER_TYPE:
                var provider = type;
                return getContextName(provider._context) + ".Provider";
              case REACT_FORWARD_REF_TYPE:
                return getWrappedName(type, type.render, "ForwardRef");
              case REACT_MEMO_TYPE:
                var outerName = type.displayName || null;
                if (outerName !== null) {
                  return outerName;
                }
                return getComponentNameFromType(type.type) || "Memo";
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return getComponentNameFromType(init3(payload));
                } catch (x4) {
                  return null;
                }
              }
            }
          }
          return null;
        }
        var assign = Object.assign;
        var disabledDepth = 0;
        var prevLog;
        var prevInfo;
        var prevWarn;
        var prevError;
        var prevGroup;
        var prevGroupCollapsed;
        var prevGroupEnd;
        function disabledLog() {
        }
        disabledLog.__reactDisabledLog = true;
        function disableLogs() {
          {
            if (disabledDepth === 0) {
              prevLog = console.log;
              prevInfo = console.info;
              prevWarn = console.warn;
              prevError = console.error;
              prevGroup = console.group;
              prevGroupCollapsed = console.groupCollapsed;
              prevGroupEnd = console.groupEnd;
              var props = {
                configurable: true,
                enumerable: true,
                value: disabledLog,
                writable: true
              };
              Object.defineProperties(console, {
                info: props,
                log: props,
                warn: props,
                error: props,
                group: props,
                groupCollapsed: props,
                groupEnd: props
              });
            }
            disabledDepth++;
          }
        }
        function reenableLogs() {
          {
            disabledDepth--;
            if (disabledDepth === 0) {
              var props = {
                configurable: true,
                enumerable: true,
                writable: true
              };
              Object.defineProperties(console, {
                log: assign({}, props, {
                  value: prevLog
                }),
                info: assign({}, props, {
                  value: prevInfo
                }),
                warn: assign({}, props, {
                  value: prevWarn
                }),
                error: assign({}, props, {
                  value: prevError
                }),
                group: assign({}, props, {
                  value: prevGroup
                }),
                groupCollapsed: assign({}, props, {
                  value: prevGroupCollapsed
                }),
                groupEnd: assign({}, props, {
                  value: prevGroupEnd
                })
              });
            }
            if (disabledDepth < 0) {
              error2("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
            }
          }
        }
        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
        var prefix;
        function describeBuiltInComponentFrame(name, source, ownerFn) {
          {
            if (prefix === void 0) {
              try {
                throw Error();
              } catch (x4) {
                var match = x4.stack.trim().match(/\n( *(at )?)/);
                prefix = match && match[1] || "";
              }
            }
            return "\n" + prefix + name;
          }
        }
        var reentry = false;
        var componentFrameCache;
        {
          var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
          componentFrameCache = new PossiblyWeakMap();
        }
        function describeNativeComponentFrame(fn2, construct) {
          if (!fn2 || reentry) {
            return "";
          }
          {
            var frame = componentFrameCache.get(fn2);
            if (frame !== void 0) {
              return frame;
            }
          }
          var control;
          reentry = true;
          var previousPrepareStackTrace = Error.prepareStackTrace;
          Error.prepareStackTrace = void 0;
          var previousDispatcher;
          {
            previousDispatcher = ReactCurrentDispatcher.current;
            ReactCurrentDispatcher.current = null;
            disableLogs();
          }
          try {
            if (construct) {
              var Fake = function() {
                throw Error();
              };
              Object.defineProperty(Fake.prototype, "props", {
                set: function() {
                  throw Error();
                }
              });
              if (typeof Reflect === "object" && Reflect.construct) {
                try {
                  Reflect.construct(Fake, []);
                } catch (x4) {
                  control = x4;
                }
                Reflect.construct(fn2, [], Fake);
              } else {
                try {
                  Fake.call();
                } catch (x4) {
                  control = x4;
                }
                fn2.call(Fake.prototype);
              }
            } else {
              try {
                throw Error();
              } catch (x4) {
                control = x4;
              }
              fn2();
            }
          } catch (sample) {
            if (sample && control && typeof sample.stack === "string") {
              var sampleLines = sample.stack.split("\n");
              var controlLines = control.stack.split("\n");
              var s3 = sampleLines.length - 1;
              var c4 = controlLines.length - 1;
              while (s3 >= 1 && c4 >= 0 && sampleLines[s3] !== controlLines[c4]) {
                c4--;
              }
              for (; s3 >= 1 && c4 >= 0; s3--, c4--) {
                if (sampleLines[s3] !== controlLines[c4]) {
                  if (s3 !== 1 || c4 !== 1) {
                    do {
                      s3--;
                      c4--;
                      if (c4 < 0 || sampleLines[s3] !== controlLines[c4]) {
                        var _frame = "\n" + sampleLines[s3].replace(" at new ", " at ");
                        if (fn2.displayName && _frame.includes("<anonymous>")) {
                          _frame = _frame.replace("<anonymous>", fn2.displayName);
                        }
                        {
                          if (typeof fn2 === "function") {
                            componentFrameCache.set(fn2, _frame);
                          }
                        }
                        return _frame;
                      }
                    } while (s3 >= 1 && c4 >= 0);
                  }
                  break;
                }
              }
            }
          } finally {
            reentry = false;
            {
              ReactCurrentDispatcher.current = previousDispatcher;
              reenableLogs();
            }
            Error.prepareStackTrace = previousPrepareStackTrace;
          }
          var name = fn2 ? fn2.displayName || fn2.name : "";
          var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
          {
            if (typeof fn2 === "function") {
              componentFrameCache.set(fn2, syntheticFrame);
            }
          }
          return syntheticFrame;
        }
        function describeFunctionComponentFrame(fn2, source, ownerFn) {
          {
            return describeNativeComponentFrame(fn2, false);
          }
        }
        function shouldConstruct(Component) {
          var prototype = Component.prototype;
          return !!(prototype && prototype.isReactComponent);
        }
        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
          if (type == null) {
            return "";
          }
          if (typeof type === "function") {
            {
              return describeNativeComponentFrame(type, shouldConstruct(type));
            }
          }
          if (typeof type === "string") {
            return describeBuiltInComponentFrame(type);
          }
          switch (type) {
            case REACT_SUSPENSE_TYPE:
              return describeBuiltInComponentFrame("Suspense");
            case REACT_SUSPENSE_LIST_TYPE:
              return describeBuiltInComponentFrame("SuspenseList");
          }
          if (typeof type === "object") {
            switch (type.$$typeof) {
              case REACT_FORWARD_REF_TYPE:
                return describeFunctionComponentFrame(type.render);
              case REACT_MEMO_TYPE:
                return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
              case REACT_LAZY_TYPE: {
                var lazyComponent = type;
                var payload = lazyComponent._payload;
                var init3 = lazyComponent._init;
                try {
                  return describeUnknownElementTypeFrameInDEV(init3(payload), source, ownerFn);
                } catch (x4) {
                }
              }
            }
          }
          return "";
        }
        var hasOwnProperty = Object.prototype.hasOwnProperty;
        var loggedTypeFailures = {};
        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame.setExtraStackFrame(null);
            }
          }
        }
        function checkPropTypes(typeSpecs, values, location, componentName, element) {
          {
            var has = Function.call.bind(hasOwnProperty);
            for (var typeSpecName in typeSpecs) {
              if (has(typeSpecs, typeSpecName)) {
                var error$1 = void 0;
                try {
                  if (typeof typeSpecs[typeSpecName] !== "function") {
                    var err2 = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                    err2.name = "Invariant Violation";
                    throw err2;
                  }
                  error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                } catch (ex) {
                  error$1 = ex;
                }
                if (error$1 && !(error$1 instanceof Error)) {
                  setCurrentlyValidatingElement(element);
                  error2("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                  setCurrentlyValidatingElement(null);
                }
                if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                  loggedTypeFailures[error$1.message] = true;
                  setCurrentlyValidatingElement(element);
                  error2("Failed %s type: %s", location, error$1.message);
                  setCurrentlyValidatingElement(null);
                }
              }
            }
          }
        }
        var isArrayImpl = Array.isArray;
        function isArray(a3) {
          return isArrayImpl(a3);
        }
        function typeName(value) {
          {
            var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
            var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            return type;
          }
        }
        function willCoercionThrow(value) {
          {
            try {
              testStringCoercion(value);
              return false;
            } catch (e2) {
              return true;
            }
          }
        }
        function testStringCoercion(value) {
          return "" + value;
        }
        function checkKeyStringCoercion(value) {
          {
            if (willCoercionThrow(value)) {
              error2("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
              return testStringCoercion(value);
            }
          }
        }
        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
        var RESERVED_PROPS = {
          key: true,
          ref: true,
          __self: true,
          __source: true
        };
        var specialPropKeyWarningShown;
        var specialPropRefWarningShown;
        var didWarnAboutStringRefs;
        {
          didWarnAboutStringRefs = {};
        }
        function hasValidRef(config2) {
          {
            if (hasOwnProperty.call(config2, "ref")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "ref").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.ref !== void 0;
        }
        function hasValidKey(config2) {
          {
            if (hasOwnProperty.call(config2, "key")) {
              var getter = Object.getOwnPropertyDescriptor(config2, "key").get;
              if (getter && getter.isReactWarning) {
                return false;
              }
            }
          }
          return config2.key !== void 0;
        }
        function warnIfStringRefCannotBeAutoConverted(config2, self2) {
          {
            if (typeof config2.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
              var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
              if (!didWarnAboutStringRefs[componentName]) {
                error2('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config2.ref);
                didWarnAboutStringRefs[componentName] = true;
              }
            }
          }
        }
        function defineKeyPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingKey = function() {
              if (!specialPropKeyWarningShown) {
                specialPropKeyWarningShown = true;
                error2("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingKey.isReactWarning = true;
            Object.defineProperty(props, "key", {
              get: warnAboutAccessingKey,
              configurable: true
            });
          }
        }
        function defineRefPropWarningGetter(props, displayName) {
          {
            var warnAboutAccessingRef = function() {
              if (!specialPropRefWarningShown) {
                specialPropRefWarningShown = true;
                error2("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
              }
            };
            warnAboutAccessingRef.isReactWarning = true;
            Object.defineProperty(props, "ref", {
              get: warnAboutAccessingRef,
              configurable: true
            });
          }
        }
        var ReactElement = function(type, key, ref, self2, source, owner, props) {
          var element = {
            // This tag allows us to uniquely identify this as a React Element
            $$typeof: REACT_ELEMENT_TYPE,
            // Built-in properties that belong on the element
            type,
            key,
            ref,
            props,
            // Record the component responsible for creating this element.
            _owner: owner
          };
          {
            element._store = {};
            Object.defineProperty(element._store, "validated", {
              configurable: false,
              enumerable: false,
              writable: true,
              value: false
            });
            Object.defineProperty(element, "_self", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: self2
            });
            Object.defineProperty(element, "_source", {
              configurable: false,
              enumerable: false,
              writable: false,
              value: source
            });
            if (Object.freeze) {
              Object.freeze(element.props);
              Object.freeze(element);
            }
          }
          return element;
        };
        function jsxDEV(type, config2, maybeKey, source, self2) {
          {
            var propName;
            var props = {};
            var key = null;
            var ref = null;
            if (maybeKey !== void 0) {
              {
                checkKeyStringCoercion(maybeKey);
              }
              key = "" + maybeKey;
            }
            if (hasValidKey(config2)) {
              {
                checkKeyStringCoercion(config2.key);
              }
              key = "" + config2.key;
            }
            if (hasValidRef(config2)) {
              ref = config2.ref;
              warnIfStringRefCannotBeAutoConverted(config2, self2);
            }
            for (propName in config2) {
              if (hasOwnProperty.call(config2, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                props[propName] = config2[propName];
              }
            }
            if (type && type.defaultProps) {
              var defaultProps = type.defaultProps;
              for (propName in defaultProps) {
                if (props[propName] === void 0) {
                  props[propName] = defaultProps[propName];
                }
              }
            }
            if (key || ref) {
              var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
              if (key) {
                defineKeyPropWarningGetter(props, displayName);
              }
              if (ref) {
                defineRefPropWarningGetter(props, displayName);
              }
            }
            return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
          }
        }
        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
        function setCurrentlyValidatingElement$1(element) {
          {
            if (element) {
              var owner = element._owner;
              var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
              ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
            } else {
              ReactDebugCurrentFrame$1.setExtraStackFrame(null);
            }
          }
        }
        var propTypesMisspellWarningShown;
        {
          propTypesMisspellWarningShown = false;
        }
        function isValidElement(object) {
          {
            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
          }
        }
        function getDeclarationErrorAddendum() {
          {
            if (ReactCurrentOwner$1.current) {
              var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);
              if (name) {
                return "\n\nCheck the render method of `" + name + "`.";
              }
            }
            return "";
          }
        }
        function getSourceInfoErrorAddendum(source) {
          {
            if (source !== void 0) {
              var fileName = source.fileName.replace(/^.*[\\\/]/, "");
              var lineNumber = source.lineNumber;
              return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
            }
            return "";
          }
        }
        var ownerHasKeyUseWarning = {};
        function getCurrentComponentErrorInfo(parentType) {
          {
            var info2 = getDeclarationErrorAddendum();
            if (!info2) {
              var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
              if (parentName) {
                info2 = "\n\nCheck the top-level render call using <" + parentName + ">.";
              }
            }
            return info2;
          }
        }
        function validateExplicitKey(element, parentType) {
          {
            if (!element._store || element._store.validated || element.key != null) {
              return;
            }
            element._store.validated = true;
            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
              return;
            }
            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
            var childOwner = "";
            if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
              childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
            }
            setCurrentlyValidatingElement$1(element);
            error2('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
            setCurrentlyValidatingElement$1(null);
          }
        }
        function validateChildKeys(node, parentType) {
          {
            if (typeof node !== "object") {
              return;
            }
            if (isArray(node)) {
              for (var i3 = 0; i3 < node.length; i3++) {
                var child = node[i3];
                if (isValidElement(child)) {
                  validateExplicitKey(child, parentType);
                }
              }
            } else if (isValidElement(node)) {
              if (node._store) {
                node._store.validated = true;
              }
            } else if (node) {
              var iteratorFn = getIteratorFn(node);
              if (typeof iteratorFn === "function") {
                if (iteratorFn !== node.entries) {
                  var iterator = iteratorFn.call(node);
                  var step;
                  while (!(step = iterator.next()).done) {
                    if (isValidElement(step.value)) {
                      validateExplicitKey(step.value, parentType);
                    }
                  }
                }
              }
            }
          }
        }
        function validatePropTypes(element) {
          {
            var type = element.type;
            if (type === null || type === void 0 || typeof type === "string") {
              return;
            }
            var propTypes;
            if (typeof type === "function") {
              propTypes = type.propTypes;
            } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
            // Inner props are checked in the reconciler.
            type.$$typeof === REACT_MEMO_TYPE)) {
              propTypes = type.propTypes;
            } else {
              return;
            }
            if (propTypes) {
              var name = getComponentNameFromType(type);
              checkPropTypes(propTypes, element.props, "prop", name, element);
            } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
              propTypesMisspellWarningShown = true;
              var _name = getComponentNameFromType(type);
              error2("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
            }
            if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
              error2("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
            }
          }
        }
        function validateFragmentProps(fragment) {
          {
            var keys = Object.keys(fragment.props);
            for (var i3 = 0; i3 < keys.length; i3++) {
              var key = keys[i3];
              if (key !== "children" && key !== "key") {
                setCurrentlyValidatingElement$1(fragment);
                error2("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                setCurrentlyValidatingElement$1(null);
                break;
              }
            }
            if (fragment.ref !== null) {
              setCurrentlyValidatingElement$1(fragment);
              error2("Invalid attribute `ref` supplied to `React.Fragment`.");
              setCurrentlyValidatingElement$1(null);
            }
          }
        }
        function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
          {
            var validType = isValidElementType(type);
            if (!validType) {
              var info2 = "";
              if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                info2 += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
              }
              var sourceInfo = getSourceInfoErrorAddendum(source);
              if (sourceInfo) {
                info2 += sourceInfo;
              } else {
                info2 += getDeclarationErrorAddendum();
              }
              var typeString;
              if (type === null) {
                typeString = "null";
              } else if (isArray(type)) {
                typeString = "array";
              } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                info2 = " Did you accidentally export a JSX literal instead of a component?";
              } else {
                typeString = typeof type;
              }
              error2("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info2);
            }
            var element = jsxDEV(type, props, key, source, self2);
            if (element == null) {
              return element;
            }
            if (validType) {
              var children = props.children;
              if (children !== void 0) {
                if (isStaticChildren) {
                  if (isArray(children)) {
                    for (var i3 = 0; i3 < children.length; i3++) {
                      validateChildKeys(children[i3], type);
                    }
                    if (Object.freeze) {
                      Object.freeze(children);
                    }
                  } else {
                    error2("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                  }
                } else {
                  validateChildKeys(children, type);
                }
              }
            }
            if (type === REACT_FRAGMENT_TYPE) {
              validateFragmentProps(element);
            } else {
              validatePropTypes(element);
            }
            return element;
          }
        }
        function jsxWithValidationStatic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, true);
          }
        }
        function jsxWithValidationDynamic(type, props, key) {
          {
            return jsxWithValidation(type, props, key, false);
          }
        }
        var jsx2 = jsxWithValidationDynamic;
        var jsxs2 = jsxWithValidationStatic;
        exports2.Fragment = REACT_FRAGMENT_TYPE;
        exports2.jsx = jsx2;
        exports2.jsxs = jsxs2;
      })();
    }
  }
});

// ../../node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "../../node_modules/react/jsx-runtime.js"(exports2, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_jsx_runtime_development();
    }
  }
});

// ../../node_modules/@fortawesome/free-solid-svg-icons/index.mjs
var faComment, faPaperPlane;
var init_free_solid_svg_icons = __esm({
  "../../node_modules/@fortawesome/free-solid-svg-icons/index.mjs"() {
    faComment = {
      prefix: "fas",
      iconName: "comment",
      icon: [512, 512, [128489, 61669], "f075", "M512 240c0 114.9-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6C73.6 471.1 44.7 480 16 480c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4l0 0 0 0 0 0 0 0 .3-.3c.3-.3 .7-.7 1.3-1.4c1.1-1.2 2.8-3.1 4.9-5.7c4.1-5 9.6-12.4 15.2-21.6c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208z"]
    };
    faPaperPlane = {
      prefix: "fas",
      iconName: "paper-plane",
      icon: [512, 512, [61913], "f1d8", "M498.1 5.6c10.1 7 15.4 19.1 13.5 31.2l-64 416c-1.5 9.7-7.4 18.2-16 23s-18.9 5.4-28 1.6L284 427.7l-68.5 74.1c-8.9 9.7-22.9 12.9-35.2 8.1S160 493.2 160 480V396.4c0-4 1.5-7.8 4.2-10.7L331.8 202.8c5.8-6.3 5.6-16-.4-22s-15.7-6.4-22-.7L106 360.8 17.7 316.6C7.1 311.3 .3 300.7 0 288.9s5.9-22.8 16.1-28.7l448-256c10.7-6.1 23.9-5.5 34 1.4z"]
    };
  }
});

// ../../node_modules/@fortawesome/fontawesome-svg-core/index.mjs
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i3 = 1; i3 < arguments.length; i3++) {
    var source = null != arguments[i3] ? arguments[i3] : {};
    i3 % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _defineProperties(target, props) {
  for (var i3 = 0; i3 < props.length; i3++) {
    var descriptor = props[i3];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor)
      descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps)
    _defineProperties(Constructor.prototype, protoProps);
  if (staticProps)
    _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _slicedToArray(arr, i3) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i3) || _unsupportedIterableToArray(arr, i3) || _nonIterableRest();
}
function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray(arr);
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _iterableToArrayLimit(arr, i3) {
  var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
  if (_i == null)
    return;
  var _arr = [];
  var _n2 = true;
  var _d = false;
  var _s, _e2;
  try {
    for (_i = _i.call(arr); !(_n2 = (_s = _i.next()).done); _n2 = true) {
      _arr.push(_s.value);
      if (i3 && _arr.length === i3)
        break;
    }
  } catch (err2) {
    _d = true;
    _e2 = err2;
  } finally {
    try {
      if (!_n2 && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e2;
    }
  }
  return _arr;
}
function _unsupportedIterableToArray(o5, minLen) {
  if (!o5)
    return;
  if (typeof o5 === "string")
    return _arrayLikeToArray(o5, minLen);
  var n3 = Object.prototype.toString.call(o5).slice(8, -1);
  if (n3 === "Object" && o5.constructor)
    n3 = o5.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o5);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray(o5, minLen);
}
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i3 = 0, arr2 = new Array(len); i3 < len; i3++)
    arr2[i3] = arr[i3];
  return arr2;
}
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function familyProxy(obj) {
  return new Proxy(obj, {
    get: function get2(target, prop) {
      return prop in target ? target[prop] : target[FAMILY_CLASSIC];
    }
  });
}
function getAttrConfig(attr) {
  var element = DOCUMENT.querySelector("script[" + attr + "]");
  if (element) {
    return element.getAttribute(attr);
  }
}
function coerce(val) {
  if (val === "")
    return true;
  if (val === "false")
    return false;
  if (val === "true")
    return true;
  return val;
}
function onChange(cb) {
  _onChangeCb.push(cb);
  return function() {
    _onChangeCb.splice(_onChangeCb.indexOf(cb), 1);
  };
}
function insertCss(css2) {
  if (!css2 || !IS_DOM) {
    return;
  }
  var style = DOCUMENT.createElement("style");
  style.setAttribute("type", "text/css");
  style.innerHTML = css2;
  var headChildren = DOCUMENT.head.childNodes;
  var beforeChild = null;
  for (var i3 = headChildren.length - 1; i3 > -1; i3--) {
    var child = headChildren[i3];
    var tagName = (child.tagName || "").toUpperCase();
    if (["STYLE", "LINK"].indexOf(tagName) > -1) {
      beforeChild = child;
    }
  }
  DOCUMENT.head.insertBefore(style, beforeChild);
  return css2;
}
function nextUniqueId() {
  var size = 12;
  var id = "";
  while (size-- > 0) {
    id += idPool[Math.random() * 62 | 0];
  }
  return id;
}
function toArray(obj) {
  var array = [];
  for (var i3 = (obj || []).length >>> 0; i3--; ) {
    array[i3] = obj[i3];
  }
  return array;
}
function classArray(node) {
  if (node.classList) {
    return toArray(node.classList);
  } else {
    return (node.getAttribute("class") || "").split(" ").filter(function(i3) {
      return i3;
    });
  }
}
function htmlEscape(str) {
  return "".concat(str).replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
}
function joinAttributes(attributes) {
  return Object.keys(attributes || {}).reduce(function(acc, attributeName) {
    return acc + "".concat(attributeName, '="').concat(htmlEscape(attributes[attributeName]), '" ');
  }, "").trim();
}
function joinStyles(styles2) {
  return Object.keys(styles2 || {}).reduce(function(acc, styleName) {
    return acc + "".concat(styleName, ": ").concat(styles2[styleName].trim(), ";");
  }, "");
}
function transformIsMeaningful(transform) {
  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;
}
function transformForSvg(_ref2) {
  var transform = _ref2.transform, containerWidth = _ref2.containerWidth, iconWidth = _ref2.iconWidth;
  var outer = {
    transform: "translate(".concat(containerWidth / 2, " 256)")
  };
  var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
  var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
  var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
  var inner = {
    transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
  };
  var path = {
    transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
  };
  return {
    outer,
    inner,
    path
  };
}
function transformForCss(_ref2) {
  var transform = _ref2.transform, _ref2$width = _ref2.width, width = _ref2$width === void 0 ? UNITS_IN_GRID : _ref2$width, _ref2$height = _ref2.height, height = _ref2$height === void 0 ? UNITS_IN_GRID : _ref2$height, _ref2$startCentered = _ref2.startCentered, startCentered = _ref2$startCentered === void 0 ? false : _ref2$startCentered;
  var val = "";
  if (startCentered && IS_IE) {
    val += "translate(".concat(transform.x / d4 - width / 2, "em, ").concat(transform.y / d4 - height / 2, "em) ");
  } else if (startCentered) {
    val += "translate(calc(-50% + ".concat(transform.x / d4, "em), calc(-50% + ").concat(transform.y / d4, "em)) ");
  } else {
    val += "translate(".concat(transform.x / d4, "em, ").concat(transform.y / d4, "em) ");
  }
  val += "scale(".concat(transform.size / d4 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / d4 * (transform.flipY ? -1 : 1), ") ");
  val += "rotate(".concat(transform.rotate, "deg) ");
  return val;
}
function css() {
  var dcp = DEFAULT_CSS_PREFIX;
  var drc = DEFAULT_REPLACEMENT_CLASS;
  var fp = config.cssPrefix;
  var rc = config.replacementClass;
  var s3 = baseStyles;
  if (fp !== dcp || rc !== drc) {
    var dPatt = new RegExp("\\.".concat(dcp, "\\-"), "g");
    var customPropPatt = new RegExp("\\--".concat(dcp, "\\-"), "g");
    var rPatt = new RegExp("\\.".concat(drc), "g");
    s3 = s3.replace(dPatt, ".".concat(fp, "-")).replace(customPropPatt, "--".concat(fp, "-")).replace(rPatt, ".".concat(rc));
  }
  return s3;
}
function ensureCss() {
  if (config.autoAddCss && !_cssInserted) {
    insertCss(css());
    _cssInserted = true;
  }
}
function domready(fn2) {
  if (!IS_DOM)
    return;
  loaded ? setTimeout(fn2, 0) : functions.push(fn2);
}
function toHtml(abstractNodes) {
  var tag = abstractNodes.tag, _abstractNodes$attrib = abstractNodes.attributes, attributes = _abstractNodes$attrib === void 0 ? {} : _abstractNodes$attrib, _abstractNodes$childr = abstractNodes.children, children = _abstractNodes$childr === void 0 ? [] : _abstractNodes$childr;
  if (typeof abstractNodes === "string") {
    return htmlEscape(abstractNodes);
  } else {
    return "<".concat(tag, " ").concat(joinAttributes(attributes), ">").concat(children.map(toHtml).join(""), "</").concat(tag, ">");
  }
}
function iconFromMapping(mapping, prefix, iconName) {
  if (mapping && mapping[prefix] && mapping[prefix][iconName]) {
    return {
      prefix,
      iconName,
      icon: mapping[prefix][iconName]
    };
  }
}
function ucs2decode(string) {
  var output = [];
  var counter2 = 0;
  var length = string.length;
  while (counter2 < length) {
    var value = string.charCodeAt(counter2++);
    if (value >= 55296 && value <= 56319 && counter2 < length) {
      var extra = string.charCodeAt(counter2++);
      if ((extra & 64512) == 56320) {
        output.push(((value & 1023) << 10) + (extra & 1023) + 65536);
      } else {
        output.push(value);
        counter2--;
      }
    } else {
      output.push(value);
    }
  }
  return output;
}
function toHex(unicode) {
  var decoded = ucs2decode(unicode);
  return decoded.length === 1 ? decoded[0].toString(16) : null;
}
function codePointAt(string, index) {
  var size = string.length;
  var first = string.charCodeAt(index);
  var second;
  if (first >= 55296 && first <= 56319 && size > index + 1) {
    second = string.charCodeAt(index + 1);
    if (second >= 56320 && second <= 57343) {
      return (first - 55296) * 1024 + second - 56320 + 65536;
    }
  }
  return first;
}
function normalizeIcons(icons) {
  return Object.keys(icons).reduce(function(acc, iconName) {
    var icon3 = icons[iconName];
    var expanded = !!icon3.icon;
    if (expanded) {
      acc[icon3.iconName] = icon3.icon;
    } else {
      acc[iconName] = icon3;
    }
    return acc;
  }, {});
}
function defineIcons(prefix, icons) {
  var params = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  var _params$skipHooks = params.skipHooks, skipHooks = _params$skipHooks === void 0 ? false : _params$skipHooks;
  var normalized = normalizeIcons(icons);
  if (typeof namespace.hooks.addPack === "function" && !skipHooks) {
    namespace.hooks.addPack(prefix, normalizeIcons(icons));
  } else {
    namespace.styles[prefix] = _objectSpread2(_objectSpread2({}, namespace.styles[prefix] || {}), normalized);
  }
  if (prefix === "fas") {
    defineIcons("fa", icons);
  }
}
function isReserved(name) {
  return ~RESERVED_CLASSES.indexOf(name);
}
function getIconName(cssPrefix, cls) {
  var parts = cls.split("-");
  var prefix = parts[0];
  var iconName = parts.slice(1).join("-");
  if (prefix === cssPrefix && iconName !== "" && !isReserved(iconName)) {
    return iconName;
  } else {
    return null;
  }
}
function byUnicode(prefix, unicode) {
  return (_byUnicode[prefix] || {})[unicode];
}
function byLigature(prefix, ligature) {
  return (_byLigature[prefix] || {})[ligature];
}
function byAlias(prefix, alias) {
  return (_byAlias[prefix] || {})[alias];
}
function byOldName(name) {
  return _byOldName[name] || {
    prefix: null,
    iconName: null
  };
}
function byOldUnicode(unicode) {
  var oldUnicode = _byOldUnicode[unicode];
  var newUnicode = byUnicode("fas", unicode);
  return oldUnicode || (newUnicode ? {
    prefix: "fas",
    iconName: newUnicode
  } : null) || {
    prefix: null,
    iconName: null
  };
}
function getDefaultUsablePrefix() {
  return _defaultUsablePrefix;
}
function getCanonicalPrefix(styleOrPrefix) {
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$family = params.family, family = _params$family === void 0 ? FAMILY_CLASSIC : _params$family;
  var style = PREFIX_TO_STYLE[family][styleOrPrefix];
  var prefix = STYLE_TO_PREFIX[family][styleOrPrefix] || STYLE_TO_PREFIX[family][style];
  var defined = styleOrPrefix in namespace.styles ? styleOrPrefix : null;
  return prefix || defined || null;
}
function getCanonicalIcon(values) {
  var _famProps;
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$skipLookups = params.skipLookups, skipLookups = _params$skipLookups === void 0 ? false : _params$skipLookups;
  var famProps = (_famProps = {}, _defineProperty(_famProps, FAMILY_CLASSIC, "".concat(config.cssPrefix, "-").concat(FAMILY_CLASSIC)), _defineProperty(_famProps, FAMILY_SHARP, "".concat(config.cssPrefix, "-").concat(FAMILY_SHARP)), _famProps);
  var givenPrefix = null;
  var family = FAMILY_CLASSIC;
  if (values.includes(famProps[FAMILY_CLASSIC]) || values.some(function(v4) {
    return PREFIXES_FOR_FAMILY[FAMILY_CLASSIC].includes(v4);
  })) {
    family = FAMILY_CLASSIC;
  }
  if (values.includes(famProps[FAMILY_SHARP]) || values.some(function(v4) {
    return PREFIXES_FOR_FAMILY[FAMILY_SHARP].includes(v4);
  })) {
    family = FAMILY_SHARP;
  }
  var canonical = values.reduce(function(acc, cls) {
    var iconName = getIconName(config.cssPrefix, cls);
    if (styles[cls]) {
      cls = LONG_STYLE[family].includes(cls) ? LONG_STYLE_TO_PREFIX[family][cls] : cls;
      givenPrefix = cls;
      acc.prefix = cls;
    } else if (PREFIXES[family].indexOf(cls) > -1) {
      givenPrefix = cls;
      acc.prefix = getCanonicalPrefix(cls, {
        family
      });
    } else if (iconName) {
      acc.iconName = iconName;
    } else if (cls !== config.replacementClass && cls !== famProps[FAMILY_CLASSIC] && cls !== famProps[FAMILY_SHARP]) {
      acc.rest.push(cls);
    }
    if (!skipLookups && acc.prefix && acc.iconName) {
      var shim = givenPrefix === "fa" ? byOldName(acc.iconName) : {};
      var aliasIconName = byAlias(acc.prefix, acc.iconName);
      if (shim.prefix) {
        givenPrefix = null;
      }
      acc.iconName = shim.iconName || aliasIconName || acc.iconName;
      acc.prefix = shim.prefix || acc.prefix;
      if (acc.prefix === "far" && !styles["far"] && styles["fas"] && !config.autoFetchSvg) {
        acc.prefix = "fas";
      }
    }
    return acc;
  }, emptyCanonicalIcon());
  if (values.includes("fa-brands") || values.includes("fab")) {
    canonical.prefix = "fab";
  }
  if (values.includes("fa-duotone") || values.includes("fad")) {
    canonical.prefix = "fad";
  }
  if (!canonical.prefix && family === FAMILY_SHARP && (styles["fass"] || config.autoFetchSvg)) {
    canonical.prefix = "fass";
    canonical.iconName = byAlias(canonical.prefix, canonical.iconName) || canonical.iconName;
  }
  if (canonical.prefix === "fa" || givenPrefix === "fa") {
    canonical.prefix = getDefaultUsablePrefix() || "fas";
  }
  return canonical;
}
function registerPlugins(nextPlugins, _ref2) {
  var obj = _ref2.mixoutsTo;
  _plugins = nextPlugins;
  _hooks = {};
  Object.keys(providers).forEach(function(k6) {
    if (defaultProviderKeys.indexOf(k6) === -1) {
      delete providers[k6];
    }
  });
  _plugins.forEach(function(plugin) {
    var mixout8 = plugin.mixout ? plugin.mixout() : {};
    Object.keys(mixout8).forEach(function(tk) {
      if (typeof mixout8[tk] === "function") {
        obj[tk] = mixout8[tk];
      }
      if (_typeof(mixout8[tk]) === "object") {
        Object.keys(mixout8[tk]).forEach(function(sk) {
          if (!obj[tk]) {
            obj[tk] = {};
          }
          obj[tk][sk] = mixout8[tk][sk];
        });
      }
    });
    if (plugin.hooks) {
      var hooks8 = plugin.hooks();
      Object.keys(hooks8).forEach(function(hook) {
        if (!_hooks[hook]) {
          _hooks[hook] = [];
        }
        _hooks[hook].push(hooks8[hook]);
      });
    }
    if (plugin.provides) {
      plugin.provides(providers);
    }
  });
  return obj;
}
function chainHooks(hook, accumulator) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function(hookFn) {
    accumulator = hookFn.apply(null, [accumulator].concat(args));
  });
  return accumulator;
}
function callHooks(hook) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }
  var hookFns = _hooks[hook] || [];
  hookFns.forEach(function(hookFn) {
    hookFn.apply(null, args);
  });
  return void 0;
}
function callProvided() {
  var hook = arguments[0];
  var args = Array.prototype.slice.call(arguments, 1);
  return providers[hook] ? providers[hook].apply(null, args) : void 0;
}
function findIconDefinition(iconLookup) {
  if (iconLookup.prefix === "fa") {
    iconLookup.prefix = "fas";
  }
  var iconName = iconLookup.iconName;
  var prefix = iconLookup.prefix || getDefaultUsablePrefix();
  if (!iconName)
    return;
  iconName = byAlias(prefix, iconName) || iconName;
  return iconFromMapping(library.definitions, prefix, iconName) || iconFromMapping(namespace.styles, prefix, iconName);
}
function domVariants(val, abstractCreator) {
  Object.defineProperty(val, "abstract", {
    get: abstractCreator
  });
  Object.defineProperty(val, "html", {
    get: function get2() {
      return val.abstract.map(function(a3) {
        return toHtml(a3);
      });
    }
  });
  Object.defineProperty(val, "node", {
    get: function get2() {
      if (!IS_DOM)
        return;
      var container = DOCUMENT.createElement("div");
      container.innerHTML = val.html;
      return container.children;
    }
  });
  return val;
}
function asIcon(_ref2) {
  var children = _ref2.children, main = _ref2.main, mask = _ref2.mask, attributes = _ref2.attributes, styles2 = _ref2.styles, transform = _ref2.transform;
  if (transformIsMeaningful(transform) && main.found && !mask.found) {
    var width = main.width, height = main.height;
    var offset = {
      x: width / height / 2,
      y: 0.5
    };
    attributes["style"] = joinStyles(_objectSpread2(_objectSpread2({}, styles2), {}, {
      "transform-origin": "".concat(offset.x + transform.x / 16, "em ").concat(offset.y + transform.y / 16, "em")
    }));
  }
  return [{
    tag: "svg",
    attributes,
    children
  }];
}
function asSymbol(_ref2) {
  var prefix = _ref2.prefix, iconName = _ref2.iconName, children = _ref2.children, attributes = _ref2.attributes, symbol = _ref2.symbol;
  var id = symbol === true ? "".concat(prefix, "-").concat(config.cssPrefix, "-").concat(iconName) : symbol;
  return [{
    tag: "svg",
    attributes: {
      style: "display: none;"
    },
    children: [{
      tag: "symbol",
      attributes: _objectSpread2(_objectSpread2({}, attributes), {}, {
        id
      }),
      children
    }]
  }];
}
function makeInlineSvgAbstract(params) {
  var _params$icons = params.icons, main = _params$icons.main, mask = _params$icons.mask, prefix = params.prefix, iconName = params.iconName, transform = params.transform, symbol = params.symbol, title = params.title, maskId = params.maskId, titleId = params.titleId, extra = params.extra, _params$watchable = params.watchable, watchable = _params$watchable === void 0 ? false : _params$watchable;
  var _ref2 = mask.found ? mask : main, width = _ref2.width, height = _ref2.height;
  var isUploadedIcon = prefix === "fak";
  var attrClass = [config.replacementClass, iconName ? "".concat(config.cssPrefix, "-").concat(iconName) : ""].filter(function(c4) {
    return extra.classes.indexOf(c4) === -1;
  }).filter(function(c4) {
    return c4 !== "" || !!c4;
  }).concat(extra.classes).join(" ");
  var content = {
    children: [],
    attributes: _objectSpread2(_objectSpread2({}, extra.attributes), {}, {
      "data-prefix": prefix,
      "data-icon": iconName,
      "class": attrClass,
      "role": extra.attributes.role || "img",
      "xmlns": "http://www.w3.org/2000/svg",
      "viewBox": "0 0 ".concat(width, " ").concat(height)
    })
  };
  var uploadedIconWidthStyle = isUploadedIcon && !~extra.classes.indexOf("fa-fw") ? {
    width: "".concat(width / height * 16 * 0.0625, "em")
  } : {};
  if (watchable) {
    content.attributes[DATA_FA_I2SVG] = "";
  }
  if (title) {
    content.children.push({
      tag: "title",
      attributes: {
        id: content.attributes["aria-labelledby"] || "title-".concat(titleId || nextUniqueId())
      },
      children: [title]
    });
    delete content.attributes.title;
  }
  var args = _objectSpread2(_objectSpread2({}, content), {}, {
    prefix,
    iconName,
    main,
    mask,
    maskId,
    transform,
    symbol,
    styles: _objectSpread2(_objectSpread2({}, uploadedIconWidthStyle), extra.styles)
  });
  var _ref22 = mask.found && main.found ? callProvided("generateAbstractMask", args) || {
    children: [],
    attributes: {}
  } : callProvided("generateAbstractIcon", args) || {
    children: [],
    attributes: {}
  }, children = _ref22.children, attributes = _ref22.attributes;
  args.children = children;
  args.attributes = attributes;
  if (symbol) {
    return asSymbol(args);
  } else {
    return asIcon(args);
  }
}
function makeLayersTextAbstract(params) {
  var content = params.content, width = params.width, height = params.height, transform = params.transform, title = params.title, extra = params.extra, _params$watchable2 = params.watchable, watchable = _params$watchable2 === void 0 ? false : _params$watchable2;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    "title": title
  } : {}), {}, {
    "class": extra.classes.join(" ")
  });
  if (watchable) {
    attributes[DATA_FA_I2SVG] = "";
  }
  var styles2 = _objectSpread2({}, extra.styles);
  if (transformIsMeaningful(transform)) {
    styles2["transform"] = transformForCss({
      transform,
      startCentered: true,
      width,
      height
    });
    styles2["-webkit-transform"] = styles2["transform"];
  }
  var styleString = joinStyles(styles2);
  if (styleString.length > 0) {
    attributes["style"] = styleString;
  }
  var val = [];
  val.push({
    tag: "span",
    attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: "span",
      attributes: {
        class: "sr-only"
      },
      children: [title]
    });
  }
  return val;
}
function makeLayersCounterAbstract(params) {
  var content = params.content, title = params.title, extra = params.extra;
  var attributes = _objectSpread2(_objectSpread2(_objectSpread2({}, extra.attributes), title ? {
    "title": title
  } : {}), {}, {
    "class": extra.classes.join(" ")
  });
  var styleString = joinStyles(extra.styles);
  if (styleString.length > 0) {
    attributes["style"] = styleString;
  }
  var val = [];
  val.push({
    tag: "span",
    attributes,
    children: [content]
  });
  if (title) {
    val.push({
      tag: "span",
      attributes: {
        class: "sr-only"
      },
      children: [title]
    });
  }
  return val;
}
function asFoundIcon(icon3) {
  var width = icon3[0];
  var height = icon3[1];
  var _icon$slice = icon3.slice(4), _icon$slice2 = _slicedToArray(_icon$slice, 1), vectorData = _icon$slice2[0];
  var element = null;
  if (Array.isArray(vectorData)) {
    element = {
      tag: "g",
      attributes: {
        class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.GROUP)
      },
      children: [{
        tag: "path",
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.SECONDARY),
          fill: "currentColor",
          d: vectorData[0]
        }
      }, {
        tag: "path",
        attributes: {
          class: "".concat(config.cssPrefix, "-").concat(DUOTONE_CLASSES.PRIMARY),
          fill: "currentColor",
          d: vectorData[1]
        }
      }]
    };
  } else {
    element = {
      tag: "path",
      attributes: {
        fill: "currentColor",
        d: vectorData
      }
    };
  }
  return {
    found: true,
    width,
    height,
    icon: element
  };
}
function maybeNotifyMissing(iconName, prefix) {
  if (!PRODUCTION && !config.showMissingIcons && iconName) {
    console.error('Icon with name "'.concat(iconName, '" and prefix "').concat(prefix, '" is missing.'));
  }
}
function findIcon(iconName, prefix) {
  var givenPrefix = prefix;
  if (prefix === "fa" && config.styleDefault !== null) {
    prefix = getDefaultUsablePrefix();
  }
  return new Promise(function(resolve, reject) {
    var val = {
      found: false,
      width: 512,
      height: 512,
      icon: callProvided("missingIconAbstract") || {}
    };
    if (givenPrefix === "fa") {
      var shim = byOldName(iconName) || {};
      iconName = shim.iconName || iconName;
      prefix = shim.prefix || prefix;
    }
    if (iconName && prefix && styles$1[prefix] && styles$1[prefix][iconName]) {
      var icon3 = styles$1[prefix][iconName];
      return resolve(asFoundIcon(icon3));
    }
    maybeNotifyMissing(iconName, prefix);
    resolve(_objectSpread2(_objectSpread2({}, missingIconResolutionMixin), {}, {
      icon: config.showMissingIcons && iconName ? callProvided("missingIconAbstract") || {} : {}
    }));
  });
}
function isWatched(node) {
  var i2svg2 = node.getAttribute ? node.getAttribute(DATA_FA_I2SVG) : null;
  return typeof i2svg2 === "string";
}
function hasPrefixAndIcon(node) {
  var prefix = node.getAttribute ? node.getAttribute(DATA_PREFIX) : null;
  var icon3 = node.getAttribute ? node.getAttribute(DATA_ICON) : null;
  return prefix && icon3;
}
function hasBeenReplaced(node) {
  return node && node.classList && node.classList.contains && node.classList.contains(config.replacementClass);
}
function getMutator() {
  if (config.autoReplaceSvg === true) {
    return mutators.replace;
  }
  var mutator = mutators[config.autoReplaceSvg];
  return mutator || mutators.replace;
}
function createElementNS(tag) {
  return DOCUMENT.createElementNS("http://www.w3.org/2000/svg", tag);
}
function createElement3(tag) {
  return DOCUMENT.createElement(tag);
}
function convertSVG(abstractObj) {
  var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  var _params$ceFn = params.ceFn, ceFn = _params$ceFn === void 0 ? abstractObj.tag === "svg" ? createElementNS : createElement3 : _params$ceFn;
  if (typeof abstractObj === "string") {
    return DOCUMENT.createTextNode(abstractObj);
  }
  var tag = ceFn(abstractObj.tag);
  Object.keys(abstractObj.attributes || []).forEach(function(key) {
    tag.setAttribute(key, abstractObj.attributes[key]);
  });
  var children = abstractObj.children || [];
  children.forEach(function(child) {
    tag.appendChild(convertSVG(child, {
      ceFn
    }));
  });
  return tag;
}
function nodeAsComment(node) {
  var comment = " ".concat(node.outerHTML, " ");
  comment = "".concat(comment, "Font Awesome fontawesome.com ");
  return comment;
}
function performOperationSync(op) {
  op();
}
function perform(mutations, callback2) {
  var callbackFunction = typeof callback2 === "function" ? callback2 : noop$2;
  if (mutations.length === 0) {
    callbackFunction();
  } else {
    var frame = performOperationSync;
    if (config.mutateApproach === MUTATION_APPROACH_ASYNC) {
      frame = WINDOW.requestAnimationFrame || performOperationSync;
    }
    frame(function() {
      var mutator = getMutator();
      var mark = perf.begin("mutate");
      mutations.map(mutator);
      mark();
      callbackFunction();
    });
  }
}
function disableObservation() {
  disabled = true;
}
function enableObservation() {
  disabled = false;
}
function observe(options) {
  if (!MUTATION_OBSERVER) {
    return;
  }
  if (!config.observeMutations) {
    return;
  }
  var _options$treeCallback = options.treeCallback, treeCallback = _options$treeCallback === void 0 ? noop$2 : _options$treeCallback, _options$nodeCallback = options.nodeCallback, nodeCallback = _options$nodeCallback === void 0 ? noop$2 : _options$nodeCallback, _options$pseudoElemen = options.pseudoElementsCallback, pseudoElementsCallback = _options$pseudoElemen === void 0 ? noop$2 : _options$pseudoElemen, _options$observeMutat = options.observeMutationsRoot, observeMutationsRoot = _options$observeMutat === void 0 ? DOCUMENT : _options$observeMutat;
  mo = new MUTATION_OBSERVER(function(objects) {
    if (disabled)
      return;
    var defaultPrefix = getDefaultUsablePrefix();
    toArray(objects).forEach(function(mutationRecord) {
      if (mutationRecord.type === "childList" && mutationRecord.addedNodes.length > 0 && !isWatched(mutationRecord.addedNodes[0])) {
        if (config.searchPseudoElements) {
          pseudoElementsCallback(mutationRecord.target);
        }
        treeCallback(mutationRecord.target);
      }
      if (mutationRecord.type === "attributes" && mutationRecord.target.parentNode && config.searchPseudoElements) {
        pseudoElementsCallback(mutationRecord.target.parentNode);
      }
      if (mutationRecord.type === "attributes" && isWatched(mutationRecord.target) && ~ATTRIBUTES_WATCHED_FOR_MUTATION.indexOf(mutationRecord.attributeName)) {
        if (mutationRecord.attributeName === "class" && hasPrefixAndIcon(mutationRecord.target)) {
          var _getCanonicalIcon = getCanonicalIcon(classArray(mutationRecord.target)), prefix = _getCanonicalIcon.prefix, iconName = _getCanonicalIcon.iconName;
          mutationRecord.target.setAttribute(DATA_PREFIX, prefix || defaultPrefix);
          if (iconName)
            mutationRecord.target.setAttribute(DATA_ICON, iconName);
        } else if (hasBeenReplaced(mutationRecord.target)) {
          nodeCallback(mutationRecord.target);
        }
      }
    });
  });
  if (!IS_DOM)
    return;
  mo.observe(observeMutationsRoot, {
    childList: true,
    attributes: true,
    characterData: true,
    subtree: true
  });
}
function disconnect() {
  if (!mo)
    return;
  mo.disconnect();
}
function styleParser(node) {
  var style = node.getAttribute("style");
  var val = [];
  if (style) {
    val = style.split(";").reduce(function(acc, style2) {
      var styles2 = style2.split(":");
      var prop = styles2[0];
      var value = styles2.slice(1);
      if (prop && value.length > 0) {
        acc[prop] = value.join(":").trim();
      }
      return acc;
    }, {});
  }
  return val;
}
function classParser(node) {
  var existingPrefix = node.getAttribute("data-prefix");
  var existingIconName = node.getAttribute("data-icon");
  var innerText = node.innerText !== void 0 ? node.innerText.trim() : "";
  var val = getCanonicalIcon(classArray(node));
  if (!val.prefix) {
    val.prefix = getDefaultUsablePrefix();
  }
  if (existingPrefix && existingIconName) {
    val.prefix = existingPrefix;
    val.iconName = existingIconName;
  }
  if (val.iconName && val.prefix) {
    return val;
  }
  if (val.prefix && innerText.length > 0) {
    val.iconName = byLigature(val.prefix, node.innerText) || byUnicode(val.prefix, toHex(node.innerText));
  }
  if (!val.iconName && config.autoFetchSvg && node.firstChild && node.firstChild.nodeType === Node.TEXT_NODE) {
    val.iconName = node.firstChild.data;
  }
  return val;
}
function attributesParser(node) {
  var extraAttributes = toArray(node.attributes).reduce(function(acc, attr) {
    if (acc.name !== "class" && acc.name !== "style") {
      acc[attr.name] = attr.value;
    }
    return acc;
  }, {});
  var title = node.getAttribute("title");
  var titleId = node.getAttribute("data-fa-title-id");
  if (config.autoA11y) {
    if (title) {
      extraAttributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
    } else {
      extraAttributes["aria-hidden"] = "true";
      extraAttributes["focusable"] = "false";
    }
  }
  return extraAttributes;
}
function blankMeta() {
  return {
    iconName: null,
    title: null,
    titleId: null,
    prefix: null,
    transform: meaninglessTransform,
    symbol: false,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    extra: {
      classes: [],
      styles: {},
      attributes: {}
    }
  };
}
function parseMeta(node) {
  var parser = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
    styleParser: true
  };
  var _classParser = classParser(node), iconName = _classParser.iconName, prefix = _classParser.prefix, extraClasses = _classParser.rest;
  var extraAttributes = attributesParser(node);
  var pluginMeta = chainHooks("parseNodeAttributes", {}, node);
  var extraStyles = parser.styleParser ? styleParser(node) : [];
  return _objectSpread2({
    iconName,
    title: node.getAttribute("title"),
    titleId: node.getAttribute("data-fa-title-id"),
    prefix,
    transform: meaninglessTransform,
    mask: {
      iconName: null,
      prefix: null,
      rest: []
    },
    maskId: null,
    symbol: false,
    extra: {
      classes: extraClasses,
      styles: extraStyles,
      attributes: extraAttributes
    }
  }, pluginMeta);
}
function generateMutation(node) {
  var nodeMeta = config.autoReplaceSvg === "nest" ? parseMeta(node, {
    styleParser: false
  }) : parseMeta(node);
  if (~nodeMeta.extra.classes.indexOf(LAYERS_TEXT_CLASSNAME)) {
    return callProvided("generateLayersText", node, nodeMeta);
  } else {
    return callProvided("generateSvgReplacementMutation", node, nodeMeta);
  }
}
function onTree(root) {
  var callback2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  if (!IS_DOM)
    return Promise.resolve();
  var htmlClassList = DOCUMENT.documentElement.classList;
  var hclAdd = function hclAdd2(suffix) {
    return htmlClassList.add("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var hclRemove = function hclRemove2(suffix) {
    return htmlClassList.remove("".concat(HTML_CLASS_I2SVG_BASE_CLASS, "-").concat(suffix));
  };
  var prefixes2 = config.autoFetchSvg ? knownPrefixes : FAMILIES.map(function(f4) {
    return "fa-".concat(f4);
  }).concat(Object.keys(styles$2));
  if (!prefixes2.includes("fa")) {
    prefixes2.push("fa");
  }
  var prefixesDomQuery = [".".concat(LAYERS_TEXT_CLASSNAME, ":not([").concat(DATA_FA_I2SVG, "])")].concat(prefixes2.map(function(p6) {
    return ".".concat(p6, ":not([").concat(DATA_FA_I2SVG, "])");
  })).join(", ");
  if (prefixesDomQuery.length === 0) {
    return Promise.resolve();
  }
  var candidates = [];
  try {
    candidates = toArray(root.querySelectorAll(prefixesDomQuery));
  } catch (e2) {
  }
  if (candidates.length > 0) {
    hclAdd("pending");
    hclRemove("complete");
  } else {
    return Promise.resolve();
  }
  var mark = perf.begin("onTree");
  var mutations = candidates.reduce(function(acc, node) {
    try {
      var mutation = generateMutation(node);
      if (mutation) {
        acc.push(mutation);
      }
    } catch (e2) {
      if (!PRODUCTION) {
        if (e2.name === "MissingIcon") {
          console.error(e2);
        }
      }
    }
    return acc;
  }, []);
  return new Promise(function(resolve, reject) {
    Promise.all(mutations).then(function(resolvedMutations) {
      perform(resolvedMutations, function() {
        hclAdd("active");
        hclAdd("complete");
        hclRemove("pending");
        if (typeof callback2 === "function")
          callback2();
        mark();
        resolve();
      });
    }).catch(function(e2) {
      mark();
      reject(e2);
    });
  });
}
function onNode(node) {
  var callback2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
  generateMutation(node).then(function(mutation) {
    if (mutation) {
      perform([mutation], callback2);
    }
  });
}
function resolveIcons(next) {
  return function(maybeIconDefinition) {
    var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    var iconDefinition = (maybeIconDefinition || {}).icon ? maybeIconDefinition : findIconDefinition(maybeIconDefinition || {});
    var mask = params.mask;
    if (mask) {
      mask = (mask || {}).icon ? mask : findIconDefinition(mask || {});
    }
    return next(iconDefinition, _objectSpread2(_objectSpread2({}, params), {}, {
      mask
    }));
  };
}
function hexValueFromContent(content) {
  var cleaned = content.replace(CLEAN_CONTENT_PATTERN, "");
  var codePoint = codePointAt(cleaned, 0);
  var isPrependTen = codePoint >= SECONDARY_UNICODE_RANGE[0] && codePoint <= SECONDARY_UNICODE_RANGE[1];
  var isDoubled = cleaned.length === 2 ? cleaned[0] === cleaned[1] : false;
  return {
    value: isDoubled ? toHex(cleaned[0]) : toHex(cleaned),
    isSecondary: isPrependTen || isDoubled
  };
}
function replaceForPosition(node, position) {
  var pendingAttribute = "".concat(DATA_FA_PSEUDO_ELEMENT_PENDING).concat(position.replace(":", "-"));
  return new Promise(function(resolve, reject) {
    if (node.getAttribute(pendingAttribute) !== null) {
      return resolve();
    }
    var children = toArray(node.children);
    var alreadyProcessedPseudoElement = children.filter(function(c4) {
      return c4.getAttribute(DATA_FA_PSEUDO_ELEMENT) === position;
    })[0];
    var styles2 = WINDOW.getComputedStyle(node, position);
    var fontFamily = styles2.getPropertyValue("font-family").match(FONT_FAMILY_PATTERN);
    var fontWeight = styles2.getPropertyValue("font-weight");
    var content = styles2.getPropertyValue("content");
    if (alreadyProcessedPseudoElement && !fontFamily) {
      node.removeChild(alreadyProcessedPseudoElement);
      return resolve();
    } else if (fontFamily && content !== "none" && content !== "") {
      var _content = styles2.getPropertyValue("content");
      var family = ~["Sharp"].indexOf(fontFamily[2]) ? FAMILY_SHARP : FAMILY_CLASSIC;
      var prefix = ~["Solid", "Regular", "Light", "Thin", "Duotone", "Brands", "Kit"].indexOf(fontFamily[2]) ? STYLE_TO_PREFIX[family][fontFamily[2].toLowerCase()] : FONT_WEIGHT_TO_PREFIX[family][fontWeight];
      var _hexValueFromContent = hexValueFromContent(_content), hexValue = _hexValueFromContent.value, isSecondary = _hexValueFromContent.isSecondary;
      var isV4 = fontFamily[0].startsWith("FontAwesome");
      var iconName = byUnicode(prefix, hexValue);
      var iconIdentifier = iconName;
      if (isV4) {
        var iconName4 = byOldUnicode(hexValue);
        if (iconName4.iconName && iconName4.prefix) {
          iconName = iconName4.iconName;
          prefix = iconName4.prefix;
        }
      }
      if (iconName && !isSecondary && (!alreadyProcessedPseudoElement || alreadyProcessedPseudoElement.getAttribute(DATA_PREFIX) !== prefix || alreadyProcessedPseudoElement.getAttribute(DATA_ICON) !== iconIdentifier)) {
        node.setAttribute(pendingAttribute, iconIdentifier);
        if (alreadyProcessedPseudoElement) {
          node.removeChild(alreadyProcessedPseudoElement);
        }
        var meta2 = blankMeta();
        var extra = meta2.extra;
        extra.attributes[DATA_FA_PSEUDO_ELEMENT] = position;
        findIcon(iconName, prefix).then(function(main) {
          var _abstract = makeInlineSvgAbstract(_objectSpread2(_objectSpread2({}, meta2), {}, {
            icons: {
              main,
              mask: emptyCanonicalIcon()
            },
            prefix,
            iconName: iconIdentifier,
            extra,
            watchable: true
          }));
          var element = DOCUMENT.createElementNS("http://www.w3.org/2000/svg", "svg");
          if (position === "::before") {
            node.insertBefore(element, node.firstChild);
          } else {
            node.appendChild(element);
          }
          element.outerHTML = _abstract.map(function(a3) {
            return toHtml(a3);
          }).join("\n");
          node.removeAttribute(pendingAttribute);
          resolve();
        }).catch(reject);
      } else {
        resolve();
      }
    } else {
      resolve();
    }
  });
}
function replace3(node) {
  return Promise.all([replaceForPosition(node, "::before"), replaceForPosition(node, "::after")]);
}
function processable(node) {
  return node.parentNode !== document.head && !~TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS.indexOf(node.tagName.toUpperCase()) && !node.getAttribute(DATA_FA_PSEUDO_ELEMENT) && (!node.parentNode || node.parentNode.tagName !== "svg");
}
function searchPseudoElements(root) {
  if (!IS_DOM)
    return;
  return new Promise(function(resolve, reject) {
    var operations = toArray(root.querySelectorAll("*")).filter(processable).map(replace3);
    var end3 = perf.begin("searchPseudoElements");
    disableObservation();
    Promise.all(operations).then(function() {
      end3();
      enableObservation();
      resolve();
    }).catch(function() {
      end3();
      enableObservation();
      reject();
    });
  });
}
function fillBlack(_abstract) {
  var force = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
  if (_abstract.attributes && (_abstract.attributes.fill || force)) {
    _abstract.attributes.fill = "black";
  }
  return _abstract;
}
function deGroup(_abstract2) {
  if (_abstract2.tag === "g") {
    return _abstract2.children;
  } else {
    return [_abstract2];
  }
}
var noop2, _WINDOW, _DOCUMENT, _MUTATION_OBSERVER, _PERFORMANCE, _ref, _ref$userAgent, userAgent, WINDOW, DOCUMENT, MUTATION_OBSERVER, PERFORMANCE, IS_BROWSER, IS_DOM, IS_IE, _familyProxy, _familyProxy2, _familyProxy3, _familyProxy4, _familyProxy5, NAMESPACE_IDENTIFIER, UNITS_IN_GRID, DEFAULT_CSS_PREFIX, DEFAULT_REPLACEMENT_CLASS, DATA_FA_I2SVG, DATA_FA_PSEUDO_ELEMENT, DATA_FA_PSEUDO_ELEMENT_PENDING, DATA_PREFIX, DATA_ICON, HTML_CLASS_I2SVG_BASE_CLASS, MUTATION_APPROACH_ASYNC, TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS, PRODUCTION, FAMILY_CLASSIC, FAMILY_SHARP, FAMILIES, PREFIX_TO_STYLE, STYLE_TO_PREFIX, PREFIX_TO_LONG_STYLE, LONG_STYLE_TO_PREFIX, ICON_SELECTION_SYNTAX_PATTERN, LAYERS_TEXT_CLASSNAME, FONT_FAMILY_PATTERN, FONT_WEIGHT_TO_PREFIX, oneToTen, oneToTwenty, ATTRIBUTES_WATCHED_FOR_MUTATION, DUOTONE_CLASSES, prefixes, RESERVED_CLASSES, initial, attrs, _default, _config, config, _onChangeCb, d4, meaninglessTransform, idPool, baseStyles, _cssInserted, InjectCSS, w6, namespace, functions, listener, loaded, bindInternal4, reduce, _LONG_STYLE, _PREFIXES, _PREFIXES_FOR_FAMILY, styles, shims, LONG_STYLE, _defaultUsablePrefix, _byUnicode, _byLigature, _byOldName, _byOldUnicode, _byAlias, PREFIXES, build, emptyCanonicalIcon, PREFIXES_FOR_FAMILY, Library, _plugins, _hooks, providers, defaultProviderKeys, library, noAuto, dom, parse5, api, autoReplace, styles$1, missingIconResolutionMixin, noop$1, p5, preamble, begin, end, perf, noop$2, mutators, disabled, mo, styles$2, knownPrefixes, render, ReplaceElements, Layers, LayersCounter, LayersText, CLEAN_CONTENT_PATTERN, SECONDARY_UNICODE_RANGE, PseudoElements, _unwatched, MutationObserver$1, parseTransformString, PowerTransforms, ALL_SPACE, Masks, MissingIconIndicator, SvgSymbols, plugins, noAuto$1, config$1, library$1, dom$1, parse$1, findIconDefinition$1, toHtml$1, icon2, layer, text, counter;
var init_fontawesome_svg_core = __esm({
  "../../node_modules/@fortawesome/fontawesome-svg-core/index.mjs"() {
    noop2 = function noop3() {
    };
    _WINDOW = {};
    _DOCUMENT = {};
    _MUTATION_OBSERVER = null;
    _PERFORMANCE = {
      mark: noop2,
      measure: noop2
    };
    try {
      if (typeof window !== "undefined")
        _WINDOW = window;
      if (typeof document !== "undefined")
        _DOCUMENT = document;
      if (typeof MutationObserver !== "undefined")
        _MUTATION_OBSERVER = MutationObserver;
      if (typeof performance !== "undefined")
        _PERFORMANCE = performance;
    } catch (e2) {
    }
    _ref = _WINDOW.navigator || {};
    _ref$userAgent = _ref.userAgent;
    userAgent = _ref$userAgent === void 0 ? "" : _ref$userAgent;
    WINDOW = _WINDOW;
    DOCUMENT = _DOCUMENT;
    MUTATION_OBSERVER = _MUTATION_OBSERVER;
    PERFORMANCE = _PERFORMANCE;
    IS_BROWSER = !!WINDOW.document;
    IS_DOM = !!DOCUMENT.documentElement && !!DOCUMENT.head && typeof DOCUMENT.addEventListener === "function" && typeof DOCUMENT.createElement === "function";
    IS_IE = ~userAgent.indexOf("MSIE") || ~userAgent.indexOf("Trident/");
    NAMESPACE_IDENTIFIER = "___FONT_AWESOME___";
    UNITS_IN_GRID = 16;
    DEFAULT_CSS_PREFIX = "fa";
    DEFAULT_REPLACEMENT_CLASS = "svg-inline--fa";
    DATA_FA_I2SVG = "data-fa-i2svg";
    DATA_FA_PSEUDO_ELEMENT = "data-fa-pseudo-element";
    DATA_FA_PSEUDO_ELEMENT_PENDING = "data-fa-pseudo-element-pending";
    DATA_PREFIX = "data-prefix";
    DATA_ICON = "data-icon";
    HTML_CLASS_I2SVG_BASE_CLASS = "fontawesome-i2svg";
    MUTATION_APPROACH_ASYNC = "async";
    TAGNAMES_TO_SKIP_FOR_PSEUDOELEMENTS = ["HTML", "HEAD", "STYLE", "SCRIPT"];
    PRODUCTION = function() {
      try {
        return false;
      } catch (e2) {
        return false;
      }
    }();
    FAMILY_CLASSIC = "classic";
    FAMILY_SHARP = "sharp";
    FAMILIES = [FAMILY_CLASSIC, FAMILY_SHARP];
    PREFIX_TO_STYLE = familyProxy((_familyProxy = {}, _defineProperty(_familyProxy, FAMILY_CLASSIC, {
      "fa": "solid",
      "fas": "solid",
      "fa-solid": "solid",
      "far": "regular",
      "fa-regular": "regular",
      "fal": "light",
      "fa-light": "light",
      "fat": "thin",
      "fa-thin": "thin",
      "fad": "duotone",
      "fa-duotone": "duotone",
      "fab": "brands",
      "fa-brands": "brands",
      "fak": "kit",
      "fakd": "kit",
      "fa-kit": "kit",
      "fa-kit-duotone": "kit"
    }), _defineProperty(_familyProxy, FAMILY_SHARP, {
      "fa": "solid",
      "fass": "solid",
      "fa-solid": "solid",
      "fasr": "regular",
      "fa-regular": "regular",
      "fasl": "light",
      "fa-light": "light",
      "fast": "thin",
      "fa-thin": "thin"
    }), _familyProxy));
    STYLE_TO_PREFIX = familyProxy((_familyProxy2 = {}, _defineProperty(_familyProxy2, FAMILY_CLASSIC, {
      solid: "fas",
      regular: "far",
      light: "fal",
      thin: "fat",
      duotone: "fad",
      brands: "fab",
      kit: "fak"
    }), _defineProperty(_familyProxy2, FAMILY_SHARP, {
      solid: "fass",
      regular: "fasr",
      light: "fasl",
      thin: "fast"
    }), _familyProxy2));
    PREFIX_TO_LONG_STYLE = familyProxy((_familyProxy3 = {}, _defineProperty(_familyProxy3, FAMILY_CLASSIC, {
      fab: "fa-brands",
      fad: "fa-duotone",
      fak: "fa-kit",
      fal: "fa-light",
      far: "fa-regular",
      fas: "fa-solid",
      fat: "fa-thin"
    }), _defineProperty(_familyProxy3, FAMILY_SHARP, {
      fass: "fa-solid",
      fasr: "fa-regular",
      fasl: "fa-light",
      fast: "fa-thin"
    }), _familyProxy3));
    LONG_STYLE_TO_PREFIX = familyProxy((_familyProxy4 = {}, _defineProperty(_familyProxy4, FAMILY_CLASSIC, {
      "fa-brands": "fab",
      "fa-duotone": "fad",
      "fa-kit": "fak",
      "fa-light": "fal",
      "fa-regular": "far",
      "fa-solid": "fas",
      "fa-thin": "fat"
    }), _defineProperty(_familyProxy4, FAMILY_SHARP, {
      "fa-solid": "fass",
      "fa-regular": "fasr",
      "fa-light": "fasl",
      "fa-thin": "fast"
    }), _familyProxy4));
    ICON_SELECTION_SYNTAX_PATTERN = /fa(s|r|l|t|d|b|k|ss|sr|sl|st)?[\-\ ]/;
    LAYERS_TEXT_CLASSNAME = "fa-layers-text";
    FONT_FAMILY_PATTERN = /Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i;
    FONT_WEIGHT_TO_PREFIX = familyProxy((_familyProxy5 = {}, _defineProperty(_familyProxy5, FAMILY_CLASSIC, {
      900: "fas",
      400: "far",
      normal: "far",
      300: "fal",
      100: "fat"
    }), _defineProperty(_familyProxy5, FAMILY_SHARP, {
      900: "fass",
      400: "fasr",
      300: "fasl",
      100: "fast"
    }), _familyProxy5));
    oneToTen = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    oneToTwenty = oneToTen.concat([11, 12, 13, 14, 15, 16, 17, 18, 19, 20]);
    ATTRIBUTES_WATCHED_FOR_MUTATION = ["class", "data-prefix", "data-icon", "data-fa-transform", "data-fa-mask"];
    DUOTONE_CLASSES = {
      GROUP: "duotone-group",
      SWAP_OPACITY: "swap-opacity",
      PRIMARY: "primary",
      SECONDARY: "secondary"
    };
    prefixes = /* @__PURE__ */ new Set();
    Object.keys(STYLE_TO_PREFIX[FAMILY_CLASSIC]).map(prefixes.add.bind(prefixes));
    Object.keys(STYLE_TO_PREFIX[FAMILY_SHARP]).map(prefixes.add.bind(prefixes));
    RESERVED_CLASSES = [].concat(FAMILIES, _toConsumableArray(prefixes), ["2xs", "xs", "sm", "lg", "xl", "2xl", "beat", "border", "fade", "beat-fade", "bounce", "flip-both", "flip-horizontal", "flip-vertical", "flip", "fw", "inverse", "layers-counter", "layers-text", "layers", "li", "pull-left", "pull-right", "pulse", "rotate-180", "rotate-270", "rotate-90", "rotate-by", "shake", "spin-pulse", "spin-reverse", "spin", "stack-1x", "stack-2x", "stack", "ul", DUOTONE_CLASSES.GROUP, DUOTONE_CLASSES.SWAP_OPACITY, DUOTONE_CLASSES.PRIMARY, DUOTONE_CLASSES.SECONDARY]).concat(oneToTen.map(function(n3) {
      return "".concat(n3, "x");
    })).concat(oneToTwenty.map(function(n3) {
      return "w-".concat(n3);
    }));
    initial = WINDOW.FontAwesomeConfig || {};
    if (DOCUMENT && typeof DOCUMENT.querySelector === "function") {
      attrs = [["data-family-prefix", "familyPrefix"], ["data-css-prefix", "cssPrefix"], ["data-family-default", "familyDefault"], ["data-style-default", "styleDefault"], ["data-replacement-class", "replacementClass"], ["data-auto-replace-svg", "autoReplaceSvg"], ["data-auto-add-css", "autoAddCss"], ["data-auto-a11y", "autoA11y"], ["data-search-pseudo-elements", "searchPseudoElements"], ["data-observe-mutations", "observeMutations"], ["data-mutate-approach", "mutateApproach"], ["data-keep-original-source", "keepOriginalSource"], ["data-measure-performance", "measurePerformance"], ["data-show-missing-icons", "showMissingIcons"]];
      attrs.forEach(function(_ref2) {
        var _ref22 = _slicedToArray(_ref2, 2), attr = _ref22[0], key = _ref22[1];
        var val = coerce(getAttrConfig(attr));
        if (val !== void 0 && val !== null) {
          initial[key] = val;
        }
      });
    }
    _default = {
      styleDefault: "solid",
      familyDefault: "classic",
      cssPrefix: DEFAULT_CSS_PREFIX,
      replacementClass: DEFAULT_REPLACEMENT_CLASS,
      autoReplaceSvg: true,
      autoAddCss: true,
      autoA11y: true,
      searchPseudoElements: false,
      observeMutations: true,
      mutateApproach: "async",
      keepOriginalSource: true,
      measurePerformance: false,
      showMissingIcons: true
    };
    if (initial.familyPrefix) {
      initial.cssPrefix = initial.familyPrefix;
    }
    _config = _objectSpread2(_objectSpread2({}, _default), initial);
    if (!_config.autoReplaceSvg)
      _config.observeMutations = false;
    config = {};
    Object.keys(_default).forEach(function(key) {
      Object.defineProperty(config, key, {
        enumerable: true,
        set: function set2(val) {
          _config[key] = val;
          _onChangeCb.forEach(function(cb) {
            return cb(config);
          });
        },
        get: function get2() {
          return _config[key];
        }
      });
    });
    Object.defineProperty(config, "familyPrefix", {
      enumerable: true,
      set: function set(val) {
        _config.cssPrefix = val;
        _onChangeCb.forEach(function(cb) {
          return cb(config);
        });
      },
      get: function get() {
        return _config.cssPrefix;
      }
    });
    WINDOW.FontAwesomeConfig = config;
    _onChangeCb = [];
    d4 = UNITS_IN_GRID;
    meaninglessTransform = {
      size: 16,
      x: 0,
      y: 0,
      rotate: 0,
      flipX: false,
      flipY: false
    };
    idPool = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";
    baseStyles = ':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-thin: normal 100 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-counter-scale, 0.25));\n          transform: scale(var(--fa-counter-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(var(--fa-li-width, 2em) * -1);\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  -webkit-animation-name: fa-beat;\n          animation-name: fa-beat;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  -webkit-animation-name: fa-bounce;\n          animation-name: fa-bounce;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  -webkit-animation-name: fa-fade;\n          animation-name: fa-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  -webkit-animation-name: fa-beat-fade;\n          animation-name: fa-beat-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  -webkit-animation-name: fa-flip;\n          animation-name: fa-flip;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  -webkit-animation-name: fa-shake;\n          animation-name: fa-shake;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 2s);\n          animation-duration: var(--fa-animation-duration, 2s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));\n          animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    -webkit-animation-delay: -1ms;\n            animation-delay: -1ms;\n    -webkit-animation-duration: 1ms;\n            animation-duration: 1ms;\n    -webkit-animation-iteration-count: 1;\n            animation-iteration-count: 1;\n    -webkit-transition-delay: 0s;\n            transition-delay: 0s;\n    -webkit-transition-duration: 0s;\n            transition-duration: 0s;\n  }\n}\n@-webkit-keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@-webkit-keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@-webkit-keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@-webkit-keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@-webkit-keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@-webkit-keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  -webkit-transform: rotate(var(--fa-rotate-angle, none));\n          transform: rotate(var(--fa-rotate-angle, none));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';
    _cssInserted = false;
    InjectCSS = {
      mixout: function mixout() {
        return {
          dom: {
            css,
            insertCss: ensureCss
          }
        };
      },
      hooks: function hooks() {
        return {
          beforeDOMElementCreation: function beforeDOMElementCreation() {
            ensureCss();
          },
          beforeI2svg: function beforeI2svg() {
            ensureCss();
          }
        };
      }
    };
    w6 = WINDOW || {};
    if (!w6[NAMESPACE_IDENTIFIER])
      w6[NAMESPACE_IDENTIFIER] = {};
    if (!w6[NAMESPACE_IDENTIFIER].styles)
      w6[NAMESPACE_IDENTIFIER].styles = {};
    if (!w6[NAMESPACE_IDENTIFIER].hooks)
      w6[NAMESPACE_IDENTIFIER].hooks = {};
    if (!w6[NAMESPACE_IDENTIFIER].shims)
      w6[NAMESPACE_IDENTIFIER].shims = [];
    namespace = w6[NAMESPACE_IDENTIFIER];
    functions = [];
    listener = function listener2() {
      DOCUMENT.removeEventListener("DOMContentLoaded", listener2);
      loaded = 1;
      functions.map(function(fn2) {
        return fn2();
      });
    };
    loaded = false;
    if (IS_DOM) {
      loaded = (DOCUMENT.documentElement.doScroll ? /^loaded|^c/ : /^loaded|^i|^c/).test(DOCUMENT.readyState);
      if (!loaded)
        DOCUMENT.addEventListener("DOMContentLoaded", listener);
    }
    bindInternal4 = function bindInternal42(func, thisContext) {
      return function(a3, b5, c4, d5) {
        return func.call(thisContext, a3, b5, c4, d5);
      };
    };
    reduce = function fastReduceObject(subject, fn2, initialValue, thisContext) {
      var keys = Object.keys(subject), length = keys.length, iterator = thisContext !== void 0 ? bindInternal4(fn2, thisContext) : fn2, i3, key, result;
      if (initialValue === void 0) {
        i3 = 1;
        result = subject[keys[0]];
      } else {
        i3 = 0;
        result = initialValue;
      }
      for (; i3 < length; i3++) {
        key = keys[i3];
        result = iterator(result, subject[key], key, subject);
      }
      return result;
    };
    styles = namespace.styles;
    shims = namespace.shims;
    LONG_STYLE = (_LONG_STYLE = {}, _defineProperty(_LONG_STYLE, FAMILY_CLASSIC, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty(_LONG_STYLE, FAMILY_SHARP, Object.values(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _LONG_STYLE);
    _defaultUsablePrefix = null;
    _byUnicode = {};
    _byLigature = {};
    _byOldName = {};
    _byOldUnicode = {};
    _byAlias = {};
    PREFIXES = (_PREFIXES = {}, _defineProperty(_PREFIXES, FAMILY_CLASSIC, Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC])), _defineProperty(_PREFIXES, FAMILY_SHARP, Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP])), _PREFIXES);
    build = function build2() {
      var lookup2 = function lookup3(reducer) {
        return reduce(styles, function(o5, style, prefix) {
          o5[prefix] = reduce(style, reducer, {});
          return o5;
        }, {});
      };
      _byUnicode = lookup2(function(acc, icon3, iconName) {
        if (icon3[3]) {
          acc[icon3[3]] = iconName;
        }
        if (icon3[2]) {
          var aliases = icon3[2].filter(function(a3) {
            return typeof a3 === "number";
          });
          aliases.forEach(function(alias) {
            acc[alias.toString(16)] = iconName;
          });
        }
        return acc;
      });
      _byLigature = lookup2(function(acc, icon3, iconName) {
        acc[iconName] = iconName;
        if (icon3[2]) {
          var aliases = icon3[2].filter(function(a3) {
            return typeof a3 === "string";
          });
          aliases.forEach(function(alias) {
            acc[alias] = iconName;
          });
        }
        return acc;
      });
      _byAlias = lookup2(function(acc, icon3, iconName) {
        var aliases = icon3[2];
        acc[iconName] = iconName;
        aliases.forEach(function(alias) {
          acc[alias] = iconName;
        });
        return acc;
      });
      var hasRegular = "far" in styles || config.autoFetchSvg;
      var shimLookups = reduce(shims, function(acc, shim) {
        var maybeNameMaybeUnicode = shim[0];
        var prefix = shim[1];
        var iconName = shim[2];
        if (prefix === "far" && !hasRegular) {
          prefix = "fas";
        }
        if (typeof maybeNameMaybeUnicode === "string") {
          acc.names[maybeNameMaybeUnicode] = {
            prefix,
            iconName
          };
        }
        if (typeof maybeNameMaybeUnicode === "number") {
          acc.unicodes[maybeNameMaybeUnicode.toString(16)] = {
            prefix,
            iconName
          };
        }
        return acc;
      }, {
        names: {},
        unicodes: {}
      });
      _byOldName = shimLookups.names;
      _byOldUnicode = shimLookups.unicodes;
      _defaultUsablePrefix = getCanonicalPrefix(config.styleDefault, {
        family: config.familyDefault
      });
    };
    onChange(function(c4) {
      _defaultUsablePrefix = getCanonicalPrefix(c4.styleDefault, {
        family: config.familyDefault
      });
    });
    build();
    emptyCanonicalIcon = function emptyCanonicalIcon2() {
      return {
        prefix: null,
        iconName: null,
        rest: []
      };
    };
    PREFIXES_FOR_FAMILY = (_PREFIXES_FOR_FAMILY = {}, _defineProperty(_PREFIXES_FOR_FAMILY, FAMILY_CLASSIC, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC])), _defineProperty(_PREFIXES_FOR_FAMILY, FAMILY_SHARP, Object.keys(PREFIX_TO_LONG_STYLE[FAMILY_SHARP])), _PREFIXES_FOR_FAMILY);
    Library = /* @__PURE__ */ function() {
      function Library2() {
        _classCallCheck(this, Library2);
        this.definitions = {};
      }
      _createClass(Library2, [{
        key: "add",
        value: function add() {
          var _this = this;
          for (var _len = arguments.length, definitions = new Array(_len), _key = 0; _key < _len; _key++) {
            definitions[_key] = arguments[_key];
          }
          var additions = definitions.reduce(this._pullDefinitions, {});
          Object.keys(additions).forEach(function(key) {
            _this.definitions[key] = _objectSpread2(_objectSpread2({}, _this.definitions[key] || {}), additions[key]);
            defineIcons(key, additions[key]);
            var longPrefix = PREFIX_TO_LONG_STYLE[FAMILY_CLASSIC][key];
            if (longPrefix)
              defineIcons(longPrefix, additions[key]);
            build();
          });
        }
      }, {
        key: "reset",
        value: function reset3() {
          this.definitions = {};
        }
      }, {
        key: "_pullDefinitions",
        value: function _pullDefinitions(additions, definition) {
          var normalized = definition.prefix && definition.iconName && definition.icon ? {
            0: definition
          } : definition;
          Object.keys(normalized).map(function(key) {
            var _normalized$key = normalized[key], prefix = _normalized$key.prefix, iconName = _normalized$key.iconName, icon3 = _normalized$key.icon;
            var aliases = icon3[2];
            if (!additions[prefix])
              additions[prefix] = {};
            if (aliases.length > 0) {
              aliases.forEach(function(alias) {
                if (typeof alias === "string") {
                  additions[prefix][alias] = icon3;
                }
              });
            }
            additions[prefix][iconName] = icon3;
          });
          return additions;
        }
      }]);
      return Library2;
    }();
    _plugins = [];
    _hooks = {};
    providers = {};
    defaultProviderKeys = Object.keys(providers);
    library = new Library();
    noAuto = function noAuto2() {
      config.autoReplaceSvg = false;
      config.observeMutations = false;
      callHooks("noAuto");
    };
    dom = {
      i2svg: function i2svg() {
        var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (IS_DOM) {
          callHooks("beforeI2svg", params);
          callProvided("pseudoElements2svg", params);
          return callProvided("i2svg", params);
        } else {
          return Promise.reject("Operation requires a DOM of some kind.");
        }
      },
      watch: function watch() {
        var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        var autoReplaceSvgRoot = params.autoReplaceSvgRoot;
        if (config.autoReplaceSvg === false) {
          config.autoReplaceSvg = true;
        }
        config.observeMutations = true;
        domready(function() {
          autoReplace({
            autoReplaceSvgRoot
          });
          callHooks("watch", params);
        });
      }
    };
    parse5 = {
      icon: function icon(_icon) {
        if (_icon === null) {
          return null;
        }
        if (_typeof(_icon) === "object" && _icon.prefix && _icon.iconName) {
          return {
            prefix: _icon.prefix,
            iconName: byAlias(_icon.prefix, _icon.iconName) || _icon.iconName
          };
        }
        if (Array.isArray(_icon) && _icon.length === 2) {
          var iconName = _icon[1].indexOf("fa-") === 0 ? _icon[1].slice(3) : _icon[1];
          var prefix = getCanonicalPrefix(_icon[0]);
          return {
            prefix,
            iconName: byAlias(prefix, iconName) || iconName
          };
        }
        if (typeof _icon === "string" && (_icon.indexOf("".concat(config.cssPrefix, "-")) > -1 || _icon.match(ICON_SELECTION_SYNTAX_PATTERN))) {
          var canonicalIcon = getCanonicalIcon(_icon.split(" "), {
            skipLookups: true
          });
          return {
            prefix: canonicalIcon.prefix || getDefaultUsablePrefix(),
            iconName: byAlias(canonicalIcon.prefix, canonicalIcon.iconName) || canonicalIcon.iconName
          };
        }
        if (typeof _icon === "string") {
          var _prefix = getDefaultUsablePrefix();
          return {
            prefix: _prefix,
            iconName: byAlias(_prefix, _icon) || _icon
          };
        }
      }
    };
    api = {
      noAuto,
      config,
      dom,
      parse: parse5,
      library,
      findIconDefinition,
      toHtml
    };
    autoReplace = function autoReplace2() {
      var params = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
      var _params$autoReplaceSv = params.autoReplaceSvgRoot, autoReplaceSvgRoot = _params$autoReplaceSv === void 0 ? DOCUMENT : _params$autoReplaceSv;
      if ((Object.keys(namespace.styles).length > 0 || config.autoFetchSvg) && IS_DOM && config.autoReplaceSvg)
        api.dom.i2svg({
          node: autoReplaceSvgRoot
        });
    };
    styles$1 = namespace.styles;
    missingIconResolutionMixin = {
      found: false,
      width: 512,
      height: 512
    };
    noop$1 = function noop4() {
    };
    p5 = config.measurePerformance && PERFORMANCE && PERFORMANCE.mark && PERFORMANCE.measure ? PERFORMANCE : {
      mark: noop$1,
      measure: noop$1
    };
    preamble = 'FA "6.5.1"';
    begin = function begin2(name) {
      p5.mark("".concat(preamble, " ").concat(name, " begins"));
      return function() {
        return end(name);
      };
    };
    end = function end2(name) {
      p5.mark("".concat(preamble, " ").concat(name, " ends"));
      p5.measure("".concat(preamble, " ").concat(name), "".concat(preamble, " ").concat(name, " begins"), "".concat(preamble, " ").concat(name, " ends"));
    };
    perf = {
      begin,
      end
    };
    noop$2 = function noop5() {
    };
    mutators = {
      replace: function replace2(mutation) {
        var node = mutation[0];
        if (node.parentNode) {
          mutation[1].forEach(function(_abstract) {
            node.parentNode.insertBefore(convertSVG(_abstract), node);
          });
          if (node.getAttribute(DATA_FA_I2SVG) === null && config.keepOriginalSource) {
            var comment = DOCUMENT.createComment(nodeAsComment(node));
            node.parentNode.replaceChild(comment, node);
          } else {
            node.remove();
          }
        }
      },
      nest: function nest(mutation) {
        var node = mutation[0];
        var _abstract2 = mutation[1];
        if (~classArray(node).indexOf(config.replacementClass)) {
          return mutators.replace(mutation);
        }
        var forSvg = new RegExp("".concat(config.cssPrefix, "-.*"));
        delete _abstract2[0].attributes.id;
        if (_abstract2[0].attributes.class) {
          var splitClasses = _abstract2[0].attributes.class.split(" ").reduce(function(acc, cls) {
            if (cls === config.replacementClass || cls.match(forSvg)) {
              acc.toSvg.push(cls);
            } else {
              acc.toNode.push(cls);
            }
            return acc;
          }, {
            toNode: [],
            toSvg: []
          });
          _abstract2[0].attributes.class = splitClasses.toSvg.join(" ");
          if (splitClasses.toNode.length === 0) {
            node.removeAttribute("class");
          } else {
            node.setAttribute("class", splitClasses.toNode.join(" "));
          }
        }
        var newInnerHTML = _abstract2.map(function(a3) {
          return toHtml(a3);
        }).join("\n");
        node.setAttribute(DATA_FA_I2SVG, "");
        node.innerHTML = newInnerHTML;
      }
    };
    disabled = false;
    mo = null;
    styles$2 = namespace.styles;
    knownPrefixes = /* @__PURE__ */ new Set();
    FAMILIES.map(function(family) {
      knownPrefixes.add("fa-".concat(family));
    });
    Object.keys(PREFIX_TO_STYLE[FAMILY_CLASSIC]).map(knownPrefixes.add.bind(knownPrefixes));
    Object.keys(PREFIX_TO_STYLE[FAMILY_SHARP]).map(knownPrefixes.add.bind(knownPrefixes));
    knownPrefixes = _toConsumableArray(knownPrefixes);
    render = function render2(iconDefinition) {
      var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
      var _params$transform = params.transform, transform = _params$transform === void 0 ? meaninglessTransform : _params$transform, _params$symbol = params.symbol, symbol = _params$symbol === void 0 ? false : _params$symbol, _params$mask = params.mask, mask = _params$mask === void 0 ? null : _params$mask, _params$maskId = params.maskId, maskId = _params$maskId === void 0 ? null : _params$maskId, _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$titleId = params.titleId, titleId = _params$titleId === void 0 ? null : _params$titleId, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles2 = _params$styles === void 0 ? {} : _params$styles;
      if (!iconDefinition)
        return;
      var prefix = iconDefinition.prefix, iconName = iconDefinition.iconName, icon3 = iconDefinition.icon;
      return domVariants(_objectSpread2({
        type: "icon"
      }, iconDefinition), function() {
        callHooks("beforeDOMElementCreation", {
          iconDefinition,
          params
        });
        if (config.autoA11y) {
          if (title) {
            attributes["aria-labelledby"] = "".concat(config.replacementClass, "-title-").concat(titleId || nextUniqueId());
          } else {
            attributes["aria-hidden"] = "true";
            attributes["focusable"] = "false";
          }
        }
        return makeInlineSvgAbstract({
          icons: {
            main: asFoundIcon(icon3),
            mask: mask ? asFoundIcon(mask.icon) : {
              found: false,
              width: null,
              height: null,
              icon: {}
            }
          },
          prefix,
          iconName,
          transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
          symbol,
          title,
          maskId,
          titleId,
          extra: {
            attributes,
            styles: styles2,
            classes
          }
        });
      });
    };
    ReplaceElements = {
      mixout: function mixout2() {
        return {
          icon: resolveIcons(render)
        };
      },
      hooks: function hooks2() {
        return {
          mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
            accumulator.treeCallback = onTree;
            accumulator.nodeCallback = onNode;
            return accumulator;
          }
        };
      },
      provides: function provides(providers$$1) {
        providers$$1.i2svg = function(params) {
          var _params$node = params.node, node = _params$node === void 0 ? DOCUMENT : _params$node, _params$callback = params.callback, callback2 = _params$callback === void 0 ? function() {
          } : _params$callback;
          return onTree(node, callback2);
        };
        providers$$1.generateSvgReplacementMutation = function(node, nodeMeta) {
          var iconName = nodeMeta.iconName, title = nodeMeta.title, titleId = nodeMeta.titleId, prefix = nodeMeta.prefix, transform = nodeMeta.transform, symbol = nodeMeta.symbol, mask = nodeMeta.mask, maskId = nodeMeta.maskId, extra = nodeMeta.extra;
          return new Promise(function(resolve, reject) {
            Promise.all([findIcon(iconName, prefix), mask.iconName ? findIcon(mask.iconName, mask.prefix) : Promise.resolve({
              found: false,
              width: 512,
              height: 512,
              icon: {}
            })]).then(function(_ref2) {
              var _ref22 = _slicedToArray(_ref2, 2), main = _ref22[0], mask2 = _ref22[1];
              resolve([node, makeInlineSvgAbstract({
                icons: {
                  main,
                  mask: mask2
                },
                prefix,
                iconName,
                transform,
                symbol,
                maskId,
                title,
                titleId,
                extra,
                watchable: true
              })]);
            }).catch(reject);
          });
        };
        providers$$1.generateAbstractIcon = function(_ref3) {
          var children = _ref3.children, attributes = _ref3.attributes, main = _ref3.main, transform = _ref3.transform, styles2 = _ref3.styles;
          var styleString = joinStyles(styles2);
          if (styleString.length > 0) {
            attributes["style"] = styleString;
          }
          var nextChild;
          if (transformIsMeaningful(transform)) {
            nextChild = callProvided("generateAbstractTransformGrouping", {
              main,
              transform,
              containerWidth: main.width,
              iconWidth: main.width
            });
          }
          children.push(nextChild || main.icon);
          return {
            children,
            attributes
          };
        };
      }
    };
    Layers = {
      mixout: function mixout3() {
        return {
          layer: function layer2(assembler) {
            var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            var _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes;
            return domVariants({
              type: "layer"
            }, function() {
              callHooks("beforeDOMElementCreation", {
                assembler,
                params
              });
              var children = [];
              assembler(function(args) {
                Array.isArray(args) ? args.map(function(a3) {
                  children = children.concat(a3.abstract);
                }) : children = children.concat(args.abstract);
              });
              return [{
                tag: "span",
                attributes: {
                  class: ["".concat(config.cssPrefix, "-layers")].concat(_toConsumableArray(classes)).join(" ")
                },
                children
              }];
            });
          }
        };
      }
    };
    LayersCounter = {
      mixout: function mixout4() {
        return {
          counter: function counter2(content) {
            var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            var _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles2 = _params$styles === void 0 ? {} : _params$styles;
            return domVariants({
              type: "counter",
              content
            }, function() {
              callHooks("beforeDOMElementCreation", {
                content,
                params
              });
              return makeLayersCounterAbstract({
                content: content.toString(),
                title,
                extra: {
                  attributes,
                  styles: styles2,
                  classes: ["".concat(config.cssPrefix, "-layers-counter")].concat(_toConsumableArray(classes))
                }
              });
            });
          }
        };
      }
    };
    LayersText = {
      mixout: function mixout5() {
        return {
          text: function text2(content) {
            var params = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            var _params$transform = params.transform, transform = _params$transform === void 0 ? meaninglessTransform : _params$transform, _params$title = params.title, title = _params$title === void 0 ? null : _params$title, _params$classes = params.classes, classes = _params$classes === void 0 ? [] : _params$classes, _params$attributes = params.attributes, attributes = _params$attributes === void 0 ? {} : _params$attributes, _params$styles = params.styles, styles2 = _params$styles === void 0 ? {} : _params$styles;
            return domVariants({
              type: "text",
              content
            }, function() {
              callHooks("beforeDOMElementCreation", {
                content,
                params
              });
              return makeLayersTextAbstract({
                content,
                transform: _objectSpread2(_objectSpread2({}, meaninglessTransform), transform),
                title,
                extra: {
                  attributes,
                  styles: styles2,
                  classes: ["".concat(config.cssPrefix, "-layers-text")].concat(_toConsumableArray(classes))
                }
              });
            });
          }
        };
      },
      provides: function provides2(providers$$1) {
        providers$$1.generateLayersText = function(node, nodeMeta) {
          var title = nodeMeta.title, transform = nodeMeta.transform, extra = nodeMeta.extra;
          var width = null;
          var height = null;
          if (IS_IE) {
            var computedFontSize = parseInt(getComputedStyle(node).fontSize, 10);
            var boundingClientRect = node.getBoundingClientRect();
            width = boundingClientRect.width / computedFontSize;
            height = boundingClientRect.height / computedFontSize;
          }
          if (config.autoA11y && !title) {
            extra.attributes["aria-hidden"] = "true";
          }
          return Promise.resolve([node, makeLayersTextAbstract({
            content: node.innerHTML,
            width,
            height,
            transform,
            title,
            extra,
            watchable: true
          })]);
        };
      }
    };
    CLEAN_CONTENT_PATTERN = new RegExp('"', "ug");
    SECONDARY_UNICODE_RANGE = [1105920, 1112319];
    PseudoElements = {
      hooks: function hooks3() {
        return {
          mutationObserverCallbacks: function mutationObserverCallbacks(accumulator) {
            accumulator.pseudoElementsCallback = searchPseudoElements;
            return accumulator;
          }
        };
      },
      provides: function provides3(providers$$1) {
        providers$$1.pseudoElements2svg = function(params) {
          var _params$node = params.node, node = _params$node === void 0 ? DOCUMENT : _params$node;
          if (config.searchPseudoElements) {
            searchPseudoElements(node);
          }
        };
      }
    };
    _unwatched = false;
    MutationObserver$1 = {
      mixout: function mixout6() {
        return {
          dom: {
            unwatch: function unwatch() {
              disableObservation();
              _unwatched = true;
            }
          }
        };
      },
      hooks: function hooks4() {
        return {
          bootstrap: function bootstrap() {
            observe(chainHooks("mutationObserverCallbacks", {}));
          },
          noAuto: function noAuto3() {
            disconnect();
          },
          watch: function watch2(params) {
            var observeMutationsRoot = params.observeMutationsRoot;
            if (_unwatched) {
              enableObservation();
            } else {
              observe(chainHooks("mutationObserverCallbacks", {
                observeMutationsRoot
              }));
            }
          }
        };
      }
    };
    parseTransformString = function parseTransformString2(transformString) {
      var transform = {
        size: 16,
        x: 0,
        y: 0,
        flipX: false,
        flipY: false,
        rotate: 0
      };
      return transformString.toLowerCase().split(" ").reduce(function(acc, n3) {
        var parts = n3.toLowerCase().split("-");
        var first = parts[0];
        var rest = parts.slice(1).join("-");
        if (first && rest === "h") {
          acc.flipX = true;
          return acc;
        }
        if (first && rest === "v") {
          acc.flipY = true;
          return acc;
        }
        rest = parseFloat(rest);
        if (isNaN(rest)) {
          return acc;
        }
        switch (first) {
          case "grow":
            acc.size = acc.size + rest;
            break;
          case "shrink":
            acc.size = acc.size - rest;
            break;
          case "left":
            acc.x = acc.x - rest;
            break;
          case "right":
            acc.x = acc.x + rest;
            break;
          case "up":
            acc.y = acc.y - rest;
            break;
          case "down":
            acc.y = acc.y + rest;
            break;
          case "rotate":
            acc.rotate = acc.rotate + rest;
            break;
        }
        return acc;
      }, transform);
    };
    PowerTransforms = {
      mixout: function mixout7() {
        return {
          parse: {
            transform: function transform(transformString) {
              return parseTransformString(transformString);
            }
          }
        };
      },
      hooks: function hooks5() {
        return {
          parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
            var transformString = node.getAttribute("data-fa-transform");
            if (transformString) {
              accumulator.transform = parseTransformString(transformString);
            }
            return accumulator;
          }
        };
      },
      provides: function provides4(providers2) {
        providers2.generateAbstractTransformGrouping = function(_ref2) {
          var main = _ref2.main, transform = _ref2.transform, containerWidth = _ref2.containerWidth, iconWidth = _ref2.iconWidth;
          var outer = {
            transform: "translate(".concat(containerWidth / 2, " 256)")
          };
          var innerTranslate = "translate(".concat(transform.x * 32, ", ").concat(transform.y * 32, ") ");
          var innerScale = "scale(".concat(transform.size / 16 * (transform.flipX ? -1 : 1), ", ").concat(transform.size / 16 * (transform.flipY ? -1 : 1), ") ");
          var innerRotate = "rotate(".concat(transform.rotate, " 0 0)");
          var inner = {
            transform: "".concat(innerTranslate, " ").concat(innerScale, " ").concat(innerRotate)
          };
          var path = {
            transform: "translate(".concat(iconWidth / 2 * -1, " -256)")
          };
          var operations = {
            outer,
            inner,
            path
          };
          return {
            tag: "g",
            attributes: _objectSpread2({}, operations.outer),
            children: [{
              tag: "g",
              attributes: _objectSpread2({}, operations.inner),
              children: [{
                tag: main.icon.tag,
                children: main.icon.children,
                attributes: _objectSpread2(_objectSpread2({}, main.icon.attributes), operations.path)
              }]
            }]
          };
        };
      }
    };
    ALL_SPACE = {
      x: 0,
      y: 0,
      width: "100%",
      height: "100%"
    };
    Masks = {
      hooks: function hooks6() {
        return {
          parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
            var maskData = node.getAttribute("data-fa-mask");
            var mask = !maskData ? emptyCanonicalIcon() : getCanonicalIcon(maskData.split(" ").map(function(i3) {
              return i3.trim();
            }));
            if (!mask.prefix) {
              mask.prefix = getDefaultUsablePrefix();
            }
            accumulator.mask = mask;
            accumulator.maskId = node.getAttribute("data-fa-mask-id");
            return accumulator;
          }
        };
      },
      provides: function provides5(providers2) {
        providers2.generateAbstractMask = function(_ref2) {
          var children = _ref2.children, attributes = _ref2.attributes, main = _ref2.main, mask = _ref2.mask, explicitMaskId = _ref2.maskId, transform = _ref2.transform;
          var mainWidth = main.width, mainPath = main.icon;
          var maskWidth = mask.width, maskPath = mask.icon;
          var trans = transformForSvg({
            transform,
            containerWidth: maskWidth,
            iconWidth: mainWidth
          });
          var maskRect = {
            tag: "rect",
            attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
              fill: "white"
            })
          };
          var maskInnerGroupChildrenMixin = mainPath.children ? {
            children: mainPath.children.map(fillBlack)
          } : {};
          var maskInnerGroup = {
            tag: "g",
            attributes: _objectSpread2({}, trans.inner),
            children: [fillBlack(_objectSpread2({
              tag: mainPath.tag,
              attributes: _objectSpread2(_objectSpread2({}, mainPath.attributes), trans.path)
            }, maskInnerGroupChildrenMixin))]
          };
          var maskOuterGroup = {
            tag: "g",
            attributes: _objectSpread2({}, trans.outer),
            children: [maskInnerGroup]
          };
          var maskId = "mask-".concat(explicitMaskId || nextUniqueId());
          var clipId = "clip-".concat(explicitMaskId || nextUniqueId());
          var maskTag = {
            tag: "mask",
            attributes: _objectSpread2(_objectSpread2({}, ALL_SPACE), {}, {
              id: maskId,
              maskUnits: "userSpaceOnUse",
              maskContentUnits: "userSpaceOnUse"
            }),
            children: [maskRect, maskOuterGroup]
          };
          var defs = {
            tag: "defs",
            children: [{
              tag: "clipPath",
              attributes: {
                id: clipId
              },
              children: deGroup(maskPath)
            }, maskTag]
          };
          children.push(defs, {
            tag: "rect",
            attributes: _objectSpread2({
              fill: "currentColor",
              "clip-path": "url(#".concat(clipId, ")"),
              mask: "url(#".concat(maskId, ")")
            }, ALL_SPACE)
          });
          return {
            children,
            attributes
          };
        };
      }
    };
    MissingIconIndicator = {
      provides: function provides6(providers2) {
        var reduceMotion = false;
        if (WINDOW.matchMedia) {
          reduceMotion = WINDOW.matchMedia("(prefers-reduced-motion: reduce)").matches;
        }
        providers2.missingIconAbstract = function() {
          var gChildren = [];
          var FILL = {
            fill: "currentColor"
          };
          var ANIMATION_BASE = {
            attributeType: "XML",
            repeatCount: "indefinite",
            dur: "2s"
          };
          gChildren.push({
            tag: "path",
            attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
              d: "M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"
            })
          });
          var OPACITY_ANIMATE = _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
            attributeName: "opacity"
          });
          var dot = {
            tag: "circle",
            attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
              cx: "256",
              cy: "364",
              r: "28"
            }),
            children: []
          };
          if (!reduceMotion) {
            dot.children.push({
              tag: "animate",
              attributes: _objectSpread2(_objectSpread2({}, ANIMATION_BASE), {}, {
                attributeName: "r",
                values: "28;14;28;28;14;28;"
              })
            }, {
              tag: "animate",
              attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
                values: "1;0;1;1;0;1;"
              })
            });
          }
          gChildren.push(dot);
          gChildren.push({
            tag: "path",
            attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
              opacity: "1",
              d: "M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"
            }),
            children: reduceMotion ? [] : [{
              tag: "animate",
              attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
                values: "1;0;0;0;0;1;"
              })
            }]
          });
          if (!reduceMotion) {
            gChildren.push({
              tag: "path",
              attributes: _objectSpread2(_objectSpread2({}, FILL), {}, {
                opacity: "0",
                d: "M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"
              }),
              children: [{
                tag: "animate",
                attributes: _objectSpread2(_objectSpread2({}, OPACITY_ANIMATE), {}, {
                  values: "0;0;1;1;0;0;"
                })
              }]
            });
          }
          return {
            tag: "g",
            attributes: {
              "class": "missing"
            },
            children: gChildren
          };
        };
      }
    };
    SvgSymbols = {
      hooks: function hooks7() {
        return {
          parseNodeAttributes: function parseNodeAttributes(accumulator, node) {
            var symbolData = node.getAttribute("data-fa-symbol");
            var symbol = symbolData === null ? false : symbolData === "" ? true : symbolData;
            accumulator["symbol"] = symbol;
            return accumulator;
          }
        };
      }
    };
    plugins = [InjectCSS, ReplaceElements, Layers, LayersCounter, LayersText, PseudoElements, MutationObserver$1, PowerTransforms, Masks, MissingIconIndicator, SvgSymbols];
    registerPlugins(plugins, {
      mixoutsTo: api
    });
    noAuto$1 = api.noAuto;
    config$1 = api.config;
    library$1 = api.library;
    dom$1 = api.dom;
    parse$1 = api.parse;
    findIconDefinition$1 = api.findIconDefinition;
    toHtml$1 = api.toHtml;
    icon2 = api.icon;
    layer = api.layer;
    text = api.text;
    counter = api.counter;
  }
});

// ../../node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "../../node_modules/react-is/cjs/react-is.development.js"(exports2) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var hasSymbol = typeof Symbol === "function" && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for("react.element") : 60103;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for("react.portal") : 60106;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for("react.fragment") : 60107;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for("react.strict_mode") : 60108;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for("react.profiler") : 60114;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for("react.provider") : 60109;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for("react.context") : 60110;
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for("react.async_mode") : 60111;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for("react.concurrent_mode") : 60111;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for("react.forward_ref") : 60112;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for("react.suspense") : 60113;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for("react.suspense_list") : 60120;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for("react.memo") : 60115;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for("react.lazy") : 60116;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for("react.block") : 60121;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for("react.fundamental") : 60117;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for("react.responder") : 60118;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for("react.scope") : 60119;
        function isValidElementType(type) {
          return typeof type === "string" || typeof type === "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === "object" && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_ASYNC_MODE_TYPE:
                  case REACT_CONCURRENT_MODE_TYPE:
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment3 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.");
            }
          }
          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports2.AsyncMode = AsyncMode;
        exports2.ConcurrentMode = ConcurrentMode;
        exports2.ContextConsumer = ContextConsumer;
        exports2.ContextProvider = ContextProvider;
        exports2.Element = Element;
        exports2.ForwardRef = ForwardRef;
        exports2.Fragment = Fragment3;
        exports2.Lazy = Lazy;
        exports2.Memo = Memo;
        exports2.Portal = Portal;
        exports2.Profiler = Profiler;
        exports2.StrictMode = StrictMode;
        exports2.Suspense = Suspense;
        exports2.isAsyncMode = isAsyncMode;
        exports2.isConcurrentMode = isConcurrentMode;
        exports2.isContextConsumer = isContextConsumer;
        exports2.isContextProvider = isContextProvider;
        exports2.isElement = isElement;
        exports2.isForwardRef = isForwardRef;
        exports2.isFragment = isFragment;
        exports2.isLazy = isLazy;
        exports2.isMemo = isMemo;
        exports2.isPortal = isPortal;
        exports2.isProfiler = isProfiler;
        exports2.isStrictMode = isStrictMode;
        exports2.isSuspense = isSuspense;
        exports2.isValidElementType = isValidElementType;
        exports2.typeOf = typeOf;
      })();
    }
  }
});

// ../../node_modules/react-is/index.js
var require_react_is = __commonJS({
  "../../node_modules/react-is/index.js"(exports2, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// ../../node_modules/object-assign/index.js
var require_object_assign = __commonJS({
  "../../node_modules/object-assign/index.js"(exports2, module) {
    "use strict";
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i3 = 0; i3 < 10; i3++) {
          test2["_" + String.fromCharCode(i3)] = i3;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n3) {
          return test2[n3];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err2) {
        return false;
      }
    }
    module.exports = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to2 = toObject(target);
      var symbols;
      for (var s3 = 1; s3 < arguments.length; s3++) {
        from = Object(arguments[s3]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to2[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i3 = 0; i3 < symbols.length; i3++) {
            if (propIsEnumerable.call(from, symbols[i3])) {
              to2[symbols[i3]] = from[symbols[i3]];
            }
          }
        }
      }
      return to2;
    };
  }
});

// ../../node_modules/prop-types/lib/ReactPropTypesSecret.js
var require_ReactPropTypesSecret = __commonJS({
  "../../node_modules/prop-types/lib/ReactPropTypesSecret.js"(exports2, module) {
    "use strict";
    var ReactPropTypesSecret = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
    module.exports = ReactPropTypesSecret;
  }
});

// ../../node_modules/prop-types/lib/has.js
var require_has = __commonJS({
  "../../node_modules/prop-types/lib/has.js"(exports2, module) {
    module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
  }
});

// ../../node_modules/prop-types/checkPropTypes.js
var require_checkPropTypes = __commonJS({
  "../../node_modules/prop-types/checkPropTypes.js"(exports2, module) {
    "use strict";
    var printWarning = function() {
    };
    if (true) {
      ReactPropTypesSecret = require_ReactPropTypesSecret();
      loggedTypeFailures = {};
      has = require_has();
      printWarning = function(text2) {
        var message2 = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message2);
        }
        try {
          throw new Error(message2);
        } catch (x4) {
        }
      };
    }
    var ReactPropTypesSecret;
    var loggedTypeFailures;
    var has;
    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
      if (true) {
        for (var typeSpecName in typeSpecs) {
          if (has(typeSpecs, typeSpecName)) {
            var error2;
            try {
              if (typeof typeSpecs[typeSpecName] !== "function") {
                var err2 = Error(
                  (componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
                );
                err2.name = "Invariant Violation";
                throw err2;
              }
              error2 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
            } catch (ex) {
              error2 = ex;
            }
            if (error2 && !(error2 instanceof Error)) {
              printWarning(
                (componentName || "React class") + ": type specification of " + location + " `" + typeSpecName + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof error2 + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
              );
            }
            if (error2 instanceof Error && !(error2.message in loggedTypeFailures)) {
              loggedTypeFailures[error2.message] = true;
              var stack = getStack ? getStack() : "";
              printWarning(
                "Failed " + location + " type: " + error2.message + (stack != null ? stack : "")
              );
            }
          }
        }
      }
    }
    checkPropTypes.resetWarningCache = function() {
      if (true) {
        loggedTypeFailures = {};
      }
    };
    module.exports = checkPropTypes;
  }
});

// ../../node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "../../node_modules/prop-types/factoryWithTypeCheckers.js"(exports2, module) {
    "use strict";
    var ReactIs = require_react_is();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text2) {
        var message2 = "Warning: " + text2;
        if (typeof console !== "undefined") {
          console.error(message2);
        }
        try {
          throw new Error(message2);
        } catch (x4) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is2(x4, y3) {
        if (x4 === y3) {
          return x4 !== 0 || 1 / x4 === 1 / y3;
        } else {
          return x4 !== x4 && y3 !== y3;
        }
      }
      function PropTypeError(message2, data) {
        this.message = message2;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err2 = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err2.name = "Invariant Violation";
              throw err2;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i3 = 0; i3 < propValue.length; i3++) {
            var error2 = typeChecker(propValue, i3, componentName, location, propFullName + "[" + i3 + "]", ReactPropTypesSecret);
            if (error2 instanceof Error) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i3 = 0; i3 < expectedValues.length; i3++) {
            if (is2(propValue, expectedValues[i3])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error2 = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error2 instanceof Error) {
                return error2;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i3 = 0; i3 < arrayOfTypeCheckers.length; i3++) {
          var checker = arrayOfTypeCheckers[i3];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i3 + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i4 = 0; i4 < arrayOfTypeCheckers.length; i4++) {
            var checker2 = arrayOfTypeCheckers[i4];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode3(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error2 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error2 = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error2) {
              return error2;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode3(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode3);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode3(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode3(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// ../../node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "../../node_modules/prop-types/index.js"(exports2, module) {
    if (true) {
      ReactIs = require_react_is();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// ../../node_modules/@fortawesome/react-fontawesome/index.es.js
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread22(target) {
  for (var i3 = 1; i3 < arguments.length; i3++) {
    var source = null != arguments[i3] ? arguments[i3] : {};
    i3 % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty2(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _typeof2(obj) {
  "@babel/helpers - typeof";
  return _typeof2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof2(obj);
}
function _defineProperty2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++) {
    key = sourceKeys[i3];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i3;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i3 = 0; i3 < sourceSymbolKeys.length; i3++) {
      key = sourceSymbolKeys[i3];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _toConsumableArray2(arr) {
  return _arrayWithoutHoles2(arr) || _iterableToArray2(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread2();
}
function _arrayWithoutHoles2(arr) {
  if (Array.isArray(arr))
    return _arrayLikeToArray2(arr);
}
function _iterableToArray2(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
    return Array.from(iter);
}
function _unsupportedIterableToArray2(o5, minLen) {
  if (!o5)
    return;
  if (typeof o5 === "string")
    return _arrayLikeToArray2(o5, minLen);
  var n3 = Object.prototype.toString.call(o5).slice(8, -1);
  if (n3 === "Object" && o5.constructor)
    n3 = o5.constructor.name;
  if (n3 === "Map" || n3 === "Set")
    return Array.from(o5);
  if (n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3))
    return _arrayLikeToArray2(o5, minLen);
}
function _arrayLikeToArray2(arr, len) {
  if (len == null || len > arr.length)
    len = arr.length;
  for (var i3 = 0, arr2 = new Array(len); i3 < len; i3++)
    arr2[i3] = arr[i3];
  return arr2;
}
function _nonIterableSpread2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function classList(props) {
  var _classes;
  var beat = props.beat, fade = props.fade, beatFade = props.beatFade, bounce = props.bounce, shake = props.shake, flash = props.flash, spin = props.spin, spinPulse = props.spinPulse, spinReverse = props.spinReverse, pulse = props.pulse, fixedWidth = props.fixedWidth, inverse2 = props.inverse, border = props.border, listItem = props.listItem, flip = props.flip, size = props.size, rotation = props.rotation, pull = props.pull;
  var classes = (_classes = {
    "fa-beat": beat,
    "fa-fade": fade,
    "fa-beat-fade": beatFade,
    "fa-bounce": bounce,
    "fa-shake": shake,
    "fa-flash": flash,
    "fa-spin": spin,
    "fa-spin-reverse": spinReverse,
    "fa-spin-pulse": spinPulse,
    "fa-pulse": pulse,
    "fa-fw": fixedWidth,
    "fa-inverse": inverse2,
    "fa-border": border,
    "fa-li": listItem,
    "fa-flip": flip === true,
    "fa-flip-horizontal": flip === "horizontal" || flip === "both",
    "fa-flip-vertical": flip === "vertical" || flip === "both"
  }, _defineProperty2(_classes, "fa-".concat(size), typeof size !== "undefined" && size !== null), _defineProperty2(_classes, "fa-rotate-".concat(rotation), typeof rotation !== "undefined" && rotation !== null && rotation !== 0), _defineProperty2(_classes, "fa-pull-".concat(pull), typeof pull !== "undefined" && pull !== null), _defineProperty2(_classes, "fa-swap-opacity", props.swapOpacity), _classes);
  return Object.keys(classes).map(function(key) {
    return classes[key] ? key : null;
  }).filter(function(key) {
    return key;
  });
}
function _isNumerical(obj) {
  obj = obj - 0;
  return obj === obj;
}
function camelize2(string) {
  if (_isNumerical(string)) {
    return string;
  }
  string = string.replace(/[\-_\s]+(.)?/g, function(match, chr) {
    return chr ? chr.toUpperCase() : "";
  });
  return string.substr(0, 1).toLowerCase() + string.substr(1);
}
function capitalize(val) {
  return val.charAt(0).toUpperCase() + val.slice(1);
}
function styleToObject(style) {
  return style.split(";").map(function(s3) {
    return s3.trim();
  }).filter(function(s3) {
    return s3;
  }).reduce(function(acc, pair) {
    var i3 = pair.indexOf(":");
    var prop = camelize2(pair.slice(0, i3));
    var value = pair.slice(i3 + 1).trim();
    prop.startsWith("webkit") ? acc[capitalize(prop)] = value : acc[prop] = value;
    return acc;
  }, {});
}
function convert2(createElement4, element) {
  var extraProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
  if (typeof element === "string") {
    return element;
  }
  var children = (element.children || []).map(function(child) {
    return convert2(createElement4, child);
  });
  var mixins = Object.keys(element.attributes || {}).reduce(function(acc, key) {
    var val = element.attributes[key];
    switch (key) {
      case "class":
        acc.attrs["className"] = val;
        delete element.attributes["class"];
        break;
      case "style":
        acc.attrs["style"] = styleToObject(val);
        break;
      default:
        if (key.indexOf("aria-") === 0 || key.indexOf("data-") === 0) {
          acc.attrs[key.toLowerCase()] = val;
        } else {
          acc.attrs[camelize2(key)] = val;
        }
    }
    return acc;
  }, {
    attrs: {}
  });
  var _extraProps$style = extraProps.style, existingStyle = _extraProps$style === void 0 ? {} : _extraProps$style, remaining = _objectWithoutProperties(extraProps, _excluded);
  mixins.attrs["style"] = _objectSpread22(_objectSpread22({}, mixins.attrs["style"]), existingStyle);
  return createElement4.apply(void 0, [element.tag, _objectSpread22(_objectSpread22({}, mixins.attrs), remaining)].concat(_toConsumableArray2(children)));
}
function log3() {
  if (!PRODUCTION2 && console && typeof console.error === "function") {
    var _console;
    (_console = console).error.apply(_console, arguments);
  }
}
function normalizeIconArgs(icon3) {
  if (icon3 && _typeof2(icon3) === "object" && icon3.prefix && icon3.iconName && icon3.icon) {
    return icon3;
  }
  if (parse$1.icon) {
    return parse$1.icon(icon3);
  }
  if (icon3 === null) {
    return null;
  }
  if (icon3 && _typeof2(icon3) === "object" && icon3.prefix && icon3.iconName) {
    return icon3;
  }
  if (Array.isArray(icon3) && icon3.length === 2) {
    return {
      prefix: icon3[0],
      iconName: icon3[1]
    };
  }
  if (typeof icon3 === "string") {
    return {
      prefix: "fas",
      iconName: icon3
    };
  }
}
function objectWithKey(key, value) {
  return Array.isArray(value) && value.length > 0 || !Array.isArray(value) && value ? _defineProperty2({}, key, value) : {};
}
var import_prop_types, import_react3, _excluded, PRODUCTION2, FontAwesomeIcon, convertCurry;
var init_index_es = __esm({
  "../../node_modules/@fortawesome/react-fontawesome/index.es.js"() {
    init_fontawesome_svg_core();
    import_prop_types = __toESM(require_prop_types());
    import_react3 = __toESM(require_react());
    _excluded = ["style"];
    PRODUCTION2 = false;
    try {
      PRODUCTION2 = false;
    } catch (e2) {
    }
    FontAwesomeIcon = /* @__PURE__ */ import_react3.default.forwardRef(function(props, ref) {
      var iconArgs = props.icon, maskArgs = props.mask, symbol = props.symbol, className = props.className, title = props.title, titleId = props.titleId, maskId = props.maskId;
      var iconLookup = normalizeIconArgs(iconArgs);
      var classes = objectWithKey("classes", [].concat(_toConsumableArray2(classList(props)), _toConsumableArray2(className.split(" "))));
      var transform = objectWithKey("transform", typeof props.transform === "string" ? parse$1.transform(props.transform) : props.transform);
      var mask = objectWithKey("mask", normalizeIconArgs(maskArgs));
      var renderedIcon = icon2(iconLookup, _objectSpread22(_objectSpread22(_objectSpread22(_objectSpread22({}, classes), transform), mask), {}, {
        symbol,
        title,
        titleId,
        maskId
      }));
      if (!renderedIcon) {
        log3("Could not find icon", iconLookup);
        return null;
      }
      var abstract = renderedIcon.abstract;
      var extraProps = {
        ref
      };
      Object.keys(props).forEach(function(key) {
        if (!FontAwesomeIcon.defaultProps.hasOwnProperty(key)) {
          extraProps[key] = props[key];
        }
      });
      return convertCurry(abstract[0], extraProps);
    });
    FontAwesomeIcon.displayName = "FontAwesomeIcon";
    FontAwesomeIcon.propTypes = {
      beat: import_prop_types.default.bool,
      border: import_prop_types.default.bool,
      beatFade: import_prop_types.default.bool,
      bounce: import_prop_types.default.bool,
      className: import_prop_types.default.string,
      fade: import_prop_types.default.bool,
      flash: import_prop_types.default.bool,
      mask: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.array, import_prop_types.default.string]),
      maskId: import_prop_types.default.string,
      fixedWidth: import_prop_types.default.bool,
      inverse: import_prop_types.default.bool,
      flip: import_prop_types.default.oneOf([true, false, "horizontal", "vertical", "both"]),
      icon: import_prop_types.default.oneOfType([import_prop_types.default.object, import_prop_types.default.array, import_prop_types.default.string]),
      listItem: import_prop_types.default.bool,
      pull: import_prop_types.default.oneOf(["right", "left"]),
      pulse: import_prop_types.default.bool,
      rotation: import_prop_types.default.oneOf([0, 90, 180, 270]),
      shake: import_prop_types.default.bool,
      size: import_prop_types.default.oneOf(["2xs", "xs", "sm", "lg", "xl", "2xl", "1x", "2x", "3x", "4x", "5x", "6x", "7x", "8x", "9x", "10x"]),
      spin: import_prop_types.default.bool,
      spinPulse: import_prop_types.default.bool,
      spinReverse: import_prop_types.default.bool,
      symbol: import_prop_types.default.oneOfType([import_prop_types.default.bool, import_prop_types.default.string]),
      title: import_prop_types.default.string,
      titleId: import_prop_types.default.string,
      transform: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.object]),
      swapOpacity: import_prop_types.default.bool
    };
    FontAwesomeIcon.defaultProps = {
      border: false,
      className: "",
      mask: null,
      maskId: null,
      fixedWidth: false,
      inverse: false,
      flip: false,
      icon: null,
      listItem: false,
      pull: null,
      pulse: false,
      rotation: null,
      size: null,
      spin: false,
      spinPulse: false,
      spinReverse: false,
      beat: false,
      fade: false,
      beatFade: false,
      bounce: false,
      shake: false,
      symbol: false,
      title: "",
      titleId: null,
      transform: null,
      swapOpacity: false
    };
    convertCurry = convert2.bind(null, import_react3.default.createElement);
  }
});

// dist/$server_build/chunks/pages/_threadid__B8MPmfhn.mjs
var threadid_B8MPmfhn_exports = {};
__export(threadid_B8MPmfhn_exports, {
  default: () => $$threadid,
  file: () => $$file3,
  url: () => $$url3
});
function Search() {
  const [searchTerm, setSearchTerm] = (0, import_react4.useState)("");
  (0, import_react4.useState)([]);
  const fetchData = async () => {
    try {
      const response = await fetch(`https://img.userz.net/embed?text=${searchTerm}&token=eyJhbGciOiJIUzI1NiJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLXVzZXItaWQiOiIxMTU0NzkxMTY3MjYxNDM2NTUzMjUiLCJ4LWhhc3VyYS1kZWZhdWx0LXJvbGUiOiJwdWJsaWMiLCJ4LWhhc3VyYS1hbGxvd2VkLXJvbGVzIjpbInB1YmxpYyJdfSwiaWF0IjoxNzAzMzYwMzMwfQ.Jex6YnFP3cWuhX3MfjN_eZmOakyPMIURTlMKQitKXJQ`);
      const data2 = await response.json();
      console.log(data2);
    } catch (error2) {
      console.error(error2);
    }
  };
  const handleSearch = (event) => {
    setSearchTerm(event.target.value);
  };
  const handleSubmit = async (event) => {
    event.preventDefault();
    await fetchData();
    setSearchTerm("");
    alert(`Submitting Name ${searchTerm}`);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(
    "div",
    {
      id: "marketing-banner",
      tabIndex: -1,
      className: "backdrop-blur-md bg-black/30 sticky z-20 flex flex-row justify-between py-4 top-0",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: "flex mb-3 flex-row grow items-center", children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
          "img",
          {
            src: "/ailogo.png",
            className: "h-20 w-20 mt-3",
            alt: "Flowbite Logo",
            style: { objectFit: "contain" }
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("form", { className: "w-full flex-grow flex items-center", onSubmit: handleSubmit, children: /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)("div", { className: "relative flex-grow", children: [
          /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
            "div",
            {
              className: "absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none",
              children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(FontAwesomeIcon, { icon: faComment })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
            "input",
            {
              value: searchTerm,
              onChange: handleSearch,
              type: "search",
              id: "default-search",
              className: "block p-4 ps-10 text-sm text-white border border-gray-300 rounded-lg bg-gray-900 dark:bg-gray-800 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500 w-full",
              placeholder: "Ask me anything...",
              required: true
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
            "button",
            {
              type: "submit",
              className: "text-white absolute end-2.5 bottom-2.5  focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800",
              children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(FontAwesomeIcon, { icon: faPaperPlane })
            }
          )
        ] }) }),
        /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("div", { className: "flex items-center flex-shrink-0", children: /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(
          "button",
          {
            "data-dismiss-target": "#marketing-banner",
            type: "button",
            className: "flex-shrink-0 inline-flex justify-center w-7 h-7 items-center text-gray-400 hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-0 dark:hover:bg-gray-600 dark:hover:text-white",
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
                "svg",
                {
                  className: "w-3 h-3",
                  "aria-hidden": "true",
                  xmlns: "http://www.w3.org/2000/svg",
                  fill: "none",
                  viewBox: "0 0 14 14",
                  children: /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
                    "path",
                    {
                      stroke: "currentColor",
                      strokeLinecap: "round",
                      strokeLinejoin: "round",
                      strokeWidth: "2",
                      d: "m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
                    }
                  )
                }
              ),
              /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("span", { className: "sr-only", children: "Close" })
            ]
          }
        ) })
      ]
    }
  );
}
var import_jsx_runtime5, import_react4, $$Astro4, $$threadid, $$file3, $$url3;
var init_threadid_B8MPmfhn = __esm({
  "dist/$server_build/chunks/pages/_threadid__B8MPmfhn.mjs"() {
    "use strict";
    init_astro_u8tnI5Mh();
    init_colors();
    init_tag_BFl4phYQ();
    import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1);
    init_free_solid_svg_icons();
    init_index_es();
    import_react4 = __toESM(require_react(), 1);
    $$Astro4 = createAstro();
    $$threadid = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro4, $$props, $$slots);
      Astro2.self = $$threadid;
      const { threadid } = Astro2.params;
      async function extractUniqueHashtags(inputString) {
        const hashtagRegex = /#(\w+)/g;
        const hashtags = inputString.match(hashtagRegex);
        if (!hashtags)
          return [];
        const uniqueHashtags = Array.from(
          new Set(hashtags.map((tag) => ({ hashtag: tag.slice(1), count: 10 })))
        );
        return uniqueHashtags;
      }
      function removeHashtags(inputString) {
        const hashtagRegex = /#\w+/g;
        const stringWithoutHashtags = inputString.replaceAll("\\n", "\n").replace(hashtagRegex, "");
        return stringWithoutHashtags;
      }
      const respOne = await gquery(
        `query MyQuery($_eq: String ) {
      similar: quq(args: {genid: "${threadid}"}) {
    genid
  }
  single: questions(limit: 1, where: {genid: {_eq: $_eq}, type: {_eq: "q"}}) {
    uuid
    genid
    text
    image
  }
  answer: questions(limit: 1, where: {genid: {_eq: $_eq}, type: {_eq: "a"}}) {
    uuid
    genid
    text
    image
  }
   
}
`,
        { _eq: threadid }
      );
      const _eq = JSON.stringify(
        respOne.similar.map((x4) => x4.genid)
      );
      const respTwo = await gquery(
        `query MyQueryx {
   
  q_q(where: {genid: {_in: ${_eq}}}) {
    genid
    text
    embed
  }
   q_a(where: {genid: {_in: ${_eq}}}) {
    genid
    text
  }

}`,
        {}
      );
      const image = respOne.single[0]?.image;
      const question = respOne.single[0]?.text;
      if (!question) {
        return Astro2.redirect("/404");
      }
      const answer = respOne.answer[0].text;
      const formatter = (text2) => {
        let resp = removeHashtags(text2).replaceAll("@username,", "").replaceAll("@username", "").split("\n");
        return resp;
      };
      const questions = respTwo.q_q;
      const answers = respTwo.q_a;
      const thread = questions.map((x4, i3) => ({
        q: { text: x4.text, genid: x4.genid },
        a: answers[i3]?.text || ""
      })).filter((x4) => x4.q.genid !== threadid);
      const flat = await extractUniqueHashtags(
        thread.flatMap((x4) => x4.a).join(" ")
      );
      let tagzfiltered;
      if (flat[0]) {
        const qtags = await gquery(
          `query MyQuery($_in: [String!] = "") {
     qtags(where: {hashtag: {_in: $_in}}) {
       count
       hashtag
     }
   }
 `,
          { _in: flat.map((x4) => x4.hashtag) }
        );
        tagzfiltered = qtags.qtags.filter((x4) => x4.count >= 10).sort((a3, z5) => {
          return z5.count - a3.count;
        }).slice(0, 30);
      } else {
        tagzfiltered = [];
      }
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": question, "description": "", "logo": "inner", "tags": tagzfiltered, "image": image }, { "default": ($$result2) => renderTemplate`${image && image !== "none" ? renderTemplate`${maybeRenderHead()}<div class="relative"> <img${addAttribute(`https://img.userz.net/uz/${threadid}/img.jpg`, "src")} width="1250" height="500" class="object-cover w-full h-64 lg:h-96" style="aspect-ratio: 1250 / 500; object-fit: cover;"${addAttribute(question, "alt")}> <div class="absolute inset-0 flex items-center justify-center p-4 md:p-6 lg:p-8"> <h1 class="text-3xl   text-white text-center bg-black bg-opacity-80 rounded-lg p-2"> ${question} </h1> </div> </div>` : renderTemplate`<h1 class="text-white font-medium text-3xl text-center">${question}</h1>`}<article class="prose prose-invert mx-auto"> <div class="text-white text-xl font-light"> ${formatter(answer).map((x4) => renderTemplate`<p>${x4}</p>`)} </div> </article> ${renderComponent($$result2, "Search", Search, { "client:load": true, "client:component-hydration": "load", "client:component-path": "/home/runner/work/monext/monext/apps/blogging/src/components/Search", "client:component-export": "default" })} ${questions[0] && renderTemplate`<h2 class="text-gray-100 font-bold">Extended FAQ</h2>`}${thread.slice(0, 5).map((q3) => renderTemplate`<article class="prose prose-invert mx-auto"> <a class="flex items-center"${addAttribute("/" + q3.q.genid, "href")}> <h2 class="pl-2 text-gray-200 underline"> ${q3.q.text.replace("?", "")} </h2> </a> ${formatter(q3.a).map((x4) => renderTemplate`<p>${x4}</p>`)} </article>`)}` })}`;
    }, "/home/runner/work/monext/monext/apps/blogging/src/pages/[threadid].astro", void 0);
    $$file3 = "/home/runner/work/monext/monext/apps/blogging/src/pages/[threadid].astro";
    $$url3 = "/[threadid]";
  }
});

// dist/$server_build/chunks/_threadid__CGriSlOx.mjs
var threadid_CGriSlOx_exports = {};
__export(threadid_CGriSlOx_exports, {
  page: () => page8,
  renderers: () => renderers
});
var page8;
var init_threadid_CGriSlOx = __esm({
  "dist/$server_build/chunks/_threadid__CGriSlOx.mjs"() {
    "use strict";
    init_renderers();
    page8 = () => Promise.resolve().then(() => (init_threadid_B8MPmfhn(), threadid_B8MPmfhn_exports));
  }
});

// ../../node_modules/lodash/_baseSlice.js
var require_baseSlice = __commonJS({
  "../../node_modules/lodash/_baseSlice.js"(exports2, module) {
    function baseSlice(array, start, end3) {
      var index = -1, length = array.length;
      if (start < 0) {
        start = -start > length ? 0 : length + start;
      }
      end3 = end3 > length ? length : end3;
      if (end3 < 0) {
        end3 += length;
      }
      length = start > end3 ? 0 : end3 - start >>> 0;
      start >>>= 0;
      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }
    module.exports = baseSlice;
  }
});

// ../../node_modules/lodash/eq.js
var require_eq = __commonJS({
  "../../node_modules/lodash/eq.js"(exports2, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// ../../node_modules/lodash/_freeGlobal.js
var require_freeGlobal = __commonJS({
  "../../node_modules/lodash/_freeGlobal.js"(exports2, module) {
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    module.exports = freeGlobal;
  }
});

// ../../node_modules/lodash/_root.js
var require_root = __commonJS({
  "../../node_modules/lodash/_root.js"(exports2, module) {
    var freeGlobal = require_freeGlobal();
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    module.exports = root;
  }
});

// ../../node_modules/lodash/_Symbol.js
var require_Symbol = __commonJS({
  "../../node_modules/lodash/_Symbol.js"(exports2, module) {
    var root = require_root();
    var Symbol2 = root.Symbol;
    module.exports = Symbol2;
  }
});

// ../../node_modules/lodash/_getRawTag.js
var require_getRawTag = __commonJS({
  "../../node_modules/lodash/_getRawTag.js"(exports2, module) {
    var Symbol2 = require_Symbol();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var nativeObjectToString = objectProto.toString;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    module.exports = getRawTag;
  }
});

// ../../node_modules/lodash/_objectToString.js
var require_objectToString = __commonJS({
  "../../node_modules/lodash/_objectToString.js"(exports2, module) {
    var objectProto = Object.prototype;
    var nativeObjectToString = objectProto.toString;
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    module.exports = objectToString;
  }
});

// ../../node_modules/lodash/_baseGetTag.js
var require_baseGetTag = __commonJS({
  "../../node_modules/lodash/_baseGetTag.js"(exports2, module) {
    var Symbol2 = require_Symbol();
    var getRawTag = require_getRawTag();
    var objectToString = require_objectToString();
    var nullTag = "[object Null]";
    var undefinedTag = "[object Undefined]";
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    module.exports = baseGetTag;
  }
});

// ../../node_modules/lodash/isObject.js
var require_isObject = __commonJS({
  "../../node_modules/lodash/isObject.js"(exports2, module) {
    function isObject3(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    module.exports = isObject3;
  }
});

// ../../node_modules/lodash/isFunction.js
var require_isFunction = __commonJS({
  "../../node_modules/lodash/isFunction.js"(exports2, module) {
    var baseGetTag = require_baseGetTag();
    var isObject3 = require_isObject();
    var asyncTag = "[object AsyncFunction]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var proxyTag = "[object Proxy]";
    function isFunction(value) {
      if (!isObject3(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    module.exports = isFunction;
  }
});

// ../../node_modules/lodash/isLength.js
var require_isLength = __commonJS({
  "../../node_modules/lodash/isLength.js"(exports2, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    module.exports = isLength;
  }
});

// ../../node_modules/lodash/isArrayLike.js
var require_isArrayLike = __commonJS({
  "../../node_modules/lodash/isArrayLike.js"(exports2, module) {
    var isFunction = require_isFunction();
    var isLength = require_isLength();
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    module.exports = isArrayLike;
  }
});

// ../../node_modules/lodash/_isIndex.js
var require_isIndex = __commonJS({
  "../../node_modules/lodash/_isIndex.js"(exports2, module) {
    var MAX_SAFE_INTEGER = 9007199254740991;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;
      return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
    }
    module.exports = isIndex;
  }
});

// ../../node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "../../node_modules/lodash/_isIterateeCall.js"(exports2, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject3 = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject3(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// ../../node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "../../node_modules/lodash/_trimmedEndIndex.js"(exports2, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// ../../node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "../../node_modules/lodash/_baseTrim.js"(exports2, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// ../../node_modules/lodash/isObjectLike.js
var require_isObjectLike = __commonJS({
  "../../node_modules/lodash/isObjectLike.js"(exports2, module) {
    function isObjectLike2(value) {
      return value != null && typeof value == "object";
    }
    module.exports = isObjectLike2;
  }
});

// ../../node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "../../node_modules/lodash/isSymbol.js"(exports2, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike2 = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike2(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// ../../node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "../../node_modules/lodash/toNumber.js"(exports2, module) {
    var baseTrim = require_baseTrim();
    var isObject3 = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject3(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject3(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// ../../node_modules/lodash/toFinite.js
var require_toFinite = __commonJS({
  "../../node_modules/lodash/toFinite.js"(exports2, module) {
    var toNumber = require_toNumber();
    var INFINITY = 1 / 0;
    var MAX_INTEGER = 17976931348623157e292;
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = value < 0 ? -1 : 1;
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }
    module.exports = toFinite;
  }
});

// ../../node_modules/lodash/toInteger.js
var require_toInteger = __commonJS({
  "../../node_modules/lodash/toInteger.js"(exports2, module) {
    var toFinite = require_toFinite();
    function toInteger(value) {
      var result = toFinite(value), remainder = result % 1;
      return result === result ? remainder ? result - remainder : result : 0;
    }
    module.exports = toInteger;
  }
});

// ../../node_modules/lodash/chunk.js
var require_chunk = __commonJS({
  "../../node_modules/lodash/chunk.js"(exports2, module) {
    var baseSlice = require_baseSlice();
    var isIterateeCall = require_isIterateeCall();
    var toInteger = require_toInteger();
    var nativeCeil = Math.ceil;
    var nativeMax = Math.max;
    function chunk2(array, size, guard) {
      if (guard ? isIterateeCall(array, size, guard) : size === void 0) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0, resIndex = 0, result = Array(nativeCeil(length / size));
      while (index < length) {
        result[resIndex++] = baseSlice(array, index, index += size);
      }
      return result;
    }
    module.exports = chunk2;
  }
});

// dist/$server_build/chunks/pages/index_DIgAuLRF.mjs
var index_DIgAuLRF_exports = {};
__export(index_DIgAuLRF_exports, {
  default: () => $$Index,
  file: () => $$file4,
  url: () => $$url4
});
var import_chunk, daysarr, $$Astro5, $$Index, $$file4, $$url4;
var init_index_DIgAuLRF = __esm({
  "dist/$server_build/chunks/pages/index_DIgAuLRF.mjs"() {
    "use strict";
    init_astro_u8tnI5Mh();
    init_colors();
    import_chunk = __toESM(require_chunk(), 1);
    init_tag_BFl4phYQ();
    daysarr = ["00000c4618", "00001152", "00001268", "000018d6", "00002a3a", "00002d1c", "00002ef3", "000037eb", "000039c9", "00003cd1", "00004461", "0000698d", "0000700c", "000075d32d", "00007dea28", "000088eb", "00008fd1", "0000a1ee", "0000a6fc", "0000b82052", "0000b99c", "0000ba02", "0000c19c", "0000c23a", "0000cd12", "0000d7dd", "0000e26c", "0000ea29", "0000fb53", "0000fdc8", "0001041d", "000106c7", "00010ba2", "00011025", "00011390", "00011ad1", "000122a8", "00012f3f", "00013ab3", "0001427b", "000145df", "00014990", "000149d0", "00015849", "00015d52", "0001601a", "00016252", "00016ff2", "000175e3", "000179d4", "00017bf8", "00017ea0", "0001852a5a", "00018920", "00018d79", "00018ed44e", "00019f1e", "0001a55c", "0001ab644b", "0001ad81", "0001b3e8", "0001bcb0", "0001dae4", "0001dcc0", "0001deea", "0001e202", "0001e297", "0001e398", "0001ea49", "0001f74f", "0001fd34", "00020f4d", "0002156f", "00022d86", "0002340a", "00023c68", "00023d66", "00023ef3", "00024ac4", "000255b2", "00025a7adc", "000269b9", "000279a530", "00028186", "00028e89", "000291a9", "00029f55", "0002a103", "0002a72c1b", "0002ab72", "0002ad63e7", "0002af6a", "0002b071", "0002b3cc", "0002b481", "0002c720", "0002ce02", "0002d38f", "0002dcec", "0002dd03", "0002e2f7", "0002eac8", "0002ec91", "0002eca6", "0002ed76", "0002f87938", "0002fc9d", "00030b4a", "00030fc3", "00031ccd", "00031f91", "000321ae", "000339d2", "00033c3e", "00034e3e", "00035875", "00035e4c", "000362f4", "00036d1d", "00036d7b", "00038bbd", "00038e79", "00039562", "00039c45", "0003a30f", "0003a500", "0003ab19", "0003b6d5", "0003ba52", "0003be66", "0003bf5f", "0003c413", "0003cf6b", "0003d085", "0003d3db", "0003d7553c", "0003dd97", "0003ebd7", "0003ec54", "000403b0", "00040992", "000411fb2f", "00041d0d", "00041fae", "00042513", "00044e00", "000451ce", "00046c1c", "000475d9", "0004831d", "00048ca3", "00049969b3", "00049cb7", "0004a11c", "0004a186", "0004a49a", "0004a4f0", "0004ab01", "0004b626", "0004b6b5", "0004bba1", "0004be4a9e", "0004c3aa", "0004c518", "0004ccd6", "0004ceb974", "0004d052", "0004d6a9", "0004d6bf", "0004dbbe", "0004dda9", "0004e3fc", "0004ee3d", "0004fbde", "00050412", "00050ae8", "00050b70", "00051757", "0005192a", "00051b9d", "00051d2a", "0005300d", "00053aec", "0005491b54", "00054e56", "000559f6", "00055b7d79", "000563ba", "00057087", "0005737f", "0005790d", "00057c48", "0005872d", "000589ea", "00058c37", "0005a089", "0005b755", "0005c4bf", "0005c6d1", "0005c6e1", "0005c908", "0005cf2f", "0005d988", "0005de1b", "0005ea81", "0005ec1c", "0005f6ae", "00060266", "000608c8", "0006096a", "0006138c", "000614e5", "0006236a", "00062de5", "00063ecd", "00064046", "00064235", "000647b6aa", "00064dfc79", "00064ffe", "00065206", "000663db", "00067370", "00067395", "00067771", "00067de1", "000690c4", "0006ac6c", "0006ad69", "0006adfa", "0006af6d", "0006b56d", "0006b5d1", "0006b9df", "0006bfe7", "0006c596", "0006c5b0", "0006caca", "0006cd07", "0006d126", "0006d5c155", "0006d73f", "0006df53", "0006e034", "0006f4e1", "0006f9d0", "0006fba4", "000705ff", "00072228", "0007391f", "00073dec", "000742f8", "00075589ff", "00075900", "00076cd0", "00076e06", "00077f51", "00078599", "000797f7", "00079b52", "00079e0977", "0007aa9548", "0007abcd", "0007b10f", "0007c0c1", "0007c2b4", "0007d6ca", "0007d98f", "0007e2c4", "0007e3e5", "0007e440", "0007f16d", "0008036d", "0008092c", "00080994", "00081233", "000816ae", "00082041", "00082803", "000833a5", "0008359f60", "00083d60", "00083dbb", "0008480c", "00084f5c", "00085321", "00085935", "00085b4b", "000863eb", "000866db", "00086a23", "0008704f", "00087e43", "00088221", "00088866cb", "0008909e", "000894e4", "00089a5b-1935-4214-8d59-65e0cac7c654", "00089ca3", "00089ce364", "0008a2e9", "0008b2b1", "0008b353", "0008bb41", "0008bd70", "0008ccdc", "0008d032", "0008dfdd", "0008e094", "0008e0d8", "0008e168", "0008e3c3", "0008e650cc", "0008f8f0", "000903b2", "000906ba", "00091977", "000919de0e", "00091b27", "00091c33", "000927d2", "00092c4b", "00092e0e", "0009308e", "0009310d", "00093208", "0009335a", "0009342e", "00094615", "00094ab0", "0009520f", "00095e32", "0009622c", "00096cc4", "00096dba", "00097588", "0009759a", "000975d5", "0009843d", "00098ff0", "00099ba6", "00099d33", "00099eb5", "00099ed8", "0009aac5", "0009aebf", "0009b385", "0009b627", "0009bbdb", "0009c31b", "0009c7e3", "0009eaf4", "0009f1ae", "0009f603", "0009f654", "0009f86e15", "0009fd38", "000a0041", "000a04db", "000a0c59", "000a0f4d", "000a2088", "000a27cf", "000a3df927", "000a41bf", "000a448e", "000a4cfc", "000a505e6d", "000a5259", "000a54f3", "000a59ab", "000a5a8e", "000a6358", "000a65fb", "000a6a59", "000a6e8140", "000a72f7", "000a7d52", "000a8f95", "000a9313", "000aa11c", "000aa9bc", "000aad2b", "000aafdc", "000aaffa", "000ab278", "000ab7ef", "000ab8a4", "000ac593", "000ac75a", "000acf7c", "000ad7ab", "000aedb1", "000af071", "000af218", "000af67b", "000b00892a", "000b0bf9", "000b0e7e", "000b1f1d"];
    $$Astro5 = createAstro();
    $$Index = createComponent(async ($$result, $$props, $$slots) => {
      const Astro2 = $$result.createAstro($$Astro5, $$props, $$slots);
      Astro2.self = $$Index;
      const currentDate = /* @__PURE__ */ new Date();
      const dayOfYear = Math.floor(
        (currentDate.getTime() - new Date(currentDate.getFullYear(), 0, 0).getTime()) / 864e5 + 1
      );
      const genid = daysarr[dayOfYear - 2];
      const simOne = await gquery(
        `query MyQuery($_eq: String ) {
      similar: quq(args: {genid: "${genid}"}) {
    genid
  }
}
`,
        {}
      );
      const data = await gquery(
        `query MyQuery( $_in: [String!])  {
	  questions: q_q(where: {genid: {_in: $_in}}) {
		text
		genid
	  }
    answers: q_a(where: {genid: {_in: $_in}}) {
		text
		genid
	  }
	  qtags(order_by: {count: desc}, limit: 40) {
		  count
		  hashtag
		}
	}`,
        { _in: simOne.similar.map(({ genid: genid2 }) => genid2) }
      );
      const { questions, answers } = data;
      const chunks = (0, import_chunk.default)(questions, 10);
      const chunksa = (0, import_chunk.default)(answers, 10);
      return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "userz dot net.", "tags": data.qtags }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<div class="max-w-screen-xl px-4 py-3 mx-auto"> <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3"> ${chunks.map((chunk2, i3) => renderTemplate`<div> ${chunk2.map(({ genid: genid2, text: text2 }, i1) => renderTemplate`<div class="grid"> <a${addAttribute("/" + genid2, "href")} class="p-6  m-3 border-emerald-600 border-4 rounded-lg shadow hover:bg-gray-800 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700 relative"> <div class="absolute -top-1 -right-0.5 bg-emerald-600 px-2 rounded-bl-md  rounded-tr-lg text-xs text-black"> ${(/* @__PURE__ */ new Date()).toISOString().split("T")[0]} </div> <h5 class="mb-2 text-xl xs:text-2xl sm:text-3xl font-bold tracking-tight text-gray-200"> ${" "} ${text2.replaceAll("?", " ")} </h5> ${chunksa[i3][i1]?.text.slice(0, 150)} ...
</a> </div>`)} </div>`)} </div> </div> ` })}`;
    }, "/home/runner/work/monext/monext/apps/blogging/src/pages/index.astro", void 0);
    $$file4 = "/home/runner/work/monext/monext/apps/blogging/src/pages/index.astro";
    $$url4 = "";
  }
});

// dist/$server_build/chunks/index_Cziszx1U.mjs
var index_Cziszx1U_exports = {};
__export(index_Cziszx1U_exports, {
  page: () => page9,
  renderers: () => renderers
});
var page9;
var init_index_Cziszx1U = __esm({
  "dist/$server_build/chunks/index_Cziszx1U.mjs"() {
    "use strict";
    init_renderers();
    page9 = () => Promise.resolve().then(() => (init_index_DIgAuLRF(), index_DIgAuLRF_exports));
  }
});

// dist/$server_build/_worker.mjs
init_renderers();

// dist/$server_build/manifest_BZo2cJRf.mjs
var import_cookie = __toESM(require_cookie(), 1);
init_colors();
init_astro_u8tnI5Mh();
init_clsx();

// ../../node_modules/path-to-regexp/dist.es2015/index.js
function lexer(str) {
  var tokens = [];
  var i3 = 0;
  while (i3 < str.length) {
    var char = str[i3];
    if (char === "*" || char === "+" || char === "?") {
      tokens.push({ type: "MODIFIER", index: i3, value: str[i3++] });
      continue;
    }
    if (char === "\\") {
      tokens.push({ type: "ESCAPED_CHAR", index: i3++, value: str[i3++] });
      continue;
    }
    if (char === "{") {
      tokens.push({ type: "OPEN", index: i3, value: str[i3++] });
      continue;
    }
    if (char === "}") {
      tokens.push({ type: "CLOSE", index: i3, value: str[i3++] });
      continue;
    }
    if (char === ":") {
      var name = "";
      var j5 = i3 + 1;
      while (j5 < str.length) {
        var code = str.charCodeAt(j5);
        if (
          // `0-9`
          code >= 48 && code <= 57 || // `A-Z`
          code >= 65 && code <= 90 || // `a-z`
          code >= 97 && code <= 122 || // `_`
          code === 95
        ) {
          name += str[j5++];
          continue;
        }
        break;
      }
      if (!name)
        throw new TypeError("Missing parameter name at ".concat(i3));
      tokens.push({ type: "NAME", index: i3, value: name });
      i3 = j5;
      continue;
    }
    if (char === "(") {
      var count = 1;
      var pattern = "";
      var j5 = i3 + 1;
      if (str[j5] === "?") {
        throw new TypeError('Pattern cannot start with "?" at '.concat(j5));
      }
      while (j5 < str.length) {
        if (str[j5] === "\\") {
          pattern += str[j5++] + str[j5++];
          continue;
        }
        if (str[j5] === ")") {
          count--;
          if (count === 0) {
            j5++;
            break;
          }
        } else if (str[j5] === "(") {
          count++;
          if (str[j5 + 1] !== "?") {
            throw new TypeError("Capturing groups are not allowed at ".concat(j5));
          }
        }
        pattern += str[j5++];
      }
      if (count)
        throw new TypeError("Unbalanced pattern at ".concat(i3));
      if (!pattern)
        throw new TypeError("Missing pattern at ".concat(i3));
      tokens.push({ type: "PATTERN", index: i3, value: pattern });
      i3 = j5;
      continue;
    }
    tokens.push({ type: "CHAR", index: i3, value: str[i3++] });
  }
  tokens.push({ type: "END", index: i3, value: "" });
  return tokens;
}
function parse(str, options) {
  if (options === void 0) {
    options = {};
  }
  var tokens = lexer(str);
  var _a3 = options.prefixes, prefixes2 = _a3 === void 0 ? "./" : _a3;
  var defaultPattern = "[^".concat(escapeString(options.delimiter || "/#?"), "]+?");
  var result = [];
  var key = 0;
  var i3 = 0;
  var path = "";
  var tryConsume = function(type) {
    if (i3 < tokens.length && tokens[i3].type === type)
      return tokens[i3++].value;
  };
  var mustConsume = function(type) {
    var value2 = tryConsume(type);
    if (value2 !== void 0)
      return value2;
    var _a4 = tokens[i3], nextType = _a4.type, index = _a4.index;
    throw new TypeError("Unexpected ".concat(nextType, " at ").concat(index, ", expected ").concat(type));
  };
  var consumeText = function() {
    var result2 = "";
    var value2;
    while (value2 = tryConsume("CHAR") || tryConsume("ESCAPED_CHAR")) {
      result2 += value2;
    }
    return result2;
  };
  while (i3 < tokens.length) {
    var char = tryConsume("CHAR");
    var name = tryConsume("NAME");
    var pattern = tryConsume("PATTERN");
    if (name || pattern) {
      var prefix = char || "";
      if (prefixes2.indexOf(prefix) === -1) {
        path += prefix;
        prefix = "";
      }
      if (path) {
        result.push(path);
        path = "";
      }
      result.push({
        name: name || key++,
        prefix,
        suffix: "",
        pattern: pattern || defaultPattern,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    var value = char || tryConsume("ESCAPED_CHAR");
    if (value) {
      path += value;
      continue;
    }
    if (path) {
      result.push(path);
      path = "";
    }
    var open = tryConsume("OPEN");
    if (open) {
      var prefix = consumeText();
      var name_1 = tryConsume("NAME") || "";
      var pattern_1 = tryConsume("PATTERN") || "";
      var suffix = consumeText();
      mustConsume("CLOSE");
      result.push({
        name: name_1 || (pattern_1 ? key++ : ""),
        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,
        prefix,
        suffix,
        modifier: tryConsume("MODIFIER") || ""
      });
      continue;
    }
    mustConsume("END");
  }
  return result;
}
function compile(str, options) {
  return tokensToFunction(parse(str, options), options);
}
function tokensToFunction(tokens, options) {
  if (options === void 0) {
    options = {};
  }
  var reFlags = flags(options);
  var _a3 = options.encode, encode4 = _a3 === void 0 ? function(x4) {
    return x4;
  } : _a3, _b2 = options.validate, validate = _b2 === void 0 ? true : _b2;
  var matches = tokens.map(function(token) {
    if (typeof token === "object") {
      return new RegExp("^(?:".concat(token.pattern, ")$"), reFlags);
    }
  });
  return function(data) {
    var path = "";
    for (var i3 = 0; i3 < tokens.length; i3++) {
      var token = tokens[i3];
      if (typeof token === "string") {
        path += token;
        continue;
      }
      var value = data ? data[token.name] : void 0;
      var optional = token.modifier === "?" || token.modifier === "*";
      var repeat = token.modifier === "*" || token.modifier === "+";
      if (Array.isArray(value)) {
        if (!repeat) {
          throw new TypeError('Expected "'.concat(token.name, '" to not repeat, but got an array'));
        }
        if (value.length === 0) {
          if (optional)
            continue;
          throw new TypeError('Expected "'.concat(token.name, '" to not be empty'));
        }
        for (var j5 = 0; j5 < value.length; j5++) {
          var segment = encode4(value[j5], token);
          if (validate && !matches[i3].test(segment)) {
            throw new TypeError('Expected all "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
          }
          path += token.prefix + segment + token.suffix;
        }
        continue;
      }
      if (typeof value === "string" || typeof value === "number") {
        var segment = encode4(String(value), token);
        if (validate && !matches[i3].test(segment)) {
          throw new TypeError('Expected "'.concat(token.name, '" to match "').concat(token.pattern, '", but got "').concat(segment, '"'));
        }
        path += token.prefix + segment + token.suffix;
        continue;
      }
      if (optional)
        continue;
      var typeOfMessage = repeat ? "an array" : "a string";
      throw new TypeError('Expected "'.concat(token.name, '" to be ').concat(typeOfMessage));
    }
    return path;
  };
}
function escapeString(str) {
  return str.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
}
function flags(options) {
  return options && options.sensitive ? "" : "i";
}

// dist/$server_build/manifest_BZo2cJRf.mjs
var dateTimeFormat = new Intl.DateTimeFormat([], {
  hour: "2-digit",
  minute: "2-digit",
  second: "2-digit",
  hour12: false
});
var levels = {
  debug: 20,
  info: 30,
  warn: 40,
  error: 50,
  silent: 90
};
function log(opts2, level, label, message2, newLine = true) {
  const logLevel = opts2.level;
  const dest = opts2.dest;
  const event = {
    label,
    level,
    message: message2,
    newLine
  };
  if (!isLogLevelEnabled(logLevel, level)) {
    return;
  }
  dest.write(event);
}
function isLogLevelEnabled(configuredLogLevel, level) {
  return levels[configuredLogLevel] <= levels[level];
}
function info(opts2, label, message2, newLine = true) {
  return log(opts2, "info", label, message2, newLine);
}
function warn(opts2, label, message2, newLine = true) {
  return log(opts2, "warn", label, message2, newLine);
}
function error(opts2, label, message2, newLine = true) {
  return log(opts2, "error", label, message2, newLine);
}
function debug(...args) {
  if ("_astroGlobalDebug" in globalThis) {
    globalThis._astroGlobalDebug(...args);
  }
}
function getEventPrefix({ level, label }) {
  const timestamp = `${dateTimeFormat.format(/* @__PURE__ */ new Date())}`;
  const prefix = [];
  if (level === "error" || level === "warn") {
    prefix.push(bold(timestamp));
    prefix.push(`[${level.toUpperCase()}]`);
  } else {
    prefix.push(timestamp);
  }
  if (label) {
    prefix.push(`[${label}]`);
  }
  if (level === "error") {
    return red(prefix.join(" "));
  }
  if (level === "warn") {
    return yellow(prefix.join(" "));
  }
  if (prefix.length === 1) {
    return dim(prefix[0]);
  }
  return dim(prefix[0]) + " " + blue(prefix.splice(1).join(" "));
}
if (typeof process !== "undefined") {
  let proc = process;
  if ("argv" in proc && Array.isArray(proc.argv)) {
    if (proc.argv.includes("--verbose"))
      ;
    else if (proc.argv.includes("--silent"))
      ;
    else
      ;
  }
}
var Logger = class {
  options;
  constructor(options) {
    this.options = options;
  }
  info(label, message2, newLine = true) {
    info(this.options, label, message2, newLine);
  }
  warn(label, message2, newLine = true) {
    warn(this.options, label, message2, newLine);
  }
  error(label, message2, newLine = true) {
    error(this.options, label, message2, newLine);
  }
  debug(label, ...messages) {
    debug(label, ...messages);
  }
  level() {
    return this.options.level;
  }
  forkIntegrationLogger(label) {
    return new AstroIntegrationLogger(this.options, label);
  }
};
var AstroIntegrationLogger = class _AstroIntegrationLogger {
  options;
  label;
  constructor(logging, label) {
    this.options = logging;
    this.label = label;
  }
  /**
   * Creates a new logger instance with a new label, but the same log options.
   */
  fork(label) {
    return new _AstroIntegrationLogger(this.options, label);
  }
  info(message2) {
    info(this.options, this.label, message2);
  }
  warn(message2) {
    warn(this.options, this.label, message2);
  }
  error(message2) {
    error(this.options, this.label, message2);
  }
  debug(message2) {
    debug(this.label, message2);
  }
};
function getRouteGenerator(segments, addTrailingSlash) {
  const template = segments.map((segment) => {
    return "/" + segment.map((part) => {
      if (part.spread) {
        return `:${part.content.slice(3)}(.*)?`;
      } else if (part.dynamic) {
        return `:${part.content}`;
      } else {
        return part.content.normalize().replace(/\?/g, "%3F").replace(/#/g, "%23").replace(/%5B/g, "[").replace(/%5D/g, "]").replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
      }
    }).join("");
  }).join("");
  let trailing = "";
  if (addTrailingSlash === "always" && segments.length) {
    trailing = "/";
  }
  const toPath = compile(template + trailing);
  return toPath;
}
function deserializeRouteData(rawRouteData) {
  return {
    route: rawRouteData.route,
    type: rawRouteData.type,
    pattern: new RegExp(rawRouteData.pattern),
    params: rawRouteData.params,
    component: rawRouteData.component,
    generate: getRouteGenerator(rawRouteData.segments, rawRouteData._meta.trailingSlash),
    pathname: rawRouteData.pathname || void 0,
    segments: rawRouteData.segments,
    prerender: rawRouteData.prerender,
    redirect: rawRouteData.redirect,
    redirectRoute: rawRouteData.redirectRoute ? deserializeRouteData(rawRouteData.redirectRoute) : void 0,
    fallbackRoutes: rawRouteData.fallbackRoutes.map((fallback) => {
      return deserializeRouteData(fallback);
    }),
    isIndex: rawRouteData.isIndex
  };
}
function deserializeManifest(serializedManifest) {
  const routes = [];
  for (const serializedRoute of serializedManifest.routes) {
    routes.push({
      ...serializedRoute,
      routeData: deserializeRouteData(serializedRoute.routeData)
    });
    const route = serializedRoute;
    route.routeData = deserializeRouteData(serializedRoute.routeData);
  }
  const assets = new Set(serializedManifest.assets);
  const componentMetadata = new Map(serializedManifest.componentMetadata);
  const clientDirectives = new Map(serializedManifest.clientDirectives);
  return {
    // in case user middleware exists, this no-op middleware will be reassigned (see plugin-ssr.ts)
    middleware(_6, next) {
      return next();
    },
    ...serializedManifest,
    assets,
    componentMetadata,
    clientDirectives,
    routes
  };
}
var manifest = deserializeManifest({ "adapterName": "@astrojs/cloudflare", "routes": [{ "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "type": "endpoint", "isIndex": false, "route": "/_image", "pattern": "^\\/_image$", "segments": [[{ "content": "_image", "dynamic": false, "spread": false }]], "params": [], "component": "../../node_modules/astro/dist/assets/endpoint/generic.js", "pathname": "/_image", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "type": "endpoint", "isIndex": false, "route": "/api/auth/[...auth]", "pattern": "^\\/api\\/auth(?:\\/(.*?))?$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "auth", "dynamic": false, "spread": false }], [{ "content": "...auth", "dynamic": true, "spread": true }]], "params": ["...auth"], "component": "../../node_modules/auth-astro/src/api/[...auth].ts", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/auth", "isIndex": false, "type": "endpoint", "pattern": "^\\/api\\/auth\\/?$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "auth", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/api/auth.ts", "pathname": "/api/auth", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/img/[id]", "isIndex": false, "type": "endpoint", "pattern": "^\\/api\\/img\\/([^/]+?)\\/?$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "img", "dynamic": false, "spread": false }], [{ "content": "id", "dynamic": true, "spread": false }]], "params": ["id"], "component": "src/pages/api/img/[id].ts", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [], "styles": [], "routeData": { "route": "/api/sql", "isIndex": false, "type": "endpoint", "pattern": "^\\/api\\/sql\\/?$", "segments": [[{ "content": "api", "dynamic": false, "spread": false }], [{ "content": "sql", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/api/sql.ts", "pathname": "/api/sql", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [{ "type": "external", "value": "/_astro/hoisted.BWC-BU_0.js" }], "styles": [{ "type": "external", "src": "/_astro/_threadid_.VxUrD4Mg.css" }, { "type": "external", "src": "/_astro/_threadid_.Y1m8o3aG.css" }], "routeData": { "route": "/energopro", "isIndex": false, "type": "page", "pattern": "^\\/energopro\\/?$", "segments": [[{ "content": "energopro", "dynamic": false, "spread": false }]], "params": [], "component": "src/pages/energopro.astro", "pathname": "/energopro", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [{ "type": "inline", "value": 'async function signIn(providerId, options, authorizationParams) {\n  const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n  const { prefix = "/api/auth", ...opts } = options ?? {};\n  const isCredentials = providerId === "credentials";\n  const isEmail = providerId === "email";\n  const isSupportingReturn = isCredentials || isEmail;\n  const signInUrl = `${prefix}/${isCredentials ? "callback" : "signin"}/${providerId}`;\n  const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`;\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(_signInUrl, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    // @ts-expect-error -- ignore\n    body: new URLSearchParams({\n      ...opts,\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.clone().json();\n  const error = new URL(data.url).searchParams.get("error");\n  if (redirect || !isSupportingReturn || !error) {\n    window.location.href = data.url ?? callbackUrl;\n    if (data.url.includes("#"))\n      window.location.reload();\n    return;\n  }\n  return res;\n}\nasync function signOut(options) {\n  const { callbackUrl = window.location.href, prefix = "/api/auth" } = options ?? {};\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(`${prefix}/signout`, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    body: new URLSearchParams({\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.json();\n  const url = data.url ?? callbackUrl;\n  window.location.href = url;\n  if (url.includes("#"))\n    window.location.reload();\n}\n\nwindow.signIn = signIn;\n\nwindow.signOut = signOut;\n' }], "styles": [{ "type": "external", "src": "/_astro/_threadid_.VxUrD4Mg.css" }, { "type": "external", "src": "/_astro/_threadid_.Y1m8o3aG.css" }], "routeData": { "route": "/t/[tag]", "isIndex": false, "type": "page", "pattern": "^\\/t\\/([^/]+?)\\/?$", "segments": [[{ "content": "t", "dynamic": false, "spread": false }], [{ "content": "tag", "dynamic": true, "spread": false }]], "params": ["tag"], "component": "src/pages/t/[tag].astro", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [{ "type": "inline", "value": 'async function signIn(providerId, options, authorizationParams) {\n  const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n  const { prefix = "/api/auth", ...opts } = options ?? {};\n  const isCredentials = providerId === "credentials";\n  const isEmail = providerId === "email";\n  const isSupportingReturn = isCredentials || isEmail;\n  const signInUrl = `${prefix}/${isCredentials ? "callback" : "signin"}/${providerId}`;\n  const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`;\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(_signInUrl, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    // @ts-expect-error -- ignore\n    body: new URLSearchParams({\n      ...opts,\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.clone().json();\n  const error = new URL(data.url).searchParams.get("error");\n  if (redirect || !isSupportingReturn || !error) {\n    window.location.href = data.url ?? callbackUrl;\n    if (data.url.includes("#"))\n      window.location.reload();\n    return;\n  }\n  return res;\n}\nasync function signOut(options) {\n  const { callbackUrl = window.location.href, prefix = "/api/auth" } = options ?? {};\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(`${prefix}/signout`, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    body: new URLSearchParams({\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.json();\n  const url = data.url ?? callbackUrl;\n  window.location.href = url;\n  if (url.includes("#"))\n    window.location.reload();\n}\n\nwindow.signIn = signIn;\n\nwindow.signOut = signOut;\n' }], "styles": [{ "type": "external", "src": "/_astro/_threadid_.VxUrD4Mg.css" }, { "type": "external", "src": "/_astro/_threadid_.Y1m8o3aG.css" }], "routeData": { "route": "/[threadid]", "isIndex": false, "type": "page", "pattern": "^\\/([^/]+?)\\/?$", "segments": [[{ "content": "threadid", "dynamic": true, "spread": false }]], "params": ["threadid"], "component": "src/pages/[threadid].astro", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }, { "file": "", "links": [], "scripts": [{ "type": "inline", "value": 'async function signIn(providerId, options, authorizationParams) {\n  const { callbackUrl = window.location.href, redirect = true } = options ?? {};\n  const { prefix = "/api/auth", ...opts } = options ?? {};\n  const isCredentials = providerId === "credentials";\n  const isEmail = providerId === "email";\n  const isSupportingReturn = isCredentials || isEmail;\n  const signInUrl = `${prefix}/${isCredentials ? "callback" : "signin"}/${providerId}`;\n  const _signInUrl = `${signInUrl}?${new URLSearchParams(authorizationParams)}`;\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(_signInUrl, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    // @ts-expect-error -- ignore\n    body: new URLSearchParams({\n      ...opts,\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.clone().json();\n  const error = new URL(data.url).searchParams.get("error");\n  if (redirect || !isSupportingReturn || !error) {\n    window.location.href = data.url ?? callbackUrl;\n    if (data.url.includes("#"))\n      window.location.reload();\n    return;\n  }\n  return res;\n}\nasync function signOut(options) {\n  const { callbackUrl = window.location.href, prefix = "/api/auth" } = options ?? {};\n  const csrfTokenResponse = await fetch(`${prefix}/csrf`);\n  const { csrfToken } = await csrfTokenResponse.json();\n  const res = await fetch(`${prefix}/signout`, {\n    method: "post",\n    headers: {\n      "Content-Type": "application/x-www-form-urlencoded",\n      "X-Auth-Return-Redirect": "1"\n    },\n    body: new URLSearchParams({\n      csrfToken,\n      callbackUrl\n    })\n  });\n  const data = await res.json();\n  const url = data.url ?? callbackUrl;\n  window.location.href = url;\n  if (url.includes("#"))\n    window.location.reload();\n}\n\nwindow.signIn = signIn;\n\nwindow.signOut = signOut;\n' }], "styles": [{ "type": "external", "src": "/_astro/_threadid_.VxUrD4Mg.css" }, { "type": "external", "src": "/_astro/_threadid_.Y1m8o3aG.css" }], "routeData": { "route": "/", "isIndex": true, "type": "page", "pattern": "^\\/$", "segments": [], "params": [], "component": "src/pages/index.astro", "pathname": "/", "prerender": false, "fallbackRoutes": [], "_meta": { "trailingSlash": "ignore" } } }], "base": "/", "trailingSlash": "ignore", "compressHTML": true, "componentMetadata": [["/home/runner/work/monext/monext/apps/blogging/src/pages/[threadid].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/blogging/src/pages/index.astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/blogging/src/pages/t/[tag].astro", { "propagation": "none", "containsHead": true }], ["/home/runner/work/monext/monext/apps/blogging/src/pages/energopro.astro", { "propagation": "none", "containsHead": true }]], "renderers": [], "clientDirectives": [["idle", '(()=>{var i=t=>{let e=async()=>{await(await t())()};"requestIdleCallback"in window?window.requestIdleCallback(e):setTimeout(e,200)};(self.Astro||(self.Astro={})).idle=i;window.dispatchEvent(new Event("astro:idle"));})();'], ["load", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).load=e;window.dispatchEvent(new Event("astro:load"));})();'], ["media", '(()=>{var s=(i,t)=>{let a=async()=>{await(await i())()};if(t.value){let e=matchMedia(t.value);e.matches?a():e.addEventListener("change",a,{once:!0})}};(self.Astro||(self.Astro={})).media=s;window.dispatchEvent(new Event("astro:media"));})();'], ["only", '(()=>{var e=async t=>{await(await t())()};(self.Astro||(self.Astro={})).only=e;window.dispatchEvent(new Event("astro:only"));})();'], ["visible", '(()=>{var l=(s,i,o)=>{let r=async()=>{await(await s())()},t=typeof i.value=="object"?i.value:void 0,c={rootMargin:t==null?void 0:t.rootMargin},n=new IntersectionObserver(e=>{for(let a of e)if(a.isIntersecting){n.disconnect(),r();break}},c);for(let e of o.children)n.observe(e)};(self.Astro||(self.Astro={})).visible=l;window.dispatchEvent(new Event("astro:visible"));})();']], "entryModules": { "\0astro-internal:middleware": "_astro-internal_middleware.mjs", "\0@astrojs-ssr-virtual-entry": "_worker.mjs", "\0@astro-renderers": "renderers.mjs", "/src/pages/api/img/[id].ts": "chunks/pages/_id__Dxh2yiB3.mjs", "/src/pages/[threadid].astro": "chunks/pages/_threadid__B8MPmfhn.mjs", "/src/pages/api/auth.ts": "chunks/pages/auth_Cs8lGpg0.mjs", "/src/pages/energopro.astro": "chunks/pages/energopro_CJzVmhCD.mjs", "/../../node_modules/astro/dist/assets/endpoint/generic.js": "chunks/pages/generic_zgvMRVV2.mjs", "/src/pages/index.astro": "chunks/pages/index_DIgAuLRF.mjs", "/src/pages/api/sql.ts": "chunks/pages/sql_XYSk7BaT.mjs", "\0@astrojs-manifest": "manifest_BZo2cJRf.mjs", "/home/runner/work/monext/monext/node_modules/@astrojs/react/vnode-children.js": "chunks/vnode-children_Hb05nn4I.mjs", "\0@astro-page:../../node_modules/astro/dist/assets/endpoint/generic@_@js": "chunks/generic_wXMUwGw_.mjs", "\0@astro-page:../../node_modules/auth-astro/src/api/[...auth]@_@ts": "chunks/_.._CkoFtIu1.mjs", "\0@astro-page:src/pages/api/auth@_@ts": "chunks/auth_niIWXyKg.mjs", "\0@astro-page:src/pages/api/img/[id]@_@ts": "chunks/_id__BgYPzNvJ.mjs", "\0@astro-page:src/pages/api/sql@_@ts": "chunks/sql_q754pekr.mjs", "\0@astro-page:src/pages/energopro@_@astro": "chunks/energopro_fVOh6rNR.mjs", "\0@astro-page:src/pages/t/[tag]@_@astro": "chunks/_tag__DqpjJcdT.mjs", "\0@astro-page:src/pages/[threadid]@_@astro": "chunks/_threadid__CGriSlOx.mjs", "\0@astro-page:src/pages/index@_@astro": "chunks/index_Cziszx1U.mjs", "/home/runner/work/monext/monext/apps/blogging/src/components/Search": "_astro/Search.m1aHJcYa.js", "@astrojs/react/client.js": "_astro/client.BANxgMj2.js", "/astro/hoisted.js?q=0": "_astro/hoisted.BWC-BU_0.js", "/astro/hoisted.js?q=1": "_astro/hoisted.3iAvmUXl.js", "astro:scripts/before-hydration.js": "" }, "assets": ["/_astro/_threadid_.Y1m8o3aG.css", "/_astro/_threadid_.VxUrD4Mg.css", "/favicon.svg", "/$server_build/_astro-internal_middleware.mjs", "/$server_build/_worker.mjs", "/$server_build/middleware.mjs", "/$server_build/renderers.mjs", "/_astro/Search.m1aHJcYa.js", "/_astro/client.BANxgMj2.js", "/_astro/hoisted.BWC-BU_0.js", "/_astro/index.jk32IXV-.js", "/$server_build/_astro/_threadid_.VxUrD4Mg.css", "/$server_build/_astro/_threadid_.Y1m8o3aG.css", "/$server_build/chunks/_.._CkoFtIu1.mjs", "/$server_build/chunks/_astro-internal_middleware_CLKuBCZI.mjs", "/$server_build/chunks/_id__BgYPzNvJ.mjs", "/$server_build/chunks/_tag__DqpjJcdT.mjs", "/$server_build/chunks/_threadid__CGriSlOx.mjs", "/$server_build/chunks/astro_u8tnI5Mh.mjs", "/$server_build/chunks/auth_niIWXyKg.mjs", "/$server_build/chunks/energopro_fVOh6rNR.mjs", "/$server_build/chunks/generic_wXMUwGw_.mjs", "/$server_build/chunks/index_Cziszx1U.mjs", "/$server_build/chunks/sql_q754pekr.mjs", "/$server_build/chunks/vnode-children_Hb05nn4I.mjs", "/$server_build/chunks/astro/assets-service_1zQtc2bO.mjs", "/$server_build/chunks/pages/__DFZWMVpB.mjs", "/$server_build/chunks/pages/_id__Dxh2yiB3.mjs", "/$server_build/chunks/pages/_tag__BFl4phYQ.mjs", "/$server_build/chunks/pages/_threadid__B8MPmfhn.mjs", "/$server_build/chunks/pages/auth_Cs8lGpg0.mjs", "/$server_build/chunks/pages/energopro_CJzVmhCD.mjs", "/$server_build/chunks/pages/generic_zgvMRVV2.mjs", "/$server_build/chunks/pages/index_DIgAuLRF.mjs", "/$server_build/chunks/pages/sql_XYSk7BaT.mjs"], "buildFormat": "directory" });

// dist/$server_build/_worker.mjs
var import_cookie12 = __toESM(require_cookie(), 1);
init_astro_u8tnI5Mh();
init_assets_service_1zQtc2bO();

// dist/$server_build/chunks/_astro-internal_middleware_CLKuBCZI.mjs
var import_cookie2 = __toESM(require_cookie(), 1);
var onRequest$1 = (context, next) => {
  const userAgent2 = context.request.headers.get("user-agent");
  const botDiff = context.request.cf?.verifiedBotCategory;
  const isBot = userAgent2 && /googlebot|bingbot|yandexbot|slurp|duckduckbot/i.test(userAgent2);
  const isBrowser = userAgent2 && /chrome|safari|firefox|edge/i.test(userAgent2);
  const isMobileBrowser = userAgent2 && /android|iphone|ipad|ipod/i.test(userAgent2);
  if (botDiff === "AI Crawler") {
    return new Response(
      "Sorry, this site is not available in your country.",
      {
        status: 404
      }
    );
  } else if (isBrowser || isMobileBrowser || isBot) {
    return next();
  } else {
    return new Response(
      "Sorry, this site is not available in your country.",
      {
        status: 404
      }
    );
  }
};
function sequence(...handlers2) {
  const filtered = handlers2.filter((h2) => !!h2);
  const length = filtered.length;
  if (!length) {
    const handler = defineMiddleware((context, next) => {
      return next();
    });
    return handler;
  }
  return defineMiddleware((context, next) => {
    return applyHandle(0, context);
    function applyHandle(i3, handleContext) {
      const handle = filtered[i3];
      const result = handle(handleContext, async () => {
        if (i3 < length - 1) {
          return applyHandle(i3 + 1, handleContext);
        } else {
          return next();
        }
      });
      return result;
    }
  });
}
function defineMiddleware(fn2) {
  return fn2;
}
var onRequest = sequence(
  onRequest$1
);

// dist/$server_build/_worker.mjs
init_colors();
init_clsx();
var DELETED_EXPIRATION = /* @__PURE__ */ new Date(0);
var DELETED_VALUE = "deleted";
var responseSentSymbol2 = Symbol.for("astro.responseSent");
var AstroCookie = class {
  constructor(value) {
    this.value = value;
  }
  json() {
    if (this.value === void 0) {
      throw new Error(`Cannot convert undefined to an object.`);
    }
    return JSON.parse(this.value);
  }
  number() {
    return Number(this.value);
  }
  boolean() {
    if (this.value === "false")
      return false;
    if (this.value === "0")
      return false;
    return Boolean(this.value);
  }
};
var AstroCookies = class {
  #request;
  #requestValues;
  #outgoing;
  #consumed;
  constructor(request) {
    this.#request = request;
    this.#requestValues = null;
    this.#outgoing = null;
    this.#consumed = false;
  }
  /**
   * Astro.cookies.delete(key) is used to delete a cookie. Using this method will result
   * in a Set-Cookie header added to the response.
   * @param key The cookie to delete
   * @param options Options related to this deletion, such as the path of the cookie.
   */
  delete(key, options) {
    const serializeOptions = {
      expires: DELETED_EXPIRATION
    };
    if (options?.domain) {
      serializeOptions.domain = options.domain;
    }
    if (options?.path) {
      serializeOptions.path = options.path;
    }
    this.#ensureOutgoingMap().set(key, [
      DELETED_VALUE,
      (0, import_cookie12.serialize)(key, DELETED_VALUE, serializeOptions),
      false
    ]);
  }
  /**
   * Astro.cookies.get(key) is used to get a cookie value. The cookie value is read from the
   * request. If you have set a cookie via Astro.cookies.set(key, value), the value will be taken
   * from that set call, overriding any values already part of the request.
   * @param key The cookie to get.
   * @returns An object containing the cookie value as well as convenience methods for converting its value.
   */
  get(key, options = void 0) {
    if (this.#outgoing?.has(key)) {
      let [serializedValue, , isSetValue] = this.#outgoing.get(key);
      if (isSetValue) {
        return new AstroCookie(serializedValue);
      } else {
        return void 0;
      }
    }
    const values = this.#ensureParsed(options);
    if (key in values) {
      const value = values[key];
      return new AstroCookie(value);
    }
  }
  /**
   * Astro.cookies.has(key) returns a boolean indicating whether this cookie is either
   * part of the initial request or set via Astro.cookies.set(key)
   * @param key The cookie to check for.
   * @returns
   */
  has(key, options = void 0) {
    if (this.#outgoing?.has(key)) {
      let [, , isSetValue] = this.#outgoing.get(key);
      return isSetValue;
    }
    const values = this.#ensureParsed(options);
    return !!values[key];
  }
  /**
   * Astro.cookies.set(key, value) is used to set a cookie's value. If provided
   * an object it will be stringified via JSON.stringify(value). Additionally you
   * can provide options customizing how this cookie will be set, such as setting httpOnly
   * in order to prevent the cookie from being read in client-side JavaScript.
   * @param key The name of the cookie to set.
   * @param value A value, either a string or other primitive or an object.
   * @param options Options for the cookie, such as the path and security settings.
   */
  set(key, value, options) {
    if (this.#consumed) {
      const warning = new Error(
        "Astro.cookies.set() was called after the cookies had already been sent to the browser.\nThis may have happened if this method was called in an imported component.\nPlease make sure that Astro.cookies.set() is only called in the frontmatter of the main page."
      );
      warning.name = "Warning";
      console.warn(warning);
    }
    let serializedValue;
    if (typeof value === "string") {
      serializedValue = value;
    } else {
      let toStringValue = value.toString();
      if (toStringValue === Object.prototype.toString.call(value)) {
        serializedValue = JSON.stringify(value);
      } else {
        serializedValue = toStringValue;
      }
    }
    const serializeOptions = {};
    if (options) {
      Object.assign(serializeOptions, options);
    }
    this.#ensureOutgoingMap().set(key, [
      serializedValue,
      (0, import_cookie12.serialize)(key, serializedValue, serializeOptions),
      true
    ]);
    if (this.#request[responseSentSymbol2]) {
      throw new AstroError({
        ...ResponseSentError
      });
    }
  }
  /**
   * Astro.cookies.header() returns an iterator for the cookies that have previously
   * been set by either Astro.cookies.set() or Astro.cookies.delete().
   * This method is primarily used by adapters to set the header on outgoing responses.
   * @returns
   */
  *headers() {
    if (this.#outgoing == null)
      return;
    for (const [, value] of this.#outgoing) {
      yield value[1];
    }
  }
  /**
   * Behaves the same as AstroCookies.prototype.headers(),
   * but allows a warning when cookies are set after the instance is consumed.
   */
  static consume(cookies) {
    cookies.#consumed = true;
    return cookies.headers();
  }
  #ensureParsed(options = void 0) {
    if (!this.#requestValues) {
      this.#parse(options);
    }
    if (!this.#requestValues) {
      this.#requestValues = {};
    }
    return this.#requestValues;
  }
  #ensureOutgoingMap() {
    if (!this.#outgoing) {
      this.#outgoing = /* @__PURE__ */ new Map();
    }
    return this.#outgoing;
  }
  #parse(options = void 0) {
    const raw3 = this.#request.headers.get("cookie");
    if (!raw3) {
      return;
    }
    this.#requestValues = (0, import_cookie12.parse)(raw3, options);
  }
};
var astroCookiesSymbol = Symbol.for("astro.cookies");
function attachCookiesToResponse(response, cookies) {
  Reflect.set(response, astroCookiesSymbol, cookies);
}
function getFromResponse(response) {
  let cookies = Reflect.get(response, astroCookiesSymbol);
  if (cookies != null) {
    return cookies;
  } else {
    return void 0;
  }
}
function* getSetCookiesFromResponse(response) {
  const cookies = getFromResponse(response);
  if (!cookies) {
    return [];
  }
  for (const headerValue of AstroCookies.consume(cookies)) {
    yield headerValue;
  }
  return [];
}
function shouldAppendForwardSlash(trailingSlash, buildFormat) {
  switch (trailingSlash) {
    case "always":
      return true;
    case "never":
      return false;
    case "ignore": {
      switch (buildFormat) {
        case "directory":
          return true;
        case "preserve":
        case "file":
          return false;
      }
    }
  }
}
function getPathByLocale(locale, locales) {
  for (const loopLocale of locales) {
    if (typeof loopLocale === "string") {
      if (loopLocale === locale) {
        return loopLocale;
      }
    } else {
      for (const code of loopLocale.codes) {
        if (code === locale) {
          return loopLocale.path;
        }
      }
    }
  }
  throw new Unreachable();
}
function normalizeTheLocale(locale) {
  return locale.replaceAll("_", "-").toLowerCase();
}
function toCodes(locales) {
  return locales.map((loopLocale) => {
    if (typeof loopLocale === "string") {
      return loopLocale;
    } else {
      return loopLocale.codes[0];
    }
  });
}
var Unreachable = class extends Error {
  constructor() {
    super(
      "Astro encountered an unexpected line of code.\nIn most cases, this is not your fault, but a bug in astro code.\nIf there isn't one already, please create an issue.\nhttps://astro.build/issues"
    );
  }
};
function parseLocale(header) {
  if (header === "*") {
    return [{ locale: header, qualityValue: void 0 }];
  }
  const result = [];
  const localeValues = header.split(",").map((str) => str.trim());
  for (const localeValue of localeValues) {
    const split = localeValue.split(";").map((str) => str.trim());
    const localeName = split[0];
    const qualityValue = split[1];
    if (!split) {
      continue;
    }
    if (qualityValue && qualityValue.startsWith("q=")) {
      const qualityValueAsFloat = Number.parseFloat(qualityValue.slice("q=".length));
      if (Number.isNaN(qualityValueAsFloat) || qualityValueAsFloat > 1) {
        result.push({
          locale: localeName,
          qualityValue: void 0
        });
      } else {
        result.push({
          locale: localeName,
          qualityValue: qualityValueAsFloat
        });
      }
    } else {
      result.push({
        locale: localeName,
        qualityValue: void 0
      });
    }
  }
  return result;
}
function sortAndFilterLocales(browserLocaleList, locales) {
  const normalizedLocales = toCodes(locales).map(normalizeTheLocale);
  return browserLocaleList.filter((browserLocale) => {
    if (browserLocale.locale !== "*") {
      return normalizedLocales.includes(normalizeTheLocale(browserLocale.locale));
    }
    return true;
  }).sort((a3, b5) => {
    if (a3.qualityValue && b5.qualityValue) {
      if (a3.qualityValue > b5.qualityValue) {
        return -1;
      } else if (a3.qualityValue < b5.qualityValue) {
        return 1;
      }
    }
    return 0;
  });
}
function computePreferredLocale(request, locales) {
  const acceptHeader = request.headers.get("Accept-Language");
  let result = void 0;
  if (acceptHeader) {
    const browserLocaleList = sortAndFilterLocales(parseLocale(acceptHeader), locales);
    const firstResult = browserLocaleList.at(0);
    if (firstResult && firstResult.locale !== "*") {
      for (const currentLocale of locales) {
        if (typeof currentLocale === "string") {
          if (normalizeTheLocale(currentLocale) === normalizeTheLocale(firstResult.locale)) {
            result = currentLocale;
          }
        } else {
          for (const currentCode of currentLocale.codes) {
            if (normalizeTheLocale(currentCode) === normalizeTheLocale(firstResult.locale)) {
              result = currentLocale.path;
            }
          }
        }
      }
    }
  }
  return result;
}
function computePreferredLocaleList(request, locales) {
  const acceptHeader = request.headers.get("Accept-Language");
  let result = [];
  if (acceptHeader) {
    const browserLocaleList = sortAndFilterLocales(parseLocale(acceptHeader), locales);
    if (browserLocaleList.length === 1 && browserLocaleList.at(0).locale === "*") {
      return locales.map((locale) => {
        if (typeof locale === "string") {
          return locale;
        } else {
          return locale.codes.at(0);
        }
      });
    } else if (browserLocaleList.length > 0) {
      for (const browserLocale of browserLocaleList) {
        for (const loopLocale of locales) {
          if (typeof loopLocale === "string") {
            if (normalizeTheLocale(loopLocale) === normalizeTheLocale(browserLocale.locale)) {
              result.push(loopLocale);
            }
          } else {
            for (const code of loopLocale.codes) {
              if (code === browserLocale.locale) {
                result.push(loopLocale.path);
              }
            }
          }
        }
      }
    }
  }
  return result;
}
function computeCurrentLocale(pathname, locales, routingStrategy, defaultLocale) {
  for (const segment of pathname.split("/")) {
    for (const locale of locales) {
      if (typeof locale === "string") {
        if (!segment.includes(locale))
          continue;
        if (normalizeTheLocale(locale) === normalizeTheLocale(segment)) {
          return locale;
        }
      } else {
        if (locale.path === segment) {
          return locale.codes.at(0);
        } else {
          for (const code of locale.codes) {
            if (normalizeTheLocale(code) === normalizeTheLocale(segment)) {
              return code;
            }
          }
        }
      }
    }
  }
  if (routingStrategy === "pathname-prefix-other-locales" || routingStrategy === "domains-prefix-other-locales") {
    return defaultLocale;
  }
  return void 0;
}
var consoleLogDestination = {
  write(event) {
    let dest = console.error;
    if (levels[event.level] < levels["error"]) {
      dest = console.log;
    }
    if (event.label === "SKIP_FORMAT") {
      dest(event.message);
    } else {
      dest(getEventPrefix(event) + " " + event.message);
    }
    return true;
  }
};
var RedirectComponentInstance = {
  default() {
    return new Response(null, {
      status: 301
    });
  }
};
var RedirectSinglePageBuiltModule = {
  page: () => Promise.resolve(RedirectComponentInstance),
  onRequest: (_6, next) => next(),
  renderers: []
};
function routeIsRedirect(route) {
  return route?.type === "redirect";
}
function routeIsFallback(route) {
  return route?.type === "fallback";
}
async function renderRedirect(renderContext) {
  const {
    request: { method },
    routeData
  } = renderContext;
  const { redirect, redirectRoute } = routeData;
  const status = redirectRoute && typeof redirect === "object" ? redirect.status : method === "GET" ? 301 : 308;
  const headers = { location: redirectRouteGenerate(renderContext) };
  return new Response(null, { status, headers });
}
function redirectRouteGenerate(renderContext) {
  const {
    params,
    routeData: { redirect, redirectRoute }
  } = renderContext;
  if (typeof redirectRoute !== "undefined") {
    return redirectRoute?.generate(params) || redirectRoute?.pathname || "/";
  } else if (typeof redirect === "string") {
    let target = redirect;
    for (const param of Object.keys(params)) {
      const paramValue = params[param];
      target = target.replace(`[${param}]`, paramValue);
      target = target.replace(`[...${param}]`, paramValue);
    }
    return target;
  } else if (typeof redirect === "undefined") {
    return "/";
  }
  return redirect.destination;
}
function createAssetLink(href, base, assetsPrefix) {
  if (assetsPrefix) {
    return joinPaths(assetsPrefix, slash(href));
  } else if (base) {
    return prependForwardSlash(joinPaths(base, slash(href)));
  } else {
    return href;
  }
}
function createStylesheetElement(stylesheet, base, assetsPrefix) {
  if (stylesheet.type === "inline") {
    return {
      props: {},
      children: stylesheet.content
    };
  } else {
    return {
      props: {
        rel: "stylesheet",
        href: createAssetLink(stylesheet.src, base, assetsPrefix)
      },
      children: ""
    };
  }
}
function createStylesheetElementSet(stylesheets, base, assetsPrefix) {
  return new Set(stylesheets.map((s3) => createStylesheetElement(s3, base, assetsPrefix)));
}
function createModuleScriptElement(script, base, assetsPrefix) {
  if (script.type === "external") {
    return createModuleScriptElementWithSrc(script.value, base, assetsPrefix);
  } else {
    return {
      props: {
        type: "module"
      },
      children: script.value
    };
  }
}
function createModuleScriptElementWithSrc(src, base, assetsPrefix) {
  return {
    props: {
      type: "module",
      src: createAssetLink(src, base, assetsPrefix)
    },
    children: ""
  };
}
function matchRoute(pathname, manifest2) {
  const decodedPathname = decodeURI(pathname);
  return manifest2.routes.find((route) => {
    return route.pattern.test(decodedPathname) || route.fallbackRoutes.some((fallbackRoute) => fallbackRoute.pattern.test(decodedPathname));
  });
}
var VALID_PARAM_TYPES = ["string", "number", "undefined"];
function validateGetStaticPathsParameter([key, value], route) {
  if (!VALID_PARAM_TYPES.includes(typeof value)) {
    throw new AstroError({
      ...GetStaticPathsInvalidRouteParam,
      message: GetStaticPathsInvalidRouteParam.message(key, value, typeof value),
      location: {
        file: route
      }
    });
  }
}
function validateDynamicRouteModule(mod, {
  ssr,
  route
}) {
  if ((!ssr || route.prerender) && !mod.getStaticPaths) {
    throw new AstroError({
      ...GetStaticPathsRequired,
      location: { file: route.component }
    });
  }
}
function validateGetStaticPathsResult(result, logger2, route) {
  if (!Array.isArray(result)) {
    throw new AstroError({
      ...InvalidGetStaticPathsReturn,
      message: InvalidGetStaticPathsReturn.message(typeof result),
      location: {
        file: route.component
      }
    });
  }
  result.forEach((pathObject) => {
    if (typeof pathObject === "object" && Array.isArray(pathObject) || pathObject === null) {
      throw new AstroError({
        ...InvalidGetStaticPathsEntry,
        message: InvalidGetStaticPathsEntry.message(
          Array.isArray(pathObject) ? "array" : typeof pathObject
        )
      });
    }
    if (pathObject.params === void 0 || pathObject.params === null || pathObject.params && Object.keys(pathObject.params).length === 0) {
      throw new AstroError({
        ...GetStaticPathsExpectedParams,
        location: {
          file: route.component
        }
      });
    }
    for (const [key, val] of Object.entries(pathObject.params)) {
      if (!(typeof val === "undefined" || typeof val === "string" || typeof val === "number")) {
        logger2.warn(
          "router",
          `getStaticPaths() returned an invalid path param: "${key}". A string, number or undefined value was expected, but got \`${JSON.stringify(
            val
          )}\`.`
        );
      }
      if (typeof val === "string" && val === "") {
        logger2.warn(
          "router",
          `getStaticPaths() returned an invalid path param: "${key}". \`undefined\` expected for an optional param, but got empty string.`
        );
      }
    }
  });
}
function stringifyParams(params, route) {
  const validatedParams = Object.entries(params).reduce((acc, next) => {
    validateGetStaticPathsParameter(next, route.component);
    const [key, value] = next;
    if (value !== void 0) {
      acc[key] = typeof value === "string" ? trimSlashes(value) : value.toString();
    }
    return acc;
  }, {});
  return JSON.stringify(route.generate(validatedParams));
}
function generatePaginateFunction(routeMatch) {
  return function paginateUtility(data, args = {}) {
    let { pageSize: _pageSize, params: _params, props: _props } = args;
    const pageSize = _pageSize || 10;
    const paramName = "page";
    const additionalParams = _params || {};
    const additionalProps = _props || {};
    let includesFirstPageNumber;
    if (routeMatch.params.includes(`...${paramName}`)) {
      includesFirstPageNumber = false;
    } else if (routeMatch.params.includes(`${paramName}`)) {
      includesFirstPageNumber = true;
    } else {
      throw new AstroError({
        ...PageNumberParamNotFound,
        message: PageNumberParamNotFound.message(paramName)
      });
    }
    const lastPage = Math.max(1, Math.ceil(data.length / pageSize));
    const result = [...Array(lastPage).keys()].map((num) => {
      const pageNum = num + 1;
      const start = pageSize === Infinity ? 0 : (pageNum - 1) * pageSize;
      const end3 = Math.min(start + pageSize, data.length);
      const params = {
        ...additionalParams,
        [paramName]: includesFirstPageNumber || pageNum > 1 ? String(pageNum) : void 0
      };
      const current = correctIndexRoute(routeMatch.generate({ ...params }));
      const next = pageNum === lastPage ? void 0 : correctIndexRoute(routeMatch.generate({ ...params, page: String(pageNum + 1) }));
      const prev = pageNum === 1 ? void 0 : correctIndexRoute(
        routeMatch.generate({
          ...params,
          page: !includesFirstPageNumber && pageNum - 1 === 1 ? void 0 : String(pageNum - 1)
        })
      );
      return {
        params,
        props: {
          ...additionalProps,
          page: {
            data: data.slice(start, end3),
            start,
            end: end3 - 1,
            size: pageSize,
            total: data.length,
            currentPage: pageNum,
            lastPage,
            url: { current, next, prev }
          }
        }
      };
    });
    return result;
  };
}
function correctIndexRoute(route) {
  if (route === "") {
    return "/";
  }
  return route;
}
async function callGetStaticPaths({
  mod,
  route,
  routeCache,
  logger: logger2,
  ssr
}) {
  const cached = routeCache.get(route);
  if (!mod) {
    throw new Error("This is an error caused by Astro and not your code. Please file an issue.");
  }
  if (cached?.staticPaths) {
    return cached.staticPaths;
  }
  validateDynamicRouteModule(mod, { ssr, route });
  if (ssr && !route.prerender) {
    const entry = Object.assign([], { keyed: /* @__PURE__ */ new Map() });
    routeCache.set(route, { ...cached, staticPaths: entry });
    return entry;
  }
  let staticPaths = [];
  if (!mod.getStaticPaths) {
    throw new Error("Unexpected Error.");
  }
  staticPaths = await mod.getStaticPaths({
    // Q: Why the cast?
    // A: So users downstream can have nicer typings, we have to make some sacrifice in our internal typings, which necessitate a cast here
    paginate: generatePaginateFunction(route)
  });
  validateGetStaticPathsResult(staticPaths, logger2, route);
  const keyedStaticPaths = staticPaths;
  keyedStaticPaths.keyed = /* @__PURE__ */ new Map();
  for (const sp of keyedStaticPaths) {
    const paramsKey = stringifyParams(sp.params, route);
    keyedStaticPaths.keyed.set(paramsKey, sp);
  }
  routeCache.set(route, { ...cached, staticPaths: keyedStaticPaths });
  return keyedStaticPaths;
}
var RouteCache = class {
  logger;
  cache = {};
  mode;
  constructor(logger2, mode = "production") {
    this.logger = logger2;
    this.mode = mode;
  }
  /** Clear the cache. */
  clearAll() {
    this.cache = {};
  }
  set(route, entry) {
    if (this.mode === "production" && this.cache[route.component]?.staticPaths) {
      this.logger.warn(null, `Internal Warning: route cache overwritten. (${route.component})`);
    }
    this.cache[route.component] = entry;
  }
  get(route) {
    return this.cache[route.component];
  }
};
function findPathItemByKey(staticPaths, params, route, logger2) {
  const paramsKey = stringifyParams(params, route);
  const matchedStaticPath = staticPaths.keyed.get(paramsKey);
  if (matchedStaticPath) {
    return matchedStaticPath;
  }
  logger2.debug("router", `findPathItemByKey() - Unexpected cache miss looking for ${paramsKey}`);
}
function pathnameHasLocale(pathname, locales) {
  const segments = pathname.split("/");
  for (const segment of segments) {
    for (const locale of locales) {
      if (typeof locale === "string") {
        if (normalizeTheLocale(segment) === normalizeTheLocale(locale)) {
          return true;
        }
      } else if (segment === locale.path) {
        return true;
      }
    }
  }
  return false;
}
function createI18nMiddleware(i18n, base, trailingSlash, buildFormat) {
  if (!i18n)
    return (_6, next) => next();
  const prefixAlways = (url, response, context) => {
    if (url.pathname === base + "/" || url.pathname === base) {
      if (shouldAppendForwardSlash(trailingSlash, buildFormat)) {
        return context.redirect(`${appendForwardSlash(joinPaths(base, i18n.defaultLocale))}`);
      } else {
        return context.redirect(`${joinPaths(base, i18n.defaultLocale)}`);
      }
    } else if (!pathnameHasLocale(url.pathname, i18n.locales)) {
      return new Response(null, {
        status: 404,
        headers: response.headers
      });
    }
    return void 0;
  };
  const prefixOtherLocales = (url, response) => {
    let pathnameContainsDefaultLocale = false;
    for (const segment of url.pathname.split("/")) {
      if (normalizeTheLocale(segment) === normalizeTheLocale(i18n.defaultLocale)) {
        pathnameContainsDefaultLocale = true;
        break;
      }
    }
    if (pathnameContainsDefaultLocale) {
      const newLocation = url.pathname.replace(`/${i18n.defaultLocale}`, "");
      response.headers.set("Location", newLocation);
      return new Response(null, {
        status: 404,
        headers: response.headers
      });
    }
    return void 0;
  };
  const prefixAlwaysNoRedirect = (url, response) => {
    const isRoot = url.pathname === base + "/" || url.pathname === base;
    if (!(isRoot || pathnameHasLocale(url.pathname, i18n.locales))) {
      return new Response(null, {
        status: 404,
        headers: response.headers
      });
    }
    return void 0;
  };
  return async (context, next) => {
    const response = await next();
    const type = response.headers.get(ROUTE_TYPE_HEADER);
    if (type !== "page" && type !== "fallback") {
      return response;
    }
    const { url, currentLocale } = context;
    const { locales, defaultLocale, fallback, routing } = i18n;
    switch (i18n.routing) {
      case "domains-prefix-other-locales": {
        if (localeHasntDomain(i18n, currentLocale)) {
          const result = prefixOtherLocales(url, response);
          if (result) {
            return result;
          }
        }
        break;
      }
      case "pathname-prefix-other-locales": {
        const result = prefixOtherLocales(url, response);
        if (result) {
          return result;
        }
        break;
      }
      case "domains-prefix-always-no-redirect": {
        if (localeHasntDomain(i18n, currentLocale)) {
          const result = prefixAlwaysNoRedirect(url, response);
          if (result) {
            return result;
          }
        }
        break;
      }
      case "pathname-prefix-always-no-redirect": {
        const result = prefixAlwaysNoRedirect(url, response);
        if (result) {
          return result;
        }
        break;
      }
      case "pathname-prefix-always": {
        const result = prefixAlways(url, response, context);
        if (result) {
          return result;
        }
        break;
      }
      case "domains-prefix-always": {
        if (localeHasntDomain(i18n, currentLocale)) {
          const result = prefixAlways(url, response, context);
          if (result) {
            return result;
          }
        }
        break;
      }
    }
    if (response.status >= 300 && fallback) {
      const fallbackKeys = i18n.fallback ? Object.keys(i18n.fallback) : [];
      const segments = url.pathname.split("/");
      const urlLocale = segments.find((segment) => {
        for (const locale of locales) {
          if (typeof locale === "string") {
            if (locale === segment) {
              return true;
            }
          } else if (locale.path === segment) {
            return true;
          }
        }
        return false;
      });
      if (urlLocale && fallbackKeys.includes(urlLocale)) {
        const fallbackLocale = fallback[urlLocale];
        const pathFallbackLocale = getPathByLocale(fallbackLocale, locales);
        let newPathname;
        if (pathFallbackLocale === defaultLocale && routing === "pathname-prefix-other-locales") {
          newPathname = url.pathname.replace(`/${urlLocale}`, ``);
        } else {
          newPathname = url.pathname.replace(`/${urlLocale}`, `/${pathFallbackLocale}`);
        }
        return context.redirect(newPathname);
      }
    }
    return response;
  };
}
function localeHasntDomain(i18n, currentLocale) {
  for (const domainLocale of Object.values(i18n.domainLookupTable)) {
    if (domainLocale === currentLocale) {
      return false;
    }
  }
  return true;
}
var Pipeline = class {
  constructor(logger2, manifest2, mode, renderers2, resolve, serverLike, streaming, adapterName = manifest2.adapterName, clientDirectives = manifest2.clientDirectives, compressHTML = manifest2.compressHTML, i18n = manifest2.i18n, middleware = manifest2.middleware, routeCache = new RouteCache(logger2, mode), site = manifest2.site) {
    this.logger = logger2;
    this.manifest = manifest2;
    this.mode = mode;
    this.renderers = renderers2;
    this.resolve = resolve;
    this.serverLike = serverLike;
    this.streaming = streaming;
    this.adapterName = adapterName;
    this.clientDirectives = clientDirectives;
    this.compressHTML = compressHTML;
    this.i18n = i18n;
    this.middleware = middleware;
    this.routeCache = routeCache;
    this.site = site;
    this.internalMiddleware = [
      createI18nMiddleware(i18n, manifest2.base, manifest2.trailingSlash, manifest2.buildFormat)
    ];
  }
  internalMiddleware;
};
var AppPipeline = class _AppPipeline extends Pipeline {
  static create({
    logger: logger2,
    manifest: manifest2,
    mode,
    renderers: renderers2,
    resolve,
    serverLike,
    streaming
  }) {
    return new _AppPipeline(logger2, manifest2, mode, renderers2, resolve, serverLike, streaming);
  }
  headElements(routeData) {
    const routeInfo = this.manifest.routes.find((route) => route.routeData === routeData);
    const links = /* @__PURE__ */ new Set();
    const scripts = /* @__PURE__ */ new Set();
    const styles2 = createStylesheetElementSet(routeInfo?.styles ?? []);
    for (const script of routeInfo?.scripts ?? []) {
      if ("stage" in script) {
        if (script.stage === "head-inline") {
          scripts.add({
            props: {},
            children: script.children
          });
        }
      } else {
        scripts.add(createModuleScriptElement(script));
      }
    }
    return { links, styles: styles2, scripts };
  }
  componentMetadata() {
  }
};
async function callMiddleware(onRequest2, apiContext, responseFunction) {
  let nextCalled = false;
  let responseFunctionPromise = void 0;
  const next = async () => {
    nextCalled = true;
    responseFunctionPromise = responseFunction();
    return responseFunctionPromise;
  };
  let middlewarePromise = onRequest2(apiContext, next);
  return await Promise.resolve(middlewarePromise).then(async (value) => {
    if (nextCalled) {
      if (typeof value !== "undefined") {
        if (value instanceof Response === false) {
          throw new AstroError(MiddlewareNotAResponse);
        }
        return value;
      } else {
        if (responseFunctionPromise) {
          return responseFunctionPromise;
        } else {
          throw new AstroError(MiddlewareNotAResponse);
        }
      }
    } else if (typeof value === "undefined") {
      throw new AstroError(MiddlewareNoDataOrNextCalled);
    } else if (value instanceof Response === false) {
      throw new AstroError(MiddlewareNotAResponse);
    } else {
      return value;
    }
  });
}
async function getProps(opts2) {
  const { logger: logger2, mod, routeData: route, routeCache, pathname, serverLike } = opts2;
  if (!route || route.pathname) {
    return {};
  }
  if (routeIsRedirect(route) || routeIsFallback(route)) {
    return {};
  }
  const params = getParams(route, pathname);
  if (mod) {
    validatePrerenderEndpointCollision(route, mod, params);
  }
  const staticPaths = await callGetStaticPaths({
    mod,
    route,
    routeCache,
    logger: logger2,
    ssr: serverLike
  });
  const matchedStaticPath = findPathItemByKey(staticPaths, params, route, logger2);
  if (!matchedStaticPath && (serverLike ? route.prerender : true)) {
    throw new AstroError({
      ...NoMatchingStaticPathFound,
      message: NoMatchingStaticPathFound.message(pathname),
      hint: NoMatchingStaticPathFound.hint([route.component])
    });
  }
  const props = matchedStaticPath?.props ? { ...matchedStaticPath.props } : {};
  return props;
}
function getParams(route, pathname) {
  if (!route.params.length)
    return {};
  const paramsMatch = route.pattern.exec(decodeURIComponent(pathname));
  if (!paramsMatch)
    return {};
  const params = {};
  route.params.forEach((key, i3) => {
    if (key.startsWith("...")) {
      params[key.slice(3)] = paramsMatch[i3 + 1] ? paramsMatch[i3 + 1] : void 0;
    } else {
      params[key] = paramsMatch[i3 + 1];
    }
  });
  return params;
}
function validatePrerenderEndpointCollision(route, mod, params) {
  if (route.type === "endpoint" && mod.getStaticPaths) {
    const lastSegment = route.segments[route.segments.length - 1];
    const paramValues = Object.values(params);
    const lastParam = paramValues[paramValues.length - 1];
    if (lastSegment.length === 1 && lastSegment[0].dynamic && lastParam === void 0) {
      throw new AstroError({
        ...PrerenderDynamicEndpointPathCollide,
        message: PrerenderDynamicEndpointPathCollide.message(route.route),
        hint: PrerenderDynamicEndpointPathCollide.hint(route.component),
        location: {
          file: route.component
        }
      });
    }
  }
}
function getFunctionExpression(slot) {
  if (!slot)
    return;
  if (slot.expressions?.length !== 1)
    return;
  return slot.expressions[0];
}
var Slots = class {
  #result;
  #slots;
  #logger;
  constructor(result, slots, logger2) {
    this.#result = result;
    this.#slots = slots;
    this.#logger = logger2;
    if (slots) {
      for (const key of Object.keys(slots)) {
        if (this[key] !== void 0) {
          throw new AstroError({
            ...ReservedSlotName,
            message: ReservedSlotName.message(key)
          });
        }
        Object.defineProperty(this, key, {
          get() {
            return true;
          },
          enumerable: true
        });
      }
    }
  }
  has(name) {
    if (!this.#slots)
      return false;
    return Boolean(this.#slots[name]);
  }
  async render(name, args = []) {
    if (!this.#slots || !this.has(name))
      return;
    const result = this.#result;
    if (!Array.isArray(args)) {
      this.#logger.warn(
        null,
        `Expected second parameter to be an array, received a ${typeof args}. If you're trying to pass an array as a single argument and getting unexpected results, make sure you're passing your array as a item of an array. Ex: Astro.slots.render('default', [["Hello", "World"]])`
      );
    } else if (args.length > 0) {
      const slotValue = this.#slots[name];
      const component = typeof slotValue === "function" ? await slotValue(result) : await slotValue;
      const expression = getFunctionExpression(component);
      if (expression) {
        const slot = async () => typeof expression === "function" ? expression(...args) : expression;
        return await renderSlotToString(result, slot).then((res) => {
          return res != null ? String(res) : res;
        });
      }
      if (typeof component === "function") {
        return await renderJSX(result, component(...args)).then(
          (res) => res != null ? String(res) : res
        );
      }
    }
    const content = await renderSlotToString(result, this.#slots[name]);
    const outHTML = chunkToString(result, content);
    return outHTML;
  }
};
function createResult(args) {
  const { params, request, resolve, locals } = args;
  const url = new URL(request.url);
  const headers = new Headers();
  headers.set("Content-Type", "text/html");
  const response = {
    status: args.status,
    statusText: "OK",
    headers
  };
  Object.defineProperty(response, "headers", {
    value: response.headers,
    enumerable: true,
    writable: false
  });
  let cookies = args.cookies;
  let preferredLocale = void 0;
  let preferredLocaleList = void 0;
  let currentLocale = void 0;
  const result = {
    styles: args.styles ?? /* @__PURE__ */ new Set(),
    scripts: args.scripts ?? /* @__PURE__ */ new Set(),
    links: args.links ?? /* @__PURE__ */ new Set(),
    componentMetadata: args.componentMetadata ?? /* @__PURE__ */ new Map(),
    renderers: args.renderers,
    clientDirectives: args.clientDirectives,
    compressHTML: args.compressHTML,
    partial: args.partial,
    pathname: args.pathname,
    cookies,
    /** This function returns the `Astro` faux-global */
    createAstro(astroGlobal, props, slots) {
      const astroSlots = new Slots(result, slots, args.logger);
      const Astro = {
        // @ts-expect-error
        __proto__: astroGlobal,
        get clientAddress() {
          if (!(clientAddressSymbol in request)) {
            if (args.adapterName) {
              throw new AstroError({
                ...ClientAddressNotAvailable,
                message: ClientAddressNotAvailable.message(args.adapterName)
              });
            } else {
              throw new AstroError(StaticClientAddressNotAvailable);
            }
          }
          return Reflect.get(request, clientAddressSymbol);
        },
        get cookies() {
          if (cookies) {
            return cookies;
          }
          cookies = new AstroCookies(request);
          result.cookies = cookies;
          return cookies;
        },
        get preferredLocale() {
          if (preferredLocale) {
            return preferredLocale;
          }
          if (args.locales) {
            preferredLocale = computePreferredLocale(request, args.locales);
            return preferredLocale;
          }
          return void 0;
        },
        get preferredLocaleList() {
          if (preferredLocaleList) {
            return preferredLocaleList;
          }
          if (args.locales) {
            preferredLocaleList = computePreferredLocaleList(request, args.locales);
            return preferredLocaleList;
          }
          return void 0;
        },
        get currentLocale() {
          if (currentLocale) {
            return currentLocale;
          }
          if (args.locales) {
            currentLocale = computeCurrentLocale(
              url.pathname,
              args.locales,
              args.routingStrategy,
              args.defaultLocale
            );
            if (currentLocale) {
              return currentLocale;
            }
          }
          return void 0;
        },
        params,
        props,
        locals,
        request,
        url,
        redirect(path, status) {
          if (request[responseSentSymbol]) {
            throw new AstroError({
              ...ResponseSentError
            });
          }
          return new Response(null, {
            status: status || 302,
            headers: {
              Location: path
            }
          });
        },
        response,
        slots: astroSlots
      };
      return Astro;
    },
    resolve,
    response,
    _metadata: {
      hasHydrationScript: false,
      rendererSpecificHydrationScripts: /* @__PURE__ */ new Set(),
      hasRenderedHead: false,
      hasDirectives: /* @__PURE__ */ new Set(),
      headInTree: false,
      extraHead: [],
      propagators: /* @__PURE__ */ new Set()
    }
  };
  return result;
}
var RenderContext = class _RenderContext {
  constructor(pipeline, locals, middleware, pathname, request, routeData, status, cookies = new AstroCookies(request), params = getParams(routeData, pathname)) {
    this.pipeline = pipeline;
    this.locals = locals;
    this.middleware = middleware;
    this.pathname = pathname;
    this.request = request;
    this.routeData = routeData;
    this.status = status;
    this.cookies = cookies;
    this.params = params;
  }
  static create({
    locals = {},
    middleware,
    pathname,
    pipeline,
    request,
    routeData,
    status = 200
  }) {
    return new _RenderContext(
      pipeline,
      locals,
      sequence(...pipeline.internalMiddleware, middleware ?? pipeline.middleware),
      pathname,
      request,
      routeData,
      status
    );
  }
  /**
   * The main function of the RenderContext.
   *
   * Use this function to render any route known to Astro.
   * It attempts to render a route. A route can be a:
   *
   * - page
   * - redirect
   * - endpoint
   * - fallback
   */
  async render(componentInstance) {
    const { cookies, middleware, pathname, pipeline, routeData } = this;
    const { logger: logger2, routeCache, serverLike, streaming } = pipeline;
    const props = await getProps({
      mod: componentInstance,
      routeData,
      routeCache,
      pathname,
      logger: logger2,
      serverLike
    });
    const apiContext = this.createAPIContext(props);
    const { type } = routeData;
    const lastNext = type === "endpoint" ? () => renderEndpoint(componentInstance, apiContext, serverLike, logger2) : type === "redirect" ? () => renderRedirect(this) : type === "page" ? async () => {
      const result = await this.createResult(componentInstance);
      const response2 = await renderPage(
        result,
        componentInstance?.default,
        props,
        {},
        streaming,
        routeData
      );
      response2.headers.set(ROUTE_TYPE_HEADER, "page");
      return response2;
    } : type === "fallback" ? () => new Response(null, { status: 500, headers: { [ROUTE_TYPE_HEADER]: "fallback" } }) : () => {
      throw new Error("Unknown type of route: " + type);
    };
    const response = await callMiddleware(middleware, apiContext, lastNext);
    if (response.headers.get(ROUTE_TYPE_HEADER)) {
      response.headers.delete(ROUTE_TYPE_HEADER);
    }
    attachCookiesToResponse(response, cookies);
    return response;
  }
  createAPIContext(props) {
    const renderContext = this;
    const { cookies, i18nData, params, pipeline, request } = this;
    const { currentLocale, preferredLocale, preferredLocaleList } = i18nData;
    const generator = `Astro v${ASTRO_VERSION}`;
    const redirect = (path, status = 302) => new Response(null, { status, headers: { Location: path } });
    const site = pipeline.site ? new URL(pipeline.site) : void 0;
    const url = new URL(request.url);
    return {
      cookies,
      currentLocale,
      generator,
      params,
      preferredLocale,
      preferredLocaleList,
      props,
      redirect,
      request,
      site,
      url,
      get clientAddress() {
        if (clientAddressSymbol in request) {
          return Reflect.get(request, clientAddressSymbol);
        }
        if (pipeline.adapterName) {
          throw new AstroError({
            ...ClientAddressNotAvailable,
            message: ClientAddressNotAvailable.message(pipeline.adapterName)
          });
        } else {
          throw new AstroError(StaticClientAddressNotAvailable);
        }
      },
      get locals() {
        return renderContext.locals;
      },
      // TODO(breaking): disallow replacing the locals object
      set locals(val) {
        if (typeof val !== "object") {
          throw new AstroError(LocalsNotAnObject);
        } else {
          renderContext.locals = val;
          Reflect.set(request, clientLocalsSymbol, val);
        }
      }
    };
  }
  async createResult(mod) {
    const { cookies, locals, params, pathname, pipeline, request, routeData, status } = this;
    const {
      adapterName,
      clientDirectives,
      compressHTML,
      i18n,
      manifest: manifest2,
      logger: logger2,
      renderers: renderers2,
      resolve,
      site,
      serverLike
    } = pipeline;
    const { links, scripts, styles: styles2 } = await pipeline.headElements(routeData);
    const componentMetadata = await pipeline.componentMetadata(routeData) ?? manifest2.componentMetadata;
    const { defaultLocale, locales, routing: routingStrategy } = i18n ?? {};
    const partial = Boolean(mod.partial);
    return createResult({
      adapterName,
      clientDirectives,
      componentMetadata,
      compressHTML,
      cookies,
      defaultLocale,
      locales,
      locals,
      logger: logger2,
      links,
      params,
      partial,
      pathname,
      renderers: renderers2,
      resolve,
      request,
      route: routeData.route,
      routingStrategy,
      site,
      scripts,
      ssr: serverLike,
      status,
      styles: styles2
    });
  }
  /**
   * API Context may be created multiple times per request, i18n data needs to be computed only once.
   * So, it is computed and saved here on creation of the first APIContext and reused for later ones.
   */
  #i18nData;
  get i18nData() {
    if (this.#i18nData)
      return this.#i18nData;
    const {
      pipeline: { i18n },
      request,
      routeData
    } = this;
    if (!i18n)
      return {
        currentLocale: void 0,
        preferredLocale: void 0,
        preferredLocaleList: void 0
      };
    const { defaultLocale, locales, routing } = i18n;
    return this.#i18nData = {
      currentLocale: computeCurrentLocale(routeData.route, locales, routing, defaultLocale),
      preferredLocale: computePreferredLocale(request, locales),
      preferredLocaleList: computePreferredLocaleList(request, locales)
    };
  }
};
var App = class _App {
  #manifest;
  #manifestData;
  #logger = new Logger({
    dest: consoleLogDestination,
    level: "info"
  });
  #baseWithoutTrailingSlash;
  #pipeline;
  #adapterLogger;
  #renderOptionsDeprecationWarningShown = false;
  constructor(manifest2, streaming = true) {
    this.#manifest = manifest2;
    this.#manifestData = {
      routes: manifest2.routes.map((route) => route.routeData)
    };
    this.#baseWithoutTrailingSlash = removeTrailingForwardSlash(this.#manifest.base);
    this.#pipeline = this.#createPipeline(streaming);
    this.#adapterLogger = new AstroIntegrationLogger(
      this.#logger.options,
      this.#manifest.adapterName
    );
  }
  getAdapterLogger() {
    return this.#adapterLogger;
  }
  /**
   * Creates a pipeline by reading the stored manifest
   *
   * @param streaming
   * @private
   */
  #createPipeline(streaming = false) {
    return AppPipeline.create({
      logger: this.#logger,
      manifest: this.#manifest,
      mode: "production",
      renderers: this.#manifest.renderers,
      resolve: async (specifier) => {
        if (!(specifier in this.#manifest.entryModules)) {
          throw new Error(`Unable to resolve [${specifier}]`);
        }
        const bundlePath = this.#manifest.entryModules[specifier];
        switch (true) {
          case bundlePath.startsWith("data:"):
          case bundlePath.length === 0: {
            return bundlePath;
          }
          default: {
            return createAssetLink(bundlePath, this.#manifest.base, this.#manifest.assetsPrefix);
          }
        }
      },
      serverLike: true,
      streaming
    });
  }
  set setManifestData(newManifestData) {
    this.#manifestData = newManifestData;
  }
  removeBase(pathname) {
    if (pathname.startsWith(this.#manifest.base)) {
      return pathname.slice(this.#baseWithoutTrailingSlash.length + 1);
    }
    return pathname;
  }
  #getPathnameFromRequest(request) {
    const url = new URL(request.url);
    const pathname = prependForwardSlash(this.removeBase(url.pathname));
    return pathname;
  }
  match(request) {
    const url = new URL(request.url);
    if (this.#manifest.assets.has(url.pathname))
      return void 0;
    let pathname = this.#computePathnameFromDomain(request);
    if (!pathname) {
      pathname = prependForwardSlash(this.removeBase(url.pathname));
    }
    let routeData = matchRoute(pathname, this.#manifestData);
    if (!routeData || routeData.prerender)
      return void 0;
    return routeData;
  }
  #computePathnameFromDomain(request) {
    let pathname = void 0;
    const url = new URL(request.url);
    if (this.#manifest.i18n && (this.#manifest.i18n.routing === "domains-prefix-always" || this.#manifest.i18n.routing === "domains-prefix-other-locales" || this.#manifest.i18n.routing === "domains-prefix-always-no-redirect")) {
      let host = request.headers.get("X-Forwarded-Host");
      let protocol = request.headers.get("X-Forwarded-Proto");
      if (protocol) {
        protocol = protocol + ":";
      } else {
        protocol = url.protocol;
      }
      if (!host) {
        host = request.headers.get("Host");
      }
      if (host && protocol) {
        host = host.split(":")[0];
        try {
          let locale;
          const hostAsUrl = new URL(`${protocol}//${host}`);
          for (const [domainKey, localeValue] of Object.entries(
            this.#manifest.i18n.domainLookupTable
          )) {
            const domainKeyAsUrl = new URL(domainKey);
            if (hostAsUrl.host === domainKeyAsUrl.host && hostAsUrl.protocol === domainKeyAsUrl.protocol) {
              locale = localeValue;
              break;
            }
          }
          if (locale) {
            pathname = prependForwardSlash(
              joinPaths(normalizeTheLocale(locale), this.removeBase(url.pathname))
            );
            if (url.pathname.endsWith("/")) {
              pathname = appendForwardSlash(pathname);
            }
          }
        } catch (e2) {
          this.#logger.error(
            "router",
            `Astro tried to parse ${protocol}//${host} as an URL, but it threw a parsing error. Check the X-Forwarded-Host and X-Forwarded-Proto headers.`
          );
          this.#logger.error("router", `Error: ${e2}`);
        }
      }
    }
    return pathname;
  }
  async render(request, routeDataOrOptions, maybeLocals) {
    let routeData;
    let locals;
    let clientAddress;
    let addCookieHeader;
    if (routeDataOrOptions && ("addCookieHeader" in routeDataOrOptions || "clientAddress" in routeDataOrOptions || "locals" in routeDataOrOptions || "routeData" in routeDataOrOptions)) {
      if ("addCookieHeader" in routeDataOrOptions) {
        addCookieHeader = routeDataOrOptions.addCookieHeader;
      }
      if ("clientAddress" in routeDataOrOptions) {
        clientAddress = routeDataOrOptions.clientAddress;
      }
      if ("routeData" in routeDataOrOptions) {
        routeData = routeDataOrOptions.routeData;
      }
      if ("locals" in routeDataOrOptions) {
        locals = routeDataOrOptions.locals;
      }
    } else {
      routeData = routeDataOrOptions;
      locals = maybeLocals;
      if (routeDataOrOptions || locals) {
        this.#logRenderOptionsDeprecationWarning();
      }
    }
    if (locals) {
      if (typeof locals !== "object") {
        this.#logger.error(null, new AstroError(LocalsNotAnObject).stack);
        return this.#renderError(request, { status: 500 });
      }
      Reflect.set(request, clientLocalsSymbol, locals);
    }
    if (clientAddress) {
      Reflect.set(request, clientAddressSymbol, clientAddress);
    }
    if (request.url !== collapseDuplicateSlashes(request.url)) {
      request = new Request(collapseDuplicateSlashes(request.url), request);
    }
    if (!routeData) {
      routeData = this.match(request);
    }
    if (!routeData) {
      return this.#renderError(request, { status: 404 });
    }
    const pathname = this.#getPathnameFromRequest(request);
    const defaultStatus = this.#getDefaultStatusCode(routeData, pathname);
    const mod = await this.#getModuleForRoute(routeData);
    let response;
    try {
      const renderContext = RenderContext.create({
        pipeline: this.#pipeline,
        locals,
        pathname,
        request,
        routeData,
        status: defaultStatus
      });
      response = await renderContext.render(await mod.page());
    } catch (err2) {
      this.#logger.error(null, err2.stack || err2.message || String(err2));
      return this.#renderError(request, { status: 500 });
    }
    if (REROUTABLE_STATUS_CODES.includes(response.status) && response.headers.get(REROUTE_DIRECTIVE_HEADER) !== "no") {
      return this.#renderError(request, {
        response,
        status: response.status
      });
    }
    if (response.headers.has(REROUTE_DIRECTIVE_HEADER)) {
      response.headers.delete(REROUTE_DIRECTIVE_HEADER);
    }
    if (addCookieHeader) {
      for (const setCookieHeaderValue of _App.getSetCookieFromResponse(response)) {
        response.headers.append("set-cookie", setCookieHeaderValue);
      }
    }
    Reflect.set(response, responseSentSymbol, true);
    return response;
  }
  #logRenderOptionsDeprecationWarning() {
    if (this.#renderOptionsDeprecationWarningShown)
      return;
    this.#logger.warn(
      "deprecated",
      `The adapter ${this.#manifest.adapterName} is using a deprecated signature of the 'app.render()' method. From Astro 4.0, locals and routeData are provided as properties on an optional object to this method. Using the old signature will cause an error in Astro 5.0. See https://github.com/withastro/astro/pull/9199 for more information.`
    );
    this.#renderOptionsDeprecationWarningShown = true;
  }
  setCookieHeaders(response) {
    return getSetCookiesFromResponse(response);
  }
  /**
   * Reads all the cookies written by `Astro.cookie.set()` onto the passed response.
   * For example,
   * ```ts
   * for (const cookie_ of App.getSetCookieFromResponse(response)) {
   *     const cookie: string = cookie_
   * }
   * ```
   * @param response The response to read cookies from.
   * @returns An iterator that yields key-value pairs as equal-sign-separated strings.
   */
  static getSetCookieFromResponse = getSetCookiesFromResponse;
  /**
   * If it is a known error code, try sending the according page (e.g. 404.astro / 500.astro).
   * This also handles pre-rendered /404 or /500 routes
   */
  async #renderError(request, { status, response: originalResponse, skipMiddleware = false }) {
    const errorRoutePath = `/${status}${this.#manifest.trailingSlash === "always" ? "/" : ""}`;
    const errorRouteData = matchRoute(errorRoutePath, this.#manifestData);
    const url = new URL(request.url);
    if (errorRouteData) {
      if (errorRouteData.prerender) {
        const maybeDotHtml = errorRouteData.route.endsWith(`/${status}`) ? ".html" : "";
        const statusURL = new URL(
          `${this.#baseWithoutTrailingSlash}/${status}${maybeDotHtml}`,
          url
        );
        const response2 = await fetch(statusURL.toString());
        const override = { status };
        return this.#mergeResponses(response2, originalResponse, override);
      }
      const mod = await this.#getModuleForRoute(errorRouteData);
      try {
        const renderContext = RenderContext.create({
          pipeline: this.#pipeline,
          middleware: skipMiddleware ? (_6, next) => next() : void 0,
          pathname: this.#getPathnameFromRequest(request),
          request,
          routeData: errorRouteData,
          status
        });
        const response2 = await renderContext.render(await mod.page());
        return this.#mergeResponses(response2, originalResponse);
      } catch {
        if (skipMiddleware === false) {
          return this.#renderError(request, {
            status,
            response: originalResponse,
            skipMiddleware: true
          });
        }
      }
    }
    const response = this.#mergeResponses(new Response(null, { status }), originalResponse);
    Reflect.set(response, responseSentSymbol, true);
    return response;
  }
  #mergeResponses(newResponse, originalResponse, override) {
    if (!originalResponse) {
      if (override !== void 0) {
        return new Response(newResponse.body, {
          status: override.status,
          statusText: newResponse.statusText,
          headers: newResponse.headers
        });
      }
      return newResponse;
    }
    const status = override?.status ? override.status : originalResponse.status === 200 ? newResponse.status : originalResponse.status;
    try {
      originalResponse.headers.delete("Content-type");
    } catch {
    }
    return new Response(newResponse.body, {
      status,
      statusText: status === 200 ? newResponse.statusText : originalResponse.statusText,
      // If you're looking at here for possible bugs, it means that it's not a bug.
      // With the middleware, users can meddle with headers, and we should pass to the 404/500.
      // If users see something weird, it's because they are setting some headers they should not.
      //
      // Although, we don't want it to replace the content-type, because the error page must return `text/html`
      headers: new Headers([
        ...Array.from(newResponse.headers),
        ...Array.from(originalResponse.headers)
      ])
    });
  }
  #getDefaultStatusCode(routeData, pathname) {
    if (!routeData.pattern.exec(pathname)) {
      for (const fallbackRoute of routeData.fallbackRoutes) {
        if (fallbackRoute.pattern.test(pathname)) {
          return 302;
        }
      }
    }
    const route = removeTrailingForwardSlash(routeData.route);
    if (route.endsWith("/404"))
      return 404;
    if (route.endsWith("/500"))
      return 500;
    return 200;
  }
  async #getModuleForRoute(route) {
    if (route.type === "redirect") {
      return RedirectSinglePageBuiltModule;
    } else {
      if (this.#manifest.pageMap) {
        const importComponentInstance = this.#manifest.pageMap.get(route.component);
        if (!importComponentInstance) {
          throw new Error(
            `Unexpectedly unable to find a component instance for route ${route.route}`
          );
        }
        const pageModule = await importComponentInstance();
        return pageModule;
      } else if (this.#manifest.pageModule) {
        const importComponentInstance = this.#manifest.pageModule;
        return importComponentInstance;
      } else {
        throw new Error(
          "Astro couldn't find the correct page to render, probably because it wasn't correctly mapped for SSR usage. This is an internal error, please file an issue."
        );
      }
    }
  }
};
var isNode2 = typeof process === "object" && Object.prototype.toString.call(process) === "[object process]";
function getProcessEnvProxy() {
  return new Proxy({}, {
    get: (target, prop) => {
      console.warn(
        // NOTE: \0 prevents Vite replacement
        `Unable to access \`import.meta\0.env.${prop.toString()}\` on initialization as the Cloudflare platform only provides the environment variables per request. Please move the environment variable access inside a function that's only called after a request has been received.`
      );
    }
  });
}
if (!isNode2) {
  process.env = getProcessEnvProxy();
}
function createExports(manifest2) {
  const app = new App(manifest2);
  const fetch2 = async (request, env, context) => {
    process.env = env;
    const { pathname } = new URL(request.url);
    if (manifest2.assets.has(pathname)) {
      return env.ASSETS.fetch(request);
    }
    const routeData = app.match(request);
    Reflect.set(request, Symbol.for("astro.clientAddress"), request.headers.get("cf-connecting-ip"));
    const locals = {
      runtime: {
        waitUntil: (promise) => {
          context.waitUntil(promise);
        },
        env,
        cf: request.cf,
        caches
      }
    };
    const response = await app.render(request, routeData, locals);
    if (app.setCookieHeaders) {
      for (const setCookieHeader of app.setCookieHeaders(response)) {
        response.headers.append("Set-Cookie", setCookieHeader);
      }
    }
    return response;
  };
  return { default: { fetch: fetch2 } };
}
var serverEntrypointModule = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  createExports
}, Symbol.toStringTag, { value: "Module" }));
var _page0 = () => Promise.resolve().then(() => (init_generic_wXMUwGw(), generic_wXMUwGw_exports));
var _page1 = () => Promise.resolve().then(() => (init_CkoFtIu1(), CkoFtIu1_exports));
var _page2 = () => Promise.resolve().then(() => (init_auth_niIWXyKg(), auth_niIWXyKg_exports));
var _page3 = () => Promise.resolve().then(() => (init_id_BgYPzNvJ(), id_BgYPzNvJ_exports));
var _page4 = () => Promise.resolve().then(() => (init_sql_q754pekr(), sql_q754pekr_exports));
var _page5 = () => Promise.resolve().then(() => (init_energopro_fVOh6rNR(), energopro_fVOh6rNR_exports));
var _page6 = () => Promise.resolve().then(() => (init_tag_DqpjJcdT(), tag_DqpjJcdT_exports));
var _page7 = () => Promise.resolve().then(() => (init_threadid_CGriSlOx(), threadid_CGriSlOx_exports));
var _page8 = () => Promise.resolve().then(() => (init_index_Cziszx1U(), index_Cziszx1U_exports));
var pageMap = /* @__PURE__ */ new Map([
  ["../../node_modules/astro/dist/assets/endpoint/generic.js", _page0],
  ["../../node_modules/auth-astro/src/api/[...auth].ts", _page1],
  ["src/pages/api/auth.ts", _page2],
  ["src/pages/api/img/[id].ts", _page3],
  ["src/pages/api/sql.ts", _page4],
  ["src/pages/energopro.astro", _page5],
  ["src/pages/t/[tag].astro", _page6],
  ["src/pages/[threadid].astro", _page7],
  ["src/pages/index.astro", _page8]
]);
var _manifest = Object.assign(manifest, {
  pageMap,
  renderers,
  middleware: onRequest
});
var _args = void 0;
var _exports = createExports(_manifest);
var __astrojsSsrVirtualEntry = _exports.default;
var _start = "start";
if (_start in serverEntrypointModule) {
  serverEntrypointModule[_start](_manifest, _args);
}
export {
  __astrojsSsrVirtualEntry as default,
  pageMap
};
/**
 * shortdash - https://github.com/bibig/node-shorthash
 *
 * @license
 *
 * (The MIT License)
 *
 * Copyright (c) 2013 Bibig <bibig@me.com>
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */
/*! Bundled license information:

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server-legacy.browser.development.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.development.js:
  (**
   * @license React
   * react-dom-server.browser.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

cssesc/cssesc.js:
  (*! https://mths.be/cssesc v3.0.0 by @mathias *)

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

css-background-parser/index.js:
  (*!
   * https://github.com/gilmoreorless/css-background-parser
   * Copyright © 2015 Gilmore Davidson under the MIT license: http://gilmoreorless.mit-license.org/
   *)

ultrahtml/dist/transformers/inline.js:
  (**! media-query-parser | Tom Golden <oss@tom.bio> (https://tom.bio) | @license MIT  *)

react/cjs/react-jsx-runtime.development.js:
  (**
   * @license React
   * react-jsx-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-is/cjs/react-is.development.js:
  (** @license React v16.13.1
   * react-is.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

object-assign/index.js:
  (*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  *)
*/
